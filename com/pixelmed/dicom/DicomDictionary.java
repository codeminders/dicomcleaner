/* Copyright (c) 2001-2017, David A. Clunie DBA Pixelmed Publishing. All rights reserved. */

// Automatically generated from template - EDITS WILL BE LOST

package com.pixelmed.dicom;

import java.util.HashMap;
import java.util.TreeSet;
import java.util.Iterator;

/**
 * <p>The {@link com.pixelmed.dicom.DicomDictionary DicomDictionary} class
 * is a complete standard dictionary of DICOM attributes and associated information.</p>
 *
 * <p>The accessor methods that an application would normally use are defined in the
 * {@link com.pixelmed.dicom.DicomDictionaryBase DicomDictionaryBase} class.</p>
 *
 * @author	dclunie
 */

public class DicomDictionary extends DicomDictionaryBase {

	private static final String identString = "@(#) $Header: /userland/cvs/pixelmed/imgbook/com/pixelmed/dicom/DicomDictionary.java,v 1.158 2018/06/26 22:10:05 dclunie Exp $";

	protected void createTagList() {

		tagList = new TreeSet();	// sorted, based on AttributeTag's implementation of Comparable

		tagList.add(TagFromName.CommandGroupLength);
		tagList.add(TagFromName.CommandLengthToEnd);
		tagList.add(TagFromName.AffectedSOPClassUID);
		tagList.add(TagFromName.RequestedSOPClassUID);
		tagList.add(TagFromName.CommandRecognitionCode);
		tagList.add(TagFromName.CommandField);
		tagList.add(TagFromName.MessageID);
		tagList.add(TagFromName.MessageIDBeingRespondedTo);
		tagList.add(TagFromName.Initiator);
		tagList.add(TagFromName.Receiver);
		tagList.add(TagFromName.FindLocation);
		tagList.add(TagFromName.MoveDestination);
		tagList.add(TagFromName.Priority);
		tagList.add(TagFromName.CommandDataSetType);
		tagList.add(TagFromName.NumberOfMatches);
		tagList.add(TagFromName.ResponseSequenceNumber);
		tagList.add(TagFromName.Status);
		tagList.add(TagFromName.OffendingElement);
		tagList.add(TagFromName.ErrorComment);
		tagList.add(TagFromName.ErrorID);
		tagList.add(TagFromName.AffectedSOPInstanceUID);
		tagList.add(TagFromName.RequestedSOPInstanceUID);
		tagList.add(TagFromName.EventTypeID);
		tagList.add(TagFromName.AttributeIdentifierList);
		tagList.add(TagFromName.ActionTypeID);
		tagList.add(TagFromName.NumberOfRemainingSuboperations);
		tagList.add(TagFromName.NumberOfCompletedSuboperations);
		tagList.add(TagFromName.NumberOfFailedSuboperations);
		tagList.add(TagFromName.NumberOfWarningSuboperations);
		tagList.add(TagFromName.MoveOriginatorApplicationEntityTitle);
		tagList.add(TagFromName.MoveOriginatorMessageID);
		tagList.add(TagFromName.DialogReceiver);
		tagList.add(TagFromName.TerminalType);
		tagList.add(TagFromName.MessageSetID);
		tagList.add(TagFromName.EndMessageID);
		tagList.add(TagFromName.DisplayFormat);
		tagList.add(TagFromName.PagePositionID);
		tagList.add(TagFromName.TextFormatID);
		tagList.add(TagFromName.NormalReverse);
		tagList.add(TagFromName.AddGrayScale);
		tagList.add(TagFromName.Borders);
		tagList.add(TagFromName.Copies);
		tagList.add(TagFromName.CommandMagnificationType);
		tagList.add(TagFromName.Erase);
		tagList.add(TagFromName.Print);
		tagList.add(TagFromName.Overlays);
		tagList.add(TagFromName.FileMetaInformationGroupLength);
		tagList.add(TagFromName.FileMetaInformationVersion);
		tagList.add(TagFromName.MediaStorageSOPClassUID);
		tagList.add(TagFromName.MediaStorageSOPInstanceUID);
		tagList.add(TagFromName.TransferSyntaxUID);
		tagList.add(TagFromName.ImplementationClassUID);
		tagList.add(TagFromName.ImplementationVersionName);
		tagList.add(TagFromName.SourceApplicationEntityTitle);
		tagList.add(TagFromName.SendingApplicationEntityTitle);
		tagList.add(TagFromName.ReceivingApplicationEntityTitle);
		tagList.add(TagFromName.PrivateInformationCreatorUID);
		tagList.add(TagFromName.PrivateInformation);
		tagList.add(TagFromName.FileSetID);
		tagList.add(TagFromName.FileSetDescriptorFileID);
		tagList.add(TagFromName.SpecificCharacterSetOfFileSetDescriptorFile);
		tagList.add(TagFromName.OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity);
		tagList.add(TagFromName.OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity);
		tagList.add(TagFromName.FileSetConsistencyFlag);
		tagList.add(TagFromName.DirectoryRecordSequence);
		tagList.add(TagFromName.OffsetOfTheNextDirectoryRecord);
		tagList.add(TagFromName.RecordInUseFlag);
		tagList.add(TagFromName.OffsetOfReferencedLowerLevelDirectoryEntity);
		tagList.add(TagFromName.DirectoryRecordType);
		tagList.add(TagFromName.PrivateRecordUID);
		tagList.add(TagFromName.ReferencedFileID);
		tagList.add(TagFromName.MRDRDirectoryRecordOffset);
		tagList.add(TagFromName.ReferencedSOPClassUIDInFile);
		tagList.add(TagFromName.ReferencedSOPInstanceUIDInFile);
		tagList.add(TagFromName.ReferencedTransferSyntaxUIDInFile);
		tagList.add(TagFromName.ReferencedRelatedGeneralSOPClassUIDInFile);
		tagList.add(TagFromName.NumberOfReferences);
		tagList.add(TagFromName.LengthToEnd);
		tagList.add(TagFromName.SpecificCharacterSet);
		tagList.add(TagFromName.LanguageCodeSequence);
		tagList.add(TagFromName.ImageType);
		tagList.add(TagFromName.RecognitionCode);
		tagList.add(TagFromName.InstanceCreationDate);
		tagList.add(TagFromName.InstanceCreationTime);
		tagList.add(TagFromName.InstanceCreatorUID);
		tagList.add(TagFromName.InstanceCoercionDateTime);
		tagList.add(TagFromName.SOPClassUID);
		tagList.add(TagFromName.SOPInstanceUID);
		tagList.add(TagFromName.RelatedGeneralSOPClassUID);
		tagList.add(TagFromName.OriginalSpecializedSOPClassUID);
		tagList.add(TagFromName.StudyDate);
		tagList.add(TagFromName.SeriesDate);
		tagList.add(TagFromName.AcquisitionDate);
		tagList.add(TagFromName.ContentDate);
		tagList.add(TagFromName.OverlayDate);
		tagList.add(TagFromName.CurveDate);
		tagList.add(TagFromName.AcquisitionDateTime);
		tagList.add(TagFromName.StudyTime);
		tagList.add(TagFromName.SeriesTime);
		tagList.add(TagFromName.AcquisitionTime);
		tagList.add(TagFromName.ContentTime);
		tagList.add(TagFromName.OverlayTime);
		tagList.add(TagFromName.CurveTime);
		tagList.add(TagFromName.DataSetType);
		tagList.add(TagFromName.DataSetSubtype);
		tagList.add(TagFromName.NuclearMedicineSeriesType);
		tagList.add(TagFromName.AccessionNumber);
		tagList.add(TagFromName.IssuerOfAccessionNumberSequence);
		tagList.add(TagFromName.QueryRetrieveLevel);
		tagList.add(TagFromName.QueryRetrieveView);
		tagList.add(TagFromName.RetrieveAETitle);
		tagList.add(TagFromName.StationAETitle);
		tagList.add(TagFromName.InstanceAvailability);
		tagList.add(TagFromName.FailedSOPInstanceUIDList);
		tagList.add(TagFromName.Modality);
		tagList.add(TagFromName.ModalitiesInStudy);
		tagList.add(TagFromName.SOPClassesInStudy);
		tagList.add(TagFromName.AnatomicRegionsInStudyCodeSequence);
		tagList.add(TagFromName.ConversionType);
		tagList.add(TagFromName.PresentationIntentType);
		tagList.add(TagFromName.Manufacturer);
		tagList.add(TagFromName.InstitutionName);
		tagList.add(TagFromName.InstitutionAddress);
		tagList.add(TagFromName.InstitutionCodeSequence);
		tagList.add(TagFromName.ReferringPhysicianName);
		tagList.add(TagFromName.ReferringPhysicianAddress);
		tagList.add(TagFromName.ReferringPhysicianTelephoneNumbers);
		tagList.add(TagFromName.ReferringPhysicianIdentificationSequence);
		tagList.add(TagFromName.ConsultingPhysicianName);
		tagList.add(TagFromName.ConsultingPhysicianIdentificationSequence);
		tagList.add(TagFromName.CodeValue);
		tagList.add(TagFromName.ExtendedCodeValue);
		tagList.add(TagFromName.CodingSchemeDesignator);
		tagList.add(TagFromName.CodingSchemeVersion);
		tagList.add(TagFromName.CodeMeaning);
		tagList.add(TagFromName.MappingResource);
		tagList.add(TagFromName.ContextGroupVersion);
		tagList.add(TagFromName.ContextGroupLocalVersion);
		tagList.add(TagFromName.ExtendedCodeMeaning);
		tagList.add(TagFromName.CodingSchemeResourcesSequence);
		tagList.add(TagFromName.CodingSchemeURLType);
		tagList.add(TagFromName.ContextGroupExtensionFlag);
		tagList.add(TagFromName.CodingSchemeUID);
		tagList.add(TagFromName.ContextGroupExtensionCreatorUID);
		tagList.add(TagFromName.CodingSchemeURL);
		tagList.add(TagFromName.ContextIdentifier);
		tagList.add(TagFromName.CodingSchemeIdentificationSequence);
		tagList.add(TagFromName.CodingSchemeRegistry);
		tagList.add(TagFromName.CodingSchemeExternalID);
		tagList.add(TagFromName.CodingSchemeName);
		tagList.add(TagFromName.CodingSchemeResponsibleOrganization);
		tagList.add(TagFromName.ContextUID);
		tagList.add(TagFromName.MappingResourceUID);
		tagList.add(TagFromName.LongCodeValue);
		tagList.add(TagFromName.URNCodeValue);
		tagList.add(TagFromName.EquivalentCodeSequence);
		tagList.add(TagFromName.MappingResourceName);
		tagList.add(TagFromName.ContextGroupIdentificationSequence);
		tagList.add(TagFromName.MappingResourceIdentificationSequence);
		tagList.add(TagFromName.TimezoneOffsetFromUTC);
		tagList.add(TagFromName.ResponsibleGroupCodeSequence);
		tagList.add(TagFromName.EquipmentModality);
		tagList.add(TagFromName.ManufacturerRelatedModelGroup);
		tagList.add(TagFromName.PrivateDataElementCharacteristicsSequence);
		tagList.add(TagFromName.PrivateGroupReference);
		tagList.add(TagFromName.PrivateCreatorReference);
		tagList.add(TagFromName.BlockIdentifyingInformationStatus);
		tagList.add(TagFromName.NonidentifyingPrivateElements);
		tagList.add(TagFromName.DeidentificationActionSequence);
		tagList.add(TagFromName.IdentifyingPrivateElements);
		tagList.add(TagFromName.DeidentificationAction);
		tagList.add(TagFromName.PrivateDataElement);
		tagList.add(TagFromName.PrivateDataElementValueMultiplicity);
		tagList.add(TagFromName.PrivateDataElementValueRepresentation);
		tagList.add(TagFromName.PrivateDataElementNumberOfItems);
		tagList.add(TagFromName.PrivateDataElementName);
		tagList.add(TagFromName.PrivateDataElementKeyword);
		tagList.add(TagFromName.PrivateDataElementDescription);
		tagList.add(TagFromName.PrivateDataElementEncoding);
		tagList.add(TagFromName.PrivateDataElementDefinitionSequence);
		tagList.add(TagFromName.NetworkID);
		tagList.add(TagFromName.StationName);
		tagList.add(TagFromName.StudyDescription);
		tagList.add(TagFromName.ProcedureCodeSequence);
		tagList.add(TagFromName.SeriesDescription);
		tagList.add(TagFromName.SeriesDescriptionCodeSequence);
		tagList.add(TagFromName.InstitutionalDepartmentName);
		tagList.add(TagFromName.PhysiciansOfRecord);
		tagList.add(TagFromName.PhysiciansOfRecordIdentificationSequence);
		tagList.add(TagFromName.PerformingPhysicianName);
		tagList.add(TagFromName.PerformingPhysicianIdentificationSequence);
		tagList.add(TagFromName.NameOfPhysiciansReadingStudy);
		tagList.add(TagFromName.PhysiciansReadingStudyIdentificationSequence);
		tagList.add(TagFromName.OperatorsName);
		tagList.add(TagFromName.OperatorIdentificationSequence);
		tagList.add(TagFromName.AdmittingDiagnosesDescription);
		tagList.add(TagFromName.AdmittingDiagnosesCodeSequence);
		tagList.add(TagFromName.ManufacturerModelName);
		tagList.add(TagFromName.ReferencedResultsSequence);
		tagList.add(TagFromName.ReferencedStudySequence);
		tagList.add(TagFromName.ReferencedPerformedProcedureStepSequence);
		tagList.add(TagFromName.ReferencedSeriesSequence);
		tagList.add(TagFromName.ReferencedPatientSequence);
		tagList.add(TagFromName.ReferencedVisitSequence);
		tagList.add(TagFromName.ReferencedOverlaySequence);
		tagList.add(TagFromName.ReferencedStereometricInstanceSequence);
		tagList.add(TagFromName.ReferencedWaveformSequence);
		tagList.add(TagFromName.ReferencedImageSequence);
		tagList.add(TagFromName.ReferencedCurveSequence);
		tagList.add(TagFromName.ReferencedInstanceSequence);
		tagList.add(TagFromName.ReferencedRealWorldValueMappingInstanceSequence);
		tagList.add(TagFromName.ReferencedSOPClassUID);
		tagList.add(TagFromName.ReferencedSOPInstanceUID);
		tagList.add(TagFromName.DefinitionSourceSequence);
		tagList.add(TagFromName.SOPClassesSupported);
		tagList.add(TagFromName.ReferencedFrameNumber);
		tagList.add(TagFromName.SimpleFrameList);
		tagList.add(TagFromName.CalculatedFrameList);
		tagList.add(TagFromName.TimeRange);
		tagList.add(TagFromName.FrameExtractionSequence);
		tagList.add(TagFromName.MultiFrameSourceSOPInstanceUID);
		tagList.add(TagFromName.RetrieveURL);
		tagList.add(TagFromName.TransactionUID);
		tagList.add(TagFromName.WarningReason);
		tagList.add(TagFromName.FailureReason);
		tagList.add(TagFromName.FailedSOPSequence);
		tagList.add(TagFromName.ReferencedSOPSequence);
		tagList.add(TagFromName.OtherFailuresSequence);
		tagList.add(TagFromName.StudiesContainingOtherReferencedInstancesSequence);
		tagList.add(TagFromName.RelatedSeriesSequence);
		tagList.add(TagFromName.LossyImageCompressionRetired);
		tagList.add(TagFromName.DerivationDescription);
		tagList.add(TagFromName.SourceImageSequence);
		tagList.add(TagFromName.StageName);
		tagList.add(TagFromName.StageNumber);
		tagList.add(TagFromName.NumberOfStages);
		tagList.add(TagFromName.ViewName);
		tagList.add(TagFromName.ViewNumber);
		tagList.add(TagFromName.NumberOfEventTimers);
		tagList.add(TagFromName.NumberOfViewsInStage);
		tagList.add(TagFromName.EventElapsedTimes);
		tagList.add(TagFromName.EventTimerNames);
		tagList.add(TagFromName.EventTimerSequence);
		tagList.add(TagFromName.EventTimeOffset);
		tagList.add(TagFromName.EventCodeSequence);
		tagList.add(TagFromName.StartTrim);
		tagList.add(TagFromName.StopTrim);
		tagList.add(TagFromName.RecommendedDisplayFrameRate);
		tagList.add(TagFromName.TransducerPosition);
		tagList.add(TagFromName.TransducerOrientation);
		tagList.add(TagFromName.AnatomicStructure);
		tagList.add(TagFromName.AnatomicRegionSequence);
		tagList.add(TagFromName.AnatomicRegionModifierSequence);
		tagList.add(TagFromName.PrimaryAnatomicStructureSequence);
		tagList.add(TagFromName.AnatomicStructureSpaceOrRegionSequence);
		tagList.add(TagFromName.PrimaryAnatomicStructureModifierSequence);
		tagList.add(TagFromName.TransducerPositionSequence);
		tagList.add(TagFromName.TransducerPositionModifierSequence);
		tagList.add(TagFromName.TransducerOrientationSequence);
		tagList.add(TagFromName.TransducerOrientationModifierSequence);
		tagList.add(TagFromName.AnatomicStructureSpaceOrRegionCodeSequenceTrial);
		tagList.add(TagFromName.AnatomicPortalOfEntranceCodeSequenceTrial);
		tagList.add(TagFromName.AnatomicApproachDirectionCodeSequenceTrial);
		tagList.add(TagFromName.AnatomicPerspectiveDescriptionTrial);
		tagList.add(TagFromName.AnatomicPerspectiveCodeSequenceTrial);
		tagList.add(TagFromName.AnatomicLocationOfExaminingInstrumentDescriptionTrial);
		tagList.add(TagFromName.AnatomicLocationOfExaminingInstrumentCodeSequenceTrial);
		tagList.add(TagFromName.AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial);
		tagList.add(TagFromName.OnAxisBackgroundAnatomicStructureCodeSequenceTrial);
		tagList.add(TagFromName.AlternateRepresentationSequence);
		tagList.add(TagFromName.IrradiationEventUID);
		tagList.add(TagFromName.SourceIrradiationEventSequence);
		tagList.add(TagFromName.RadiopharmaceuticalAdministrationEventUID);
		tagList.add(TagFromName.IdentifyingComments);
		tagList.add(TagFromName.FrameType);
		tagList.add(TagFromName.ReferencedImageEvidenceSequence);
		tagList.add(TagFromName.ReferencedRawDataSequence);
		tagList.add(TagFromName.CreatorVersionUID);
		tagList.add(TagFromName.DerivationImageSequence);
		tagList.add(TagFromName.SourceImageEvidenceSequence);
		tagList.add(TagFromName.PixelPresentation);
		tagList.add(TagFromName.VolumetricProperties);
		tagList.add(TagFromName.VolumeBasedCalculationTechnique);
		tagList.add(TagFromName.ComplexImageComponent);
		tagList.add(TagFromName.AcquisitionContrast);
		tagList.add(TagFromName.DerivationCodeSequence);
		tagList.add(TagFromName.ReferencedPresentationStateSequence);
		tagList.add(TagFromName.ReferencedOtherPlaneSequence);
		tagList.add(TagFromName.FrameDisplaySequence);
		tagList.add(TagFromName.RecommendedDisplayFrameRateInFloat);
		tagList.add(TagFromName.SkipFrameRangeFlag);
		tagList.add(TagFromName.PatientName);
		tagList.add(TagFromName.PatientID);
		tagList.add(TagFromName.IssuerOfPatientID);
		tagList.add(TagFromName.TypeOfPatientID);
		tagList.add(TagFromName.IssuerOfPatientIDQualifiersSequence);
		tagList.add(TagFromName.SourcePatientGroupIdentificationSequence);
		tagList.add(TagFromName.GroupOfPatientsIdentificationSequence);
		tagList.add(TagFromName.SubjectRelativePositionInImage);
		tagList.add(TagFromName.PatientBirthDate);
		tagList.add(TagFromName.PatientBirthTime);
		tagList.add(TagFromName.PatientSex);
		tagList.add(TagFromName.PatientInsurancePlanCodeSequence);
		tagList.add(TagFromName.PatientPrimaryLanguageCodeSequence);
		tagList.add(TagFromName.PatientPrimaryLanguageModifierCodeSequence);
		tagList.add(TagFromName.QualityControlSubject);
		tagList.add(TagFromName.QualityControlSubjectTypeCodeSequence);
		tagList.add(TagFromName.StrainDescription);
		tagList.add(TagFromName.StrainNomenclature);
		tagList.add(TagFromName.StrainStockNumber);
		tagList.add(TagFromName.StrainSourceRegistryCodeSequence);
		tagList.add(TagFromName.StrainStockSequence);
		tagList.add(TagFromName.StrainSource);
		tagList.add(TagFromName.StrainAdditionalInformation);
		tagList.add(TagFromName.StrainCodeSequence);
		tagList.add(TagFromName.GeneticModificationsSequence);
		tagList.add(TagFromName.GeneticModificationsDescription);
		tagList.add(TagFromName.GeneticModificationsNomenclature);
		tagList.add(TagFromName.GeneticModificationsCodeSequence);
		tagList.add(TagFromName.OtherPatientIDs);
		tagList.add(TagFromName.OtherPatientNames);
		tagList.add(TagFromName.OtherPatientIDsSequence);
		tagList.add(TagFromName.PatientBirthName);
		tagList.add(TagFromName.PatientAge);
		tagList.add(TagFromName.PatientSize);
		tagList.add(TagFromName.PatientSizeCodeSequence);
		tagList.add(TagFromName.PatientBodyMassIndex);
		tagList.add(TagFromName.MeasuredAPDimension);
		tagList.add(TagFromName.MeasuredLateralDimension);
		tagList.add(TagFromName.PatientWeight);
		tagList.add(TagFromName.PatientAddress);
		tagList.add(TagFromName.InsurancePlanIdentification);
		tagList.add(TagFromName.PatientMotherBirthName);
		tagList.add(TagFromName.MilitaryRank);
		tagList.add(TagFromName.BranchOfService);
		tagList.add(TagFromName.MedicalRecordLocator);
		tagList.add(TagFromName.ReferencedPatientPhotoSequence);
		tagList.add(TagFromName.MedicalAlerts);
		tagList.add(TagFromName.Allergies);
		tagList.add(TagFromName.CountryOfResidence);
		tagList.add(TagFromName.RegionOfResidence);
		tagList.add(TagFromName.PatientTelephoneNumbers);
		tagList.add(TagFromName.PatientTelecomInformation);
		tagList.add(TagFromName.EthnicGroup);
		tagList.add(TagFromName.Occupation);
		tagList.add(TagFromName.SmokingStatus);
		tagList.add(TagFromName.AdditionalPatientHistory);
		tagList.add(TagFromName.PregnancyStatus);
		tagList.add(TagFromName.LastMenstrualDate);
		tagList.add(TagFromName.PatientReligiousPreference);
		tagList.add(TagFromName.PatientSpeciesDescription);
		tagList.add(TagFromName.PatientSpeciesCodeSequence);
		tagList.add(TagFromName.PatientSexNeutered);
		tagList.add(TagFromName.AnatomicalOrientationType);
		tagList.add(TagFromName.PatientBreedDescription);
		tagList.add(TagFromName.PatientBreedCodeSequence);
		tagList.add(TagFromName.BreedRegistrationSequence);
		tagList.add(TagFromName.BreedRegistrationNumber);
		tagList.add(TagFromName.BreedRegistryCodeSequence);
		tagList.add(TagFromName.ResponsiblePerson);
		tagList.add(TagFromName.ResponsiblePersonRole);
		tagList.add(TagFromName.ResponsibleOrganization);
		tagList.add(TagFromName.PatientComments);
		tagList.add(TagFromName.ExaminedBodyThickness);
		tagList.add(TagFromName.ClinicalTrialSponsorName);
		tagList.add(TagFromName.ClinicalTrialProtocolID);
		tagList.add(TagFromName.ClinicalTrialProtocolName);
		tagList.add(TagFromName.ClinicalTrialSiteID);
		tagList.add(TagFromName.ClinicalTrialSiteName);
		tagList.add(TagFromName.ClinicalTrialSubjectID);
		tagList.add(TagFromName.ClinicalTrialSubjectReadingID);
		tagList.add(TagFromName.ClinicalTrialTimePointID);
		tagList.add(TagFromName.ClinicalTrialTimePointDescription);
		tagList.add(TagFromName.LongitudinalTemporalOffsetFromEvent);
		tagList.add(TagFromName.LongitudinalTemporalEventType);
		tagList.add(TagFromName.ClinicalTrialCoordinatingCenterName);
		tagList.add(TagFromName.PatientIdentityRemoved);
		tagList.add(TagFromName.DeidentificationMethod);
		tagList.add(TagFromName.DeidentificationMethodCodeSequence);
		tagList.add(TagFromName.ClinicalTrialSeriesID);
		tagList.add(TagFromName.ClinicalTrialSeriesDescription);
		tagList.add(TagFromName.ClinicalTrialProtocolEthicsCommitteeName);
		tagList.add(TagFromName.ClinicalTrialProtocolEthicsCommitteeApprovalNumber);
		tagList.add(TagFromName.ConsentForClinicalTrialUseSequence);
		tagList.add(TagFromName.DistributionType);
		tagList.add(TagFromName.ConsentForDistributionFlag);
		tagList.add(TagFromName.EthicsCommitteeApprovalEffectivenessStartDate);
		tagList.add(TagFromName.EthicsCommitteeApprovalEffectivenessEndDate);
		tagList.add(TagFromName.CADFileFormatRetired);
		tagList.add(TagFromName.ComponentReferenceSystemRetired);
		tagList.add(TagFromName.ComponentManufacturingProcedure);
		tagList.add(TagFromName.ComponentManufacturer);
		tagList.add(TagFromName.MaterialThickness);
		tagList.add(TagFromName.MaterialPipeDiameter);
		tagList.add(TagFromName.MaterialIsolationDiameter);
		tagList.add(TagFromName.MaterialGrade);
		tagList.add(TagFromName.MaterialPropertiesDescription);
		tagList.add(TagFromName.MaterialPropertiesFileFormatRetired);
		tagList.add(TagFromName.MaterialNotes);
		tagList.add(TagFromName.ComponentShape);
		tagList.add(TagFromName.CurvatureType);
		tagList.add(TagFromName.OuterDiameter);
		tagList.add(TagFromName.InnerDiameter);
		tagList.add(TagFromName.ComponentWelderIDs);
		tagList.add(TagFromName.SecondaryApprovalStatus);
		tagList.add(TagFromName.SecondaryReviewDate);
		tagList.add(TagFromName.SecondaryReviewTime);
		tagList.add(TagFromName.SecondaryReviewerName);
		tagList.add(TagFromName.RepairID);
		tagList.add(TagFromName.MultipleComponentApprovalSequence);
		tagList.add(TagFromName.OtherApprovalStatus);
		tagList.add(TagFromName.OtherSecondaryApprovalStatus);
		tagList.add(TagFromName.ActualEnvironmentalConditions);
		tagList.add(TagFromName.ExpiryDate);
		tagList.add(TagFromName.EnvironmentalConditions);
		tagList.add(TagFromName.EvaluatorSequence);
		tagList.add(TagFromName.EvaluatorNumber);
		tagList.add(TagFromName.EvaluatorName);
		tagList.add(TagFromName.EvaluationAttempt);
		tagList.add(TagFromName.IndicationSequence);
		tagList.add(TagFromName.IndicationNumber);
		tagList.add(TagFromName.IndicationLabel);
		tagList.add(TagFromName.IndicationDescription);
		tagList.add(TagFromName.IndicationType);
		tagList.add(TagFromName.IndicationDisposition);
		tagList.add(TagFromName.IndicationROISequence);
		tagList.add(TagFromName.IndicationPhysicalPropertySequence);
		tagList.add(TagFromName.PropertyLabel);
		tagList.add(TagFromName.CoordinateSystemNumberOfAxes);
		tagList.add(TagFromName.CoordinateSystemAxesSequence);
		tagList.add(TagFromName.CoordinateSystemAxisDescription);
		tagList.add(TagFromName.CoordinateSystemDataSetMapping);
		tagList.add(TagFromName.CoordinateSystemAxisNumber);
		tagList.add(TagFromName.CoordinateSystemAxisType);
		tagList.add(TagFromName.CoordinateSystemAxisUnits);
		tagList.add(TagFromName.CoordinateSystemAxisValues);
		tagList.add(TagFromName.CoordinateSystemTransformSequence);
		tagList.add(TagFromName.TransformDescription);
		tagList.add(TagFromName.TransformNumberOfAxes);
		tagList.add(TagFromName.TransformOrderOfAxes);
		tagList.add(TagFromName.TransformedAxisUnits);
		tagList.add(TagFromName.CoordinateSystemTransformRotationAndScaleMatrix);
		tagList.add(TagFromName.CoordinateSystemTransformTranslationMatrix);
		tagList.add(TagFromName.InternalDetectorFrameTime);
		tagList.add(TagFromName.NumberOfFramesIntegrated);
		tagList.add(TagFromName.DetectorTemperatureSequence);
		tagList.add(TagFromName.SensorName);
		tagList.add(TagFromName.HorizontalOffsetOfSensor);
		tagList.add(TagFromName.VerticalOffsetOfSensor);
		tagList.add(TagFromName.SensorTemperature);
		tagList.add(TagFromName.DarkCurrentSequence);
		tagList.add(TagFromName.DarkCurrentCounts);
		tagList.add(TagFromName.GainCorrectionReferenceSequence);
		tagList.add(TagFromName.AirCounts);
		tagList.add(TagFromName.KVUsedInGainCalibration);
		tagList.add(TagFromName.MAUsedInGainCalibration);
		tagList.add(TagFromName.NumberOfFramesUsedForIntegration);
		tagList.add(TagFromName.FilterMaterialUsedInGainCalibration);
		tagList.add(TagFromName.FilterThicknessUsedInGainCalibration);
		tagList.add(TagFromName.DateOfGainCalibration);
		tagList.add(TagFromName.TimeOfGainCalibration);
		tagList.add(TagFromName.BadPixelImage);
		tagList.add(TagFromName.CalibrationNotes);
		tagList.add(TagFromName.PulserEquipmentSequence);
		tagList.add(TagFromName.PulserType);
		tagList.add(TagFromName.PulserNotes);
		tagList.add(TagFromName.ReceiverEquipmentSequence);
		tagList.add(TagFromName.AmplifierType);
		tagList.add(TagFromName.ReceiverNotes);
		tagList.add(TagFromName.PreAmplifierEquipmentSequence);
		tagList.add(TagFromName.PreAmplifierNotes);
		tagList.add(TagFromName.TransmitTransducerSequence);
		tagList.add(TagFromName.ReceiveTransducerSequence);
		tagList.add(TagFromName.NumberOfElements);
		tagList.add(TagFromName.ElementShape);
		tagList.add(TagFromName.ElementDimensionA);
		tagList.add(TagFromName.ElementDimensionB);
		tagList.add(TagFromName.ElementPitchA);
		tagList.add(TagFromName.MeasuredBeamDimensionA);
		tagList.add(TagFromName.MeasuredBeamDimensionB);
		tagList.add(TagFromName.LocationOfMeasuredBeamDiameter);
		tagList.add(TagFromName.NominalFrequency);
		tagList.add(TagFromName.MeasuredCenterFrequency);
		tagList.add(TagFromName.MeasuredBandwidth);
		tagList.add(TagFromName.ElementPitchB);
		tagList.add(TagFromName.PulserSettingsSequence);
		tagList.add(TagFromName.PulseWidth);
		tagList.add(TagFromName.ExcitationFrequency);
		tagList.add(TagFromName.ModulationType);
		tagList.add(TagFromName.Damping);
		tagList.add(TagFromName.ReceiverSettingsSequence);
		tagList.add(TagFromName.AcquiredSoundpathLength);
		tagList.add(TagFromName.AcquisitionCompressionType);
		tagList.add(TagFromName.AcquisitionSampleSize);
		tagList.add(TagFromName.RectifierSmoothing);
		tagList.add(TagFromName.DACSequence);
		tagList.add(TagFromName.DACType);
		tagList.add(TagFromName.DACGainPoints);
		tagList.add(TagFromName.DACTimePoints);
		tagList.add(TagFromName.DACAmplitude);
		tagList.add(TagFromName.PreAmplifierSettingsSequence);
		tagList.add(TagFromName.TransmitTransducerSettingsSequence);
		tagList.add(TagFromName.ReceiveTransducerSettingsSequence);
		tagList.add(TagFromName.IncidentAngle);
		tagList.add(TagFromName.CouplingTechnique);
		tagList.add(TagFromName.CouplingMedium);
		tagList.add(TagFromName.CouplingVelocity);
		tagList.add(TagFromName.ProbeCenterLocationX);
		tagList.add(TagFromName.ProbeCenterLocationZ);
		tagList.add(TagFromName.SoundPathLength);
		tagList.add(TagFromName.DelayLawIdentifier);
		tagList.add(TagFromName.GateSettingsSequence);
		tagList.add(TagFromName.GateThreshold);
		tagList.add(TagFromName.VelocityOfSound);
		tagList.add(TagFromName.CalibrationSettingsSequence);
		tagList.add(TagFromName.CalibrationProcedure);
		tagList.add(TagFromName.ProcedureVersion);
		tagList.add(TagFromName.ProcedureCreationDate);
		tagList.add(TagFromName.ProcedureExpirationDate);
		tagList.add(TagFromName.ProcedureLastModifiedDate);
		tagList.add(TagFromName.CalibrationTime);
		tagList.add(TagFromName.CalibrationDate);
		tagList.add(TagFromName.ProbeDriveEquipmentSequence);
		tagList.add(TagFromName.DriveType);
		tagList.add(TagFromName.ProbeDriveNotes);
		tagList.add(TagFromName.DriveProbeSequence);
		tagList.add(TagFromName.ProbeInductance);
		tagList.add(TagFromName.ProbeResistance);
		tagList.add(TagFromName.ReceiveProbeSequence);
		tagList.add(TagFromName.ProbeDriveSettingsSequence);
		tagList.add(TagFromName.BridgeResistors);
		tagList.add(TagFromName.ProbeOrientationAngle);
		tagList.add(TagFromName.UserSelectedGainY);
		tagList.add(TagFromName.UserSelectedPhase);
		tagList.add(TagFromName.UserSelectedOffsetX);
		tagList.add(TagFromName.UserSelectedOffsetY);
		tagList.add(TagFromName.ChannelSettingsSequence);
		tagList.add(TagFromName.ChannelThreshold);
		tagList.add(TagFromName.ScannerSettingsSequence);
		tagList.add(TagFromName.ScanProcedure);
		tagList.add(TagFromName.TranslationRateX);
		tagList.add(TagFromName.TranslationRateY);
		tagList.add(TagFromName.ChannelOverlap);
		tagList.add(TagFromName.ImageQualityIndicatorType);
		tagList.add(TagFromName.ImageQualityIndicatorMaterial);
		tagList.add(TagFromName.ImageQualityIndicatorSize);
		tagList.add(TagFromName.LINACEnergy);
		tagList.add(TagFromName.LINACOutput);
		tagList.add(TagFromName.ActiveAperture);
		tagList.add(TagFromName.TotalAperture);
		tagList.add(TagFromName.ApertureElevation);
		tagList.add(TagFromName.MainLobeAngle);
		tagList.add(TagFromName.MainRoofAngle);
		tagList.add(TagFromName.ConnectorType);
		tagList.add(TagFromName.WedgeModelNumber);
		tagList.add(TagFromName.WedgeAngleFloat);
		tagList.add(TagFromName.WedgeRoofAngle);
		tagList.add(TagFromName.WedgeElement1Position);
		tagList.add(TagFromName.WedgeMaterialVelocity);
		tagList.add(TagFromName.WedgeMaterial);
		tagList.add(TagFromName.WedgeOffsetZ);
		tagList.add(TagFromName.WedgeOriginOffsetX);
		tagList.add(TagFromName.WedgeTimeDelay);
		tagList.add(TagFromName.WedgeName);
		tagList.add(TagFromName.WedgeManufacturerName);
		tagList.add(TagFromName.WedgeDescription);
		tagList.add(TagFromName.NominalBeamAngle);
		tagList.add(TagFromName.WedgeOffsetX);
		tagList.add(TagFromName.WedgeOffsetY);
		tagList.add(TagFromName.WedgeTotalLength);
		tagList.add(TagFromName.WedgeInContactLength);
		tagList.add(TagFromName.WedgeFrontGap);
		tagList.add(TagFromName.WedgeTotalHeight);
		tagList.add(TagFromName.WedgeFrontHeight);
		tagList.add(TagFromName.WedgeRearHeight);
		tagList.add(TagFromName.WedgeTotalWidth);
		tagList.add(TagFromName.WedgeInContactWidth);
		tagList.add(TagFromName.WedgeChamferHeight);
		tagList.add(TagFromName.WedgeCurve);
		tagList.add(TagFromName.RadiusAlongWedge);
		tagList.add(TagFromName.ContrastBolusAgent);
		tagList.add(TagFromName.ContrastBolusAgentSequence);
		tagList.add(TagFromName.ContrastBolusT1Relaxivity);
		tagList.add(TagFromName.ContrastBolusAdministrationRouteSequence);
		tagList.add(TagFromName.BodyPartExamined);
		tagList.add(TagFromName.ScanningSequence);
		tagList.add(TagFromName.SequenceVariant);
		tagList.add(TagFromName.ScanOptions);
		tagList.add(TagFromName.MRAcquisitionType);
		tagList.add(TagFromName.SequenceName);
		tagList.add(TagFromName.AngioFlag);
		tagList.add(TagFromName.InterventionDrugInformationSequence);
		tagList.add(TagFromName.InterventionDrugStopTime);
		tagList.add(TagFromName.InterventionDrugDose);
		tagList.add(TagFromName.InterventionDrugCodeSequence);
		tagList.add(TagFromName.AdditionalDrugSequence);
		tagList.add(TagFromName.Radionuclide);
		tagList.add(TagFromName.Radiopharmaceutical);
		tagList.add(TagFromName.EnergyWindowCenterline);
		tagList.add(TagFromName.EnergyWindowTotalWidth);
		tagList.add(TagFromName.InterventionDrugName);
		tagList.add(TagFromName.InterventionDrugStartTime);
		tagList.add(TagFromName.InterventionSequence);
		tagList.add(TagFromName.TherapyType);
		tagList.add(TagFromName.InterventionStatus);
		tagList.add(TagFromName.TherapyDescription);
		tagList.add(TagFromName.InterventionDescription);
		tagList.add(TagFromName.CineRate);
		tagList.add(TagFromName.InitialCineRunState);
		tagList.add(TagFromName.SliceThickness);
		tagList.add(TagFromName.KVP);
		tagList.add(TagFromName.CountsAccumulated);
		tagList.add(TagFromName.AcquisitionTerminationCondition);
		tagList.add(TagFromName.EffectiveDuration);
		tagList.add(TagFromName.AcquisitionStartCondition);
		tagList.add(TagFromName.AcquisitionStartConditionData);
		tagList.add(TagFromName.AcquisitionTerminationConditionData);
		tagList.add(TagFromName.RepetitionTime);
		tagList.add(TagFromName.EchoTime);
		tagList.add(TagFromName.InversionTime);
		tagList.add(TagFromName.NumberOfAverages);
		tagList.add(TagFromName.ImagingFrequency);
		tagList.add(TagFromName.ImagedNucleus);
		tagList.add(TagFromName.EchoNumbers);
		tagList.add(TagFromName.MagneticFieldStrength);
		tagList.add(TagFromName.SpacingBetweenSlices);
		tagList.add(TagFromName.NumberOfPhaseEncodingSteps);
		tagList.add(TagFromName.DataCollectionDiameter);
		tagList.add(TagFromName.EchoTrainLength);
		tagList.add(TagFromName.PercentSampling);
		tagList.add(TagFromName.PercentPhaseFieldOfView);
		tagList.add(TagFromName.PixelBandwidth);
		tagList.add(TagFromName.DeviceSerialNumber);
		tagList.add(TagFromName.DeviceUID);
		tagList.add(TagFromName.DeviceID);
		tagList.add(TagFromName.PlateID);
		tagList.add(TagFromName.GeneratorID);
		tagList.add(TagFromName.GridID);
		tagList.add(TagFromName.CassetteID);
		tagList.add(TagFromName.GantryID);
		tagList.add(TagFromName.UniqueDeviceIdentifier);
		tagList.add(TagFromName.UDISequence);
		tagList.add(TagFromName.SecondaryCaptureDeviceID);
		tagList.add(TagFromName.HardcopyCreationDeviceID);
		tagList.add(TagFromName.DateOfSecondaryCapture);
		tagList.add(TagFromName.TimeOfSecondaryCapture);
		tagList.add(TagFromName.SecondaryCaptureDeviceManufacturer);
		tagList.add(TagFromName.HardcopyDeviceManufacturer);
		tagList.add(TagFromName.SecondaryCaptureDeviceManufacturerModelName);
		tagList.add(TagFromName.SecondaryCaptureDeviceSoftwareVersions);
		tagList.add(TagFromName.HardcopyDeviceSoftwareVersion);
		tagList.add(TagFromName.HardcopyDeviceManufacturerModelName);
		tagList.add(TagFromName.SoftwareVersions);
		tagList.add(TagFromName.VideoImageFormatAcquired);
		tagList.add(TagFromName.DigitalImageFormatAcquired);
		tagList.add(TagFromName.ProtocolName);
		tagList.add(TagFromName.ContrastBolusRoute);
		tagList.add(TagFromName.ContrastBolusVolume);
		tagList.add(TagFromName.ContrastBolusStartTime);
		tagList.add(TagFromName.ContrastBolusStopTime);
		tagList.add(TagFromName.ContrastBolusTotalDose);
		tagList.add(TagFromName.SyringeCounts);
		tagList.add(TagFromName.ContrastFlowRate);
		tagList.add(TagFromName.ContrastFlowDuration);
		tagList.add(TagFromName.ContrastBolusIngredient);
		tagList.add(TagFromName.ContrastBolusIngredientConcentration);
		tagList.add(TagFromName.SpatialResolution);
		tagList.add(TagFromName.TriggerTime);
		tagList.add(TagFromName.TriggerSourceOrType);
		tagList.add(TagFromName.NominalInterval);
		tagList.add(TagFromName.FrameTime);
		tagList.add(TagFromName.CardiacFramingType);
		tagList.add(TagFromName.FrameTimeVector);
		tagList.add(TagFromName.FrameDelay);
		tagList.add(TagFromName.ImageTriggerDelay);
		tagList.add(TagFromName.MultiplexGroupTimeOffset);
		tagList.add(TagFromName.TriggerTimeOffset);
		tagList.add(TagFromName.SynchronizationTrigger);
		tagList.add(TagFromName.SynchronizationChannel);
		tagList.add(TagFromName.TriggerSamplePosition);
		tagList.add(TagFromName.RadiopharmaceuticalRoute);
		tagList.add(TagFromName.RadiopharmaceuticalVolume);
		tagList.add(TagFromName.RadiopharmaceuticalStartTime);
		tagList.add(TagFromName.RadiopharmaceuticalStopTime);
		tagList.add(TagFromName.RadionuclideTotalDose);
		tagList.add(TagFromName.RadionuclideHalfLife);
		tagList.add(TagFromName.RadionuclidePositronFraction);
		tagList.add(TagFromName.RadiopharmaceuticalSpecificActivity);
		tagList.add(TagFromName.RadiopharmaceuticalStartDateTime);
		tagList.add(TagFromName.RadiopharmaceuticalStopDateTime);
		tagList.add(TagFromName.BeatRejectionFlag);
		tagList.add(TagFromName.LowRRValue);
		tagList.add(TagFromName.HighRRValue);
		tagList.add(TagFromName.IntervalsAcquired);
		tagList.add(TagFromName.IntervalsRejected);
		tagList.add(TagFromName.PVCRejection);
		tagList.add(TagFromName.SkipBeats);
		tagList.add(TagFromName.HeartRate);
		tagList.add(TagFromName.CardiacNumberOfImages);
		tagList.add(TagFromName.TriggerWindow);
		tagList.add(TagFromName.ReconstructionDiameter);
		tagList.add(TagFromName.DistanceSourceToDetector);
		tagList.add(TagFromName.DistanceSourceToPatient);
		tagList.add(TagFromName.EstimatedRadiographicMagnificationFactor);
		tagList.add(TagFromName.GantryDetectorTilt);
		tagList.add(TagFromName.GantryDetectorSlew);
		tagList.add(TagFromName.TableHeight);
		tagList.add(TagFromName.TableTraverse);
		tagList.add(TagFromName.TableMotion);
		tagList.add(TagFromName.TableVerticalIncrement);
		tagList.add(TagFromName.TableLateralIncrement);
		tagList.add(TagFromName.TableLongitudinalIncrement);
		tagList.add(TagFromName.TableAngle);
		tagList.add(TagFromName.TableType);
		tagList.add(TagFromName.RotationDirection);
		tagList.add(TagFromName.AngularPosition);
		tagList.add(TagFromName.RadialPosition);
		tagList.add(TagFromName.ScanArc);
		tagList.add(TagFromName.AngularStep);
		tagList.add(TagFromName.CenterOfRotationOffset);
		tagList.add(TagFromName.RotationOffset);
		tagList.add(TagFromName.FieldOfViewShape);
		tagList.add(TagFromName.FieldOfViewDimensions);
		tagList.add(TagFromName.ExposureTime);
		tagList.add(TagFromName.XRayTubeCurrent);
		tagList.add(TagFromName.Exposure);
		tagList.add(TagFromName.ExposureInuAs);
		tagList.add(TagFromName.AveragePulseWidth);
		tagList.add(TagFromName.RadiationSetting);
		tagList.add(TagFromName.RectificationType);
		tagList.add(TagFromName.RadiationMode);
		tagList.add(TagFromName.ImageAndFluoroscopyAreaDoseProduct);
		tagList.add(TagFromName.FilterType);
		tagList.add(TagFromName.TypeOfFilters);
		tagList.add(TagFromName.IntensifierSize);
		tagList.add(TagFromName.ImagerPixelSpacing);
		tagList.add(TagFromName.Grid);
		tagList.add(TagFromName.GeneratorPower);
		tagList.add(TagFromName.CollimatorGridName);
		tagList.add(TagFromName.CollimatorType);
		tagList.add(TagFromName.FocalDistance);
		tagList.add(TagFromName.XFocusCenter);
		tagList.add(TagFromName.YFocusCenter);
		tagList.add(TagFromName.FocalSpots);
		tagList.add(TagFromName.AnodeTargetMaterial);
		tagList.add(TagFromName.BodyPartThickness);
		tagList.add(TagFromName.CompressionForce);
		tagList.add(TagFromName.CompressionPressure);
		tagList.add(TagFromName.PaddleDescription);
		tagList.add(TagFromName.CompressionContactArea);
		tagList.add(TagFromName.DateOfLastCalibration);
		tagList.add(TagFromName.TimeOfLastCalibration);
		tagList.add(TagFromName.DateTimeOfLastCalibration);
		tagList.add(TagFromName.ConvolutionKernel);
		tagList.add(TagFromName.UpperLowerPixelValues);
		tagList.add(TagFromName.ActualFrameDuration);
		tagList.add(TagFromName.CountRate);
		tagList.add(TagFromName.PreferredPlaybackSequencing);
		tagList.add(TagFromName.ReceiveCoilName);
		tagList.add(TagFromName.TransmitCoilName);
		tagList.add(TagFromName.PlateType);
		tagList.add(TagFromName.PhosphorType);
		tagList.add(TagFromName.WaterEquivalentDiameter);
		tagList.add(TagFromName.WaterEquivalentDiameterCalculationMethodCodeSequence);
		tagList.add(TagFromName.ScanVelocity);
		tagList.add(TagFromName.WholeBodyTechnique);
		tagList.add(TagFromName.ScanLength);
		tagList.add(TagFromName.AcquisitionMatrix);
		tagList.add(TagFromName.InPlanePhaseEncodingDirection);
		tagList.add(TagFromName.FlipAngle);
		tagList.add(TagFromName.VariableFlipAngleFlag);
		tagList.add(TagFromName.SAR);
		tagList.add(TagFromName.dBdt);
		tagList.add(TagFromName.B1rms);
		tagList.add(TagFromName.AcquisitionDeviceProcessingDescription);
		tagList.add(TagFromName.AcquisitionDeviceProcessingCode);
		tagList.add(TagFromName.CassetteOrientation);
		tagList.add(TagFromName.CassetteSize);
		tagList.add(TagFromName.ExposuresOnPlate);
		tagList.add(TagFromName.RelativeXRayExposure);
		tagList.add(TagFromName.ExposureIndex);
		tagList.add(TagFromName.TargetExposureIndex);
		tagList.add(TagFromName.DeviationIndex);
		tagList.add(TagFromName.ColumnAngulation);
		tagList.add(TagFromName.TomoLayerHeight);
		tagList.add(TagFromName.TomoAngle);
		tagList.add(TagFromName.TomoTime);
		tagList.add(TagFromName.TomoType);
		tagList.add(TagFromName.TomoClass);
		tagList.add(TagFromName.NumberOfTomosynthesisSourceImages);
		tagList.add(TagFromName.PositionerMotion);
		tagList.add(TagFromName.PositionerType);
		tagList.add(TagFromName.PositionerPrimaryAngle);
		tagList.add(TagFromName.PositionerSecondaryAngle);
		tagList.add(TagFromName.PositionerPrimaryAngleIncrement);
		tagList.add(TagFromName.PositionerSecondaryAngleIncrement);
		tagList.add(TagFromName.DetectorPrimaryAngle);
		tagList.add(TagFromName.DetectorSecondaryAngle);
		tagList.add(TagFromName.ShutterShape);
		tagList.add(TagFromName.ShutterLeftVerticalEdge);
		tagList.add(TagFromName.ShutterRightVerticalEdge);
		tagList.add(TagFromName.ShutterUpperHorizontalEdge);
		tagList.add(TagFromName.ShutterLowerHorizontalEdge);
		tagList.add(TagFromName.CenterOfCircularShutter);
		tagList.add(TagFromName.RadiusOfCircularShutter);
		tagList.add(TagFromName.VerticesOfThePolygonalShutter);
		tagList.add(TagFromName.ShutterPresentationValue);
		tagList.add(TagFromName.ShutterOverlayGroup);
		tagList.add(TagFromName.ShutterPresentationColorCIELabValue);
		tagList.add(TagFromName.CollimatorShape);
		tagList.add(TagFromName.CollimatorLeftVerticalEdge);
		tagList.add(TagFromName.CollimatorRightVerticalEdge);
		tagList.add(TagFromName.CollimatorUpperHorizontalEdge);
		tagList.add(TagFromName.CollimatorLowerHorizontalEdge);
		tagList.add(TagFromName.CenterOfCircularCollimator);
		tagList.add(TagFromName.RadiusOfCircularCollimator);
		tagList.add(TagFromName.VerticesOfThePolygonalCollimator);
		tagList.add(TagFromName.AcquisitionTimeSynchronized);
		tagList.add(TagFromName.TimeSource);
		tagList.add(TagFromName.TimeDistributionProtocol);
		tagList.add(TagFromName.NTPSourceAddress);
		tagList.add(TagFromName.PageNumberVector);
		tagList.add(TagFromName.FrameLabelVector);
		tagList.add(TagFromName.FramePrimaryAngleVector);
		tagList.add(TagFromName.FrameSecondaryAngleVector);
		tagList.add(TagFromName.SliceLocationVector);
		tagList.add(TagFromName.DisplayWindowLabelVector);
		tagList.add(TagFromName.NominalScannedPixelSpacing);
		tagList.add(TagFromName.DigitizingDeviceTransportDirection);
		tagList.add(TagFromName.RotationOfScannedFilm);
		tagList.add(TagFromName.BiopsyTargetSequence);
		tagList.add(TagFromName.TargetUID);
		tagList.add(TagFromName.LocalizingCursorPosition);
		tagList.add(TagFromName.CalculatedTargetPosition);
		tagList.add(TagFromName.TargetLabel);
		tagList.add(TagFromName.DisplayedZValue);
		tagList.add(TagFromName.IVUSAcquisition);
		tagList.add(TagFromName.IVUSPullbackRate);
		tagList.add(TagFromName.IVUSGatedRate);
		tagList.add(TagFromName.IVUSPullbackStartFrameNumber);
		tagList.add(TagFromName.IVUSPullbackStopFrameNumber);
		tagList.add(TagFromName.LesionNumber);
		tagList.add(TagFromName.AcquisitionComments);
		tagList.add(TagFromName.OutputPower);
		tagList.add(TagFromName.TransducerData);
		tagList.add(TagFromName.FocusDepth);
		tagList.add(TagFromName.ProcessingFunction);
		tagList.add(TagFromName.PostprocessingFunction);
		tagList.add(TagFromName.MechanicalIndex);
		tagList.add(TagFromName.BoneThermalIndex);
		tagList.add(TagFromName.CranialThermalIndex);
		tagList.add(TagFromName.SoftTissueThermalIndex);
		tagList.add(TagFromName.SoftTissueFocusThermalIndex);
		tagList.add(TagFromName.SoftTissueSurfaceThermalIndex);
		tagList.add(TagFromName.DynamicRange);
		tagList.add(TagFromName.TotalGain);
		tagList.add(TagFromName.DepthOfScanField);
		tagList.add(TagFromName.PatientPosition);
		tagList.add(TagFromName.ViewPosition);
		tagList.add(TagFromName.ProjectionEponymousNameCodeSequence);
		tagList.add(TagFromName.ImageTransformationMatrix);
		tagList.add(TagFromName.ImageTranslationVector);
		tagList.add(TagFromName.Sensitivity);
		tagList.add(TagFromName.SequenceOfUltrasoundRegions);
		tagList.add(TagFromName.RegionSpatialFormat);
		tagList.add(TagFromName.RegionDataType);
		tagList.add(TagFromName.RegionFlags);
		tagList.add(TagFromName.RegionLocationMinX0);
		tagList.add(TagFromName.RegionLocationMinY0);
		tagList.add(TagFromName.RegionLocationMaxX1);
		tagList.add(TagFromName.RegionLocationMaxY1);
		tagList.add(TagFromName.ReferencePixelX0);
		tagList.add(TagFromName.ReferencePixelY0);
		tagList.add(TagFromName.PhysicalUnitsXDirection);
		tagList.add(TagFromName.PhysicalUnitsYDirection);
		tagList.add(TagFromName.ReferencePixelPhysicalValueX);
		tagList.add(TagFromName.ReferencePixelPhysicalValueY);
		tagList.add(TagFromName.PhysicalDeltaX);
		tagList.add(TagFromName.PhysicalDeltaY);
		tagList.add(TagFromName.TransducerFrequency);
		tagList.add(TagFromName.TransducerType);
		tagList.add(TagFromName.PulseRepetitionFrequency);
		tagList.add(TagFromName.DopplerCorrectionAngle);
		tagList.add(TagFromName.SteeringAngle);
		tagList.add(TagFromName.DopplerSampleVolumeXPositionRetired);
		tagList.add(TagFromName.DopplerSampleVolumeXPosition);
		tagList.add(TagFromName.DopplerSampleVolumeYPositionRetired);
		tagList.add(TagFromName.DopplerSampleVolumeYPosition);
		tagList.add(TagFromName.TMLinePositionX0Retired);
		tagList.add(TagFromName.TMLinePositionX0);
		tagList.add(TagFromName.TMLinePositionY0Retired);
		tagList.add(TagFromName.TMLinePositionY0);
		tagList.add(TagFromName.TMLinePositionX1Retired);
		tagList.add(TagFromName.TMLinePositionX1);
		tagList.add(TagFromName.TMLinePositionY1Retired);
		tagList.add(TagFromName.TMLinePositionY1);
		tagList.add(TagFromName.PixelComponentOrganization);
		tagList.add(TagFromName.PixelComponentMask);
		tagList.add(TagFromName.PixelComponentRangeStart);
		tagList.add(TagFromName.PixelComponentRangeStop);
		tagList.add(TagFromName.PixelComponentPhysicalUnits);
		tagList.add(TagFromName.PixelComponentDataType);
		tagList.add(TagFromName.NumberOfTableBreakPoints);
		tagList.add(TagFromName.TableOfXBreakPoints);
		tagList.add(TagFromName.TableOfYBreakPoints);
		tagList.add(TagFromName.NumberOfTableEntries);
		tagList.add(TagFromName.TableOfPixelValues);
		tagList.add(TagFromName.TableOfParameterValues);
		tagList.add(TagFromName.RWaveTimeVector);
		tagList.add(TagFromName.DetectorConditionsNominalFlag);
		tagList.add(TagFromName.DetectorTemperature);
		tagList.add(TagFromName.DetectorType);
		tagList.add(TagFromName.DetectorConfiguration);
		tagList.add(TagFromName.DetectorDescription);
		tagList.add(TagFromName.DetectorMode);
		tagList.add(TagFromName.DetectorID);
		tagList.add(TagFromName.DateOfLastDetectorCalibration);
		tagList.add(TagFromName.TimeOfLastDetectorCalibration);
		tagList.add(TagFromName.ExposuresOnDetectorSinceLastCalibration);
		tagList.add(TagFromName.ExposuresOnDetectorSinceManufactured);
		tagList.add(TagFromName.DetectorTimeSinceLastExposure);
		tagList.add(TagFromName.DetectorActiveTime);
		tagList.add(TagFromName.DetectorActivationOffsetFromExposure);
		tagList.add(TagFromName.DetectorBinning);
		tagList.add(TagFromName.DetectorElementPhysicalSize);
		tagList.add(TagFromName.DetectorElementSpacing);
		tagList.add(TagFromName.DetectorActiveShape);
		tagList.add(TagFromName.DetectorActiveDimensions);
		tagList.add(TagFromName.DetectorActiveOrigin);
		tagList.add(TagFromName.DetectorManufacturerName);
		tagList.add(TagFromName.DetectorManufacturerModelName);
		tagList.add(TagFromName.FieldOfViewOrigin);
		tagList.add(TagFromName.FieldOfViewRotation);
		tagList.add(TagFromName.FieldOfViewHorizontalFlip);
		tagList.add(TagFromName.PixelDataAreaOriginRelativeToFOV);
		tagList.add(TagFromName.PixelDataAreaRotationAngleRelativeToFOV);
		tagList.add(TagFromName.GridAbsorbingMaterial);
		tagList.add(TagFromName.GridSpacingMaterial);
		tagList.add(TagFromName.GridThickness);
		tagList.add(TagFromName.GridPitch);
		tagList.add(TagFromName.GridAspectRatio);
		tagList.add(TagFromName.GridPeriod);
		tagList.add(TagFromName.GridFocalDistance);
		tagList.add(TagFromName.FilterMaterial);
		tagList.add(TagFromName.FilterThicknessMinimum);
		tagList.add(TagFromName.FilterThicknessMaximum);
		tagList.add(TagFromName.FilterBeamPathLengthMinimum);
		tagList.add(TagFromName.FilterBeamPathLengthMaximum);
		tagList.add(TagFromName.ExposureControlMode);
		tagList.add(TagFromName.ExposureControlModeDescription);
		tagList.add(TagFromName.ExposureStatus);
		tagList.add(TagFromName.PhototimerSetting);
		tagList.add(TagFromName.ExposureTimeInuS);
		tagList.add(TagFromName.XRayTubeCurrentInuA);
		tagList.add(TagFromName.ContentQualification);
		tagList.add(TagFromName.PulseSequenceName);
		tagList.add(TagFromName.MRImagingModifierSequence);
		tagList.add(TagFromName.EchoPulseSequence);
		tagList.add(TagFromName.InversionRecovery);
		tagList.add(TagFromName.FlowCompensation);
		tagList.add(TagFromName.MultipleSpinEcho);
		tagList.add(TagFromName.MultiPlanarExcitation);
		tagList.add(TagFromName.PhaseContrast);
		tagList.add(TagFromName.TimeOfFlightContrast);
		tagList.add(TagFromName.Spoiling);
		tagList.add(TagFromName.SteadyStatePulseSequence);
		tagList.add(TagFromName.EchoPlanarPulseSequence);
		tagList.add(TagFromName.TagAngleFirstAxis);
		tagList.add(TagFromName.MagnetizationTransfer);
		tagList.add(TagFromName.T2Preparation);
		tagList.add(TagFromName.BloodSignalNulling);
		tagList.add(TagFromName.SaturationRecovery);
		tagList.add(TagFromName.SpectrallySelectedSuppression);
		tagList.add(TagFromName.SpectrallySelectedExcitation);
		tagList.add(TagFromName.SpatialPresaturation);
		tagList.add(TagFromName.Tagging);
		tagList.add(TagFromName.OversamplingPhase);
		tagList.add(TagFromName.TagSpacingFirstDimension);
		tagList.add(TagFromName.GeometryOfKSpaceTraversal);
		tagList.add(TagFromName.SegmentedKSpaceTraversal);
		tagList.add(TagFromName.RectilinearPhaseEncodeReordering);
		tagList.add(TagFromName.TagThickness);
		tagList.add(TagFromName.PartialFourierDirection);
		tagList.add(TagFromName.CardiacSynchronizationTechnique);
		tagList.add(TagFromName.ReceiveCoilManufacturerName);
		tagList.add(TagFromName.MRReceiveCoilSequence);
		tagList.add(TagFromName.ReceiveCoilType);
		tagList.add(TagFromName.QuadratureReceiveCoil);
		tagList.add(TagFromName.MultiCoilDefinitionSequence);
		tagList.add(TagFromName.MultiCoilConfiguration);
		tagList.add(TagFromName.MultiCoilElementName);
		tagList.add(TagFromName.MultiCoilElementUsed);
		tagList.add(TagFromName.MRTransmitCoilSequence);
		tagList.add(TagFromName.TransmitCoilManufacturerName);
		tagList.add(TagFromName.TransmitCoilType);
		tagList.add(TagFromName.SpectralWidth);
		tagList.add(TagFromName.ChemicalShiftReference);
		tagList.add(TagFromName.VolumeLocalizationTechnique);
		tagList.add(TagFromName.MRAcquisitionFrequencyEncodingSteps);
		tagList.add(TagFromName.Decoupling);
		tagList.add(TagFromName.DecoupledNucleus);
		tagList.add(TagFromName.DecouplingFrequency);
		tagList.add(TagFromName.DecouplingMethod);
		tagList.add(TagFromName.DecouplingChemicalShiftReference);
		tagList.add(TagFromName.KSpaceFiltering);
		tagList.add(TagFromName.TimeDomainFiltering);
		tagList.add(TagFromName.NumberOfZeroFills);
		tagList.add(TagFromName.BaselineCorrection);
		tagList.add(TagFromName.ParallelReductionFactorInPlane);
		tagList.add(TagFromName.CardiacRRIntervalSpecified);
		tagList.add(TagFromName.AcquisitionDuration);
		tagList.add(TagFromName.FrameAcquisitionDateTime);
		tagList.add(TagFromName.DiffusionDirectionality);
		tagList.add(TagFromName.DiffusionGradientDirectionSequence);
		tagList.add(TagFromName.ParallelAcquisition);
		tagList.add(TagFromName.ParallelAcquisitionTechnique);
		tagList.add(TagFromName.InversionTimes);
		tagList.add(TagFromName.MetaboliteMapDescription);
		tagList.add(TagFromName.PartialFourier);
		tagList.add(TagFromName.EffectiveEchoTime);
		tagList.add(TagFromName.MetaboliteMapCodeSequence);
		tagList.add(TagFromName.ChemicalShiftSequence);
		tagList.add(TagFromName.CardiacSignalSource);
		tagList.add(TagFromName.DiffusionBValue);
		tagList.add(TagFromName.DiffusionGradientOrientation);
		tagList.add(TagFromName.VelocityEncodingDirection);
		tagList.add(TagFromName.VelocityEncodingMinimumValue);
		tagList.add(TagFromName.VelocityEncodingAcquisitionSequence);
		tagList.add(TagFromName.NumberOfKSpaceTrajectories);
		tagList.add(TagFromName.CoverageOfKSpace);
		tagList.add(TagFromName.SpectroscopyAcquisitionPhaseRows);
		tagList.add(TagFromName.ParallelReductionFactorInPlaneRetired);
		tagList.add(TagFromName.TransmitterFrequency);
		tagList.add(TagFromName.ResonantNucleus);
		tagList.add(TagFromName.FrequencyCorrection);
		tagList.add(TagFromName.MRSpectroscopyFOVGeometrySequence);
		tagList.add(TagFromName.SlabThickness);
		tagList.add(TagFromName.SlabOrientation);
		tagList.add(TagFromName.MidSlabPosition);
		tagList.add(TagFromName.MRSpatialSaturationSequence);
		tagList.add(TagFromName.MRTimingAndRelatedParametersSequence);
		tagList.add(TagFromName.MREchoSequence);
		tagList.add(TagFromName.MRModifierSequence);
		tagList.add(TagFromName.MRDiffusionSequence);
		tagList.add(TagFromName.CardiacSynchronizationSequence);
		tagList.add(TagFromName.MRAveragesSequence);
		tagList.add(TagFromName.MRFOVGeometrySequence);
		tagList.add(TagFromName.VolumeLocalizationSequence);
		tagList.add(TagFromName.SpectroscopyAcquisitionDataColumns);
		tagList.add(TagFromName.DiffusionAnisotropyType);
		tagList.add(TagFromName.FrameReferenceDateTime);
		tagList.add(TagFromName.MRMetaboliteMapSequence);
		tagList.add(TagFromName.ParallelReductionFactorOutOfPlane);
		tagList.add(TagFromName.SpectroscopyAcquisitionOutOfPlanePhaseSteps);
		tagList.add(TagFromName.BulkMotionStatus);
		tagList.add(TagFromName.ParallelReductionFactorSecondInPlane);
		tagList.add(TagFromName.CardiacBeatRejectionTechnique);
		tagList.add(TagFromName.RespiratoryMotionCompensationTechnique);
		tagList.add(TagFromName.RespiratorySignalSource);
		tagList.add(TagFromName.BulkMotionCompensationTechnique);
		tagList.add(TagFromName.BulkMotionSignalSource);
		tagList.add(TagFromName.ApplicableSafetyStandardAgency);
		tagList.add(TagFromName.ApplicableSafetyStandardDescription);
		tagList.add(TagFromName.OperatingModeSequence);
		tagList.add(TagFromName.OperatingModeType);
		tagList.add(TagFromName.OperatingMode);
		tagList.add(TagFromName.SpecificAbsorptionRateDefinition);
		tagList.add(TagFromName.GradientOutputType);
		tagList.add(TagFromName.SpecificAbsorptionRateValue);
		tagList.add(TagFromName.GradientOutput);
		tagList.add(TagFromName.FlowCompensationDirection);
		tagList.add(TagFromName.TaggingDelay);
		tagList.add(TagFromName.RespiratoryMotionCompensationTechniqueDescription);
		tagList.add(TagFromName.RespiratorySignalSourceID);
		tagList.add(TagFromName.ChemicalShiftMinimumIntegrationLimitInHz);
		tagList.add(TagFromName.ChemicalShiftMaximumIntegrationLimitInHz);
		tagList.add(TagFromName.MRVelocityEncodingSequence);
		tagList.add(TagFromName.FirstOrderPhaseCorrection);
		tagList.add(TagFromName.WaterReferencedPhaseCorrection);
		tagList.add(TagFromName.MRSpectroscopyAcquisitionType);
		tagList.add(TagFromName.RespiratoryCyclePosition);
		tagList.add(TagFromName.VelocityEncodingMaximumValue);
		tagList.add(TagFromName.TagSpacingSecondDimension);
		tagList.add(TagFromName.TagAngleSecondAxis);
		tagList.add(TagFromName.FrameAcquisitionDuration);
		tagList.add(TagFromName.MRImageFrameTypeSequence);
		tagList.add(TagFromName.MRSpectroscopyFrameTypeSequence);
		tagList.add(TagFromName.MRAcquisitionPhaseEncodingStepsInPlane);
		tagList.add(TagFromName.MRAcquisitionPhaseEncodingStepsOutOfPlane);
		tagList.add(TagFromName.SpectroscopyAcquisitionPhaseColumns);
		tagList.add(TagFromName.CardiacCyclePosition);
		tagList.add(TagFromName.SpecificAbsorptionRateSequence);
		tagList.add(TagFromName.RFEchoTrainLength);
		tagList.add(TagFromName.GradientEchoTrainLength);
		tagList.add(TagFromName.ArterialSpinLabelingContrast);
		tagList.add(TagFromName.MRArterialSpinLabelingSequence);
		tagList.add(TagFromName.ASLTechniqueDescription);
		tagList.add(TagFromName.ASLSlabNumber);
		tagList.add(TagFromName.ASLSlabThickness);
		tagList.add(TagFromName.ASLSlabOrientation);
		tagList.add(TagFromName.ASLMidSlabPosition);
		tagList.add(TagFromName.ASLContext);
		tagList.add(TagFromName.ASLPulseTrainDuration);
		tagList.add(TagFromName.ASLCrusherFlag);
		tagList.add(TagFromName.ASLCrusherFlowLimit);
		tagList.add(TagFromName.ASLCrusherDescription);
		tagList.add(TagFromName.ASLBolusCutoffFlag);
		tagList.add(TagFromName.ASLBolusCutoffTimingSequence);
		tagList.add(TagFromName.ASLBolusCutoffTechnique);
		tagList.add(TagFromName.ASLBolusCutoffDelayTime);
		tagList.add(TagFromName.ASLSlabSequence);
		tagList.add(TagFromName.ChemicalShiftMinimumIntegrationLimitInppm);
		tagList.add(TagFromName.ChemicalShiftMaximumIntegrationLimitInppm);
		tagList.add(TagFromName.WaterReferenceAcquisition);
		tagList.add(TagFromName.EchoPeakPosition);
		tagList.add(TagFromName.CTAcquisitionTypeSequence);
		tagList.add(TagFromName.AcquisitionType);
		tagList.add(TagFromName.TubeAngle);
		tagList.add(TagFromName.CTAcquisitionDetailsSequence);
		tagList.add(TagFromName.RevolutionTime);
		tagList.add(TagFromName.SingleCollimationWidth);
		tagList.add(TagFromName.TotalCollimationWidth);
		tagList.add(TagFromName.CTTableDynamicsSequence);
		tagList.add(TagFromName.TableSpeed);
		tagList.add(TagFromName.TableFeedPerRotation);
		tagList.add(TagFromName.SpiralPitchFactor);
		tagList.add(TagFromName.CTGeometrySequence);
		tagList.add(TagFromName.DataCollectionCenterPatient);
		tagList.add(TagFromName.CTReconstructionSequence);
		tagList.add(TagFromName.ReconstructionAlgorithm);
		tagList.add(TagFromName.ConvolutionKernelGroup);
		tagList.add(TagFromName.ReconstructionFieldOfView);
		tagList.add(TagFromName.ReconstructionTargetCenterPatient);
		tagList.add(TagFromName.ReconstructionAngle);
		tagList.add(TagFromName.ImageFilter);
		tagList.add(TagFromName.CTExposureSequence);
		tagList.add(TagFromName.ReconstructionPixelSpacing);
		tagList.add(TagFromName.ExposureModulationType);
		tagList.add(TagFromName.EstimatedDoseSaving);
		tagList.add(TagFromName.CTXRayDetailsSequence);
		tagList.add(TagFromName.CTPositionSequence);
		tagList.add(TagFromName.TablePosition);
		tagList.add(TagFromName.ExposureTimeInms);
		tagList.add(TagFromName.CTImageFrameTypeSequence);
		tagList.add(TagFromName.XRayTubeCurrentInmA);
		tagList.add(TagFromName.ExposureInmAs);
		tagList.add(TagFromName.ConstantVolumeFlag);
		tagList.add(TagFromName.FluoroscopyFlag);
		tagList.add(TagFromName.DistanceSourceToDataCollectionCenter);
		tagList.add(TagFromName.ContrastBolusAgentNumber);
		tagList.add(TagFromName.ContrastBolusIngredientCodeSequence);
		tagList.add(TagFromName.ContrastAdministrationProfileSequence);
		tagList.add(TagFromName.ContrastBolusUsageSequence);
		tagList.add(TagFromName.ContrastBolusAgentAdministered);
		tagList.add(TagFromName.ContrastBolusAgentDetected);
		tagList.add(TagFromName.ContrastBolusAgentPhase);
		tagList.add(TagFromName.CTDIvol);
		tagList.add(TagFromName.CTDIPhantomTypeCodeSequence);
		tagList.add(TagFromName.CalciumScoringMassFactorPatient);
		tagList.add(TagFromName.CalciumScoringMassFactorDevice);
		tagList.add(TagFromName.EnergyWeightingFactor);
		tagList.add(TagFromName.CTAdditionalXRaySourceSequence);
		tagList.add(TagFromName.ProjectionPixelCalibrationSequence);
		tagList.add(TagFromName.DistanceSourceToIsocenter);
		tagList.add(TagFromName.DistanceObjectToTableTop);
		tagList.add(TagFromName.ObjectPixelSpacingInCenterOfBeam);
		tagList.add(TagFromName.PositionerPositionSequence);
		tagList.add(TagFromName.TablePositionSequence);
		tagList.add(TagFromName.CollimatorShapeSequence);
		tagList.add(TagFromName.PlanesInAcquisition);
		tagList.add(TagFromName.XAXRFFrameCharacteristicsSequence);
		tagList.add(TagFromName.FrameAcquisitionSequence);
		tagList.add(TagFromName.XRayReceptorType);
		tagList.add(TagFromName.AcquisitionProtocolName);
		tagList.add(TagFromName.AcquisitionProtocolDescription);
		tagList.add(TagFromName.ContrastBolusIngredientOpaque);
		tagList.add(TagFromName.DistanceReceptorPlaneToDetectorHousing);
		tagList.add(TagFromName.IntensifierActiveShape);
		tagList.add(TagFromName.IntensifierActiveDimensions);
		tagList.add(TagFromName.PhysicalDetectorSize);
		tagList.add(TagFromName.PositionOfIsocenterProjection);
		tagList.add(TagFromName.FieldOfViewSequence);
		tagList.add(TagFromName.FieldOfViewDescription);
		tagList.add(TagFromName.ExposureControlSensingRegionsSequence);
		tagList.add(TagFromName.ExposureControlSensingRegionShape);
		tagList.add(TagFromName.ExposureControlSensingRegionLeftVerticalEdge);
		tagList.add(TagFromName.ExposureControlSensingRegionRightVerticalEdge);
		tagList.add(TagFromName.ExposureControlSensingRegionUpperHorizontalEdge);
		tagList.add(TagFromName.ExposureControlSensingRegionLowerHorizontalEdge);
		tagList.add(TagFromName.CenterOfCircularExposureControlSensingRegion);
		tagList.add(TagFromName.RadiusOfCircularExposureControlSensingRegion);
		tagList.add(TagFromName.VerticesOfThePolygonalExposureControlSensingRegion);
		tagList.add(TagFromName.ColumnAngulationPatient);
		tagList.add(TagFromName.BeamAngle);
		tagList.add(TagFromName.FrameDetectorParametersSequence);
		tagList.add(TagFromName.CalculatedAnatomyThickness);
		tagList.add(TagFromName.CalibrationSequence);
		tagList.add(TagFromName.ObjectThicknessSequence);
		tagList.add(TagFromName.PlaneIdentification);
		tagList.add(TagFromName.FieldOfViewDimensionsInFloat);
		tagList.add(TagFromName.IsocenterReferenceSystemSequence);
		tagList.add(TagFromName.PositionerIsocenterPrimaryAngle);
		tagList.add(TagFromName.PositionerIsocenterSecondaryAngle);
		tagList.add(TagFromName.PositionerIsocenterDetectorRotationAngle);
		tagList.add(TagFromName.TableXPositionToIsocenter);
		tagList.add(TagFromName.TableYPositionToIsocenter);
		tagList.add(TagFromName.TableZPositionToIsocenter);
		tagList.add(TagFromName.TableHorizontalRotationAngle);
		tagList.add(TagFromName.TableHeadTiltAngle);
		tagList.add(TagFromName.TableCradleTiltAngle);
		tagList.add(TagFromName.FrameDisplayShutterSequence);
		tagList.add(TagFromName.AcquiredImageAreaDoseProduct);
		tagList.add(TagFromName.CArmPositionerTabletopRelationship);
		tagList.add(TagFromName.XRayGeometrySequence);
		tagList.add(TagFromName.IrradiationEventIdentificationSequence);
		tagList.add(TagFromName.XRay3DFrameTypeSequence);
		tagList.add(TagFromName.ContributingSourcesSequence);
		tagList.add(TagFromName.XRay3DAcquisitionSequence);
		tagList.add(TagFromName.PrimaryPositionerScanArc);
		tagList.add(TagFromName.SecondaryPositionerScanArc);
		tagList.add(TagFromName.PrimaryPositionerScanStartAngle);
		tagList.add(TagFromName.SecondaryPositionerScanStartAngle);
		tagList.add(TagFromName.PrimaryPositionerIncrement);
		tagList.add(TagFromName.SecondaryPositionerIncrement);
		tagList.add(TagFromName.StartAcquisitionDateTime);
		tagList.add(TagFromName.EndAcquisitionDateTime);
		tagList.add(TagFromName.PrimaryPositionerIncrementSign);
		tagList.add(TagFromName.SecondaryPositionerIncrementSign);
		tagList.add(TagFromName.ApplicationName);
		tagList.add(TagFromName.ApplicationVersion);
		tagList.add(TagFromName.ApplicationManufacturer);
		tagList.add(TagFromName.AlgorithmType);
		tagList.add(TagFromName.AlgorithmDescription);
		tagList.add(TagFromName.XRay3DReconstructionSequence);
		tagList.add(TagFromName.ReconstructionDescription);
		tagList.add(TagFromName.PerProjectionAcquisitionSequence);
		tagList.add(TagFromName.DetectorPositionSequence);
		tagList.add(TagFromName.XRayAcquisitionDoseSequence);
		tagList.add(TagFromName.XRaySourceIsocenterPrimaryAngle);
		tagList.add(TagFromName.XRaySourceIsocenterSecondaryAngle);
		tagList.add(TagFromName.BreastSupportIsocenterPrimaryAngle);
		tagList.add(TagFromName.BreastSupportIsocenterSecondaryAngle);
		tagList.add(TagFromName.BreastSupportXPositionToIsocenter);
		tagList.add(TagFromName.BreastSupportYPositionToIsocenter);
		tagList.add(TagFromName.BreastSupportZPositionToIsocenter);
		tagList.add(TagFromName.DetectorIsocenterPrimaryAngle);
		tagList.add(TagFromName.DetectorIsocenterSecondaryAngle);
		tagList.add(TagFromName.DetectorXPositionToIsocenter);
		tagList.add(TagFromName.DetectorYPositionToIsocenter);
		tagList.add(TagFromName.DetectorZPositionToIsocenter);
		tagList.add(TagFromName.XRayGridSequence);
		tagList.add(TagFromName.XRayFilterSequence);
		tagList.add(TagFromName.DetectorActiveAreaTLHCPosition);
		tagList.add(TagFromName.DetectorActiveAreaOrientation);
		tagList.add(TagFromName.PositionerPrimaryAngleDirection);
		tagList.add(TagFromName.DiffusionBMatrixSequence);
		tagList.add(TagFromName.DiffusionBValueXX);
		tagList.add(TagFromName.DiffusionBValueXY);
		tagList.add(TagFromName.DiffusionBValueXZ);
		tagList.add(TagFromName.DiffusionBValueYY);
		tagList.add(TagFromName.DiffusionBValueYZ);
		tagList.add(TagFromName.DiffusionBValueZZ);
		tagList.add(TagFromName.FunctionalMRSequence);
		tagList.add(TagFromName.FunctionalSettlingPhaseFramesPresent);
		tagList.add(TagFromName.FunctionalSyncPulse);
		tagList.add(TagFromName.SettlingPhaseFrame);
		tagList.add(TagFromName.DecayCorrectionDateTime);
		tagList.add(TagFromName.StartDensityThreshold);
		tagList.add(TagFromName.StartRelativeDensityDifferenceThreshold);
		tagList.add(TagFromName.StartCardiacTriggerCountThreshold);
		tagList.add(TagFromName.StartRespiratoryTriggerCountThreshold);
		tagList.add(TagFromName.TerminationCountsThreshold);
		tagList.add(TagFromName.TerminationDensityThreshold);
		tagList.add(TagFromName.TerminationRelativeDensityThreshold);
		tagList.add(TagFromName.TerminationTimeThreshold);
		tagList.add(TagFromName.TerminationCardiacTriggerCountThreshold);
		tagList.add(TagFromName.TerminationRespiratoryTriggerCountThreshold);
		tagList.add(TagFromName.DetectorGeometry);
		tagList.add(TagFromName.TransverseDetectorSeparation);
		tagList.add(TagFromName.AxialDetectorDimension);
		tagList.add(TagFromName.RadiopharmaceuticalAgentNumber);
		tagList.add(TagFromName.PETFrameAcquisitionSequence);
		tagList.add(TagFromName.PETDetectorMotionDetailsSequence);
		tagList.add(TagFromName.PETTableDynamicsSequence);
		tagList.add(TagFromName.PETPositionSequence);
		tagList.add(TagFromName.PETFrameCorrectionFactorsSequence);
		tagList.add(TagFromName.RadiopharmaceuticalUsageSequence);
		tagList.add(TagFromName.AttenuationCorrectionSource);
		tagList.add(TagFromName.NumberOfIterations);
		tagList.add(TagFromName.NumberOfSubsets);
		tagList.add(TagFromName.PETReconstructionSequence);
		tagList.add(TagFromName.PETFrameTypeSequence);
		tagList.add(TagFromName.TimeOfFlightInformationUsed);
		tagList.add(TagFromName.ReconstructionType);
		tagList.add(TagFromName.DecayCorrected);
		tagList.add(TagFromName.AttenuationCorrected);
		tagList.add(TagFromName.ScatterCorrected);
		tagList.add(TagFromName.DeadTimeCorrected);
		tagList.add(TagFromName.GantryMotionCorrected);
		tagList.add(TagFromName.PatientMotionCorrected);
		tagList.add(TagFromName.CountLossNormalizationCorrected);
		tagList.add(TagFromName.RandomsCorrected);
		tagList.add(TagFromName.NonUniformRadialSamplingCorrected);
		tagList.add(TagFromName.SensitivityCalibrated);
		tagList.add(TagFromName.DetectorNormalizationCorrection);
		tagList.add(TagFromName.IterativeReconstructionMethod);
		tagList.add(TagFromName.AttenuationCorrectionTemporalRelationship);
		tagList.add(TagFromName.PatientPhysiologicalStateSequence);
		tagList.add(TagFromName.PatientPhysiologicalStateCodeSequence);
		tagList.add(TagFromName.DepthsOfFocus);
		tagList.add(TagFromName.ExcludedIntervalsSequence);
		tagList.add(TagFromName.ExclusionStartDateTime);
		tagList.add(TagFromName.ExclusionDuration);
		tagList.add(TagFromName.USImageDescriptionSequence);
		tagList.add(TagFromName.ImageDataTypeSequence);
		tagList.add(TagFromName.DataType);
		tagList.add(TagFromName.TransducerScanPatternCodeSequence);
		tagList.add(TagFromName.AliasedDataType);
		tagList.add(TagFromName.PositionMeasuringDeviceUsed);
		tagList.add(TagFromName.TransducerGeometryCodeSequence);
		tagList.add(TagFromName.TransducerBeamSteeringCodeSequence);
		tagList.add(TagFromName.TransducerApplicationCodeSequence);
		tagList.add(TagFromName.ZeroVelocityPixelValue);
		tagList.add(TagFromName.ReferenceLocationLabel);
		tagList.add(TagFromName.ReferenceLocationDescription);
		tagList.add(TagFromName.ReferenceBasisCodeSequence);
		tagList.add(TagFromName.ReferenceGeometryCodeSequence);
		tagList.add(TagFromName.OffsetDistance);
		tagList.add(TagFromName.OffsetDirection);
		tagList.add(TagFromName.PotentialScheduledProtocolCodeSequence);
		tagList.add(TagFromName.PotentialRequestedProcedureCodeSequence);
		tagList.add(TagFromName.PotentialReasonsForProcedure);
		tagList.add(TagFromName.PotentialReasonsForProcedureCodeSequence);
		tagList.add(TagFromName.PotentialDiagnosticTasks);
		tagList.add(TagFromName.ContraindicationsCodeSequence);
		tagList.add(TagFromName.ReferencedDefinedProtocolSequence);
		tagList.add(TagFromName.ReferencedPerformedProtocolSequence);
		tagList.add(TagFromName.PredecessorProtocolSequence);
		tagList.add(TagFromName.ProtocolPlanningInformation);
		tagList.add(TagFromName.ProtocolDesignRationale);
		tagList.add(TagFromName.PatientSpecificationSequence);
		tagList.add(TagFromName.ModelSpecificationSequence);
		tagList.add(TagFromName.ParametersSpecificationSequence);
		tagList.add(TagFromName.InstructionSequence);
		tagList.add(TagFromName.InstructionIndex);
		tagList.add(TagFromName.InstructionText);
		tagList.add(TagFromName.InstructionDescription);
		tagList.add(TagFromName.InstructionPerformedFlag);
		tagList.add(TagFromName.InstructionPerformedDateTime);
		tagList.add(TagFromName.InstructionPerformanceComment);
		tagList.add(TagFromName.PatientPositioningInstructionSequence);
		tagList.add(TagFromName.PositioningMethodCodeSequence);
		tagList.add(TagFromName.PositioningLandmarkSequence);
		tagList.add(TagFromName.TargetFrameOfReferenceUID);
		tagList.add(TagFromName.AcquisitionProtocolElementSpecificationSequence);
		tagList.add(TagFromName.AcquisitionProtocolElementSequence);
		tagList.add(TagFromName.ProtocolElementNumber);
		tagList.add(TagFromName.ProtocolElementName);
		tagList.add(TagFromName.ProtocolElementCharacteristicsSummary);
		tagList.add(TagFromName.ProtocolElementPurpose);
		tagList.add(TagFromName.AcquisitionMotion);
		tagList.add(TagFromName.AcquisitionStartLocationSequence);
		tagList.add(TagFromName.AcquisitionEndLocationSequence);
		tagList.add(TagFromName.ReconstructionProtocolElementSpecificationSequence);
		tagList.add(TagFromName.ReconstructionProtocolElementSequence);
		tagList.add(TagFromName.StorageProtocolElementSpecificationSequence);
		tagList.add(TagFromName.StorageProtocolElementSequence);
		tagList.add(TagFromName.RequestedSeriesDescription);
		tagList.add(TagFromName.SourceAcquisitionProtocolElementNumber);
		tagList.add(TagFromName.SourceAcquisitionBeamNumber);
		tagList.add(TagFromName.SourceReconstructionProtocolElementNumber);
		tagList.add(TagFromName.ReconstructionStartLocationSequence);
		tagList.add(TagFromName.ReconstructionEndLocationSequence);
		tagList.add(TagFromName.ReconstructionAlgorithmSequence);
		tagList.add(TagFromName.ReconstructionTargetCenterLocationSequence);
		tagList.add(TagFromName.ImageFilterDescription);
		tagList.add(TagFromName.CTDIvolNotificationTrigger);
		tagList.add(TagFromName.DLPNotificationTrigger);
		tagList.add(TagFromName.AutoKVPSelectionType);
		tagList.add(TagFromName.AutoKVPUpperBound);
		tagList.add(TagFromName.AutoKVPLowerBound);
		tagList.add(TagFromName.ProtocolDefinedPatientPosition);
		tagList.add(TagFromName.ContributingEquipmentSequence);
		tagList.add(TagFromName.ContributionDateTime);
		tagList.add(TagFromName.ContributionDescription);
		tagList.add(TagFromName.StudyInstanceUID);
		tagList.add(TagFromName.SeriesInstanceUID);
		tagList.add(TagFromName.StudyID);
		tagList.add(TagFromName.SeriesNumber);
		tagList.add(TagFromName.AcquisitionNumber);
		tagList.add(TagFromName.InstanceNumber);
		tagList.add(TagFromName.IsotopeNumber);
		tagList.add(TagFromName.PhaseNumber);
		tagList.add(TagFromName.IntervalNumber);
		tagList.add(TagFromName.TimeSlotNumber);
		tagList.add(TagFromName.AngleNumber);
		tagList.add(TagFromName.ItemNumber);
		tagList.add(TagFromName.PatientOrientation);
		tagList.add(TagFromName.OverlayNumber);
		tagList.add(TagFromName.CurveNumber);
		tagList.add(TagFromName.LUTNumber);
		tagList.add(TagFromName.ImagePosition);
		tagList.add(TagFromName.ImagePositionPatient);
		tagList.add(TagFromName.ImageOrientation);
		tagList.add(TagFromName.ImageOrientationPatient);
		tagList.add(TagFromName.Location);
		tagList.add(TagFromName.FrameOfReferenceUID);
		tagList.add(TagFromName.Laterality);
		tagList.add(TagFromName.ImageLaterality);
		tagList.add(TagFromName.ImageGeometryType);
		tagList.add(TagFromName.MaskingImage);
		tagList.add(TagFromName.ReportNumber);
		tagList.add(TagFromName.TemporalPositionIdentifier);
		tagList.add(TagFromName.NumberOfTemporalPositions);
		tagList.add(TagFromName.TemporalResolution);
		tagList.add(TagFromName.SynchronizationFrameOfReferenceUID);
		tagList.add(TagFromName.SOPInstanceUIDOfConcatenationSource);
		tagList.add(TagFromName.SeriesInStudy);
		tagList.add(TagFromName.AcquisitionsInSeries);
		tagList.add(TagFromName.ImagesInAcquisition);
		tagList.add(TagFromName.ImagesInSeries);
		tagList.add(TagFromName.AcquisitionsInStudy);
		tagList.add(TagFromName.ImagesInStudy);
		tagList.add(TagFromName.Reference);
		tagList.add(TagFromName.TargetPositionReferenceIndicator);
		tagList.add(TagFromName.PositionReferenceIndicator);
		tagList.add(TagFromName.SliceLocation);
		tagList.add(TagFromName.OtherStudyNumbers);
		tagList.add(TagFromName.NumberOfPatientRelatedStudies);
		tagList.add(TagFromName.NumberOfPatientRelatedSeries);
		tagList.add(TagFromName.NumberOfPatientRelatedInstances);
		tagList.add(TagFromName.NumberOfStudyRelatedSeries);
		tagList.add(TagFromName.NumberOfStudyRelatedInstances);
		tagList.add(TagFromName.NumberOfSeriesRelatedInstances);
		tagList.add(TagFromName.SourceImageID);
		tagList.add(TagFromName.ModifyingDeviceID);
		tagList.add(TagFromName.ModifiedImageID);
		tagList.add(TagFromName.ModifiedImageDate);
		tagList.add(TagFromName.ModifyingDeviceManufacturer);
		tagList.add(TagFromName.ModifiedImageTime);
		tagList.add(TagFromName.ModifiedImageDescription);
		tagList.add(TagFromName.ImageComments);
		tagList.add(TagFromName.OriginalImageIdentification);
		tagList.add(TagFromName.OriginalImageIdentificationNomenclature);
		tagList.add(TagFromName.StackID);
		tagList.add(TagFromName.InStackPositionNumber);
		tagList.add(TagFromName.FrameAnatomySequence);
		tagList.add(TagFromName.FrameLaterality);
		tagList.add(TagFromName.FrameContentSequence);
		tagList.add(TagFromName.PlanePositionSequence);
		tagList.add(TagFromName.PlaneOrientationSequence);
		tagList.add(TagFromName.TemporalPositionIndex);
		tagList.add(TagFromName.NominalCardiacTriggerDelayTime);
		tagList.add(TagFromName.NominalCardiacTriggerTimePriorToRPeak);
		tagList.add(TagFromName.ActualCardiacTriggerTimePriorToRPeak);
		tagList.add(TagFromName.FrameAcquisitionNumber);
		tagList.add(TagFromName.DimensionIndexValues);
		tagList.add(TagFromName.FrameComments);
		tagList.add(TagFromName.ConcatenationUID);
		tagList.add(TagFromName.InConcatenationNumber);
		tagList.add(TagFromName.InConcatenationTotalNumber);
		tagList.add(TagFromName.DimensionOrganizationUID);
		tagList.add(TagFromName.DimensionIndexPointer);
		tagList.add(TagFromName.FunctionalGroupPointer);
		tagList.add(TagFromName.UnassignedSharedConvertedAttributesSequence);
		tagList.add(TagFromName.UnassignedPerFrameConvertedAttributesSequence);
		tagList.add(TagFromName.ConversionSourceAttributesSequence);
		tagList.add(TagFromName.DimensionIndexPrivateCreator);
		tagList.add(TagFromName.DimensionOrganizationSequence);
		tagList.add(TagFromName.DimensionIndexSequence);
		tagList.add(TagFromName.ConcatenationFrameOffsetNumber);
		tagList.add(TagFromName.FunctionalGroupPrivateCreator);
		tagList.add(TagFromName.NominalPercentageOfCardiacPhase);
		tagList.add(TagFromName.NominalPercentageOfRespiratoryPhase);
		tagList.add(TagFromName.StartingRespiratoryAmplitude);
		tagList.add(TagFromName.StartingRespiratoryPhase);
		tagList.add(TagFromName.EndingRespiratoryAmplitude);
		tagList.add(TagFromName.EndingRespiratoryPhase);
		tagList.add(TagFromName.RespiratoryTriggerType);
		tagList.add(TagFromName.RRIntervalTimeNominal);
		tagList.add(TagFromName.ActualCardiacTriggerDelayTime);
		tagList.add(TagFromName.RespiratorySynchronizationSequence);
		tagList.add(TagFromName.RespiratoryIntervalTime);
		tagList.add(TagFromName.NominalRespiratoryTriggerDelayTime);
		tagList.add(TagFromName.RespiratoryTriggerDelayThreshold);
		tagList.add(TagFromName.ActualRespiratoryTriggerDelayTime);
		tagList.add(TagFromName.ImagePositionVolume);
		tagList.add(TagFromName.ImageOrientationVolume);
		tagList.add(TagFromName.UltrasoundAcquisitionGeometry);
		tagList.add(TagFromName.ApexPosition);
		tagList.add(TagFromName.VolumeToTransducerMappingMatrix);
		tagList.add(TagFromName.VolumeToTableMappingMatrix);
		tagList.add(TagFromName.VolumeToTransducerRelationship);
		tagList.add(TagFromName.PatientFrameOfReferenceSource);
		tagList.add(TagFromName.TemporalPositionTimeOffset);
		tagList.add(TagFromName.PlanePositionVolumeSequence);
		tagList.add(TagFromName.PlaneOrientationVolumeSequence);
		tagList.add(TagFromName.TemporalPositionSequence);
		tagList.add(TagFromName.DimensionOrganizationType);
		tagList.add(TagFromName.VolumeFrameOfReferenceUID);
		tagList.add(TagFromName.TableFrameOfReferenceUID);
		tagList.add(TagFromName.DimensionDescriptionLabel);
		tagList.add(TagFromName.PatientOrientationInFrameSequence);
		tagList.add(TagFromName.FrameLabel);
		tagList.add(TagFromName.AcquisitionIndex);
		tagList.add(TagFromName.ContributingSOPInstancesReferenceSequence);
		tagList.add(TagFromName.ReconstructionIndex);
		tagList.add(TagFromName.LightPathFilterPassThroughWavelength);
		tagList.add(TagFromName.LightPathFilterPassBand);
		tagList.add(TagFromName.ImagePathFilterPassThroughWavelength);
		tagList.add(TagFromName.ImagePathFilterPassBand);
		tagList.add(TagFromName.PatientEyeMovementCommanded);
		tagList.add(TagFromName.PatientEyeMovementCommandCodeSequence);
		tagList.add(TagFromName.SphericalLensPower);
		tagList.add(TagFromName.CylinderLensPower);
		tagList.add(TagFromName.CylinderAxis);
		tagList.add(TagFromName.EmmetropicMagnification);
		tagList.add(TagFromName.IntraOcularPressure);
		tagList.add(TagFromName.HorizontalFieldOfView);
		tagList.add(TagFromName.PupilDilated);
		tagList.add(TagFromName.DegreeOfDilation);
		tagList.add(TagFromName.StereoBaselineAngle);
		tagList.add(TagFromName.StereoBaselineDisplacement);
		tagList.add(TagFromName.StereoHorizontalPixelOffset);
		tagList.add(TagFromName.StereoVerticalPixelOffset);
		tagList.add(TagFromName.StereoRotation);
		tagList.add(TagFromName.AcquisitionDeviceTypeCodeSequence);
		tagList.add(TagFromName.IlluminationTypeCodeSequence);
		tagList.add(TagFromName.LightPathFilterTypeStackCodeSequence);
		tagList.add(TagFromName.ImagePathFilterTypeStackCodeSequence);
		tagList.add(TagFromName.LensesCodeSequence);
		tagList.add(TagFromName.ChannelDescriptionCodeSequence);
		tagList.add(TagFromName.RefractiveStateSequence);
		tagList.add(TagFromName.MydriaticAgentCodeSequence);
		tagList.add(TagFromName.RelativeImagePositionCodeSequence);
		tagList.add(TagFromName.CameraAngleOfView);
		tagList.add(TagFromName.StereoPairsSequence);
		tagList.add(TagFromName.LeftImageSequence);
		tagList.add(TagFromName.RightImageSequence);
		tagList.add(TagFromName.StereoPairsPresent);
		tagList.add(TagFromName.AxialLengthOfTheEye);
		tagList.add(TagFromName.OphthalmicFrameLocationSequence);
		tagList.add(TagFromName.ReferenceCoordinates);
		tagList.add(TagFromName.DepthSpatialResolution);
		tagList.add(TagFromName.MaximumDepthDistortion);
		tagList.add(TagFromName.AlongScanSpatialResolution);
		tagList.add(TagFromName.MaximumAlongScanDistortion);
		tagList.add(TagFromName.OphthalmicImageOrientation);
		tagList.add(TagFromName.DepthOfTransverseImage);
		tagList.add(TagFromName.MydriaticAgentConcentrationUnitsSequence);
		tagList.add(TagFromName.AcrossScanSpatialResolution);
		tagList.add(TagFromName.MaximumAcrossScanDistortion);
		tagList.add(TagFromName.MydriaticAgentConcentration);
		tagList.add(TagFromName.IlluminationWaveLength);
		tagList.add(TagFromName.IlluminationPower);
		tagList.add(TagFromName.IlluminationBandwidth);
		tagList.add(TagFromName.MydriaticAgentSequence);
		tagList.add(TagFromName.OphthalmicAxialMeasurementsRightEyeSequence);
		tagList.add(TagFromName.OphthalmicAxialMeasurementsLeftEyeSequence);
		tagList.add(TagFromName.OphthalmicAxialMeasurementsDeviceType);
		tagList.add(TagFromName.OphthalmicAxialLengthMeasurementsType);
		tagList.add(TagFromName.OphthalmicAxialLengthSequence);
		tagList.add(TagFromName.OphthalmicAxialLength);
		tagList.add(TagFromName.LensStatusCodeSequence);
		tagList.add(TagFromName.VitreousStatusCodeSequence);
		tagList.add(TagFromName.IOLFormulaCodeSequence);
		tagList.add(TagFromName.IOLFormulaDetail);
		tagList.add(TagFromName.KeratometerIndex);
		tagList.add(TagFromName.SourceOfOphthalmicAxialLengthCodeSequence);
		tagList.add(TagFromName.TargetRefraction);
		tagList.add(TagFromName.RefractiveProcedureOccurred);
		tagList.add(TagFromName.RefractiveSurgeryTypeCodeSequence);
		tagList.add(TagFromName.OphthalmicUltrasoundMethodCodeSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthMeasurementsSequence);
		tagList.add(TagFromName.IOLPower);
		tagList.add(TagFromName.PredictedRefractiveError);
		tagList.add(TagFromName.OphthalmicAxialLengthVelocity);
		tagList.add(TagFromName.LensStatusDescription);
		tagList.add(TagFromName.VitreousStatusDescription);
		tagList.add(TagFromName.IOLPowerSequence);
		tagList.add(TagFromName.LensConstantSequence);
		tagList.add(TagFromName.IOLManufacturer);
		tagList.add(TagFromName.LensConstantDescription);
		tagList.add(TagFromName.ImplantName);
		tagList.add(TagFromName.KeratometryMeasurementTypeCodeSequence);
		tagList.add(TagFromName.ImplantPartNumber);
		tagList.add(TagFromName.ReferencedOphthalmicAxialMeasurementsSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence);
		tagList.add(TagFromName.RefractiveErrorBeforeRefractiveSurgeryCodeSequence);
		tagList.add(TagFromName.IOLPowerForExactEmmetropia);
		tagList.add(TagFromName.IOLPowerForExactTargetRefraction);
		tagList.add(TagFromName.AnteriorChamberDepthDefinitionCodeSequence);
		tagList.add(TagFromName.LensThicknessSequence);
		tagList.add(TagFromName.AnteriorChamberDepthSequence);
		tagList.add(TagFromName.LensThickness);
		tagList.add(TagFromName.AnteriorChamberDepth);
		tagList.add(TagFromName.SourceOfLensThicknessDataCodeSequence);
		tagList.add(TagFromName.SourceOfAnteriorChamberDepthDataCodeSequence);
		tagList.add(TagFromName.SourceOfRefractiveMeasurementsSequence);
		tagList.add(TagFromName.SourceOfRefractiveMeasurementsCodeSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthMeasurementModified);
		tagList.add(TagFromName.OphthalmicAxialLengthDataSourceCodeSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthAcquisitionMethodCodeSequence);
		tagList.add(TagFromName.SignalToNoiseRatio);
		tagList.add(TagFromName.OphthalmicAxialLengthDataSourceDescription);
		tagList.add(TagFromName.OphthalmicAxialLengthMeasurementsTotalLengthSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthMeasurementsSegmentalLengthSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthMeasurementsLengthSummationSequence);
		tagList.add(TagFromName.UltrasoundOphthalmicAxialLengthMeasurementsSequence);
		tagList.add(TagFromName.OpticalOphthalmicAxialLengthMeasurementsSequence);
		tagList.add(TagFromName.UltrasoundSelectedOphthalmicAxialLengthSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthSelectionMethodCodeSequence);
		tagList.add(TagFromName.OpticalSelectedOphthalmicAxialLengthSequence);
		tagList.add(TagFromName.SelectedSegmentalOphthalmicAxialLengthSequence);
		tagList.add(TagFromName.SelectedTotalOphthalmicAxialLengthSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthQualityMetricSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthQualityMetricTypeCodeSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthQualityMetricTypeDescription);
		tagList.add(TagFromName.IntraocularLensCalculationsRightEyeSequence);
		tagList.add(TagFromName.IntraocularLensCalculationsLeftEyeSequence);
		tagList.add(TagFromName.ReferencedOphthalmicAxialLengthMeasurementQCImageSequence);
		tagList.add(TagFromName.OphthalmicMappingDeviceType);
		tagList.add(TagFromName.AcquisitionMethodCodeSequence);
		tagList.add(TagFromName.AcquisitionMethodAlgorithmSequence);
		tagList.add(TagFromName.OphthalmicThicknessMapTypeCodeSequence);
		tagList.add(TagFromName.OphthalmicThicknessMappingNormalsSequence);
		tagList.add(TagFromName.RetinalThicknessDefinitionCodeSequence);
		tagList.add(TagFromName.PixelValueMappingToCodedConceptSequence);
		tagList.add(TagFromName.MappedPixelValue);
		tagList.add(TagFromName.PixelValueMappingExplanation);
		tagList.add(TagFromName.OphthalmicThicknessMapQualityThresholdSequence);
		tagList.add(TagFromName.OphthalmicThicknessMapThresholdQualityRating);
		tagList.add(TagFromName.AnatomicStructureReferencePoint);
		tagList.add(TagFromName.RegistrationToLocalizerSequence);
		tagList.add(TagFromName.RegisteredLocalizerUnits);
		tagList.add(TagFromName.RegisteredLocalizerTopLeftHandCorner);
		tagList.add(TagFromName.RegisteredLocalizerBottomRightHandCorner);
		tagList.add(TagFromName.OphthalmicThicknessMapQualityRatingSequence);
		tagList.add(TagFromName.RelevantOPTAttributesSequence);
		tagList.add(TagFromName.TransformationMethodCodeSequence);
		tagList.add(TagFromName.TransformationAlgorithmSequence);
		tagList.add(TagFromName.OphthalmicAxialLengthMethod);
		tagList.add(TagFromName.OphthalmicFOV);
		tagList.add(TagFromName.TwoDimensionalToThreeDimensionalMapSequence);
		tagList.add(TagFromName.WideFieldOphthalmicPhotographyQualityRatingSequence);
		tagList.add(TagFromName.WideFieldOphthalmicPhotographyQualityThresholdSequence);
		tagList.add(TagFromName.WideFieldOphthalmicPhotographyThresholdQualityRating);
		tagList.add(TagFromName.XCoordinatesCenterPixelViewAngle);
		tagList.add(TagFromName.YCoordinatesCenterPixelViewAngle);
		tagList.add(TagFromName.NumberOfMapPoints);
		tagList.add(TagFromName.TwoDimensionalToThreeDimensionalMapData);
		tagList.add(TagFromName.DerivationAlgorithmSequence);
		tagList.add(TagFromName.OphthalmicImageTypeCodeSequence);
		tagList.add(TagFromName.OphthalmicImageTypeDescription);
		tagList.add(TagFromName.ScanPatternTypeCodeSequence);
		tagList.add(TagFromName.ReferencedSurfaceMeshIdentificationSequence);
		tagList.add(TagFromName.OphthalmicVolumetricPropertiesFlag);
		tagList.add(TagFromName.OphthalmicAnatomicReferencePointXCoordinate);
		tagList.add(TagFromName.OphthalmicAnatomicReferencePointYCoordinate);
		tagList.add(TagFromName.OphthalmicEnFaceImageQualityRatingSequence);
		tagList.add(TagFromName.QualityThreshold);
		tagList.add(TagFromName.OCTBscanAnalysisAcquisitionParametersSequence);
		tagList.add(TagFromName.NumberofBscansPerFrame);
		tagList.add(TagFromName.BscanSlabThickness);
		tagList.add(TagFromName.DistanceBetweenBscanSlabs);
		tagList.add(TagFromName.BscanCycleTime);
		tagList.add(TagFromName.BscanCycleTimeVector);
		tagList.add(TagFromName.AscanRate);
		tagList.add(TagFromName.BscanRate);
		tagList.add(TagFromName.SurfaceMeshZPixelOffset);
		tagList.add(TagFromName.VisualFieldHorizontalExtent);
		tagList.add(TagFromName.VisualFieldVerticalExtent);
		tagList.add(TagFromName.VisualFieldShape);
		tagList.add(TagFromName.ScreeningTestModeCodeSequence);
		tagList.add(TagFromName.MaximumStimulusLuminance);
		tagList.add(TagFromName.BackgroundLuminance);
		tagList.add(TagFromName.StimulusColorCodeSequence);
		tagList.add(TagFromName.BackgroundIlluminationColorCodeSequence);
		tagList.add(TagFromName.StimulusArea);
		tagList.add(TagFromName.StimulusPresentationTime);
		tagList.add(TagFromName.FixationSequence);
		tagList.add(TagFromName.FixationMonitoringCodeSequence);
		tagList.add(TagFromName.VisualFieldCatchTrialSequence);
		tagList.add(TagFromName.FixationCheckedQuantity);
		tagList.add(TagFromName.PatientNotProperlyFixatedQuantity);
		tagList.add(TagFromName.PresentedVisualStimuliDataFlag);
		tagList.add(TagFromName.NumberOfVisualStimuli);
		tagList.add(TagFromName.ExcessiveFixationLossesDataFlag);
		tagList.add(TagFromName.ExcessiveFixationLosses);
		tagList.add(TagFromName.StimuliRetestingQuantity);
		tagList.add(TagFromName.CommentsOnPatientPerformanceOfVisualField);
		tagList.add(TagFromName.FalseNegativesEstimateFlag);
		tagList.add(TagFromName.FalseNegativesEstimate);
		tagList.add(TagFromName.NegativeCatchTrialsQuantity);
		tagList.add(TagFromName.FalseNegativesQuantity);
		tagList.add(TagFromName.ExcessiveFalseNegativesDataFlag);
		tagList.add(TagFromName.ExcessiveFalseNegatives);
		tagList.add(TagFromName.FalsePositivesEstimateFlag);
		tagList.add(TagFromName.FalsePositivesEstimate);
		tagList.add(TagFromName.CatchTrialsDataFlag);
		tagList.add(TagFromName.PositiveCatchTrialsQuantity);
		tagList.add(TagFromName.TestPointNormalsDataFlag);
		tagList.add(TagFromName.TestPointNormalsSequence);
		tagList.add(TagFromName.GlobalDeviationProbabilityNormalsFlag);
		tagList.add(TagFromName.FalsePositivesQuantity);
		tagList.add(TagFromName.ExcessiveFalsePositivesDataFlag);
		tagList.add(TagFromName.ExcessiveFalsePositives);
		tagList.add(TagFromName.VisualFieldTestNormalsFlag);
		tagList.add(TagFromName.ResultsNormalsSequence);
		tagList.add(TagFromName.AgeCorrectedSensitivityDeviationAlgorithmSequence);
		tagList.add(TagFromName.GlobalDeviationFromNormal);
		tagList.add(TagFromName.GeneralizedDefectSensitivityDeviationAlgorithmSequence);
		tagList.add(TagFromName.LocalizedDeviationFromNormal);
		tagList.add(TagFromName.PatientReliabilityIndicator);
		tagList.add(TagFromName.VisualFieldMeanSensitivity);
		tagList.add(TagFromName.GlobalDeviationProbability);
		tagList.add(TagFromName.LocalDeviationProbabilityNormalsFlag);
		tagList.add(TagFromName.LocalizedDeviationProbability);
		tagList.add(TagFromName.ShortTermFluctuationCalculated);
		tagList.add(TagFromName.ShortTermFluctuation);
		tagList.add(TagFromName.ShortTermFluctuationProbabilityCalculated);
		tagList.add(TagFromName.ShortTermFluctuationProbability);
		tagList.add(TagFromName.CorrectedLocalizedDeviationFromNormalCalculated);
		tagList.add(TagFromName.CorrectedLocalizedDeviationFromNormal);
		tagList.add(TagFromName.CorrectedLocalizedDeviationFromNormalProbabilityCalculated);
		tagList.add(TagFromName.CorrectedLocalizedDeviationFromNormalProbability);
		tagList.add(TagFromName.GlobalDeviationProbabilitySequence);
		tagList.add(TagFromName.LocalizedDeviationProbabilitySequence);
		tagList.add(TagFromName.FovealSensitivityMeasured);
		tagList.add(TagFromName.FovealSensitivity);
		tagList.add(TagFromName.VisualFieldTestDuration);
		tagList.add(TagFromName.VisualFieldTestPointSequence);
		tagList.add(TagFromName.VisualFieldTestPointXCoordinate);
		tagList.add(TagFromName.VisualFieldTestPointYCoordinate);
		tagList.add(TagFromName.AgeCorrectedSensitivityDeviationValue);
		tagList.add(TagFromName.StimulusResults);
		tagList.add(TagFromName.SensitivityValue);
		tagList.add(TagFromName.RetestStimulusSeen);
		tagList.add(TagFromName.RetestSensitivityValue);
		tagList.add(TagFromName.VisualFieldTestPointNormalsSequence);
		tagList.add(TagFromName.QuantifiedDefect);
		tagList.add(TagFromName.AgeCorrectedSensitivityDeviationProbabilityValue);
		tagList.add(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationFlag);
		tagList.add(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationValue);
		tagList.add(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue);
		tagList.add(TagFromName.MinimumSensitivityValue);
		tagList.add(TagFromName.BlindSpotLocalized);
		tagList.add(TagFromName.BlindSpotXCoordinate);
		tagList.add(TagFromName.BlindSpotYCoordinate);
		tagList.add(TagFromName.VisualAcuityMeasurementSequence);
		tagList.add(TagFromName.RefractiveParametersUsedOnPatientSequence);
		tagList.add(TagFromName.MeasurementLaterality);
		tagList.add(TagFromName.OphthalmicPatientClinicalInformationLeftEyeSequence);
		tagList.add(TagFromName.OphthalmicPatientClinicalInformationRightEyeSequence);
		tagList.add(TagFromName.FovealPointNormativeDataFlag);
		tagList.add(TagFromName.FovealPointProbabilityValue);
		tagList.add(TagFromName.ScreeningBaselineMeasured);
		tagList.add(TagFromName.ScreeningBaselineMeasuredSequence);
		tagList.add(TagFromName.ScreeningBaselineType);
		tagList.add(TagFromName.ScreeningBaselineValue);
		tagList.add(TagFromName.AlgorithmSource);
		tagList.add(TagFromName.DataSetName);
		tagList.add(TagFromName.DataSetVersion);
		tagList.add(TagFromName.DataSetSource);
		tagList.add(TagFromName.DataSetDescription);
		tagList.add(TagFromName.VisualFieldTestReliabilityGlobalIndexSequence);
		tagList.add(TagFromName.VisualFieldGlobalResultsIndexSequence);
		tagList.add(TagFromName.DataObservationSequence);
		tagList.add(TagFromName.IndexNormalsFlag);
		tagList.add(TagFromName.IndexProbability);
		tagList.add(TagFromName.IndexProbabilitySequence);
		tagList.add(TagFromName.SamplesPerPixel);
		tagList.add(TagFromName.SamplesPerPixelUsed);
		tagList.add(TagFromName.PhotometricInterpretation);
		tagList.add(TagFromName.ImageDimensions);
		tagList.add(TagFromName.PlanarConfiguration);
		tagList.add(TagFromName.NumberOfFrames);
		tagList.add(TagFromName.FrameIncrementPointer);
		tagList.add(TagFromName.FrameDimensionPointer);
		tagList.add(TagFromName.Rows);
		tagList.add(TagFromName.Columns);
		tagList.add(TagFromName.Planes);
		tagList.add(TagFromName.UltrasoundColorDataPresent);
		tagList.add(TagFromName.PixelSpacing);
		tagList.add(TagFromName.ZoomFactor);
		tagList.add(TagFromName.ZoomCenter);
		tagList.add(TagFromName.PixelAspectRatio);
		tagList.add(TagFromName.ImageFormat);
		tagList.add(TagFromName.ManipulatedImage);
		tagList.add(TagFromName.CorrectedImage);
		tagList.add(TagFromName.CompressionRecognitionCode);
		tagList.add(TagFromName.CompressionCode);
		tagList.add(TagFromName.CompressionOriginator);
		tagList.add(TagFromName.CompressionLabel);
		tagList.add(TagFromName.CompressionDescription);
		tagList.add(TagFromName.CompressionSequence);
		tagList.add(TagFromName.CompressionStepPointers);
		tagList.add(TagFromName.RepeatInterval);
		tagList.add(TagFromName.BitsGrouped);
		tagList.add(TagFromName.PerimeterTable);
		tagList.add(TagFromName.PerimeterValue);
		tagList.add(TagFromName.PredictorRows);
		tagList.add(TagFromName.PredictorColumns);
		tagList.add(TagFromName.PredictorConstants);
		tagList.add(TagFromName.BlockedPixels);
		tagList.add(TagFromName.BlockRows);
		tagList.add(TagFromName.BlockColumns);
		tagList.add(TagFromName.RowOverlap);
		tagList.add(TagFromName.ColumnOverlap);
		tagList.add(TagFromName.BitsAllocated);
		tagList.add(TagFromName.BitsStored);
		tagList.add(TagFromName.HighBit);
		tagList.add(TagFromName.PixelRepresentation);
		tagList.add(TagFromName.SmallestValidPixelValue);
		tagList.add(TagFromName.LargestValidPixelValue);
		tagList.add(TagFromName.SmallestImagePixelValue);
		tagList.add(TagFromName.LargestImagePixelValue);
		tagList.add(TagFromName.SmallestPixelValueInSeries);
		tagList.add(TagFromName.LargestPixelValueInSeries);
		tagList.add(TagFromName.SmallestImagePixelValueInPlane);
		tagList.add(TagFromName.LargestImagePixelValueInPlane);
		tagList.add(TagFromName.PixelPaddingValue);
		tagList.add(TagFromName.PixelPaddingRangeLimit);
		tagList.add(TagFromName.FloatPixelPaddingValue);
		tagList.add(TagFromName.DoubleFloatPixelPaddingValue);
		tagList.add(TagFromName.FloatPixelPaddingRangeLimit);
		tagList.add(TagFromName.DoubleFloatPixelPaddingRangeLimit);
		tagList.add(TagFromName.ImageLocation);
		tagList.add(TagFromName.QualityControlImage);
		tagList.add(TagFromName.BurnedInAnnotation);
		tagList.add(TagFromName.RecognizableVisualFeatures);
		tagList.add(TagFromName.LongitudinalTemporalInformationModified);
		tagList.add(TagFromName.ReferencedColorPaletteInstanceUID);
		tagList.add(TagFromName.TransformLabel);
		tagList.add(TagFromName.TransformVersionNumber);
		tagList.add(TagFromName.NumberOfTransformSteps);
		tagList.add(TagFromName.SequenceOfCompressedData);
		tagList.add(TagFromName.DetailsOfCoefficients);
		tagList.add(TagFromName.DCTLabel);
		tagList.add(TagFromName.DataBlockDescription);
		tagList.add(TagFromName.DataBlock);
		tagList.add(TagFromName.NormalizationFactorFormat);
		tagList.add(TagFromName.ZonalMapNumberFormat);
		tagList.add(TagFromName.ZonalMapLocation);
		tagList.add(TagFromName.ZonalMapFormat);
		tagList.add(TagFromName.AdaptiveMapFormat);
		tagList.add(TagFromName.CodeNumberFormat);
		tagList.add(TagFromName.PixelSpacingCalibrationType);
		tagList.add(TagFromName.PixelSpacingCalibrationDescription);
		tagList.add(TagFromName.PixelIntensityRelationship);
		tagList.add(TagFromName.PixelIntensityRelationshipSign);
		tagList.add(TagFromName.WindowCenter);
		tagList.add(TagFromName.WindowWidth);
		tagList.add(TagFromName.RescaleIntercept);
		tagList.add(TagFromName.RescaleSlope);
		tagList.add(TagFromName.RescaleType);
		tagList.add(TagFromName.WindowCenterWidthExplanation);
		tagList.add(TagFromName.VOILUTFunction);
		tagList.add(TagFromName.GrayScale);
		tagList.add(TagFromName.RecommendedViewingMode);
		tagList.add(TagFromName.GrayLookupTableDescriptor);
		tagList.add(TagFromName.RedPaletteColorLookupTableDescriptor);
		tagList.add(TagFromName.GreenPaletteColorLookupTableDescriptor);
		tagList.add(TagFromName.BluePaletteColorLookupTableDescriptor);
		tagList.add(TagFromName.AlphaPaletteColorLookupTableDescriptor);
		tagList.add(TagFromName.LargeRedPaletteColorLookupTableDescriptor);
		tagList.add(TagFromName.LargeGreenPaletteColorLookupTableDescriptor);
		tagList.add(TagFromName.LargeBluePaletteColorLookupTableDescriptor);
		tagList.add(TagFromName.PaletteColorLookupTableUID);
		tagList.add(TagFromName.GrayLookupTableData);
		tagList.add(TagFromName.RedPaletteColorLookupTableData);
		tagList.add(TagFromName.GreenPaletteColorLookupTableData);
		tagList.add(TagFromName.BluePaletteColorLookupTableData);
		tagList.add(TagFromName.AlphaPaletteColorLookupTableData);
		tagList.add(TagFromName.LargeRedPaletteColorLookupTableData);
		tagList.add(TagFromName.LargeGreenPaletteColorLookupTableData);
		tagList.add(TagFromName.LargeBluePaletteColorLookupTableData);
		tagList.add(TagFromName.LargePaletteColorLookupTableUID);
		tagList.add(TagFromName.SegmentedRedPaletteColorLookupTableData);
		tagList.add(TagFromName.SegmentedGreenPaletteColorLookupTableData);
		tagList.add(TagFromName.SegmentedBluePaletteColorLookupTableData);
		tagList.add(TagFromName.SegmentedAlphaPaletteColorLookupTableData);
		tagList.add(TagFromName.StoredValueColorRangeSequence);
		tagList.add(TagFromName.MinimumStoredValueMapped);
		tagList.add(TagFromName.MaximumStoredValueMapped);
		tagList.add(TagFromName.BreastImplantPresent);
		tagList.add(TagFromName.PartialView);
		tagList.add(TagFromName.PartialViewDescription);
		tagList.add(TagFromName.PartialViewCodeSequence);
		tagList.add(TagFromName.SpatialLocationsPreserved);
		tagList.add(TagFromName.DataFrameAssignmentSequence);
		tagList.add(TagFromName.DataPathAssignment);
		tagList.add(TagFromName.BitsMappedToColorLookupTable);
		tagList.add(TagFromName.BlendingLUT1Sequence);
		tagList.add(TagFromName.BlendingLUT1TransferFunction);
		tagList.add(TagFromName.BlendingWeightConstant);
		tagList.add(TagFromName.BlendingLookupTableDescriptor);
		tagList.add(TagFromName.BlendingLookupTableData);
		tagList.add(TagFromName.EnhancedPaletteColorLookupTableSequence);
		tagList.add(TagFromName.BlendingLUT2Sequence);
		tagList.add(TagFromName.BlendingLUT2TransferFunction);
		tagList.add(TagFromName.DataPathID);
		tagList.add(TagFromName.RGBLUTTransferFunction);
		tagList.add(TagFromName.AlphaLUTTransferFunction);
		tagList.add(TagFromName.ICCProfile);
		tagList.add(TagFromName.ColorSpace);
		tagList.add(TagFromName.LossyImageCompression);
		tagList.add(TagFromName.LossyImageCompressionRatio);
		tagList.add(TagFromName.LossyImageCompressionMethod);
		tagList.add(TagFromName.ModalityLUTSequence);
		tagList.add(TagFromName.LUTDescriptor);
		tagList.add(TagFromName.LUTExplanation);
		tagList.add(TagFromName.ModalityLUTType);
		tagList.add(TagFromName.LUTData);
		tagList.add(TagFromName.VOILUTSequence);
		tagList.add(TagFromName.SoftcopyVOILUTSequence);
		tagList.add(TagFromName.ImagePresentationComments);
		tagList.add(TagFromName.BiPlaneAcquisitionSequence);
		tagList.add(TagFromName.RepresentativeFrameNumber);
		tagList.add(TagFromName.FrameNumbersOfInterest);
		tagList.add(TagFromName.FrameOfInterestDescription);
		tagList.add(TagFromName.FrameOfInterestType);
		tagList.add(TagFromName.MaskPointers);
		tagList.add(TagFromName.RWavePointer);
		tagList.add(TagFromName.MaskSubtractionSequence);
		tagList.add(TagFromName.MaskOperation);
		tagList.add(TagFromName.ApplicableFrameRange);
		tagList.add(TagFromName.MaskFrameNumbers);
		tagList.add(TagFromName.ContrastFrameAveraging);
		tagList.add(TagFromName.MaskSubPixelShift);
		tagList.add(TagFromName.TIDOffset);
		tagList.add(TagFromName.MaskOperationExplanation);
		tagList.add(TagFromName.EquipmentAdministratorSequence);
		tagList.add(TagFromName.NumberOfDisplaySubsystems);
		tagList.add(TagFromName.CurrentConfigurationID);
		tagList.add(TagFromName.DisplaySystemID);
		tagList.add(TagFromName.DisplaySubsystemName);
		tagList.add(TagFromName.DisplaySubsystemDescription);
		tagList.add(TagFromName.SystemStatus);
		tagList.add(TagFromName.SystemStatusComment);
		tagList.add(TagFromName.TargetLuminanceCharacteristicsSequence);
		tagList.add(TagFromName.LuminanceCharacteristicsID);
		tagList.add(TagFromName.DisplaySubsystemConfigurationSequence);
		tagList.add(TagFromName.ConfigurationID);
		tagList.add(TagFromName.ConfigurationName);
		tagList.add(TagFromName.ConfigurationDescription);
		tagList.add(TagFromName.ReferencedTargetLuminanceCharacteristicsID);
		tagList.add(TagFromName.QAResultsSequence);
		tagList.add(TagFromName.DisplaySubsystemQAResultsSequence);
		tagList.add(TagFromName.ConfigurationQAResultsSequence);
		tagList.add(TagFromName.MeasurementEquipmentSequence);
		tagList.add(TagFromName.MeasurementFunctions);
		tagList.add(TagFromName.MeasurementEquipmentType);
		tagList.add(TagFromName.VisualEvaluationResultSequence);
		tagList.add(TagFromName.DisplayCalibrationResultSequence);
		tagList.add(TagFromName.DDLValue);
		tagList.add(TagFromName.CIExyWhitePoint);
		tagList.add(TagFromName.DisplayFunctionType);
		tagList.add(TagFromName.GammaValue);
		tagList.add(TagFromName.NumberOfLuminancePoints);
		tagList.add(TagFromName.LuminanceResponseSequence);
		tagList.add(TagFromName.TargetMinimumLuminance);
		tagList.add(TagFromName.TargetMaximumLuminance);
		tagList.add(TagFromName.LuminanceValue);
		tagList.add(TagFromName.LuminanceResponseDescription);
		tagList.add(TagFromName.WhitePointFlag);
		tagList.add(TagFromName.DisplayDeviceTypeCodeSequence);
		tagList.add(TagFromName.DisplaySubsystemSequence);
		tagList.add(TagFromName.LuminanceResultSequence);
		tagList.add(TagFromName.AmbientLightValueSource);
		tagList.add(TagFromName.MeasuredCharacteristics);
		tagList.add(TagFromName.LuminanceUniformityResultSequence);
		tagList.add(TagFromName.VisualEvaluationTestSequence);
		tagList.add(TagFromName.TestResult);
		tagList.add(TagFromName.TestResultComment);
		tagList.add(TagFromName.TestImageValidation);
		tagList.add(TagFromName.TestPatternCodeSequence);
		tagList.add(TagFromName.MeasurementPatternCodeSequence);
		tagList.add(TagFromName.VisualEvaluationMethodCodeSequence);
		tagList.add(TagFromName.PixelDataProviderURL);
		tagList.add(TagFromName.DataPointRows);
		tagList.add(TagFromName.DataPointColumns);
		tagList.add(TagFromName.SignalDomainColumns);
		tagList.add(TagFromName.LargestMonochromePixelValue);
		tagList.add(TagFromName.DataRepresentation);
		tagList.add(TagFromName.PixelMeasuresSequence);
		tagList.add(TagFromName.FrameVOILUTSequence);
		tagList.add(TagFromName.PixelValueTransformationSequence);
		tagList.add(TagFromName.SignalDomainRows);
		tagList.add(TagFromName.DisplayFilterPercentage);
		tagList.add(TagFromName.FramePixelShiftSequence);
		tagList.add(TagFromName.SubtractionItemID);
		tagList.add(TagFromName.PixelIntensityRelationshipLUTSequence);
		tagList.add(TagFromName.FramePixelDataPropertiesSequence);
		tagList.add(TagFromName.GeometricalProperties);
		tagList.add(TagFromName.GeometricMaximumDistortion);
		tagList.add(TagFromName.ImageProcessingApplied);
		tagList.add(TagFromName.MaskSelectionMode);
		tagList.add(TagFromName.LUTFunction);
		tagList.add(TagFromName.MaskVisibilityPercentage);
		tagList.add(TagFromName.PixelShiftSequence);
		tagList.add(TagFromName.RegionPixelShiftSequence);
		tagList.add(TagFromName.VerticesOfTheRegion);
		tagList.add(TagFromName.MultiFramePresentationSequence);
		tagList.add(TagFromName.PixelShiftFrameRange);
		tagList.add(TagFromName.LUTFrameRange);
		tagList.add(TagFromName.ImageToEquipmentMappingMatrix);
		tagList.add(TagFromName.EquipmentCoordinateSystemIdentification);
		tagList.add(TagFromName.StudyStatusID);
		tagList.add(TagFromName.StudyPriorityID);
		tagList.add(TagFromName.StudyIDIssuer);
		tagList.add(TagFromName.StudyVerifiedDate);
		tagList.add(TagFromName.StudyVerifiedTime);
		tagList.add(TagFromName.StudyReadDate);
		tagList.add(TagFromName.StudyReadTime);
		tagList.add(TagFromName.ScheduledStudyStartDate);
		tagList.add(TagFromName.ScheduledStudyStartTime);
		tagList.add(TagFromName.ScheduledStudyStopDate);
		tagList.add(TagFromName.ScheduledStudyStopTime);
		tagList.add(TagFromName.ScheduledStudyLocation);
		tagList.add(TagFromName.ScheduledStudyLocationAETitle);
		tagList.add(TagFromName.ReasonForStudy);
		tagList.add(TagFromName.RequestingPhysicianIdentificationSequence);
		tagList.add(TagFromName.RequestingPhysician);
		tagList.add(TagFromName.RequestingService);
		tagList.add(TagFromName.RequestingServiceCodeSequence);
		tagList.add(TagFromName.StudyArrivalDate);
		tagList.add(TagFromName.StudyArrivalTime);
		tagList.add(TagFromName.StudyCompletionDate);
		tagList.add(TagFromName.StudyCompletionTime);
		tagList.add(TagFromName.StudyComponentStatusID);
		tagList.add(TagFromName.RequestedProcedureDescription);
		tagList.add(TagFromName.RequestedProcedureCodeSequence);
		tagList.add(TagFromName.RequestedContrastAgent);
		tagList.add(TagFromName.StudyComments);
		tagList.add(TagFromName.ReferencedPatientAliasSequence);
		tagList.add(TagFromName.VisitStatusID);
		tagList.add(TagFromName.AdmissionID);
		tagList.add(TagFromName.IssuerOfAdmissionID);
		tagList.add(TagFromName.IssuerOfAdmissionIDSequence);
		tagList.add(TagFromName.RouteOfAdmissions);
		tagList.add(TagFromName.ScheduledAdmissionDate);
		tagList.add(TagFromName.ScheduledAdmissionTime);
		tagList.add(TagFromName.ScheduledDischargeDate);
		tagList.add(TagFromName.ScheduledDischargeTime);
		tagList.add(TagFromName.ScheduledPatientInstitutionResidence);
		tagList.add(TagFromName.AdmittingDate);
		tagList.add(TagFromName.AdmittingTime);
		tagList.add(TagFromName.DischargeDate);
		tagList.add(TagFromName.DischargeTime);
		tagList.add(TagFromName.DischargeDiagnosisDescription);
		tagList.add(TagFromName.DischargeDiagnosisCodeSequence);
		tagList.add(TagFromName.SpecialNeeds);
		tagList.add(TagFromName.ServiceEpisodeID);
		tagList.add(TagFromName.IssuerOfServiceEpisodeID);
		tagList.add(TagFromName.ServiceEpisodeDescription);
		tagList.add(TagFromName.IssuerOfServiceEpisodeIDSequence);
		tagList.add(TagFromName.PertinentDocumentsSequence);
		tagList.add(TagFromName.PertinentResourcesSequence);
		tagList.add(TagFromName.ResourceDescription);
		tagList.add(TagFromName.CurrentPatientLocation);
		tagList.add(TagFromName.PatientInstitutionResidence);
		tagList.add(TagFromName.PatientState);
		tagList.add(TagFromName.PatientClinicalTrialParticipationSequence);
		tagList.add(TagFromName.VisitComments);
		tagList.add(TagFromName.WaveformOriginality);
		tagList.add(TagFromName.NumberOfWaveformChannels);
		tagList.add(TagFromName.NumberOfWaveformSamples);
		tagList.add(TagFromName.SamplingFrequency);
		tagList.add(TagFromName.MultiplexGroupLabel);
		tagList.add(TagFromName.ChannelDefinitionSequence);
		tagList.add(TagFromName.WaveformChannelNumber);
		tagList.add(TagFromName.ChannelLabel);
		tagList.add(TagFromName.ChannelStatus);
		tagList.add(TagFromName.ChannelSourceSequence);
		tagList.add(TagFromName.ChannelSourceModifiersSequence);
		tagList.add(TagFromName.SourceWaveformSequence);
		tagList.add(TagFromName.ChannelDerivationDescription);
		tagList.add(TagFromName.ChannelSensitivity);
		tagList.add(TagFromName.ChannelSensitivityUnitsSequence);
		tagList.add(TagFromName.ChannelSensitivityCorrectionFactor);
		tagList.add(TagFromName.ChannelBaseline);
		tagList.add(TagFromName.ChannelTimeSkew);
		tagList.add(TagFromName.ChannelSampleSkew);
		tagList.add(TagFromName.ChannelOffset);
		tagList.add(TagFromName.WaveformBitsStored);
		tagList.add(TagFromName.FilterLowFrequency);
		tagList.add(TagFromName.FilterHighFrequency);
		tagList.add(TagFromName.NotchFilterFrequency);
		tagList.add(TagFromName.NotchFilterBandwidth);
		tagList.add(TagFromName.WaveformDataDisplayScale);
		tagList.add(TagFromName.WaveformDisplayBackgroundCIELabValue);
		tagList.add(TagFromName.WaveformPresentationGroupSequence);
		tagList.add(TagFromName.PresentationGroupNumber);
		tagList.add(TagFromName.ChannelDisplaySequence);
		tagList.add(TagFromName.ChannelRecommendedDisplayCIELabValue);
		tagList.add(TagFromName.ChannelPosition);
		tagList.add(TagFromName.DisplayShadingFlag);
		tagList.add(TagFromName.FractionalChannelDisplayScale);
		tagList.add(TagFromName.AbsoluteChannelDisplayScale);
		tagList.add(TagFromName.MultiplexedAudioChannelsDescriptionCodeSequence);
		tagList.add(TagFromName.ChannelIdentificationCode);
		tagList.add(TagFromName.ChannelMode);
		tagList.add(TagFromName.ScheduledStationAETitle);
		tagList.add(TagFromName.ScheduledProcedureStepStartDate);
		tagList.add(TagFromName.ScheduledProcedureStepStartTime);
		tagList.add(TagFromName.ScheduledProcedureStepEndDate);
		tagList.add(TagFromName.ScheduledProcedureStepEndTime);
		tagList.add(TagFromName.ScheduledPerformingPhysicianName);
		tagList.add(TagFromName.ScheduledProcedureStepDescription);
		tagList.add(TagFromName.ScheduledProtocolCodeSequence);
		tagList.add(TagFromName.ScheduledProcedureStepID);
		tagList.add(TagFromName.StageCodeSequence);
		tagList.add(TagFromName.ScheduledPerformingPhysicianIdentificationSequence);
		tagList.add(TagFromName.ScheduledStationName);
		tagList.add(TagFromName.ScheduledProcedureStepLocation);
		tagList.add(TagFromName.PreMedication);
		tagList.add(TagFromName.ScheduledProcedureStepStatus);
		tagList.add(TagFromName.OrderPlacerIdentifierSequence);
		tagList.add(TagFromName.OrderFillerIdentifierSequence);
		tagList.add(TagFromName.LocalNamespaceEntityID);
		tagList.add(TagFromName.UniversalEntityID);
		tagList.add(TagFromName.UniversalEntityIDType);
		tagList.add(TagFromName.IdentifierTypeCode);
		tagList.add(TagFromName.AssigningFacilitySequence);
		tagList.add(TagFromName.AssigningJurisdictionCodeSequence);
		tagList.add(TagFromName.AssigningAgencyOrDepartmentCodeSequence);
		tagList.add(TagFromName.ScheduledProcedureStepSequence);
		tagList.add(TagFromName.ReferencedNonImageCompositeSOPInstanceSequence);
		tagList.add(TagFromName.PerformedStationAETitle);
		tagList.add(TagFromName.PerformedStationName);
		tagList.add(TagFromName.PerformedLocation);
		tagList.add(TagFromName.PerformedProcedureStepStartDate);
		tagList.add(TagFromName.PerformedProcedureStepStartTime);
		tagList.add(TagFromName.PerformedProcedureStepEndDate);
		tagList.add(TagFromName.PerformedProcedureStepEndTime);
		tagList.add(TagFromName.PerformedProcedureStepStatus);
		tagList.add(TagFromName.PerformedProcedureStepID);
		tagList.add(TagFromName.PerformedProcedureStepDescription);
		tagList.add(TagFromName.PerformedProcedureTypeDescription);
		tagList.add(TagFromName.PerformedProtocolCodeSequence);
		tagList.add(TagFromName.PerformedProtocolType);
		tagList.add(TagFromName.ScheduledStepAttributesSequence);
		tagList.add(TagFromName.RequestAttributesSequence);
		tagList.add(TagFromName.CommentsOnThePerformedProcedureStep);
		tagList.add(TagFromName.PerformedProcedureStepDiscontinuationReasonCodeSequence);
		tagList.add(TagFromName.QuantitySequence);
		tagList.add(TagFromName.Quantity);
		tagList.add(TagFromName.MeasuringUnitsSequence);
		tagList.add(TagFromName.BillingItemSequence);
		tagList.add(TagFromName.TotalTimeOfFluoroscopy);
		tagList.add(TagFromName.TotalNumberOfExposures);
		tagList.add(TagFromName.EntranceDose);
		tagList.add(TagFromName.ExposedArea);
		tagList.add(TagFromName.DistanceSourceToEntrance);
		tagList.add(TagFromName.DistanceSourceToSupport);
		tagList.add(TagFromName.ExposureDoseSequence);
		tagList.add(TagFromName.CommentsOnRadiationDose);
		tagList.add(TagFromName.XRayOutput);
		tagList.add(TagFromName.HalfValueLayer);
		tagList.add(TagFromName.OrganDose);
		tagList.add(TagFromName.OrganExposed);
		tagList.add(TagFromName.BillingProcedureStepSequence);
		tagList.add(TagFromName.FilmConsumptionSequence);
		tagList.add(TagFromName.BillingSuppliesAndDevicesSequence);
		tagList.add(TagFromName.ReferencedProcedureStepSequence);
		tagList.add(TagFromName.PerformedSeriesSequence);
		tagList.add(TagFromName.CommentsOnTheScheduledProcedureStep);
		tagList.add(TagFromName.ProtocolContextSequence);
		tagList.add(TagFromName.ContentItemModifierSequence);
		tagList.add(TagFromName.ScheduledSpecimenSequence);
		tagList.add(TagFromName.SpecimenAccessionNumber);
		tagList.add(TagFromName.ContainerIdentifier);
		tagList.add(TagFromName.IssuerOfTheContainerIdentifierSequence);
		tagList.add(TagFromName.AlternateContainerIdentifierSequence);
		tagList.add(TagFromName.ContainerTypeCodeSequence);
		tagList.add(TagFromName.ContainerDescription);
		tagList.add(TagFromName.ContainerComponentSequence);
		tagList.add(TagFromName.SpecimenSequence);
		tagList.add(TagFromName.SpecimenIdentifier);
		tagList.add(TagFromName.SpecimenDescriptionSequenceTrial);
		tagList.add(TagFromName.SpecimenDescriptionTrial);
		tagList.add(TagFromName.SpecimenUID);
		tagList.add(TagFromName.AcquisitionContextSequence);
		tagList.add(TagFromName.AcquisitionContextDescription);
		tagList.add(TagFromName.SpecimenDescriptionSequence);
		tagList.add(TagFromName.IssuerOfTheSpecimenIdentifierSequence);
		tagList.add(TagFromName.SpecimenTypeCodeSequence);
		tagList.add(TagFromName.SpecimenShortDescription);
		tagList.add(TagFromName.SpecimenDetailedDescription);
		tagList.add(TagFromName.SpecimenPreparationSequence);
		tagList.add(TagFromName.SpecimenPreparationStepContentItemSequence);
		tagList.add(TagFromName.SpecimenLocalizationContentItemSequence);
		tagList.add(TagFromName.SlideIdentifier);
		tagList.add(TagFromName.WholeSlideMicroscopyImageFrameTypeSequence);
		tagList.add(TagFromName.ImageCenterPointCoordinatesSequence);
		tagList.add(TagFromName.XOffsetInSlideCoordinateSystem);
		tagList.add(TagFromName.YOffsetInSlideCoordinateSystem);
		tagList.add(TagFromName.ZOffsetInSlideCoordinateSystem);
		tagList.add(TagFromName.PixelSpacingSequence);
		tagList.add(TagFromName.CoordinateSystemAxisCodeSequence);
		tagList.add(TagFromName.MeasurementUnitsCodeSequence);
		tagList.add(TagFromName.VitalStainCodeSequenceTrial);
		tagList.add(TagFromName.RequestedProcedureID);
		tagList.add(TagFromName.ReasonForTheRequestedProcedure);
		tagList.add(TagFromName.RequestedProcedurePriority);
		tagList.add(TagFromName.PatientTransportArrangements);
		tagList.add(TagFromName.RequestedProcedureLocation);
		tagList.add(TagFromName.PlacerOrderNumberProcedure);
		tagList.add(TagFromName.FillerOrderNumberProcedure);
		tagList.add(TagFromName.ConfidentialityCode);
		tagList.add(TagFromName.ReportingPriority);
		tagList.add(TagFromName.ReasonForRequestedProcedureCodeSequence);
		tagList.add(TagFromName.NamesOfIntendedRecipientsOfResults);
		tagList.add(TagFromName.IntendedRecipientsOfResultsIdentificationSequence);
		tagList.add(TagFromName.ReasonForPerformedProcedureCodeSequence);
		tagList.add(TagFromName.RequestedProcedureDescriptionTrial);
		tagList.add(TagFromName.PersonIdentificationCodeSequence);
		tagList.add(TagFromName.PersonAddress);
		tagList.add(TagFromName.PersonTelephoneNumbers);
		tagList.add(TagFromName.PersonTelecomInformation);
		tagList.add(TagFromName.RequestedProcedureComments);
		tagList.add(TagFromName.ReasonForTheImagingServiceRequest);
		tagList.add(TagFromName.IssueDateOfImagingServiceRequest);
		tagList.add(TagFromName.IssueTimeOfImagingServiceRequest);
		tagList.add(TagFromName.PlacerOrderNumberImagingServiceRequestRetired);
		tagList.add(TagFromName.FillerOrderNumberImagingServiceRequestRetired);
		tagList.add(TagFromName.OrderEnteredBy);
		tagList.add(TagFromName.OrderEntererLocation);
		tagList.add(TagFromName.OrderCallbackPhoneNumber);
		tagList.add(TagFromName.OrderCallbackTelecomInformation);
		tagList.add(TagFromName.PlacerOrderNumberImagingServiceRequest);
		tagList.add(TagFromName.FillerOrderNumberImagingServiceRequest);
		tagList.add(TagFromName.ImagingServiceRequestComments);
		tagList.add(TagFromName.ConfidentialityConstraintOnPatientDataDescription);
		tagList.add(TagFromName.GeneralPurposeScheduledProcedureStepStatus);
		tagList.add(TagFromName.GeneralPurposePerformedProcedureStepStatus);
		tagList.add(TagFromName.GeneralPurposeScheduledProcedureStepPriority);
		tagList.add(TagFromName.ScheduledProcessingApplicationsCodeSequence);
		tagList.add(TagFromName.ScheduledProcedureStepStartDateTime);
		tagList.add(TagFromName.MultipleCopiesFlag);
		tagList.add(TagFromName.PerformedProcessingApplicationsCodeSequence);
		tagList.add(TagFromName.ScheduledProcedureStepExpirationDateTime);
		tagList.add(TagFromName.HumanPerformerCodeSequence);
		tagList.add(TagFromName.ScheduledProcedureStepModificationDateTime);
		tagList.add(TagFromName.ExpectedCompletionDateTime);
		tagList.add(TagFromName.ResultingGeneralPurposePerformedProcedureStepsSequence);
		tagList.add(TagFromName.ReferencedGeneralPurposeScheduledProcedureStepSequence);
		tagList.add(TagFromName.ScheduledWorkitemCodeSequence);
		tagList.add(TagFromName.PerformedWorkitemCodeSequence);
		tagList.add(TagFromName.InputAvailabilityFlag);
		tagList.add(TagFromName.InputInformationSequence);
		tagList.add(TagFromName.RelevantInformationSequence);
		tagList.add(TagFromName.ReferencedGeneralPurposeScheduledProcedureStepTransactionUID);
		tagList.add(TagFromName.ScheduledStationNameCodeSequence);
		tagList.add(TagFromName.ScheduledStationClassCodeSequence);
		tagList.add(TagFromName.ScheduledStationGeographicLocationCodeSequence);
		tagList.add(TagFromName.PerformedStationNameCodeSequence);
		tagList.add(TagFromName.PerformedStationClassCodeSequence);
		tagList.add(TagFromName.PerformedStationGeographicLocationCodeSequence);
		tagList.add(TagFromName.RequestedSubsequentWorkitemCodeSequence);
		tagList.add(TagFromName.NonDICOMOutputCodeSequence);
		tagList.add(TagFromName.OutputInformationSequence);
		tagList.add(TagFromName.ScheduledHumanPerformersSequence);
		tagList.add(TagFromName.ActualHumanPerformersSequence);
		tagList.add(TagFromName.HumanPerformerOrganization);
		tagList.add(TagFromName.HumanPerformerName);
		tagList.add(TagFromName.RawDataHandling);
		tagList.add(TagFromName.InputReadinessState);
		tagList.add(TagFromName.PerformedProcedureStepStartDateTime);
		tagList.add(TagFromName.PerformedProcedureStepEndDateTime);
		tagList.add(TagFromName.ProcedureStepCancellationDateTime);
		tagList.add(TagFromName.OutputDestinationSequence);
		tagList.add(TagFromName.DICOMStorageSequence);
		tagList.add(TagFromName.STOWRSStorageSequence);
		tagList.add(TagFromName.StorageURL);
		tagList.add(TagFromName.XDSStorageSequence);
		tagList.add(TagFromName.EntranceDoseInmGy);
		tagList.add(TagFromName.EntranceDoseDerivation);
		tagList.add(TagFromName.ParametricMapFrameTypeSequence);
		tagList.add(TagFromName.ReferencedImageRealWorldValueMappingSequence);
		tagList.add(TagFromName.RealWorldValueMappingSequence);
		tagList.add(TagFromName.PixelValueMappingCodeSequence);
		tagList.add(TagFromName.LUTLabel);
		tagList.add(TagFromName.RealWorldValueLastValueMapped);
		tagList.add(TagFromName.RealWorldValueLUTData);
		tagList.add(TagFromName.DoubleFloatRealWorldValueLastValueMapped);
		tagList.add(TagFromName.DoubleFloatRealWorldValueFirstValueMapped);
		tagList.add(TagFromName.RealWorldValueFirstValueMapped);
		tagList.add(TagFromName.QuantityDefinitionSequence);
		tagList.add(TagFromName.RealWorldValueIntercept);
		tagList.add(TagFromName.RealWorldValueSlope);
		tagList.add(TagFromName.FindingsFlagTrial);
		tagList.add(TagFromName.RelationshipType);
		tagList.add(TagFromName.FindingsSequenceTrial);
		tagList.add(TagFromName.FindingsGroupUIDTrial);
		tagList.add(TagFromName.ReferencedFindingsGroupUIDTrial);
		tagList.add(TagFromName.FindingsGroupRecordingDateTrial);
		tagList.add(TagFromName.FindingsGroupRecordingTimeTrial);
		tagList.add(TagFromName.FindingsSourceCategoryCodeSequenceTrial);
		tagList.add(TagFromName.VerifyingOrganization);
		tagList.add(TagFromName.DocumentingOrganizationIdentifierCodeSequenceTrial);
		tagList.add(TagFromName.VerificationDateTime);
		tagList.add(TagFromName.ObservationDateTime);
		tagList.add(TagFromName.ValueType);
		tagList.add(TagFromName.ConceptNameCodeSequence);
		tagList.add(TagFromName.MeasurementPrecisionDescriptionTrial);
		tagList.add(TagFromName.ContinuityOfContent);
		tagList.add(TagFromName.UrgencyOrPriorityAlertsTrial);
		tagList.add(TagFromName.SequencingIndicatorTrial);
		tagList.add(TagFromName.DocumentIdentifierCodeSequenceTrial);
		tagList.add(TagFromName.DocumentAuthorTrial);
		tagList.add(TagFromName.DocumentAuthorIdentifierCodeSequenceTrial);
		tagList.add(TagFromName.IdentifierCodeSequenceTrial);
		tagList.add(TagFromName.VerifyingObserverSequence);
		tagList.add(TagFromName.ObjectBinaryIdentifierTrial);
		tagList.add(TagFromName.VerifyingObserverName);
		tagList.add(TagFromName.DocumentingObserverIdentifierCodeSequenceTrial);
		tagList.add(TagFromName.AuthorObserverSequence);
		tagList.add(TagFromName.ParticipantSequence);
		tagList.add(TagFromName.CustodialOrganizationSequence);
		tagList.add(TagFromName.ParticipationType);
		tagList.add(TagFromName.ParticipationDateTime);
		tagList.add(TagFromName.ObserverType);
		tagList.add(TagFromName.ProcedureIdentifierCodeSequenceTrial);
		tagList.add(TagFromName.VerifyingObserverIdentificationCodeSequence);
		tagList.add(TagFromName.ObjectDirectoryBinaryIdentifierTrial);
		tagList.add(TagFromName.EquivalentCDADocumentSequence);
		tagList.add(TagFromName.ReferencedWaveformChannels);
		tagList.add(TagFromName.DateOfDocumentOrVerbalTransactionTrial);
		tagList.add(TagFromName.TimeOfDocumentCreationOrVerbalTransactionTrial);
		tagList.add(TagFromName.DateTime);
		tagList.add(TagFromName.Date);
		tagList.add(TagFromName.Time);
		tagList.add(TagFromName.PersonName);
		tagList.add(TagFromName.UID);
		tagList.add(TagFromName.ReportStatusIDTrial);
		tagList.add(TagFromName.TemporalRangeType);
		tagList.add(TagFromName.ReferencedSamplePositions);
		tagList.add(TagFromName.ReferencedFrameNumbers);
		tagList.add(TagFromName.ReferencedTimeOffsets);
		tagList.add(TagFromName.ReferencedDateTime);
		tagList.add(TagFromName.TextValue);
		tagList.add(TagFromName.FloatingPointValue);
		tagList.add(TagFromName.RationalNumeratorValue);
		tagList.add(TagFromName.RationalDenominatorValue);
		tagList.add(TagFromName.ObservationCategoryCodeSequenceTrial);
		tagList.add(TagFromName.ConceptCodeSequence);
		tagList.add(TagFromName.BibliographicCitationTrial);
		tagList.add(TagFromName.PurposeOfReferenceCodeSequence);
		tagList.add(TagFromName.ObservationUID);
		tagList.add(TagFromName.ReferencedObservationUIDTrial);
		tagList.add(TagFromName.ReferencedObservationClassTrial);
		tagList.add(TagFromName.ReferencedObjectObservationClassTrial);
		tagList.add(TagFromName.AnnotationGroupNumber);
		tagList.add(TagFromName.ObservationDateTrial);
		tagList.add(TagFromName.ObservationTimeTrial);
		tagList.add(TagFromName.MeasurementAutomationTrial);
		tagList.add(TagFromName.ModifierCodeSequence);
		tagList.add(TagFromName.IdentificationDescriptionTrial);
		tagList.add(TagFromName.CoordinatesSetGeometricTypeTrial);
		tagList.add(TagFromName.AlgorithmCodeSequenceTrial);
		tagList.add(TagFromName.AlgorithmDescriptionTrial);
		tagList.add(TagFromName.PixelCoordinatesSetTrial);
		tagList.add(TagFromName.MeasuredValueSequence);
		tagList.add(TagFromName.NumericValueQualifierCodeSequence);
		tagList.add(TagFromName.CurrentObserverTrial);
		tagList.add(TagFromName.NumericValue);
		tagList.add(TagFromName.ReferencedAccessionSequenceTrial);
		tagList.add(TagFromName.ReportStatusCommentTrial);
		tagList.add(TagFromName.ProcedureContextSequenceTrial);
		tagList.add(TagFromName.VerbalSourceTrial);
		tagList.add(TagFromName.AddressTrial);
		tagList.add(TagFromName.TelephoneNumberTrial);
		tagList.add(TagFromName.VerbalSourceIdentifierCodeSequenceTrial);
		tagList.add(TagFromName.PredecessorDocumentsSequence);
		tagList.add(TagFromName.ReferencedRequestSequence);
		tagList.add(TagFromName.PerformedProcedureCodeSequence);
		tagList.add(TagFromName.CurrentRequestedProcedureEvidenceSequence);
		tagList.add(TagFromName.ReportDetailSequenceTrial);
		tagList.add(TagFromName.PertinentOtherEvidenceSequence);
		tagList.add(TagFromName.HL7StructuredDocumentReferenceSequence);
		tagList.add(TagFromName.ObservationSubjectUIDTrial);
		tagList.add(TagFromName.ObservationSubjectClassTrial);
		tagList.add(TagFromName.ObservationSubjectTypeCodeSequenceTrial);
		tagList.add(TagFromName.CompletionFlag);
		tagList.add(TagFromName.CompletionFlagDescription);
		tagList.add(TagFromName.VerificationFlag);
		tagList.add(TagFromName.ArchiveRequested);
		tagList.add(TagFromName.PreliminaryFlag);
		tagList.add(TagFromName.ContentTemplateSequence);
		tagList.add(TagFromName.IdenticalDocumentsSequence);
		tagList.add(TagFromName.ObservationSubjectContextFlagTrial);
		tagList.add(TagFromName.ObserverContextFlagTrial);
		tagList.add(TagFromName.ProcedureContextFlagTrial);
		tagList.add(TagFromName.ContentSequence);
		tagList.add(TagFromName.RelationshipSequenceTrial);
		tagList.add(TagFromName.RelationshipTypeCodeSequenceTrial);
		tagList.add(TagFromName.LanguageCodeSequenceTrial);
		tagList.add(TagFromName.UniformResourceLocatorTrial);
		tagList.add(TagFromName.WaveformAnnotationSequence);
		tagList.add(TagFromName.TemplateIdentifier);
		tagList.add(TagFromName.TemplateVersion);
		tagList.add(TagFromName.TemplateLocalVersion);
		tagList.add(TagFromName.TemplateExtensionFlag);
		tagList.add(TagFromName.TemplateExtensionOrganizationUID);
		tagList.add(TagFromName.TemplateExtensionCreatorUID);
		tagList.add(TagFromName.ReferencedContentItemIdentifier);
		tagList.add(TagFromName.HL7InstanceIdentifier);
		tagList.add(TagFromName.HL7DocumentEffectiveTime);
		tagList.add(TagFromName.HL7DocumentTypeCodeSequence);
		tagList.add(TagFromName.DocumentClassCodeSequence);
		tagList.add(TagFromName.RetrieveURI);
		tagList.add(TagFromName.RetrieveLocationUID);
		tagList.add(TagFromName.TypeOfInstances);
		tagList.add(TagFromName.DICOMRetrievalSequence);
		tagList.add(TagFromName.DICOMMediaRetrievalSequence);
		tagList.add(TagFromName.WADORetrievalSequence);
		tagList.add(TagFromName.XDSRetrievalSequence);
		tagList.add(TagFromName.WADORSRetrievalSequence);
		tagList.add(TagFromName.RepositoryUniqueID);
		tagList.add(TagFromName.HomeCommunityID);
		tagList.add(TagFromName.DocumentTitle);
		tagList.add(TagFromName.EncapsulatedDocument);
		tagList.add(TagFromName.MIMETypeOfEncapsulatedDocument);
		tagList.add(TagFromName.SourceInstanceSequence);
		tagList.add(TagFromName.ListOfMIMETypes);
		tagList.add(TagFromName.ProductPackageIdentifier);
		tagList.add(TagFromName.SubstanceAdministrationApproval);
		tagList.add(TagFromName.ApprovalStatusFurtherDescription);
		tagList.add(TagFromName.ApprovalStatusDateTime);
		tagList.add(TagFromName.ProductTypeCodeSequence);
		tagList.add(TagFromName.ProductName);
		tagList.add(TagFromName.ProductDescription);
		tagList.add(TagFromName.ProductLotIdentifier);
		tagList.add(TagFromName.ProductExpirationDateTime);
		tagList.add(TagFromName.SubstanceAdministrationDateTime);
		tagList.add(TagFromName.SubstanceAdministrationNotes);
		tagList.add(TagFromName.SubstanceAdministrationDeviceID);
		tagList.add(TagFromName.ProductParameterSequence);
		tagList.add(TagFromName.SubstanceAdministrationParameterSequence);
		tagList.add(TagFromName.ApprovalSequence);
		tagList.add(TagFromName.AssertionCodeSequence);
		tagList.add(TagFromName.AssertionUID);
		tagList.add(TagFromName.AsserterIdentificationSequence);
		tagList.add(TagFromName.AssertionDateTime);
		tagList.add(TagFromName.AssertionExpirationDateTime);
		tagList.add(TagFromName.AssertionComments);
		tagList.add(TagFromName.RelatedAssertionSequence);
		tagList.add(TagFromName.ReferencedAssertionUID);
		tagList.add(TagFromName.ApprovalSubjectSequence);
		tagList.add(TagFromName.OrganizationalRoleCodeSequence);
		tagList.add(TagFromName.LensDescription);
		tagList.add(TagFromName.RightLensSequence);
		tagList.add(TagFromName.LeftLensSequence);
		tagList.add(TagFromName.UnspecifiedLateralityLensSequence);
		tagList.add(TagFromName.CylinderSequence);
		tagList.add(TagFromName.PrismSequence);
		tagList.add(TagFromName.HorizontalPrismPower);
		tagList.add(TagFromName.HorizontalPrismBase);
		tagList.add(TagFromName.VerticalPrismPower);
		tagList.add(TagFromName.VerticalPrismBase);
		tagList.add(TagFromName.LensSegmentType);
		tagList.add(TagFromName.OpticalTransmittance);
		tagList.add(TagFromName.ChannelWidth);
		tagList.add(TagFromName.PupilSize);
		tagList.add(TagFromName.CornealSize);
		tagList.add(TagFromName.AutorefractionRightEyeSequence);
		tagList.add(TagFromName.AutorefractionLeftEyeSequence);
		tagList.add(TagFromName.DistancePupillaryDistance);
		tagList.add(TagFromName.NearPupillaryDistance);
		tagList.add(TagFromName.IntermediatePupillaryDistance);
		tagList.add(TagFromName.OtherPupillaryDistance);
		tagList.add(TagFromName.KeratometryRightEyeSequence);
		tagList.add(TagFromName.KeratometryLeftEyeSequence);
		tagList.add(TagFromName.SteepKeratometricAxisSequence);
		tagList.add(TagFromName.RadiusOfCurvature);
		tagList.add(TagFromName.KeratometricPower);
		tagList.add(TagFromName.KeratometricAxis);
		tagList.add(TagFromName.FlatKeratometricAxisSequence);
		tagList.add(TagFromName.BackgroundColor);
		tagList.add(TagFromName.Optotype);
		tagList.add(TagFromName.OptotypePresentation);
		tagList.add(TagFromName.SubjectiveRefractionRightEyeSequence);
		tagList.add(TagFromName.SubjectiveRefractionLeftEyeSequence);
		tagList.add(TagFromName.AddNearSequence);
		tagList.add(TagFromName.AddIntermediateSequence);
		tagList.add(TagFromName.AddOtherSequence);
		tagList.add(TagFromName.AddPower);
		tagList.add(TagFromName.ViewingDistance);
		tagList.add(TagFromName.VisualAcuityTypeCodeSequence);
		tagList.add(TagFromName.VisualAcuityRightEyeSequence);
		tagList.add(TagFromName.VisualAcuityLeftEyeSequence);
		tagList.add(TagFromName.VisualAcuityBothEyesOpenSequence);
		tagList.add(TagFromName.ViewingDistanceType);
		tagList.add(TagFromName.VisualAcuityModifiers);
		tagList.add(TagFromName.DecimalVisualAcuity);
		tagList.add(TagFromName.OptotypeDetailedDefinition);
		tagList.add(TagFromName.ReferencedRefractiveMeasurementsSequence);
		tagList.add(TagFromName.SpherePower);
		tagList.add(TagFromName.CylinderPower);
		tagList.add(TagFromName.CornealTopographySurface);
		tagList.add(TagFromName.CornealVertexLocation);
		tagList.add(TagFromName.PupilCentroidXCoordinate);
		tagList.add(TagFromName.PupilCentroidYCoordinate);
		tagList.add(TagFromName.EquivalentPupilRadius);
		tagList.add(TagFromName.CornealTopographyMapTypeCodeSequence);
		tagList.add(TagFromName.VerticesOfTheOutlineOfPupil);
		tagList.add(TagFromName.CornealTopographyMappingNormalsSequence);
		tagList.add(TagFromName.MaximumCornealCurvatureSequence);
		tagList.add(TagFromName.MaximumCornealCurvature);
		tagList.add(TagFromName.MaximumCornealCurvatureLocation);
		tagList.add(TagFromName.MinimumKeratometricSequence);
		tagList.add(TagFromName.SimulatedKeratometricCylinderSequence);
		tagList.add(TagFromName.AverageCornealPower);
		tagList.add(TagFromName.CornealISValue);
		tagList.add(TagFromName.AnalyzedArea);
		tagList.add(TagFromName.SurfaceRegularityIndex);
		tagList.add(TagFromName.SurfaceAsymmetryIndex);
		tagList.add(TagFromName.CornealEccentricityIndex);
		tagList.add(TagFromName.KeratoconusPredictionIndex);
		tagList.add(TagFromName.DecimalPotentialVisualAcuity);
		tagList.add(TagFromName.CornealTopographyMapQualityEvaluation);
		tagList.add(TagFromName.SourceImageCornealProcessedDataSequence);
		tagList.add(TagFromName.CornealPointLocation);
		tagList.add(TagFromName.CornealPointEstimated);
		tagList.add(TagFromName.AxialPower);
		tagList.add(TagFromName.TangentialPower);
		tagList.add(TagFromName.RefractivePower);
		tagList.add(TagFromName.RelativeElevation);
		tagList.add(TagFromName.CornealWavefront);
		tagList.add(TagFromName.ImagedVolumeWidth);
		tagList.add(TagFromName.ImagedVolumeHeight);
		tagList.add(TagFromName.ImagedVolumeDepth);
		tagList.add(TagFromName.TotalPixelMatrixColumns);
		tagList.add(TagFromName.TotalPixelMatrixRows);
		tagList.add(TagFromName.TotalPixelMatrixOriginSequence);
		tagList.add(TagFromName.SpecimenLabelInImage);
		tagList.add(TagFromName.FocusMethod);
		tagList.add(TagFromName.ExtendedDepthOfField);
		tagList.add(TagFromName.NumberOfFocalPlanes);
		tagList.add(TagFromName.DistanceBetweenFocalPlanes);
		tagList.add(TagFromName.RecommendedAbsentPixelCIELabValue);
		tagList.add(TagFromName.IlluminatorTypeCodeSequence);
		tagList.add(TagFromName.ImageOrientationSlide);
		tagList.add(TagFromName.OpticalPathSequence);
		tagList.add(TagFromName.OpticalPathIdentifier);
		tagList.add(TagFromName.OpticalPathDescription);
		tagList.add(TagFromName.IlluminationColorCodeSequence);
		tagList.add(TagFromName.SpecimenReferenceSequence);
		tagList.add(TagFromName.CondenserLensPower);
		tagList.add(TagFromName.ObjectiveLensPower);
		tagList.add(TagFromName.ObjectiveLensNumericalAperture);
		tagList.add(TagFromName.PaletteColorLookupTableSequence);
		tagList.add(TagFromName.ReferencedImageNavigationSequence);
		tagList.add(TagFromName.TopLeftHandCornerOfLocalizerArea);
		tagList.add(TagFromName.BottomRightHandCornerOfLocalizerArea);
		tagList.add(TagFromName.OpticalPathIdentificationSequence);
		tagList.add(TagFromName.PlanePositionSlideSequence);
		tagList.add(TagFromName.ColumnPositionInTotalImagePixelMatrix);
		tagList.add(TagFromName.RowPositionInTotalImagePixelMatrix);
		tagList.add(TagFromName.PixelOriginInterpretation);
		tagList.add(TagFromName.NumberOfOpticalPaths);
		tagList.add(TagFromName.TotalPixelMatrixFocalPlanes);
		tagList.add(TagFromName.CalibrationImage);
		tagList.add(TagFromName.DeviceSequence);
		tagList.add(TagFromName.ContainerComponentTypeCodeSequence);
		tagList.add(TagFromName.ContainerComponentThickness);
		tagList.add(TagFromName.DeviceLength);
		tagList.add(TagFromName.ContainerComponentWidth);
		tagList.add(TagFromName.DeviceDiameter);
		tagList.add(TagFromName.DeviceDiameterUnits);
		tagList.add(TagFromName.DeviceVolume);
		tagList.add(TagFromName.InterMarkerDistance);
		tagList.add(TagFromName.ContainerComponentMaterial);
		tagList.add(TagFromName.ContainerComponentID);
		tagList.add(TagFromName.ContainerComponentLength);
		tagList.add(TagFromName.ContainerComponentDiameter);
		tagList.add(TagFromName.ContainerComponentDescription);
		tagList.add(TagFromName.DeviceDescription);
		tagList.add(TagFromName.ContrastBolusIngredientPercentByVolume);
		tagList.add(TagFromName.OCTFocalDistance);
		tagList.add(TagFromName.BeamSpotSize);
		tagList.add(TagFromName.EffectiveRefractiveIndex);
		tagList.add(TagFromName.OCTAcquisitionDomain);
		tagList.add(TagFromName.OCTOpticalCenterWavelength);
		tagList.add(TagFromName.AxialResolution);
		tagList.add(TagFromName.RangingDepth);
		tagList.add(TagFromName.ALineRate);
		tagList.add(TagFromName.ALinesPerFrame);
		tagList.add(TagFromName.CatheterRotationalRate);
		tagList.add(TagFromName.ALinePixelSpacing);
		tagList.add(TagFromName.ModeOfPercutaneousAccessSequence);
		tagList.add(TagFromName.IntravascularOCTFrameTypeSequence);
		tagList.add(TagFromName.OCTZOffsetApplied);
		tagList.add(TagFromName.IntravascularFrameContentSequence);
		tagList.add(TagFromName.IntravascularLongitudinalDistance);
		tagList.add(TagFromName.IntravascularOCTFrameContentSequence);
		tagList.add(TagFromName.OCTZOffsetCorrection);
		tagList.add(TagFromName.CatheterDirectionOfRotation);
		tagList.add(TagFromName.SeamLineLocation);
		tagList.add(TagFromName.FirstALineLocation);
		tagList.add(TagFromName.SeamLineIndex);
		tagList.add(TagFromName.NumberOfPaddedALines);
		tagList.add(TagFromName.InterpolationType);
		tagList.add(TagFromName.RefractiveIndexApplied);
		tagList.add(TagFromName.EnergyWindowVector);
		tagList.add(TagFromName.NumberOfEnergyWindows);
		tagList.add(TagFromName.EnergyWindowInformationSequence);
		tagList.add(TagFromName.EnergyWindowRangeSequence);
		tagList.add(TagFromName.EnergyWindowLowerLimit);
		tagList.add(TagFromName.EnergyWindowUpperLimit);
		tagList.add(TagFromName.RadiopharmaceuticalInformationSequence);
		tagList.add(TagFromName.ResidualSyringeCounts);
		tagList.add(TagFromName.EnergyWindowName);
		tagList.add(TagFromName.DetectorVector);
		tagList.add(TagFromName.NumberOfDetectors);
		tagList.add(TagFromName.DetectorInformationSequence);
		tagList.add(TagFromName.PhaseVector);
		tagList.add(TagFromName.NumberOfPhases);
		tagList.add(TagFromName.PhaseInformationSequence);
		tagList.add(TagFromName.NumberOfFramesInPhase);
		tagList.add(TagFromName.PhaseDelay);
		tagList.add(TagFromName.PauseBetweenFrames);
		tagList.add(TagFromName.PhaseDescription);
		tagList.add(TagFromName.RotationVector);
		tagList.add(TagFromName.NumberOfRotations);
		tagList.add(TagFromName.RotationInformationSequence);
		tagList.add(TagFromName.NumberOfFramesInRotation);
		tagList.add(TagFromName.RRIntervalVector);
		tagList.add(TagFromName.NumberOfRRIntervals);
		tagList.add(TagFromName.GatedInformationSequence);
		tagList.add(TagFromName.DataInformationSequence);
		tagList.add(TagFromName.TimeSlotVector);
		tagList.add(TagFromName.NumberOfTimeSlots);
		tagList.add(TagFromName.TimeSlotInformationSequence);
		tagList.add(TagFromName.TimeSlotTime);
		tagList.add(TagFromName.SliceVector);
		tagList.add(TagFromName.NumberOfSlices);
		tagList.add(TagFromName.AngularViewVector);
		tagList.add(TagFromName.TimeSliceVector);
		tagList.add(TagFromName.NumberOfTimeSlices);
		tagList.add(TagFromName.StartAngle);
		tagList.add(TagFromName.TypeOfDetectorMotion);
		tagList.add(TagFromName.TriggerVector);
		tagList.add(TagFromName.NumberOfTriggersInPhase);
		tagList.add(TagFromName.ViewCodeSequence);
		tagList.add(TagFromName.ViewModifierCodeSequence);
		tagList.add(TagFromName.RadionuclideCodeSequence);
		tagList.add(TagFromName.AdministrationRouteCodeSequence);
		tagList.add(TagFromName.RadiopharmaceuticalCodeSequence);
		tagList.add(TagFromName.CalibrationDataSequence);
		tagList.add(TagFromName.EnergyWindowNumber);
		tagList.add(TagFromName.ImageID);
		tagList.add(TagFromName.PatientOrientationCodeSequence);
		tagList.add(TagFromName.PatientOrientationModifierCodeSequence);
		tagList.add(TagFromName.PatientGantryRelationshipCodeSequence);
		tagList.add(TagFromName.SliceProgressionDirection);
		tagList.add(TagFromName.ScanProgressionDirection);
		tagList.add(TagFromName.SeriesType);
		tagList.add(TagFromName.Units);
		tagList.add(TagFromName.CountsSource);
		tagList.add(TagFromName.ReprojectionMethod);
		tagList.add(TagFromName.SUVType);
		tagList.add(TagFromName.RandomsCorrectionMethod);
		tagList.add(TagFromName.AttenuationCorrectionMethod);
		tagList.add(TagFromName.DecayCorrection);
		tagList.add(TagFromName.ReconstructionMethod);
		tagList.add(TagFromName.DetectorLinesOfResponseUsed);
		tagList.add(TagFromName.ScatterCorrectionMethod);
		tagList.add(TagFromName.AxialAcceptance);
		tagList.add(TagFromName.AxialMash);
		tagList.add(TagFromName.TransverseMash);
		tagList.add(TagFromName.DetectorElementSize);
		tagList.add(TagFromName.CoincidenceWindowWidth);
		tagList.add(TagFromName.SecondaryCountsType);
		tagList.add(TagFromName.FrameReferenceTime);
		tagList.add(TagFromName.PrimaryPromptsCountsAccumulated);
		tagList.add(TagFromName.SecondaryCountsAccumulated);
		tagList.add(TagFromName.SliceSensitivityFactor);
		tagList.add(TagFromName.DecayFactor);
		tagList.add(TagFromName.DoseCalibrationFactor);
		tagList.add(TagFromName.ScatterFractionFactor);
		tagList.add(TagFromName.DeadTimeFactor);
		tagList.add(TagFromName.ImageIndex);
		tagList.add(TagFromName.CountsIncluded);
		tagList.add(TagFromName.DeadTimeCorrectionFlag);
		tagList.add(TagFromName.HistogramSequence);
		tagList.add(TagFromName.HistogramNumberOfBins);
		tagList.add(TagFromName.HistogramFirstBinValue);
		tagList.add(TagFromName.HistogramLastBinValue);
		tagList.add(TagFromName.HistogramBinWidth);
		tagList.add(TagFromName.HistogramExplanation);
		tagList.add(TagFromName.HistogramData);
		tagList.add(TagFromName.SegmentationType);
		tagList.add(TagFromName.SegmentSequence);
		tagList.add(TagFromName.SegmentedPropertyCategoryCodeSequence);
		tagList.add(TagFromName.SegmentNumber);
		tagList.add(TagFromName.SegmentLabel);
		tagList.add(TagFromName.SegmentDescription);
		tagList.add(TagFromName.SegmentationAlgorithmIdentificationSequence);
		tagList.add(TagFromName.SegmentAlgorithmType);
		tagList.add(TagFromName.SegmentAlgorithmName);
		tagList.add(TagFromName.SegmentIdentificationSequence);
		tagList.add(TagFromName.ReferencedSegmentNumber);
		tagList.add(TagFromName.RecommendedDisplayGrayscaleValue);
		tagList.add(TagFromName.RecommendedDisplayCIELabValue);
		tagList.add(TagFromName.MaximumFractionalValue);
		tagList.add(TagFromName.SegmentedPropertyTypeCodeSequence);
		tagList.add(TagFromName.SegmentationFractionalType);
		tagList.add(TagFromName.SegmentedPropertyTypeModifierCodeSequence);
		tagList.add(TagFromName.UsedSegmentsSequence);
		tagList.add(TagFromName.TrackingID);
		tagList.add(TagFromName.TrackingUID);
		tagList.add(TagFromName.DeformableRegistrationSequence);
		tagList.add(TagFromName.SourceFrameOfReferenceUID);
		tagList.add(TagFromName.DeformableRegistrationGridSequence);
		tagList.add(TagFromName.GridDimensions);
		tagList.add(TagFromName.GridResolution);
		tagList.add(TagFromName.VectorGridData);
		tagList.add(TagFromName.PreDeformationMatrixRegistrationSequence);
		tagList.add(TagFromName.PostDeformationMatrixRegistrationSequence);
		tagList.add(TagFromName.NumberOfSurfaces);
		tagList.add(TagFromName.SurfaceSequence);
		tagList.add(TagFromName.SurfaceNumber);
		tagList.add(TagFromName.SurfaceComments);
		tagList.add(TagFromName.SurfaceProcessing);
		tagList.add(TagFromName.SurfaceProcessingRatio);
		tagList.add(TagFromName.SurfaceProcessingDescription);
		tagList.add(TagFromName.RecommendedPresentationOpacity);
		tagList.add(TagFromName.RecommendedPresentationType);
		tagList.add(TagFromName.FiniteVolume);
		tagList.add(TagFromName.Manifold);
		tagList.add(TagFromName.SurfacePointsSequence);
		tagList.add(TagFromName.SurfacePointsNormalsSequence);
		tagList.add(TagFromName.SurfaceMeshPrimitivesSequence);
		tagList.add(TagFromName.NumberOfSurfacePoints);
		tagList.add(TagFromName.PointCoordinatesData);
		tagList.add(TagFromName.PointPositionAccuracy);
		tagList.add(TagFromName.MeanPointDistance);
		tagList.add(TagFromName.MaximumPointDistance);
		tagList.add(TagFromName.PointsBoundingBoxCoordinates);
		tagList.add(TagFromName.AxisOfRotation);
		tagList.add(TagFromName.CenterOfRotation);
		tagList.add(TagFromName.NumberOfVectors);
		tagList.add(TagFromName.VectorDimensionality);
		tagList.add(TagFromName.VectorAccuracy);
		tagList.add(TagFromName.VectorCoordinateData);
		tagList.add(TagFromName.TrianglePointIndexList);
		tagList.add(TagFromName.EdgePointIndexList);
		tagList.add(TagFromName.VertexPointIndexList);
		tagList.add(TagFromName.TriangleStripSequence);
		tagList.add(TagFromName.TriangleFanSequence);
		tagList.add(TagFromName.LineSequence);
		tagList.add(TagFromName.PrimitivePointIndexList);
		tagList.add(TagFromName.SurfaceCount);
		tagList.add(TagFromName.ReferencedSurfaceSequence);
		tagList.add(TagFromName.ReferencedSurfaceNumber);
		tagList.add(TagFromName.SegmentSurfaceGenerationAlgorithmIdentificationSequence);
		tagList.add(TagFromName.SegmentSurfaceSourceInstanceSequence);
		tagList.add(TagFromName.AlgorithmFamilyCodeSequence);
		tagList.add(TagFromName.AlgorithmNameCodeSequence);
		tagList.add(TagFromName.AlgorithmVersion);
		tagList.add(TagFromName.AlgorithmParameters);
		tagList.add(TagFromName.FacetSequence);
		tagList.add(TagFromName.SurfaceProcessingAlgorithmIdentificationSequence);
		tagList.add(TagFromName.AlgorithmName);
		tagList.add(TagFromName.RecommendedPointRadius);
		tagList.add(TagFromName.RecommendedLineThickness);
		tagList.add(TagFromName.LongPrimitivePointIndexList);
		tagList.add(TagFromName.LongTrianglePointIndexList);
		tagList.add(TagFromName.LongEdgePointIndexList);
		tagList.add(TagFromName.LongVertexPointIndexList);
		tagList.add(TagFromName.TrackSetSequence);
		tagList.add(TagFromName.TrackSequence);
		tagList.add(TagFromName.RecommendedDisplayCIELabValueList);
		tagList.add(TagFromName.TrackingAlgorithmIdentificationSequence);
		tagList.add(TagFromName.TrackSetNumber);
		tagList.add(TagFromName.TrackSetLabel);
		tagList.add(TagFromName.TrackSetDescription);
		tagList.add(TagFromName.TrackSetAnatomicalTypeCodeSequence);
		tagList.add(TagFromName.MeasurementsSequence);
		tagList.add(TagFromName.TrackSetStatisticsSequence);
		tagList.add(TagFromName.FloatingPointValues);
		tagList.add(TagFromName.TrackPointIndexList);
		tagList.add(TagFromName.TrackStatisticsSequence);
		tagList.add(TagFromName.MeasurementValuesSequence);
		tagList.add(TagFromName.DiffusionAcquisitionCodeSequence);
		tagList.add(TagFromName.DiffusionModelCodeSequence);
		tagList.add(TagFromName.ImplantSize);
		tagList.add(TagFromName.ImplantTemplateVersion);
		tagList.add(TagFromName.ReplacedImplantTemplateSequence);
		tagList.add(TagFromName.ImplantType);
		tagList.add(TagFromName.DerivationImplantTemplateSequence);
		tagList.add(TagFromName.OriginalImplantTemplateSequence);
		tagList.add(TagFromName.EffectiveDateTime);
		tagList.add(TagFromName.ImplantTargetAnatomySequence);
		tagList.add(TagFromName.InformationFromManufacturerSequence);
		tagList.add(TagFromName.NotificationFromManufacturerSequence);
		tagList.add(TagFromName.InformationIssueDateTime);
		tagList.add(TagFromName.InformationSummary);
		tagList.add(TagFromName.ImplantRegulatoryDisapprovalCodeSequence);
		tagList.add(TagFromName.OverallTemplateSpatialTolerance);
		tagList.add(TagFromName.HPGLDocumentSequence);
		tagList.add(TagFromName.HPGLDocumentID);
		tagList.add(TagFromName.HPGLDocumentLabel);
		tagList.add(TagFromName.ViewOrientationCodeSequence);
		tagList.add(TagFromName.ViewOrientationModifierCodeSequence);
		tagList.add(TagFromName.HPGLDocumentScaling);
		tagList.add(TagFromName.HPGLDocument);
		tagList.add(TagFromName.HPGLContourPenNumber);
		tagList.add(TagFromName.HPGLPenSequence);
		tagList.add(TagFromName.HPGLPenNumber);
		tagList.add(TagFromName.HPGLPenLabel);
		tagList.add(TagFromName.HPGLPenDescription);
		tagList.add(TagFromName.RecommendedRotationPoint);
		tagList.add(TagFromName.BoundingRectangle);
		tagList.add(TagFromName.ImplantTemplate3DModelSurfaceNumber);
		tagList.add(TagFromName.SurfaceModelDescriptionSequence);
		tagList.add(TagFromName.SurfaceModelLabel);
		tagList.add(TagFromName.SurfaceModelScalingFactor);
		tagList.add(TagFromName.MaterialsCodeSequence);
		tagList.add(TagFromName.CoatingMaterialsCodeSequence);
		tagList.add(TagFromName.ImplantTypeCodeSequence);
		tagList.add(TagFromName.FixationMethodCodeSequence);
		tagList.add(TagFromName.MatingFeatureSetsSequence);
		tagList.add(TagFromName.MatingFeatureSetID);
		tagList.add(TagFromName.MatingFeatureSetLabel);
		tagList.add(TagFromName.MatingFeatureSequence);
		tagList.add(TagFromName.MatingFeatureID);
		tagList.add(TagFromName.MatingFeatureDegreeOfFreedomSequence);
		tagList.add(TagFromName.DegreeOfFreedomID);
		tagList.add(TagFromName.DegreeOfFreedomType);
		tagList.add(TagFromName.TwoDMatingFeatureCoordinatesSequence);
		tagList.add(TagFromName.ReferencedHPGLDocumentID);
		tagList.add(TagFromName.TwoDMatingPoint);
		tagList.add(TagFromName.TwoDMatingAxes);
		tagList.add(TagFromName.TwoDDegreeOfFreedomSequence);
		tagList.add(TagFromName.ThreeDDegreeOfFreedomAxis);
		tagList.add(TagFromName.RangeOfFreedom);
		tagList.add(TagFromName.ThreeDMatingPoint);
		tagList.add(TagFromName.ThreeDMatingAxes);
		tagList.add(TagFromName.TwoDDegreeOfFreedomAxis);
		tagList.add(TagFromName.PlanningLandmarkPointSequence);
		tagList.add(TagFromName.PlanningLandmarkLineSequence);
		tagList.add(TagFromName.PlanningLandmarkPlaneSequence);
		tagList.add(TagFromName.PlanningLandmarkID);
		tagList.add(TagFromName.PlanningLandmarkDescription);
		tagList.add(TagFromName.PlanningLandmarkIdentificationCodeSequence);
		tagList.add(TagFromName.TwoDPointCoordinatesSequence);
		tagList.add(TagFromName.TwoDPointCoordinates);
		tagList.add(TagFromName.ThreeDPointCoordinates);
		tagList.add(TagFromName.TwoDLineCoordinatesSequence);
		tagList.add(TagFromName.TwoDLineCoordinates);
		tagList.add(TagFromName.ThreeDLineCoordinates);
		tagList.add(TagFromName.TwoDPlaneCoordinatesSequence);
		tagList.add(TagFromName.TwoDPlaneIntersection);
		tagList.add(TagFromName.ThreeDPlaneOrigin);
		tagList.add(TagFromName.ThreeDPlaneNormal);
		tagList.add(TagFromName.ModelModification);
		tagList.add(TagFromName.ModelMirroring);
		tagList.add(TagFromName.ModelUsageCodeSequence);
		tagList.add(TagFromName.GraphicAnnotationSequence);
		tagList.add(TagFromName.GraphicLayer);
		tagList.add(TagFromName.BoundingBoxAnnotationUnits);
		tagList.add(TagFromName.AnchorPointAnnotationUnits);
		tagList.add(TagFromName.GraphicAnnotationUnits);
		tagList.add(TagFromName.UnformattedTextValue);
		tagList.add(TagFromName.TextObjectSequence);
		tagList.add(TagFromName.GraphicObjectSequence);
		tagList.add(TagFromName.BoundingBoxTopLeftHandCorner);
		tagList.add(TagFromName.BoundingBoxBottomRightHandCorner);
		tagList.add(TagFromName.BoundingBoxTextHorizontalJustification);
		tagList.add(TagFromName.AnchorPoint);
		tagList.add(TagFromName.AnchorPointVisibility);
		tagList.add(TagFromName.GraphicDimensions);
		tagList.add(TagFromName.NumberOfGraphicPoints);
		tagList.add(TagFromName.GraphicData);
		tagList.add(TagFromName.GraphicType);
		tagList.add(TagFromName.GraphicFilled);
		tagList.add(TagFromName.ImageRotationRetired);
		tagList.add(TagFromName.ImageHorizontalFlip);
		tagList.add(TagFromName.ImageRotation);
		tagList.add(TagFromName.DisplayedAreaTopLeftHandCornerTrial);
		tagList.add(TagFromName.DisplayedAreaBottomRightHandCornerTrial);
		tagList.add(TagFromName.DisplayedAreaTopLeftHandCorner);
		tagList.add(TagFromName.DisplayedAreaBottomRightHandCorner);
		tagList.add(TagFromName.DisplayedAreaSelectionSequence);
		tagList.add(TagFromName.GraphicLayerSequence);
		tagList.add(TagFromName.GraphicLayerOrder);
		tagList.add(TagFromName.GraphicLayerRecommendedDisplayGrayscaleValue);
		tagList.add(TagFromName.GraphicLayerRecommendedDisplayRGBValue);
		tagList.add(TagFromName.GraphicLayerDescription);
		tagList.add(TagFromName.ContentLabel);
		tagList.add(TagFromName.ContentDescription);
		tagList.add(TagFromName.PresentationCreationDate);
		tagList.add(TagFromName.PresentationCreationTime);
		tagList.add(TagFromName.ContentCreatorName);
		tagList.add(TagFromName.ContentCreatorIdentificationCodeSequence);
		tagList.add(TagFromName.AlternateContentDescriptionSequence);
		tagList.add(TagFromName.PresentationSizeMode);
		tagList.add(TagFromName.PresentationPixelSpacing);
		tagList.add(TagFromName.PresentationPixelAspectRatio);
		tagList.add(TagFromName.PresentationPixelMagnificationRatio);
		tagList.add(TagFromName.GraphicGroupLabel);
		tagList.add(TagFromName.GraphicGroupDescription);
		tagList.add(TagFromName.CompoundGraphicSequence);
		tagList.add(TagFromName.CompoundGraphicInstanceID);
		tagList.add(TagFromName.FontName);
		tagList.add(TagFromName.FontNameType);
		tagList.add(TagFromName.CSSFontName);
		tagList.add(TagFromName.RotationAngle);
		tagList.add(TagFromName.TextStyleSequence);
		tagList.add(TagFromName.LineStyleSequence);
		tagList.add(TagFromName.FillStyleSequence);
		tagList.add(TagFromName.GraphicGroupSequence);
		tagList.add(TagFromName.TextColorCIELabValue);
		tagList.add(TagFromName.HorizontalAlignment);
		tagList.add(TagFromName.VerticalAlignment);
		tagList.add(TagFromName.ShadowStyle);
		tagList.add(TagFromName.ShadowOffsetX);
		tagList.add(TagFromName.ShadowOffsetY);
		tagList.add(TagFromName.ShadowColorCIELabValue);
		tagList.add(TagFromName.Underlined);
		tagList.add(TagFromName.Bold);
		tagList.add(TagFromName.Italic);
		tagList.add(TagFromName.PatternOnColorCIELabValue);
		tagList.add(TagFromName.PatternOffColorCIELabValue);
		tagList.add(TagFromName.LineThickness);
		tagList.add(TagFromName.LineDashingStyle);
		tagList.add(TagFromName.LinePattern);
		tagList.add(TagFromName.FillPattern);
		tagList.add(TagFromName.FillMode);
		tagList.add(TagFromName.ShadowOpacity);
		tagList.add(TagFromName.GapLength);
		tagList.add(TagFromName.DiameterOfVisibility);
		tagList.add(TagFromName.RotationPoint);
		tagList.add(TagFromName.TickAlignment);
		tagList.add(TagFromName.ShowTickLabel);
		tagList.add(TagFromName.TickLabelAlignment);
		tagList.add(TagFromName.CompoundGraphicUnits);
		tagList.add(TagFromName.PatternOnOpacity);
		tagList.add(TagFromName.PatternOffOpacity);
		tagList.add(TagFromName.MajorTicksSequence);
		tagList.add(TagFromName.TickPosition);
		tagList.add(TagFromName.TickLabel);
		tagList.add(TagFromName.CompoundGraphicType);
		tagList.add(TagFromName.GraphicGroupID);
		tagList.add(TagFromName.ShapeType);
		tagList.add(TagFromName.RegistrationSequence);
		tagList.add(TagFromName.MatrixRegistrationSequence);
		tagList.add(TagFromName.MatrixSequence);
		tagList.add(TagFromName.FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix);
		tagList.add(TagFromName.FrameOfReferenceTransformationMatrixType);
		tagList.add(TagFromName.RegistrationTypeCodeSequence);
		tagList.add(TagFromName.FiducialDescription);
		tagList.add(TagFromName.FiducialIdentifier);
		tagList.add(TagFromName.FiducialIdentifierCodeSequence);
		tagList.add(TagFromName.ContourUncertaintyRadius);
		tagList.add(TagFromName.UsedFiducialsSequence);
		tagList.add(TagFromName.GraphicCoordinatesDataSequence);
		tagList.add(TagFromName.FiducialUID);
		tagList.add(TagFromName.ReferencedFiducialUID);
		tagList.add(TagFromName.FiducialSetSequence);
		tagList.add(TagFromName.FiducialSequence);
		tagList.add(TagFromName.FiducialsPropertyCategoryCodeSequence);
		tagList.add(TagFromName.GraphicLayerRecommendedDisplayCIELabValue);
		tagList.add(TagFromName.BlendingSequence);
		tagList.add(TagFromName.RelativeOpacity);
		tagList.add(TagFromName.ReferencedSpatialRegistrationSequence);
		tagList.add(TagFromName.BlendingPosition);
		tagList.add(TagFromName.PresentationDisplayCollectionUID);
		tagList.add(TagFromName.PresentationSequenceCollectionUID);
		tagList.add(TagFromName.PresentationSequencePositionIndex);
		tagList.add(TagFromName.RenderedImageReferenceSequence);
		tagList.add(TagFromName.VolumetricPresentationStateInputSequence);
		tagList.add(TagFromName.PresentationInputType);
		tagList.add(TagFromName.InputSequencePositionIndex);
		tagList.add(TagFromName.Crop);
		tagList.add(TagFromName.CroppingSpecificationIndex);
		tagList.add(TagFromName.CompositingMethod);
		tagList.add(TagFromName.VolumetricPresentationInputNumber);
		tagList.add(TagFromName.ImageVolumeGeometry);
		tagList.add(TagFromName.VolumetricPresentationInputSetUID);
		tagList.add(TagFromName.VolumetricPresentationInputSetSequence);
		tagList.add(TagFromName.GlobalCrop);
		tagList.add(TagFromName.GlobalCroppingSpecificationIndex);
		tagList.add(TagFromName.RenderingMethod);
		tagList.add(TagFromName.VolumeCroppingSequence);
		tagList.add(TagFromName.VolumeCroppingMethod);
		tagList.add(TagFromName.BoundingBoxCrop);
		tagList.add(TagFromName.ObliqueCroppingPlaneSequence);
		tagList.add(TagFromName.Plane);
		tagList.add(TagFromName.PlaneNormal);
		tagList.add(TagFromName.CroppingSpecificationNumber);
		tagList.add(TagFromName.MultiPlanarReconstructionStyle);
		tagList.add(TagFromName.MPRThicknessType);
		tagList.add(TagFromName.MPRSlabThickness);
		tagList.add(TagFromName.MPRTopLeftHandCorner);
		tagList.add(TagFromName.MPRViewWidthDirection);
		tagList.add(TagFromName.MPRViewWidth);
		tagList.add(TagFromName.NumberOfVolumetricCurvePoints);
		tagList.add(TagFromName.VolumetricCurvePoints);
		tagList.add(TagFromName.MPRViewHeightDirection);
		tagList.add(TagFromName.MPRViewHeight);
		tagList.add(TagFromName.RenderProjection);
		tagList.add(TagFromName.ViewpointPosition);
		tagList.add(TagFromName.ViewpointLookAtPoint);
		tagList.add(TagFromName.ViewpointUpDirection);
		tagList.add(TagFromName.RenderFieldOfView);
		tagList.add(TagFromName.SamplingStepSize);
		tagList.add(TagFromName.ShadingStyle);
		tagList.add(TagFromName.AmbientReflectionIntensity);
		tagList.add(TagFromName.LightDirection);
		tagList.add(TagFromName.DiffuseReflectionIntensity);
		tagList.add(TagFromName.SpecularReflectionIntensity);
		tagList.add(TagFromName.Shininess);
		tagList.add(TagFromName.PresentationStateClassificationComponentSequence);
		tagList.add(TagFromName.ComponentType);
		tagList.add(TagFromName.ComponentInputSequence);
		tagList.add(TagFromName.VolumetricPresentationInputIndex);
		tagList.add(TagFromName.PresentationStateCompositorComponentSequence);
		tagList.add(TagFromName.WeightingTransferFunctionSequence);
		tagList.add(TagFromName.WeightingLookupTableDescriptor);
		tagList.add(TagFromName.WeightingLookupTableData);
		tagList.add(TagFromName.VolumetricAnnotationSequence);
		tagList.add(TagFromName.ReferencedStructuredContextSequence);
		tagList.add(TagFromName.ReferencedContentItem);
		tagList.add(TagFromName.VolumetricPresentationInputAnnotationSequence);
		tagList.add(TagFromName.AnnotationClipping);
		tagList.add(TagFromName.PresentationAnimationStyle);
		tagList.add(TagFromName.RecommendedAnimationRate);
		tagList.add(TagFromName.AnimationCurveSequence);
		tagList.add(TagFromName.AnimationStepSize);
		tagList.add(TagFromName.SwivelRange);
		tagList.add(TagFromName.VolumetricCurveUpDirections);
		tagList.add(TagFromName.VolumeStreamSequence);
		tagList.add(TagFromName.RGBATransferFunctionDescription);
		tagList.add(TagFromName.AdvancedBlendingSequence);
		tagList.add(TagFromName.BlendingInputNumber);
		tagList.add(TagFromName.BlendingDisplayInputSequence);
		tagList.add(TagFromName.BlendingDisplaySequence);
		tagList.add(TagFromName.BlendingMode);
		tagList.add(TagFromName.TimeSeriesBlending);
		tagList.add(TagFromName.GeometryForDisplay);
		tagList.add(TagFromName.ThresholdSequence);
		tagList.add(TagFromName.ThresholdValueSequence);
		tagList.add(TagFromName.ThresholdType);
		tagList.add(TagFromName.ThresholdValue);
		tagList.add(TagFromName.HangingProtocolName);
		tagList.add(TagFromName.HangingProtocolDescription);
		tagList.add(TagFromName.HangingProtocolLevel);
		tagList.add(TagFromName.HangingProtocolCreator);
		tagList.add(TagFromName.HangingProtocolCreationDateTime);
		tagList.add(TagFromName.HangingProtocolDefinitionSequence);
		tagList.add(TagFromName.HangingProtocolUserIdentificationCodeSequence);
		tagList.add(TagFromName.HangingProtocolUserGroupName);
		tagList.add(TagFromName.SourceHangingProtocolSequence);
		tagList.add(TagFromName.NumberOfPriorsReferenced);
		tagList.add(TagFromName.ImageSetsSequence);
		tagList.add(TagFromName.ImageSetSelectorSequence);
		tagList.add(TagFromName.ImageSetSelectorUsageFlag);
		tagList.add(TagFromName.SelectorAttribute);
		tagList.add(TagFromName.SelectorValueNumber);
		tagList.add(TagFromName.TimeBasedImageSetsSequence);
		tagList.add(TagFromName.ImageSetNumber);
		tagList.add(TagFromName.ImageSetSelectorCategory);
		tagList.add(TagFromName.RelativeTime);
		tagList.add(TagFromName.RelativeTimeUnits);
		tagList.add(TagFromName.AbstractPriorValue);
		tagList.add(TagFromName.AbstractPriorCodeSequence);
		tagList.add(TagFromName.ImageSetLabel);
		tagList.add(TagFromName.SelectorAttributeVR);
		tagList.add(TagFromName.SelectorSequencePointer);
		tagList.add(TagFromName.SelectorSequencePointerPrivateCreator);
		tagList.add(TagFromName.SelectorAttributePrivateCreator);
		tagList.add(TagFromName.SelectorAEValue);
		tagList.add(TagFromName.SelectorASValue);
		tagList.add(TagFromName.SelectorATValue);
		tagList.add(TagFromName.SelectorDAValue);
		tagList.add(TagFromName.SelectorCSValue);
		tagList.add(TagFromName.SelectorDTValue);
		tagList.add(TagFromName.SelectorISValue);
		tagList.add(TagFromName.SelectorOBValue);
		tagList.add(TagFromName.SelectorLOValue);
		tagList.add(TagFromName.SelectorOFValue);
		tagList.add(TagFromName.SelectorLTValue);
		tagList.add(TagFromName.SelectorOWValue);
		tagList.add(TagFromName.SelectorPNValue);
		tagList.add(TagFromName.SelectorTMValue);
		tagList.add(TagFromName.SelectorSHValue);
		tagList.add(TagFromName.SelectorUNValue);
		tagList.add(TagFromName.SelectorSTValue);
		tagList.add(TagFromName.SelectorUCValue);
		tagList.add(TagFromName.SelectorUTValue);
		tagList.add(TagFromName.SelectorURValue);
		tagList.add(TagFromName.SelectorDSValue);
		tagList.add(TagFromName.SelectorODValue);
		tagList.add(TagFromName.SelectorFDValue);
		tagList.add(TagFromName.SelectorOLValue);
		tagList.add(TagFromName.SelectorFLValue);
		tagList.add(TagFromName.SelectorULValue);
		tagList.add(TagFromName.SelectorUSValue);
		tagList.add(TagFromName.SelectorSLValue);
		tagList.add(TagFromName.SelectorSSValue);
		tagList.add(TagFromName.SelectorUIValue);
		tagList.add(TagFromName.SelectorCodeSequenceValue);
		tagList.add(TagFromName.NumberOfScreens);
		tagList.add(TagFromName.NominalScreenDefinitionSequence);
		tagList.add(TagFromName.NumberOfVerticalPixels);
		tagList.add(TagFromName.NumberOfHorizontalPixels);
		tagList.add(TagFromName.DisplayEnvironmentSpatialPosition);
		tagList.add(TagFromName.ScreenMinimumGrayscaleBitDepth);
		tagList.add(TagFromName.ScreenMinimumColorBitDepth);
		tagList.add(TagFromName.ApplicationMaximumRepaintTime);
		tagList.add(TagFromName.DisplaySetsSequence);
		tagList.add(TagFromName.DisplaySetNumber);
		tagList.add(TagFromName.DisplaySetLabel);
		tagList.add(TagFromName.DisplaySetPresentationGroup);
		tagList.add(TagFromName.DisplaySetPresentationGroupDescription);
		tagList.add(TagFromName.PartialDataDisplayHandling);
		tagList.add(TagFromName.SynchronizedScrollingSequence);
		tagList.add(TagFromName.DisplaySetScrollingGroup);
		tagList.add(TagFromName.NavigationIndicatorSequence);
		tagList.add(TagFromName.NavigationDisplaySet);
		tagList.add(TagFromName.ReferenceDisplaySets);
		tagList.add(TagFromName.ImageBoxesSequence);
		tagList.add(TagFromName.ImageBoxNumber);
		tagList.add(TagFromName.ImageBoxLayoutType);
		tagList.add(TagFromName.ImageBoxTileHorizontalDimension);
		tagList.add(TagFromName.ImageBoxTileVerticalDimension);
		tagList.add(TagFromName.ImageBoxScrollDirection);
		tagList.add(TagFromName.ImageBoxSmallScrollType);
		tagList.add(TagFromName.ImageBoxSmallScrollAmount);
		tagList.add(TagFromName.ImageBoxLargeScrollType);
		tagList.add(TagFromName.ImageBoxLargeScrollAmount);
		tagList.add(TagFromName.ImageBoxOverlapPriority);
		tagList.add(TagFromName.CineRelativeToRealTime);
		tagList.add(TagFromName.FilterOperationsSequence);
		tagList.add(TagFromName.FilterByCategory);
		tagList.add(TagFromName.FilterByAttributePresence);
		tagList.add(TagFromName.FilterByOperator);
		tagList.add(TagFromName.StructuredDisplayBackgroundCIELabValue);
		tagList.add(TagFromName.EmptyImageBoxCIELabValue);
		tagList.add(TagFromName.StructuredDisplayImageBoxSequence);
		tagList.add(TagFromName.StructuredDisplayTextBoxSequence);
		tagList.add(TagFromName.ReferencedFirstFrameSequence);
		tagList.add(TagFromName.ImageBoxSynchronizationSequence);
		tagList.add(TagFromName.SynchronizedImageBoxList);
		tagList.add(TagFromName.TypeOfSynchronization);
		tagList.add(TagFromName.BlendingOperationType);
		tagList.add(TagFromName.ReformattingOperationType);
		tagList.add(TagFromName.ReformattingThickness);
		tagList.add(TagFromName.ReformattingInterval);
		tagList.add(TagFromName.ReformattingOperationInitialViewDirection);
		tagList.add(TagFromName.ThreeDRenderingType);
		tagList.add(TagFromName.SortingOperationsSequence);
		tagList.add(TagFromName.SortByCategory);
		tagList.add(TagFromName.SortingDirection);
		tagList.add(TagFromName.DisplaySetPatientOrientation);
		tagList.add(TagFromName.VOIType);
		tagList.add(TagFromName.PseudoColorType);
		tagList.add(TagFromName.PseudoColorPaletteInstanceReferenceSequence);
		tagList.add(TagFromName.ShowGrayscaleInverted);
		tagList.add(TagFromName.ShowImageTrueSizeFlag);
		tagList.add(TagFromName.ShowGraphicAnnotationFlag);
		tagList.add(TagFromName.ShowPatientDemographicsFlag);
		tagList.add(TagFromName.ShowAcquisitionTechniquesFlag);
		tagList.add(TagFromName.DisplaySetHorizontalJustification);
		tagList.add(TagFromName.DisplaySetVerticalJustification);
		tagList.add(TagFromName.ContinuationStartMeterset);
		tagList.add(TagFromName.ContinuationEndMeterset);
		tagList.add(TagFromName.ProcedureStepState);
		tagList.add(TagFromName.ProcedureStepProgressInformationSequence);
		tagList.add(TagFromName.ProcedureStepProgress);
		tagList.add(TagFromName.ProcedureStepProgressDescription);
		tagList.add(TagFromName.ProcedureStepProgressParametersSequence);
		tagList.add(TagFromName.ProcedureStepCommunicationsURISequence);
		tagList.add(TagFromName.ContactURI);
		tagList.add(TagFromName.ContactDisplayName);
		tagList.add(TagFromName.ProcedureStepDiscontinuationReasonCodeSequence);
		tagList.add(TagFromName.BeamTaskSequence);
		tagList.add(TagFromName.BeamTaskType);
		tagList.add(TagFromName.BeamOrderIndexTrial);
		tagList.add(TagFromName.AutosequenceFlag);
		tagList.add(TagFromName.TableTopVerticalAdjustedPosition);
		tagList.add(TagFromName.TableTopLongitudinalAdjustedPosition);
		tagList.add(TagFromName.TableTopLateralAdjustedPosition);
		tagList.add(TagFromName.PatientSupportAdjustedAngle);
		tagList.add(TagFromName.TableTopEccentricAdjustedAngle);
		tagList.add(TagFromName.TableTopPitchAdjustedAngle);
		tagList.add(TagFromName.TableTopRollAdjustedAngle);
		tagList.add(TagFromName.DeliveryVerificationImageSequence);
		tagList.add(TagFromName.VerificationImageTiming);
		tagList.add(TagFromName.DoubleExposureFlag);
		tagList.add(TagFromName.DoubleExposureOrdering);
		tagList.add(TagFromName.DoubleExposureMetersetTrial);
		tagList.add(TagFromName.DoubleExposureFieldDeltaTrial);
		tagList.add(TagFromName.RelatedReferenceRTImageSequence);
		tagList.add(TagFromName.GeneralMachineVerificationSequence);
		tagList.add(TagFromName.ConventionalMachineVerificationSequence);
		tagList.add(TagFromName.IonMachineVerificationSequence);
		tagList.add(TagFromName.FailedAttributesSequence);
		tagList.add(TagFromName.OverriddenAttributesSequence);
		tagList.add(TagFromName.ConventionalControlPointVerificationSequence);
		tagList.add(TagFromName.IonControlPointVerificationSequence);
		tagList.add(TagFromName.AttributeOccurrenceSequence);
		tagList.add(TagFromName.AttributeOccurrencePointer);
		tagList.add(TagFromName.AttributeItemSelector);
		tagList.add(TagFromName.AttributeOccurrencePrivateCreator);
		tagList.add(TagFromName.SelectorSequencePointerItems);
		tagList.add(TagFromName.ScheduledProcedureStepPriority);
		tagList.add(TagFromName.WorklistLabel);
		tagList.add(TagFromName.ProcedureStepLabel);
		tagList.add(TagFromName.ScheduledProcessingParametersSequence);
		tagList.add(TagFromName.PerformedProcessingParametersSequence);
		tagList.add(TagFromName.UnifiedProcedureStepPerformedProcedureSequence);
		tagList.add(TagFromName.RelatedProcedureStepSequence);
		tagList.add(TagFromName.ProcedureStepRelationshipType);
		tagList.add(TagFromName.ReplacedProcedureStepSequence);
		tagList.add(TagFromName.DeletionLock);
		tagList.add(TagFromName.ReceivingAE);
		tagList.add(TagFromName.RequestingAE);
		tagList.add(TagFromName.ReasonForCancellation);
		tagList.add(TagFromName.SCPStatus);
		tagList.add(TagFromName.SubscriptionListStatus);
		tagList.add(TagFromName.UnifiedProcedureStepListStatus);
		tagList.add(TagFromName.BeamOrderIndex);
		tagList.add(TagFromName.DoubleExposureMeterset);
		tagList.add(TagFromName.DoubleExposureFieldDelta);
		tagList.add(TagFromName.BrachyTaskSequence);
		tagList.add(TagFromName.ContinuationStartTotalReferenceAirKerma);
		tagList.add(TagFromName.ContinuationEndTotalReferenceAirKerma);
		tagList.add(TagFromName.ContinuationPulseNumber);
		tagList.add(TagFromName.ChannelDeliveryOrderSequence);
		tagList.add(TagFromName.ReferencedChannelNumber);
		tagList.add(TagFromName.StartCumulativeTimeWeight);
		tagList.add(TagFromName.EndCumulativeTimeWeight);
		tagList.add(TagFromName.OmittedChannelSequence);
		tagList.add(TagFromName.ReasonForChannelOmission);
		tagList.add(TagFromName.ReasonForChannelOmissionDescription);
		tagList.add(TagFromName.ChannelDeliveryOrderIndex);
		tagList.add(TagFromName.ChannelDeliveryContinuationSequence);
		tagList.add(TagFromName.OmittedApplicationSetupSequence);
		tagList.add(TagFromName.ImplantAssemblyTemplateName);
		tagList.add(TagFromName.ImplantAssemblyTemplateIssuer);
		tagList.add(TagFromName.ImplantAssemblyTemplateVersion);
		tagList.add(TagFromName.ReplacedImplantAssemblyTemplateSequence);
		tagList.add(TagFromName.ImplantAssemblyTemplateType);
		tagList.add(TagFromName.OriginalImplantAssemblyTemplateSequence);
		tagList.add(TagFromName.DerivationImplantAssemblyTemplateSequence);
		tagList.add(TagFromName.ImplantAssemblyTemplateTargetAnatomySequence);
		tagList.add(TagFromName.ProcedureTypeCodeSequence);
		tagList.add(TagFromName.SurgicalTechnique);
		tagList.add(TagFromName.ComponentTypesSequence);
		tagList.add(TagFromName.ComponentTypeCodeSequence);
		tagList.add(TagFromName.ExclusiveComponentType);
		tagList.add(TagFromName.MandatoryComponentType);
		tagList.add(TagFromName.ComponentSequence);
		tagList.add(TagFromName.ComponentID);
		tagList.add(TagFromName.ComponentAssemblySequence);
		tagList.add(TagFromName.Component1ReferencedID);
		tagList.add(TagFromName.Component1ReferencedMatingFeatureSetID);
		tagList.add(TagFromName.Component1ReferencedMatingFeatureID);
		tagList.add(TagFromName.Component2ReferencedID);
		tagList.add(TagFromName.Component2ReferencedMatingFeatureSetID);
		tagList.add(TagFromName.Component2ReferencedMatingFeatureID);
		tagList.add(TagFromName.ImplantTemplateGroupName);
		tagList.add(TagFromName.ImplantTemplateGroupDescription);
		tagList.add(TagFromName.ImplantTemplateGroupIssuer);
		tagList.add(TagFromName.ImplantTemplateGroupVersion);
		tagList.add(TagFromName.ReplacedImplantTemplateGroupSequence);
		tagList.add(TagFromName.ImplantTemplateGroupTargetAnatomySequence);
		tagList.add(TagFromName.ImplantTemplateGroupMembersSequence);
		tagList.add(TagFromName.ImplantTemplateGroupMemberID);
		tagList.add(TagFromName.ThreeDImplantTemplateGroupMemberMatchingPoint);
		tagList.add(TagFromName.ThreeDImplantTemplateGroupMemberMatchingAxes);
		tagList.add(TagFromName.ImplantTemplateGroupMemberMatching2DCoordinatesSequence);
		tagList.add(TagFromName.TwoDImplantTemplateGroupMemberMatchingPoint);
		tagList.add(TagFromName.TwoDImplantTemplateGroupMemberMatchingAxes);
		tagList.add(TagFromName.ImplantTemplateGroupVariationDimensionSequence);
		tagList.add(TagFromName.ImplantTemplateGroupVariationDimensionName);
		tagList.add(TagFromName.ImplantTemplateGroupVariationDimensionRankSequence);
		tagList.add(TagFromName.ReferencedImplantTemplateGroupMemberID);
		tagList.add(TagFromName.ImplantTemplateGroupVariationDimensionRank);
		tagList.add(TagFromName.SurfaceScanAcquisitionTypeCodeSequence);
		tagList.add(TagFromName.SurfaceScanModeCodeSequence);
		tagList.add(TagFromName.RegistrationMethodCodeSequence);
		tagList.add(TagFromName.ShotDurationTime);
		tagList.add(TagFromName.ShotOffsetTime);
		tagList.add(TagFromName.SurfacePointPresentationValueData);
		tagList.add(TagFromName.SurfacePointColorCIELabValueData);
		tagList.add(TagFromName.UVMappingSequence);
		tagList.add(TagFromName.TextureLabel);
		tagList.add(TagFromName.UValueData);
		tagList.add(TagFromName.VValueData);
		tagList.add(TagFromName.ReferencedTextureSequence);
		tagList.add(TagFromName.ReferencedSurfaceDataSequence);
		tagList.add(TagFromName.AssessmentSummary);
		tagList.add(TagFromName.AssessmentSummaryDescription);
		tagList.add(TagFromName.AssessedSOPInstanceSequence);
		tagList.add(TagFromName.ReferencedComparisonSOPInstanceSequence);
		tagList.add(TagFromName.NumberOfAssessmentObservations);
		tagList.add(TagFromName.AssessmentObservationsSequence);
		tagList.add(TagFromName.ObservationSignificance);
		tagList.add(TagFromName.ObservationDescription);
		tagList.add(TagFromName.StructuredContraintObservationSequence);
		tagList.add(TagFromName.AssessedAttributeValueSequence);
		tagList.add(TagFromName.AssessmentSetID);
		tagList.add(TagFromName.AssessmentRequesterSequence);
		tagList.add(TagFromName.SelectorAttributeName);
		tagList.add(TagFromName.SelectorAttributeKeyword);
		tagList.add(TagFromName.AssessmentTypeCodeSequence);
		tagList.add(TagFromName.ObservationBasisCodeSequence);
		tagList.add(TagFromName.AssessmentLabel);
		tagList.add(TagFromName.ConstraintType);
		tagList.add(TagFromName.SpecificationSelectionGuidance);
		tagList.add(TagFromName.ConstraintValueSequence);
		tagList.add(TagFromName.RecommendedDefaultValueSequence);
		tagList.add(TagFromName.ConstraintViolationSignificance);
		tagList.add(TagFromName.ConstraintViolationCondition);
		tagList.add(TagFromName.ModifiableConstraintFlag);
		tagList.add(TagFromName.StorageMediaFileSetID);
		tagList.add(TagFromName.StorageMediaFileSetUID);
		tagList.add(TagFromName.IconImageSequence);
		tagList.add(TagFromName.TopicTitle);
		tagList.add(TagFromName.TopicSubject);
		tagList.add(TagFromName.TopicAuthor);
		tagList.add(TagFromName.TopicKeywords);
		tagList.add(TagFromName.SOPInstanceStatus);
		tagList.add(TagFromName.SOPAuthorizationDateTime);
		tagList.add(TagFromName.SOPAuthorizationComment);
		tagList.add(TagFromName.AuthorizationEquipmentCertificationNumber);
		tagList.add(TagFromName.MACIDNumber);
		tagList.add(TagFromName.MACCalculationTransferSyntaxUID);
		tagList.add(TagFromName.MACAlgorithm);
		tagList.add(TagFromName.DataElementsSigned);
		tagList.add(TagFromName.DigitalSignatureUID);
		tagList.add(TagFromName.DigitalSignatureDateTime);
		tagList.add(TagFromName.CertificateType);
		tagList.add(TagFromName.CertificateOfSigner);
		tagList.add(TagFromName.Signature);
		tagList.add(TagFromName.CertifiedTimestampType);
		tagList.add(TagFromName.CertifiedTimestamp);
		tagList.add(TagFromName.DigitalSignaturePurposeCodeSequence);
		tagList.add(TagFromName.ReferencedDigitalSignatureSequence);
		tagList.add(TagFromName.ReferencedSOPInstanceMACSequence);
		tagList.add(TagFromName.MAC);
		tagList.add(TagFromName.EncryptedAttributesSequence);
		tagList.add(TagFromName.EncryptedContentTransferSyntaxUID);
		tagList.add(TagFromName.EncryptedContent);
		tagList.add(TagFromName.ModifiedAttributesSequence);
		tagList.add(TagFromName.OriginalAttributesSequence);
		tagList.add(TagFromName.AttributeModificationDateTime);
		tagList.add(TagFromName.ModifyingSystem);
		tagList.add(TagFromName.SourceOfPreviousValues);
		tagList.add(TagFromName.ReasonForTheAttributeModification);
		tagList.add(TagFromName.InstanceOriginStatus);
		tagList.add(TagFromName.ZonalMap);
		tagList.add(TagFromName.NumberOfCopies);
		tagList.add(TagFromName.PrinterConfigurationSequence);
		tagList.add(TagFromName.PrintPriority);
		tagList.add(TagFromName.MediumType);
		tagList.add(TagFromName.FilmDestination);
		tagList.add(TagFromName.FilmSessionLabel);
		tagList.add(TagFromName.MemoryAllocation);
		tagList.add(TagFromName.MaximumMemoryAllocation);
		tagList.add(TagFromName.ColorImagePrintingFlag);
		tagList.add(TagFromName.CollationFlag);
		tagList.add(TagFromName.AnnotationFlag);
		tagList.add(TagFromName.ImageOverlayFlag);
		tagList.add(TagFromName.PresentationLUTFlag);
		tagList.add(TagFromName.ImageBoxPresentationLUTFlag);
		tagList.add(TagFromName.MemoryBitDepth);
		tagList.add(TagFromName.PrintingBitDepth);
		tagList.add(TagFromName.MediaInstalledSequence);
		tagList.add(TagFromName.OtherMediaAvailableSequence);
		tagList.add(TagFromName.SupportedImageDisplayFormatsSequence);
		tagList.add(TagFromName.ReferencedFilmBoxSequence);
		tagList.add(TagFromName.ReferencedStoredPrintSequence);
		tagList.add(TagFromName.ImageDisplayFormat);
		tagList.add(TagFromName.AnnotationDisplayFormatID);
		tagList.add(TagFromName.FilmOrientation);
		tagList.add(TagFromName.FilmSizeID);
		tagList.add(TagFromName.PrinterResolutionID);
		tagList.add(TagFromName.DefaultPrinterResolutionID);
		tagList.add(TagFromName.MagnificationType);
		tagList.add(TagFromName.SmoothingType);
		tagList.add(TagFromName.DefaultMagnificationType);
		tagList.add(TagFromName.OtherMagnificationTypesAvailable);
		tagList.add(TagFromName.DefaultSmoothingType);
		tagList.add(TagFromName.OtherSmoothingTypesAvailable);
		tagList.add(TagFromName.BorderDensity);
		tagList.add(TagFromName.EmptyImageDensity);
		tagList.add(TagFromName.MinDensity);
		tagList.add(TagFromName.MaxDensity);
		tagList.add(TagFromName.Trim);
		tagList.add(TagFromName.ConfigurationInformation);
		tagList.add(TagFromName.ConfigurationInformationDescription);
		tagList.add(TagFromName.MaximumCollatedFilms);
		tagList.add(TagFromName.Illumination);
		tagList.add(TagFromName.ReflectedAmbientLight);
		tagList.add(TagFromName.PrinterPixelSpacing);
		tagList.add(TagFromName.ReferencedFilmSessionSequence);
		tagList.add(TagFromName.ReferencedImageBoxSequence);
		tagList.add(TagFromName.ReferencedBasicAnnotationBoxSequence);
		tagList.add(TagFromName.ImageBoxPosition);
		tagList.add(TagFromName.Polarity);
		tagList.add(TagFromName.RequestedImageSize);
		tagList.add(TagFromName.RequestedDecimateCropBehavior);
		tagList.add(TagFromName.RequestedResolutionID);
		tagList.add(TagFromName.RequestedImageSizeFlag);
		tagList.add(TagFromName.DecimateCropResult);
		tagList.add(TagFromName.BasicGrayscaleImageSequence);
		tagList.add(TagFromName.BasicColorImageSequence);
		tagList.add(TagFromName.ReferencedImageOverlayBoxSequence);
		tagList.add(TagFromName.ReferencedVOILUTBoxSequence);
		tagList.add(TagFromName.AnnotationPosition);
		tagList.add(TagFromName.TextString);
		tagList.add(TagFromName.ReferencedOverlayPlaneSequence);
		tagList.add(TagFromName.ReferencedOverlayPlaneGroups);
		tagList.add(TagFromName.OverlayPixelDataSequence);
		tagList.add(TagFromName.OverlayMagnificationType);
		tagList.add(TagFromName.OverlaySmoothingType);
		tagList.add(TagFromName.OverlayOrImageMagnification);
		tagList.add(TagFromName.MagnifyToNumberOfColumns);
		tagList.add(TagFromName.OverlayForegroundDensity);
		tagList.add(TagFromName.OverlayBackgroundDensity);
		tagList.add(TagFromName.OverlayMode);
		tagList.add(TagFromName.ThresholdDensity);
		tagList.add(TagFromName.ReferencedImageBoxSequenceRetired);
		tagList.add(TagFromName.PresentationLUTSequence);
		tagList.add(TagFromName.PresentationLUTShape);
		tagList.add(TagFromName.ReferencedPresentationLUTSequence);
		tagList.add(TagFromName.PrintJobID);
		tagList.add(TagFromName.ExecutionStatus);
		tagList.add(TagFromName.ExecutionStatusInfo);
		tagList.add(TagFromName.CreationDate);
		tagList.add(TagFromName.CreationTime);
		tagList.add(TagFromName.Originator);
		tagList.add(TagFromName.DestinationAE);
		tagList.add(TagFromName.OwnerID);
		tagList.add(TagFromName.NumberOfFilms);
		tagList.add(TagFromName.ReferencedPrintJobSequencePullStoredPrint);
		tagList.add(TagFromName.PrinterStatus);
		tagList.add(TagFromName.PrinterStatusInfo);
		tagList.add(TagFromName.PrinterName);
		tagList.add(TagFromName.PrintQueueID);
		tagList.add(TagFromName.QueueStatus);
		tagList.add(TagFromName.PrintJobDescriptionSequence);
		tagList.add(TagFromName.ReferencedPrintJobSequence);
		tagList.add(TagFromName.PrintManagementCapabilitiesSequence);
		tagList.add(TagFromName.PrinterCharacteristicsSequence);
		tagList.add(TagFromName.FilmBoxContentSequence);
		tagList.add(TagFromName.ImageBoxContentSequence);
		tagList.add(TagFromName.AnnotationContentSequence);
		tagList.add(TagFromName.ImageOverlayBoxContentSequence);
		tagList.add(TagFromName.PresentationLUTContentSequence);
		tagList.add(TagFromName.ProposedStudySequence);
		tagList.add(TagFromName.OriginalImageSequence);
		tagList.add(TagFromName.LabelUsingInformationExtractedFromInstances);
		tagList.add(TagFromName.LabelText);
		tagList.add(TagFromName.LabelStyleSelection);
		tagList.add(TagFromName.MediaDisposition);
		tagList.add(TagFromName.BarcodeValue);
		tagList.add(TagFromName.BarcodeSymbology);
		tagList.add(TagFromName.AllowMediaSplitting);
		tagList.add(TagFromName.IncludeNonDICOMObjects);
		tagList.add(TagFromName.IncludeDisplayApplication);
		tagList.add(TagFromName.PreserveCompositeInstancesAfterMediaCreation);
		tagList.add(TagFromName.TotalNumberOfPiecesOfMediaCreated);
		tagList.add(TagFromName.RequestedMediaApplicationProfile);
		tagList.add(TagFromName.ReferencedStorageMediaSequence);
		tagList.add(TagFromName.FailureAttributes);
		tagList.add(TagFromName.AllowLossyCompression);
		tagList.add(TagFromName.RequestPriority);
		tagList.add(TagFromName.RTImageLabel);
		tagList.add(TagFromName.RTImageName);
		tagList.add(TagFromName.RTImageDescription);
		tagList.add(TagFromName.ReportedValuesOrigin);
		tagList.add(TagFromName.RTImagePlane);
		tagList.add(TagFromName.XRayImageReceptorTranslation);
		tagList.add(TagFromName.XRayImageReceptorAngle);
		tagList.add(TagFromName.RTImageOrientation);
		tagList.add(TagFromName.ImagePlanePixelSpacing);
		tagList.add(TagFromName.RTImagePosition);
		tagList.add(TagFromName.RadiationMachineName);
		tagList.add(TagFromName.RadiationMachineSAD);
		tagList.add(TagFromName.RadiationMachineSSD);
		tagList.add(TagFromName.RTImageSID);
		tagList.add(TagFromName.SourceToReferenceObjectDistance);
		tagList.add(TagFromName.FractionNumber);
		tagList.add(TagFromName.ExposureSequence);
		tagList.add(TagFromName.MetersetExposure);
		tagList.add(TagFromName.DiaphragmPosition);
		tagList.add(TagFromName.FluenceMapSequence);
		tagList.add(TagFromName.FluenceDataSource);
		tagList.add(TagFromName.FluenceDataScale);
		tagList.add(TagFromName.PrimaryFluenceModeSequence);
		tagList.add(TagFromName.FluenceMode);
		tagList.add(TagFromName.FluenceModeID);
		tagList.add(TagFromName.DVHType);
		tagList.add(TagFromName.DoseUnits);
		tagList.add(TagFromName.DoseType);
		tagList.add(TagFromName.SpatialTransformOfDose);
		tagList.add(TagFromName.DoseComment);
		tagList.add(TagFromName.NormalizationPoint);
		tagList.add(TagFromName.DoseSummationType);
		tagList.add(TagFromName.GridFrameOffsetVector);
		tagList.add(TagFromName.DoseGridScaling);
		tagList.add(TagFromName.RTDoseROISequence);
		tagList.add(TagFromName.DoseValue);
		tagList.add(TagFromName.TissueHeterogeneityCorrection);
		tagList.add(TagFromName.DVHNormalizationPoint);
		tagList.add(TagFromName.DVHNormalizationDoseValue);
		tagList.add(TagFromName.DVHSequence);
		tagList.add(TagFromName.DVHDoseScaling);
		tagList.add(TagFromName.DVHVolumeUnits);
		tagList.add(TagFromName.DVHNumberOfBins);
		tagList.add(TagFromName.DVHData);
		tagList.add(TagFromName.DVHReferencedROISequence);
		tagList.add(TagFromName.DVHROIContributionType);
		tagList.add(TagFromName.DVHMinimumDose);
		tagList.add(TagFromName.DVHMaximumDose);
		tagList.add(TagFromName.DVHMeanDose);
		tagList.add(TagFromName.StructureSetLabel);
		tagList.add(TagFromName.StructureSetName);
		tagList.add(TagFromName.StructureSetDescription);
		tagList.add(TagFromName.StructureSetDate);
		tagList.add(TagFromName.StructureSetTime);
		tagList.add(TagFromName.ReferencedFrameOfReferenceSequence);
		tagList.add(TagFromName.RTReferencedStudySequence);
		tagList.add(TagFromName.RTReferencedSeriesSequence);
		tagList.add(TagFromName.ContourImageSequence);
		tagList.add(TagFromName.PredecessorStructureSetSequence);
		tagList.add(TagFromName.StructureSetROISequence);
		tagList.add(TagFromName.ROINumber);
		tagList.add(TagFromName.ReferencedFrameOfReferenceUID);
		tagList.add(TagFromName.ROIName);
		tagList.add(TagFromName.ROIDescription);
		tagList.add(TagFromName.ROIDisplayColor);
		tagList.add(TagFromName.ROIVolume);
		tagList.add(TagFromName.RTRelatedROISequence);
		tagList.add(TagFromName.RTROIRelationship);
		tagList.add(TagFromName.ROIGenerationAlgorithm);
		tagList.add(TagFromName.ROIGenerationDescription);
		tagList.add(TagFromName.ROIContourSequence);
		tagList.add(TagFromName.ContourSequence);
		tagList.add(TagFromName.ContourGeometricType);
		tagList.add(TagFromName.ContourSlabThickness);
		tagList.add(TagFromName.ContourOffsetVector);
		tagList.add(TagFromName.NumberOfContourPoints);
		tagList.add(TagFromName.ContourNumber);
		tagList.add(TagFromName.AttachedContours);
		tagList.add(TagFromName.ContourData);
		tagList.add(TagFromName.RTROIObservationsSequence);
		tagList.add(TagFromName.ObservationNumber);
		tagList.add(TagFromName.ReferencedROINumber);
		tagList.add(TagFromName.ROIObservationLabel);
		tagList.add(TagFromName.RTROIIdentificationCodeSequence);
		tagList.add(TagFromName.ROIObservationDescription);
		tagList.add(TagFromName.RelatedRTROIObservationsSequence);
		tagList.add(TagFromName.RTROIInterpretedType);
		tagList.add(TagFromName.ROIInterpreter);
		tagList.add(TagFromName.ROIPhysicalPropertiesSequence);
		tagList.add(TagFromName.ROIPhysicalProperty);
		tagList.add(TagFromName.ROIPhysicalPropertyValue);
		tagList.add(TagFromName.ROIElementalCompositionSequence);
		tagList.add(TagFromName.ROIElementalCompositionAtomicNumber);
		tagList.add(TagFromName.ROIElementalCompositionAtomicMassFraction);
		tagList.add(TagFromName.AdditionalRTROIClassificationCodeSequence);
		tagList.add(TagFromName.FrameOfReferenceRelationshipSequence);
		tagList.add(TagFromName.RelatedFrameOfReferenceUID);
		tagList.add(TagFromName.FrameOfReferenceTransformationType);
		tagList.add(TagFromName.FrameOfReferenceTransformationMatrix);
		tagList.add(TagFromName.FrameOfReferenceTransformationComment);
		tagList.add(TagFromName.MeasuredDoseReferenceSequence);
		tagList.add(TagFromName.MeasuredDoseDescription);
		tagList.add(TagFromName.MeasuredDoseType);
		tagList.add(TagFromName.MeasuredDoseValue);
		tagList.add(TagFromName.TreatmentSessionBeamSequence);
		tagList.add(TagFromName.TreatmentSessionIonBeamSequence);
		tagList.add(TagFromName.CurrentFractionNumber);
		tagList.add(TagFromName.TreatmentControlPointDate);
		tagList.add(TagFromName.TreatmentControlPointTime);
		tagList.add(TagFromName.TreatmentTerminationStatus);
		tagList.add(TagFromName.TreatmentTerminationCode);
		tagList.add(TagFromName.TreatmentVerificationStatus);
		tagList.add(TagFromName.ReferencedTreatmentRecordSequence);
		tagList.add(TagFromName.SpecifiedPrimaryMeterset);
		tagList.add(TagFromName.SpecifiedSecondaryMeterset);
		tagList.add(TagFromName.DeliveredPrimaryMeterset);
		tagList.add(TagFromName.DeliveredSecondaryMeterset);
		tagList.add(TagFromName.SpecifiedTreatmentTime);
		tagList.add(TagFromName.DeliveredTreatmentTime);
		tagList.add(TagFromName.ControlPointDeliverySequence);
		tagList.add(TagFromName.IonControlPointDeliverySequence);
		tagList.add(TagFromName.SpecifiedMeterset);
		tagList.add(TagFromName.DeliveredMeterset);
		tagList.add(TagFromName.MetersetRateSet);
		tagList.add(TagFromName.MetersetRateDelivered);
		tagList.add(TagFromName.ScanSpotMetersetsDelivered);
		tagList.add(TagFromName.DoseRateDelivered);
		tagList.add(TagFromName.TreatmentSummaryCalculatedDoseReferenceSequence);
		tagList.add(TagFromName.CumulativeDoseToDoseReference);
		tagList.add(TagFromName.FirstTreatmentDate);
		tagList.add(TagFromName.MostRecentTreatmentDate);
		tagList.add(TagFromName.NumberOfFractionsDelivered);
		tagList.add(TagFromName.OverrideSequence);
		tagList.add(TagFromName.ParameterSequencePointer);
		tagList.add(TagFromName.OverrideParameterPointer);
		tagList.add(TagFromName.ParameterItemIndex);
		tagList.add(TagFromName.MeasuredDoseReferenceNumber);
		tagList.add(TagFromName.ParameterPointer);
		tagList.add(TagFromName.OverrideReason);
		tagList.add(TagFromName.ParameterValueNumber);
		tagList.add(TagFromName.CorrectedParameterSequence);
		tagList.add(TagFromName.CorrectionValue);
		tagList.add(TagFromName.CalculatedDoseReferenceSequence);
		tagList.add(TagFromName.CalculatedDoseReferenceNumber);
		tagList.add(TagFromName.CalculatedDoseReferenceDescription);
		tagList.add(TagFromName.CalculatedDoseReferenceDoseValue);
		tagList.add(TagFromName.StartMeterset);
		tagList.add(TagFromName.EndMeterset);
		tagList.add(TagFromName.ReferencedMeasuredDoseReferenceSequence);
		tagList.add(TagFromName.ReferencedMeasuredDoseReferenceNumber);
		tagList.add(TagFromName.ReferencedCalculatedDoseReferenceSequence);
		tagList.add(TagFromName.ReferencedCalculatedDoseReferenceNumber);
		tagList.add(TagFromName.BeamLimitingDeviceLeafPairsSequence);
		tagList.add(TagFromName.RecordedWedgeSequence);
		tagList.add(TagFromName.RecordedCompensatorSequence);
		tagList.add(TagFromName.RecordedBlockSequence);
		tagList.add(TagFromName.TreatmentSummaryMeasuredDoseReferenceSequence);
		tagList.add(TagFromName.RecordedSnoutSequence);
		tagList.add(TagFromName.RecordedRangeShifterSequence);
		tagList.add(TagFromName.RecordedLateralSpreadingDeviceSequence);
		tagList.add(TagFromName.RecordedRangeModulatorSequence);
		tagList.add(TagFromName.RecordedSourceSequence);
		tagList.add(TagFromName.SourceSerialNumber);
		tagList.add(TagFromName.TreatmentSessionApplicationSetupSequence);
		tagList.add(TagFromName.ApplicationSetupCheck);
		tagList.add(TagFromName.RecordedBrachyAccessoryDeviceSequence);
		tagList.add(TagFromName.ReferencedBrachyAccessoryDeviceNumber);
		tagList.add(TagFromName.RecordedChannelSequence);
		tagList.add(TagFromName.SpecifiedChannelTotalTime);
		tagList.add(TagFromName.DeliveredChannelTotalTime);
		tagList.add(TagFromName.SpecifiedNumberOfPulses);
		tagList.add(TagFromName.DeliveredNumberOfPulses);
		tagList.add(TagFromName.SpecifiedPulseRepetitionInterval);
		tagList.add(TagFromName.DeliveredPulseRepetitionInterval);
		tagList.add(TagFromName.RecordedSourceApplicatorSequence);
		tagList.add(TagFromName.ReferencedSourceApplicatorNumber);
		tagList.add(TagFromName.RecordedChannelShieldSequence);
		tagList.add(TagFromName.ReferencedChannelShieldNumber);
		tagList.add(TagFromName.BrachyControlPointDeliveredSequence);
		tagList.add(TagFromName.SafePositionExitDate);
		tagList.add(TagFromName.SafePositionExitTime);
		tagList.add(TagFromName.SafePositionReturnDate);
		tagList.add(TagFromName.SafePositionReturnTime);
		tagList.add(TagFromName.PulseSpecificBrachyControlPointDeliveredSequence);
		tagList.add(TagFromName.PulseNumber);
		tagList.add(TagFromName.BrachyPulseControlPointDeliveredSequence);
		tagList.add(TagFromName.CurrentTreatmentStatus);
		tagList.add(TagFromName.TreatmentStatusComment);
		tagList.add(TagFromName.FractionGroupSummarySequence);
		tagList.add(TagFromName.ReferencedFractionNumber);
		tagList.add(TagFromName.FractionGroupType);
		tagList.add(TagFromName.BeamStopperPosition);
		tagList.add(TagFromName.FractionStatusSummarySequence);
		tagList.add(TagFromName.TreatmentDate);
		tagList.add(TagFromName.TreatmentTime);
		tagList.add(TagFromName.RTPlanLabel);
		tagList.add(TagFromName.RTPlanName);
		tagList.add(TagFromName.RTPlanDescription);
		tagList.add(TagFromName.RTPlanDate);
		tagList.add(TagFromName.RTPlanTime);
		tagList.add(TagFromName.TreatmentProtocols);
		tagList.add(TagFromName.PlanIntent);
		tagList.add(TagFromName.TreatmentSites);
		tagList.add(TagFromName.RTPlanGeometry);
		tagList.add(TagFromName.PrescriptionDescription);
		tagList.add(TagFromName.DoseReferenceSequence);
		tagList.add(TagFromName.DoseReferenceNumber);
		tagList.add(TagFromName.DoseReferenceUID);
		tagList.add(TagFromName.DoseReferenceStructureType);
		tagList.add(TagFromName.NominalBeamEnergyUnit);
		tagList.add(TagFromName.DoseReferenceDescription);
		tagList.add(TagFromName.DoseReferencePointCoordinates);
		tagList.add(TagFromName.NominalPriorDose);
		tagList.add(TagFromName.DoseReferenceType);
		tagList.add(TagFromName.ConstraintWeight);
		tagList.add(TagFromName.DeliveryWarningDose);
		tagList.add(TagFromName.DeliveryMaximumDose);
		tagList.add(TagFromName.TargetMinimumDose);
		tagList.add(TagFromName.TargetPrescriptionDose);
		tagList.add(TagFromName.TargetMaximumDose);
		tagList.add(TagFromName.TargetUnderdoseVolumeFraction);
		tagList.add(TagFromName.OrganAtRiskFullVolumeDose);
		tagList.add(TagFromName.OrganAtRiskLimitDose);
		tagList.add(TagFromName.OrganAtRiskMaximumDose);
		tagList.add(TagFromName.OrganAtRiskOverdoseVolumeFraction);
		tagList.add(TagFromName.ToleranceTableSequence);
		tagList.add(TagFromName.ToleranceTableNumber);
		tagList.add(TagFromName.ToleranceTableLabel);
		tagList.add(TagFromName.GantryAngleTolerance);
		tagList.add(TagFromName.BeamLimitingDeviceAngleTolerance);
		tagList.add(TagFromName.BeamLimitingDeviceToleranceSequence);
		tagList.add(TagFromName.BeamLimitingDevicePositionTolerance);
		tagList.add(TagFromName.SnoutPositionTolerance);
		tagList.add(TagFromName.PatientSupportAngleTolerance);
		tagList.add(TagFromName.TableTopEccentricAngleTolerance);
		tagList.add(TagFromName.TableTopPitchAngleTolerance);
		tagList.add(TagFromName.TableTopRollAngleTolerance);
		tagList.add(TagFromName.TableTopVerticalPositionTolerance);
		tagList.add(TagFromName.TableTopLongitudinalPositionTolerance);
		tagList.add(TagFromName.TableTopLateralPositionTolerance);
		tagList.add(TagFromName.RTPlanRelationship);
		tagList.add(TagFromName.FractionGroupSequence);
		tagList.add(TagFromName.FractionGroupNumber);
		tagList.add(TagFromName.FractionGroupDescription);
		tagList.add(TagFromName.NumberOfFractionsPlanned);
		tagList.add(TagFromName.NumberOfFractionPatternDigitsPerDay);
		tagList.add(TagFromName.RepeatFractionCycleLength);
		tagList.add(TagFromName.FractionPattern);
		tagList.add(TagFromName.NumberOfBeams);
		tagList.add(TagFromName.BeamDoseSpecificationPoint);
		tagList.add(TagFromName.ReferencedDoseReferenceUID);
		tagList.add(TagFromName.BeamDose);
		tagList.add(TagFromName.BeamMeterset);
		tagList.add(TagFromName.BeamDosePointDepth);
		tagList.add(TagFromName.BeamDosePointEquivalentDepth);
		tagList.add(TagFromName.BeamDosePointSSD);
		tagList.add(TagFromName.BeamDoseMeaning);
		tagList.add(TagFromName.BeamDoseVerificationControlPointSequence);
		tagList.add(TagFromName.AverageBeamDosePointDepth);
		tagList.add(TagFromName.AverageBeamDosePointEquivalentDepth);
		tagList.add(TagFromName.AverageBeamDosePointSSD);
		tagList.add(TagFromName.BeamDoseType);
		tagList.add(TagFromName.AlternateBeamDose);
		tagList.add(TagFromName.AlternateBeamDoseType);
		tagList.add(TagFromName.DepthValueAveragingFlag);
		tagList.add(TagFromName.BeamDosePointSourceToExternalContourDistance);
		tagList.add(TagFromName.NumberOfBrachyApplicationSetups);
		tagList.add(TagFromName.BrachyApplicationSetupDoseSpecificationPoint);
		tagList.add(TagFromName.BrachyApplicationSetupDose);
		tagList.add(TagFromName.BeamSequence);
		tagList.add(TagFromName.TreatmentMachineName);
		tagList.add(TagFromName.PrimaryDosimeterUnit);
		tagList.add(TagFromName.SourceAxisDistance);
		tagList.add(TagFromName.BeamLimitingDeviceSequence);
		tagList.add(TagFromName.RTBeamLimitingDeviceType);
		tagList.add(TagFromName.SourceToBeamLimitingDeviceDistance);
		tagList.add(TagFromName.IsocenterToBeamLimitingDeviceDistance);
		tagList.add(TagFromName.NumberOfLeafJawPairs);
		tagList.add(TagFromName.LeafPositionBoundaries);
		tagList.add(TagFromName.BeamNumber);
		tagList.add(TagFromName.BeamName);
		tagList.add(TagFromName.BeamDescription);
		tagList.add(TagFromName.BeamType);
		tagList.add(TagFromName.BeamDeliveryDurationLimit);
		tagList.add(TagFromName.RadiationType);
		tagList.add(TagFromName.HighDoseTechniqueType);
		tagList.add(TagFromName.ReferenceImageNumber);
		tagList.add(TagFromName.PlannedVerificationImageSequence);
		tagList.add(TagFromName.ImagingDeviceSpecificAcquisitionParameters);
		tagList.add(TagFromName.TreatmentDeliveryType);
		tagList.add(TagFromName.NumberOfWedges);
		tagList.add(TagFromName.WedgeSequence);
		tagList.add(TagFromName.WedgeNumber);
		tagList.add(TagFromName.WedgeType);
		tagList.add(TagFromName.WedgeID);
		tagList.add(TagFromName.WedgeAngle);
		tagList.add(TagFromName.WedgeFactor);
		tagList.add(TagFromName.TotalWedgeTrayWaterEquivalentThickness);
		tagList.add(TagFromName.WedgeOrientation);
		tagList.add(TagFromName.IsocenterToWedgeTrayDistance);
		tagList.add(TagFromName.SourceToWedgeTrayDistance);
		tagList.add(TagFromName.WedgeThinEdgePosition);
		tagList.add(TagFromName.BolusID);
		tagList.add(TagFromName.BolusDescription);
		tagList.add(TagFromName.EffectiveWedgeAngle);
		tagList.add(TagFromName.NumberOfCompensators);
		tagList.add(TagFromName.MaterialID);
		tagList.add(TagFromName.TotalCompensatorTrayFactor);
		tagList.add(TagFromName.CompensatorSequence);
		tagList.add(TagFromName.CompensatorNumber);
		tagList.add(TagFromName.CompensatorID);
		tagList.add(TagFromName.SourceToCompensatorTrayDistance);
		tagList.add(TagFromName.CompensatorRows);
		tagList.add(TagFromName.CompensatorColumns);
		tagList.add(TagFromName.CompensatorPixelSpacing);
		tagList.add(TagFromName.CompensatorPosition);
		tagList.add(TagFromName.CompensatorTransmissionData);
		tagList.add(TagFromName.CompensatorThicknessData);
		tagList.add(TagFromName.NumberOfBoli);
		tagList.add(TagFromName.CompensatorType);
		tagList.add(TagFromName.CompensatorTrayID);
		tagList.add(TagFromName.NumberOfBlocks);
		tagList.add(TagFromName.TotalBlockTrayFactor);
		tagList.add(TagFromName.TotalBlockTrayWaterEquivalentThickness);
		tagList.add(TagFromName.BlockSequence);
		tagList.add(TagFromName.BlockTrayID);
		tagList.add(TagFromName.SourceToBlockTrayDistance);
		tagList.add(TagFromName.IsocenterToBlockTrayDistance);
		tagList.add(TagFromName.BlockType);
		tagList.add(TagFromName.AccessoryCode);
		tagList.add(TagFromName.BlockDivergence);
		tagList.add(TagFromName.BlockMountingPosition);
		tagList.add(TagFromName.BlockNumber);
		tagList.add(TagFromName.BlockName);
		tagList.add(TagFromName.BlockThickness);
		tagList.add(TagFromName.BlockTransmission);
		tagList.add(TagFromName.BlockNumberOfPoints);
		tagList.add(TagFromName.BlockData);
		tagList.add(TagFromName.ApplicatorSequence);
		tagList.add(TagFromName.ApplicatorID);
		tagList.add(TagFromName.ApplicatorType);
		tagList.add(TagFromName.ApplicatorDescription);
		tagList.add(TagFromName.CumulativeDoseReferenceCoefficient);
		tagList.add(TagFromName.FinalCumulativeMetersetWeight);
		tagList.add(TagFromName.NumberOfControlPoints);
		tagList.add(TagFromName.ControlPointSequence);
		tagList.add(TagFromName.ControlPointIndex);
		tagList.add(TagFromName.NominalBeamEnergy);
		tagList.add(TagFromName.DoseRateSet);
		tagList.add(TagFromName.WedgePositionSequence);
		tagList.add(TagFromName.WedgePosition);
		tagList.add(TagFromName.BeamLimitingDevicePositionSequence);
		tagList.add(TagFromName.LeafJawPositions);
		tagList.add(TagFromName.GantryAngle);
		tagList.add(TagFromName.GantryRotationDirection);
		tagList.add(TagFromName.BeamLimitingDeviceAngle);
		tagList.add(TagFromName.BeamLimitingDeviceRotationDirection);
		tagList.add(TagFromName.PatientSupportAngle);
		tagList.add(TagFromName.PatientSupportRotationDirection);
		tagList.add(TagFromName.TableTopEccentricAxisDistance);
		tagList.add(TagFromName.TableTopEccentricAngle);
		tagList.add(TagFromName.TableTopEccentricRotationDirection);
		tagList.add(TagFromName.TableTopVerticalPosition);
		tagList.add(TagFromName.TableTopLongitudinalPosition);
		tagList.add(TagFromName.TableTopLateralPosition);
		tagList.add(TagFromName.IsocenterPosition);
		tagList.add(TagFromName.SurfaceEntryPoint);
		tagList.add(TagFromName.SourceToSurfaceDistance);
		tagList.add(TagFromName.AverageBeamDosePointSourceToExternalContourDistance);
		tagList.add(TagFromName.SourceToExternalContourDistance);
		tagList.add(TagFromName.ExternalContourEntryPoint);
		tagList.add(TagFromName.CumulativeMetersetWeight);
		tagList.add(TagFromName.TableTopPitchAngle);
		tagList.add(TagFromName.TableTopPitchRotationDirection);
		tagList.add(TagFromName.TableTopRollAngle);
		tagList.add(TagFromName.TableTopRollRotationDirection);
		tagList.add(TagFromName.HeadFixationAngle);
		tagList.add(TagFromName.GantryPitchAngle);
		tagList.add(TagFromName.GantryPitchRotationDirection);
		tagList.add(TagFromName.GantryPitchAngleTolerance);
		tagList.add(TagFromName.PatientSetupSequence);
		tagList.add(TagFromName.PatientSetupNumber);
		tagList.add(TagFromName.PatientSetupLabel);
		tagList.add(TagFromName.PatientAdditionalPosition);
		tagList.add(TagFromName.FixationDeviceSequence);
		tagList.add(TagFromName.FixationDeviceType);
		tagList.add(TagFromName.FixationDeviceLabel);
		tagList.add(TagFromName.FixationDeviceDescription);
		tagList.add(TagFromName.FixationDevicePosition);
		tagList.add(TagFromName.FixationDevicePitchAngle);
		tagList.add(TagFromName.FixationDeviceRollAngle);
		tagList.add(TagFromName.ShieldingDeviceSequence);
		tagList.add(TagFromName.ShieldingDeviceType);
		tagList.add(TagFromName.ShieldingDeviceLabel);
		tagList.add(TagFromName.ShieldingDeviceDescription);
		tagList.add(TagFromName.ShieldingDevicePosition);
		tagList.add(TagFromName.SetupTechnique);
		tagList.add(TagFromName.SetupTechniqueDescription);
		tagList.add(TagFromName.SetupDeviceSequence);
		tagList.add(TagFromName.SetupDeviceType);
		tagList.add(TagFromName.SetupDeviceLabel);
		tagList.add(TagFromName.SetupDeviceDescription);
		tagList.add(TagFromName.SetupDeviceParameter);
		tagList.add(TagFromName.SetupReferenceDescription);
		tagList.add(TagFromName.TableTopVerticalSetupDisplacement);
		tagList.add(TagFromName.TableTopLongitudinalSetupDisplacement);
		tagList.add(TagFromName.TableTopLateralSetupDisplacement);
		tagList.add(TagFromName.BrachyTreatmentTechnique);
		tagList.add(TagFromName.BrachyTreatmentType);
		tagList.add(TagFromName.TreatmentMachineSequence);
		tagList.add(TagFromName.SourceSequence);
		tagList.add(TagFromName.SourceNumber);
		tagList.add(TagFromName.SourceType);
		tagList.add(TagFromName.SourceManufacturer);
		tagList.add(TagFromName.ActiveSourceDiameter);
		tagList.add(TagFromName.ActiveSourceLength);
		tagList.add(TagFromName.SourceModelID);
		tagList.add(TagFromName.SourceDescription);
		tagList.add(TagFromName.SourceEncapsulationNominalThickness);
		tagList.add(TagFromName.SourceEncapsulationNominalTransmission);
		tagList.add(TagFromName.SourceIsotopeName);
		tagList.add(TagFromName.SourceIsotopeHalfLife);
		tagList.add(TagFromName.SourceStrengthUnits);
		tagList.add(TagFromName.ReferenceAirKermaRate);
		tagList.add(TagFromName.SourceStrength);
		tagList.add(TagFromName.SourceStrengthReferenceDate);
		tagList.add(TagFromName.SourceStrengthReferenceTime);
		tagList.add(TagFromName.ApplicationSetupSequence);
		tagList.add(TagFromName.ApplicationSetupType);
		tagList.add(TagFromName.ApplicationSetupNumber);
		tagList.add(TagFromName.ApplicationSetupName);
		tagList.add(TagFromName.ApplicationSetupManufacturer);
		tagList.add(TagFromName.TemplateNumber);
		tagList.add(TagFromName.TemplateType);
		tagList.add(TagFromName.TemplateName);
		tagList.add(TagFromName.TotalReferenceAirKerma);
		tagList.add(TagFromName.BrachyAccessoryDeviceSequence);
		tagList.add(TagFromName.BrachyAccessoryDeviceNumber);
		tagList.add(TagFromName.BrachyAccessoryDeviceID);
		tagList.add(TagFromName.BrachyAccessoryDeviceType);
		tagList.add(TagFromName.BrachyAccessoryDeviceName);
		tagList.add(TagFromName.BrachyAccessoryDeviceNominalThickness);
		tagList.add(TagFromName.BrachyAccessoryDeviceNominalTransmission);
		tagList.add(TagFromName.ChannelEffectiveLength);
		tagList.add(TagFromName.ChannelInnerLength);
		tagList.add(TagFromName.AfterloaderChannelID);
		tagList.add(TagFromName.SourceApplicatorTipLength);
		tagList.add(TagFromName.ChannelSequence);
		tagList.add(TagFromName.ChannelNumber);
		tagList.add(TagFromName.ChannelLength);
		tagList.add(TagFromName.ChannelTotalTime);
		tagList.add(TagFromName.SourceMovementType);
		tagList.add(TagFromName.NumberOfPulses);
		tagList.add(TagFromName.PulseRepetitionInterval);
		tagList.add(TagFromName.SourceApplicatorNumber);
		tagList.add(TagFromName.SourceApplicatorID);
		tagList.add(TagFromName.SourceApplicatorType);
		tagList.add(TagFromName.SourceApplicatorName);
		tagList.add(TagFromName.SourceApplicatorLength);
		tagList.add(TagFromName.SourceApplicatorManufacturer);
		tagList.add(TagFromName.SourceApplicatorWallNominalThickness);
		tagList.add(TagFromName.SourceApplicatorWallNominalTransmission);
		tagList.add(TagFromName.SourceApplicatorStepSize);
		tagList.add(TagFromName.TransferTubeNumber);
		tagList.add(TagFromName.TransferTubeLength);
		tagList.add(TagFromName.ChannelShieldSequence);
		tagList.add(TagFromName.ChannelShieldNumber);
		tagList.add(TagFromName.ChannelShieldID);
		tagList.add(TagFromName.ChannelShieldName);
		tagList.add(TagFromName.ChannelShieldNominalThickness);
		tagList.add(TagFromName.ChannelShieldNominalTransmission);
		tagList.add(TagFromName.FinalCumulativeTimeWeight);
		tagList.add(TagFromName.BrachyControlPointSequence);
		tagList.add(TagFromName.ControlPointRelativePosition);
		tagList.add(TagFromName.ControlPoint3DPosition);
		tagList.add(TagFromName.CumulativeTimeWeight);
		tagList.add(TagFromName.CompensatorDivergence);
		tagList.add(TagFromName.CompensatorMountingPosition);
		tagList.add(TagFromName.SourceToCompensatorDistance);
		tagList.add(TagFromName.TotalCompensatorTrayWaterEquivalentThickness);
		tagList.add(TagFromName.IsocenterToCompensatorTrayDistance);
		tagList.add(TagFromName.CompensatorColumnOffset);
		tagList.add(TagFromName.IsocenterToCompensatorDistances);
		tagList.add(TagFromName.CompensatorRelativeStoppingPowerRatio);
		tagList.add(TagFromName.CompensatorMillingToolDiameter);
		tagList.add(TagFromName.IonRangeCompensatorSequence);
		tagList.add(TagFromName.CompensatorDescription);
		tagList.add(TagFromName.RadiationMassNumber);
		tagList.add(TagFromName.RadiationAtomicNumber);
		tagList.add(TagFromName.RadiationChargeState);
		tagList.add(TagFromName.ScanMode);
		tagList.add(TagFromName.ModulatedScanModeType);
		tagList.add(TagFromName.VirtualSourceAxisDistances);
		tagList.add(TagFromName.SnoutSequence);
		tagList.add(TagFromName.SnoutPosition);
		tagList.add(TagFromName.SnoutID);
		tagList.add(TagFromName.NumberOfRangeShifters);
		tagList.add(TagFromName.RangeShifterSequence);
		tagList.add(TagFromName.RangeShifterNumber);
		tagList.add(TagFromName.RangeShifterID);
		tagList.add(TagFromName.RangeShifterType);
		tagList.add(TagFromName.RangeShifterDescription);
		tagList.add(TagFromName.NumberOfLateralSpreadingDevices);
		tagList.add(TagFromName.LateralSpreadingDeviceSequence);
		tagList.add(TagFromName.LateralSpreadingDeviceNumber);
		tagList.add(TagFromName.LateralSpreadingDeviceID);
		tagList.add(TagFromName.LateralSpreadingDeviceType);
		tagList.add(TagFromName.LateralSpreadingDeviceDescription);
		tagList.add(TagFromName.LateralSpreadingDeviceWaterEquivalentThickness);
		tagList.add(TagFromName.NumberOfRangeModulators);
		tagList.add(TagFromName.RangeModulatorSequence);
		tagList.add(TagFromName.RangeModulatorNumber);
		tagList.add(TagFromName.RangeModulatorID);
		tagList.add(TagFromName.RangeModulatorType);
		tagList.add(TagFromName.RangeModulatorDescription);
		tagList.add(TagFromName.BeamCurrentModulationID);
		tagList.add(TagFromName.PatientSupportType);
		tagList.add(TagFromName.PatientSupportID);
		tagList.add(TagFromName.PatientSupportAccessoryCode);
		tagList.add(TagFromName.TrayAccessoryCode);
		tagList.add(TagFromName.FixationLightAzimuthalAngle);
		tagList.add(TagFromName.FixationLightPolarAngle);
		tagList.add(TagFromName.MetersetRate);
		tagList.add(TagFromName.RangeShifterSettingsSequence);
		tagList.add(TagFromName.RangeShifterSetting);
		tagList.add(TagFromName.IsocenterToRangeShifterDistance);
		tagList.add(TagFromName.RangeShifterWaterEquivalentThickness);
		tagList.add(TagFromName.LateralSpreadingDeviceSettingsSequence);
		tagList.add(TagFromName.LateralSpreadingDeviceSetting);
		tagList.add(TagFromName.IsocenterToLateralSpreadingDeviceDistance);
		tagList.add(TagFromName.RangeModulatorSettingsSequence);
		tagList.add(TagFromName.RangeModulatorGatingStartValue);
		tagList.add(TagFromName.RangeModulatorGatingStopValue);
		tagList.add(TagFromName.RangeModulatorGatingStartWaterEquivalentThickness);
		tagList.add(TagFromName.RangeModulatorGatingStopWaterEquivalentThickness);
		tagList.add(TagFromName.IsocenterToRangeModulatorDistance);
		tagList.add(TagFromName.ScanSpotTimeOffset);
		tagList.add(TagFromName.ScanSpotTuneID);
		tagList.add(TagFromName.ScanSpotPrescribedIndices);
		tagList.add(TagFromName.NumberOfScanSpotPositions);
		tagList.add(TagFromName.ScanSpotReordered);
		tagList.add(TagFromName.ScanSpotPositionMap);
		tagList.add(TagFromName.ScanSpotReorderingAllowed);
		tagList.add(TagFromName.ScanSpotMetersetWeights);
		tagList.add(TagFromName.ScanningSpotSize);
		tagList.add(TagFromName.NumberOfPaintings);
		tagList.add(TagFromName.IonToleranceTableSequence);
		tagList.add(TagFromName.IonBeamSequence);
		tagList.add(TagFromName.IonBeamLimitingDeviceSequence);
		tagList.add(TagFromName.IonBlockSequence);
		tagList.add(TagFromName.IonControlPointSequence);
		tagList.add(TagFromName.IonWedgeSequence);
		tagList.add(TagFromName.IonWedgePositionSequence);
		tagList.add(TagFromName.ReferencedSetupImageSequence);
		tagList.add(TagFromName.SetupImageComment);
		tagList.add(TagFromName.MotionSynchronizationSequence);
		tagList.add(TagFromName.ControlPointOrientation);
		tagList.add(TagFromName.GeneralAccessorySequence);
		tagList.add(TagFromName.GeneralAccessoryID);
		tagList.add(TagFromName.GeneralAccessoryDescription);
		tagList.add(TagFromName.GeneralAccessoryType);
		tagList.add(TagFromName.GeneralAccessoryNumber);
		tagList.add(TagFromName.SourceToGeneralAccessoryDistance);
		tagList.add(TagFromName.ApplicatorGeometrySequence);
		tagList.add(TagFromName.ApplicatorApertureShape);
		tagList.add(TagFromName.ApplicatorOpening);
		tagList.add(TagFromName.ApplicatorOpeningX);
		tagList.add(TagFromName.ApplicatorOpeningY);
		tagList.add(TagFromName.SourceToApplicatorMountingPositionDistance);
		tagList.add(TagFromName.NumberOfBlockSlabItems);
		tagList.add(TagFromName.BlockSlabSequence);
		tagList.add(TagFromName.BlockSlabThickness);
		tagList.add(TagFromName.BlockSlabNumber);
		tagList.add(TagFromName.DeviceMotionControlSequence);
		tagList.add(TagFromName.DeviceMotionExecutionMode);
		tagList.add(TagFromName.DeviceMotionObservationMode);
		tagList.add(TagFromName.DeviceMotionParameterCodeSequence);
		tagList.add(TagFromName.DistalDepthFraction);
		tagList.add(TagFromName.DistalDepth);
		tagList.add(TagFromName.NominalRangeModulatioFractions);
		tagList.add(TagFromName.NominalRangeModulatedRegionDepths);
		tagList.add(TagFromName.DepthDoseParametersSequence);
		tagList.add(TagFromName.DeliveredDepthDoseParametersSequence);
		tagList.add(TagFromName.DeliveredDistalDepthFraction);
		tagList.add(TagFromName.DeliveredDistalDepth);
		tagList.add(TagFromName.DeliveredNominalRangeModulationFractions);
		tagList.add(TagFromName.DeliveredNominalRangeModulatedRegionDepths);
		tagList.add(TagFromName.DeliveredReferenceDoseDefinition);
		tagList.add(TagFromName.ReferenceDoseDefinition);
		tagList.add(TagFromName.ReferencedRTPlanSequence);
		tagList.add(TagFromName.ReferencedBeamSequence);
		tagList.add(TagFromName.ReferencedBeamNumber);
		tagList.add(TagFromName.ReferencedReferenceImageNumber);
		tagList.add(TagFromName.StartCumulativeMetersetWeight);
		tagList.add(TagFromName.EndCumulativeMetersetWeight);
		tagList.add(TagFromName.ReferencedBrachyApplicationSetupSequence);
		tagList.add(TagFromName.ReferencedBrachyApplicationSetupNumber);
		tagList.add(TagFromName.ReferencedSourceNumber);
		tagList.add(TagFromName.ReferencedFractionGroupSequence);
		tagList.add(TagFromName.ReferencedFractionGroupNumber);
		tagList.add(TagFromName.ReferencedVerificationImageSequence);
		tagList.add(TagFromName.ReferencedReferenceImageSequence);
		tagList.add(TagFromName.ReferencedDoseReferenceSequence);
		tagList.add(TagFromName.ReferencedDoseReferenceNumber);
		tagList.add(TagFromName.BrachyReferencedDoseReferenceSequence);
		tagList.add(TagFromName.ReferencedStructureSetSequence);
		tagList.add(TagFromName.ReferencedPatientSetupNumber);
		tagList.add(TagFromName.ReferencedDoseSequence);
		tagList.add(TagFromName.ReferencedToleranceTableNumber);
		tagList.add(TagFromName.ReferencedBolusSequence);
		tagList.add(TagFromName.ReferencedWedgeNumber);
		tagList.add(TagFromName.ReferencedCompensatorNumber);
		tagList.add(TagFromName.ReferencedBlockNumber);
		tagList.add(TagFromName.ReferencedControlPointIndex);
		tagList.add(TagFromName.ReferencedControlPointSequence);
		tagList.add(TagFromName.ReferencedStartControlPointIndex);
		tagList.add(TagFromName.ReferencedStopControlPointIndex);
		tagList.add(TagFromName.ReferencedRangeShifterNumber);
		tagList.add(TagFromName.ReferencedLateralSpreadingDeviceNumber);
		tagList.add(TagFromName.ReferencedRangeModulatorNumber);
		tagList.add(TagFromName.OmittedBeamTaskSequence);
		tagList.add(TagFromName.ReasonForOmission);
		tagList.add(TagFromName.ReasonForOmissionDescription);
		tagList.add(TagFromName.ApprovalStatus);
		tagList.add(TagFromName.ReviewDate);
		tagList.add(TagFromName.ReviewTime);
		tagList.add(TagFromName.ReviewerName);
		tagList.add(TagFromName.Arbitrary);
		tagList.add(TagFromName.TextComments);
		tagList.add(TagFromName.ResultsID);
		tagList.add(TagFromName.ResultsIDIssuer);
		tagList.add(TagFromName.ReferencedInterpretationSequence);
		tagList.add(TagFromName.ReportProductionStatusTrial);
		tagList.add(TagFromName.InterpretationRecordedDate);
		tagList.add(TagFromName.InterpretationRecordedTime);
		tagList.add(TagFromName.InterpretationRecorder);
		tagList.add(TagFromName.ReferenceToRecordedSound);
		tagList.add(TagFromName.InterpretationTranscriptionDate);
		tagList.add(TagFromName.InterpretationTranscriptionTime);
		tagList.add(TagFromName.InterpretationTranscriber);
		tagList.add(TagFromName.InterpretationText);
		tagList.add(TagFromName.InterpretationAuthor);
		tagList.add(TagFromName.InterpretationApproverSequence);
		tagList.add(TagFromName.InterpretationApprovalDate);
		tagList.add(TagFromName.InterpretationApprovalTime);
		tagList.add(TagFromName.PhysicianApprovingInterpretation);
		tagList.add(TagFromName.InterpretationDiagnosisDescription);
		tagList.add(TagFromName.InterpretationDiagnosisCodeSequence);
		tagList.add(TagFromName.ResultsDistributionListSequence);
		tagList.add(TagFromName.DistributionName);
		tagList.add(TagFromName.DistributionAddress);
		tagList.add(TagFromName.InterpretationID);
		tagList.add(TagFromName.InterpretationIDIssuer);
		tagList.add(TagFromName.InterpretationTypeID);
		tagList.add(TagFromName.InterpretationStatusID);
		tagList.add(TagFromName.Impressions);
		tagList.add(TagFromName.ResultsComments);
		tagList.add(TagFromName.LowEnergyDetectors);
		tagList.add(TagFromName.HighEnergyDetectors);
		tagList.add(TagFromName.DetectorGeometrySequence);
		tagList.add(TagFromName.ThreatROIVoxelSequence);
		tagList.add(TagFromName.ThreatROIBase);
		tagList.add(TagFromName.ThreatROIExtents);
		tagList.add(TagFromName.ThreatROIBitmap);
		tagList.add(TagFromName.RouteSegmentID);
		tagList.add(TagFromName.GantryType);
		tagList.add(TagFromName.OOIOwnerType);
		tagList.add(TagFromName.RouteSegmentSequence);
		tagList.add(TagFromName.PotentialThreatObjectID);
		tagList.add(TagFromName.ThreatSequence);
		tagList.add(TagFromName.ThreatCategory);
		tagList.add(TagFromName.ThreatCategoryDescription);
		tagList.add(TagFromName.ATDAbilityAssessment);
		tagList.add(TagFromName.ATDAssessmentFlag);
		tagList.add(TagFromName.ATDAssessmentProbability);
		tagList.add(TagFromName.Mass);
		tagList.add(TagFromName.Density);
		tagList.add(TagFromName.ZEffective);
		tagList.add(TagFromName.BoardingPassID);
		tagList.add(TagFromName.CenterOfMass);
		tagList.add(TagFromName.CenterOfPTO);
		tagList.add(TagFromName.BoundingPolygon);
		tagList.add(TagFromName.RouteSegmentStartLocationID);
		tagList.add(TagFromName.RouteSegmentEndLocationID);
		tagList.add(TagFromName.RouteSegmentLocationIDType);
		tagList.add(TagFromName.AbortReason);
		tagList.add(TagFromName.VolumeOfPTO);
		tagList.add(TagFromName.AbortFlag);
		tagList.add(TagFromName.RouteSegmentStartTime);
		tagList.add(TagFromName.RouteSegmentEndTime);
		tagList.add(TagFromName.TDRType);
		tagList.add(TagFromName.InternationalRouteSegment);
		tagList.add(TagFromName.ThreatDetectionAlgorithmAndVersion);
		tagList.add(TagFromName.AssignedLocation);
		tagList.add(TagFromName.AlarmDecisionTime);
		tagList.add(TagFromName.AlarmDecision);
		tagList.add(TagFromName.NumberOfTotalObjects);
		tagList.add(TagFromName.NumberOfAlarmObjects);
		tagList.add(TagFromName.PTORepresentationSequence);
		tagList.add(TagFromName.ATDAssessmentSequence);
		tagList.add(TagFromName.TIPType);
		tagList.add(TagFromName.DICOSVersion);
		tagList.add(TagFromName.OOIOwnerCreationTime);
		tagList.add(TagFromName.OOIType);
		tagList.add(TagFromName.OOISize);
		tagList.add(TagFromName.AcquisitionStatus);
		tagList.add(TagFromName.BasisMaterialsCodeSequence);
		tagList.add(TagFromName.PhantomType);
		tagList.add(TagFromName.OOIOwnerSequence);
		tagList.add(TagFromName.ScanType);
		tagList.add(TagFromName.ItineraryID);
		tagList.add(TagFromName.ItineraryIDType);
		tagList.add(TagFromName.ItineraryIDAssigningAuthority);
		tagList.add(TagFromName.RouteID);
		tagList.add(TagFromName.RouteIDAssigningAuthority);
		tagList.add(TagFromName.InboundArrivalType);
		tagList.add(TagFromName.CarrierID);
		tagList.add(TagFromName.CarrierIDAssigningAuthority);
		tagList.add(TagFromName.SourceOrientation);
		tagList.add(TagFromName.SourcePosition);
		tagList.add(TagFromName.BeltHeight);
		tagList.add(TagFromName.AlgorithmRoutingCodeSequence);
		tagList.add(TagFromName.TransportClassification);
		tagList.add(TagFromName.OOITypeDescriptor);
		tagList.add(TagFromName.TotalProcessingTime);
		tagList.add(TagFromName.DetectorCalibrationData);
		tagList.add(TagFromName.AdditionalScreeningPerformed);
		tagList.add(TagFromName.AdditionalInspectionSelectionCriteria);
		tagList.add(TagFromName.AdditionalInspectionMethodSequence);
		tagList.add(TagFromName.AITDeviceType);
		tagList.add(TagFromName.QRMeasurementsSequence);
		tagList.add(TagFromName.TargetMaterialSequence);
		tagList.add(TagFromName.SNRThreshold);
		tagList.add(TagFromName.ImageScaleRepresentation);
		tagList.add(TagFromName.ReferencedPTOSequence);
		tagList.add(TagFromName.ReferencedTDRInstanceSequence);
		tagList.add(TagFromName.PTOLocationDescription);
		tagList.add(TagFromName.AnomalyLocatorIndicatorSequence);
		tagList.add(TagFromName.AnomalyLocatorIndicator);
		tagList.add(TagFromName.PTORegionSequence);
		tagList.add(TagFromName.InspectionSelectionCriteria);
		tagList.add(TagFromName.SecondaryInspectionMethodSequence);
		tagList.add(TagFromName.PRCSToRCSOrientation);
		tagList.add(TagFromName.MACParametersSequence);
		tagList.add(TagFromName.CurveDimensions);
		tagList.add(TagFromName.NumberOfPoints);
		tagList.add(TagFromName.TypeOfData);
		tagList.add(TagFromName.CurveDescription);
		tagList.add(TagFromName.AxisUnits);
		tagList.add(TagFromName.AxisLabels);
		tagList.add(TagFromName.DataValueRepresentation);
		tagList.add(TagFromName.MinimumCoordinateValue);
		tagList.add(TagFromName.MaximumCoordinateValue);
		tagList.add(TagFromName.CurveRange);
		tagList.add(TagFromName.CurveDataDescriptor);
		tagList.add(TagFromName.CoordinateStartValue);
		tagList.add(TagFromName.CoordinateStepValue);
		tagList.add(TagFromName.CurveActivationLayer);
		tagList.add(TagFromName.AudioType);
		tagList.add(TagFromName.AudioSampleFormat);
		tagList.add(TagFromName.NumberOfChannels);
		tagList.add(TagFromName.NumberOfSamples);
		tagList.add(TagFromName.SampleRate);
		tagList.add(TagFromName.TotalTime);
		tagList.add(TagFromName.AudioSampleData);
		tagList.add(TagFromName.AudioComments);
		tagList.add(TagFromName.CurveLabel);
		tagList.add(TagFromName.CurveReferencedOverlaySequence);
		tagList.add(TagFromName.CurveReferencedOverlayGroup);
		tagList.add(TagFromName.CurveData);
		tagList.add(TagFromName.SharedFunctionalGroupsSequence);
		tagList.add(TagFromName.PerFrameFunctionalGroupsSequence);
		tagList.add(TagFromName.WaveformSequence);
		tagList.add(TagFromName.ChannelMinimumValue);
		tagList.add(TagFromName.ChannelMaximumValue);
		tagList.add(TagFromName.WaveformBitsAllocated);
		tagList.add(TagFromName.WaveformSampleInterpretation);
		tagList.add(TagFromName.WaveformPaddingValue);
		tagList.add(TagFromName.WaveformData);
		tagList.add(TagFromName.FirstOrderPhaseCorrectionAngle);
		tagList.add(TagFromName.SpectroscopyData);
		tagList.add(TagFromName.OverlayRows);
		tagList.add(TagFromName.OverlayColumns);
		tagList.add(TagFromName.OverlayPlanes);
		tagList.add(TagFromName.NumberOfFramesInOverlay);
		tagList.add(TagFromName.OverlayDescription);
		tagList.add(TagFromName.OverlayType);
		tagList.add(TagFromName.OverlaySubtype);
		tagList.add(TagFromName.OverlayOrigin);
		tagList.add(TagFromName.ImageFrameOrigin);
		tagList.add(TagFromName.OverlayPlaneOrigin);
		tagList.add(TagFromName.OverlayCompressionCode);
		tagList.add(TagFromName.OverlayCompressionOriginator);
		tagList.add(TagFromName.OverlayCompressionLabel);
		tagList.add(TagFromName.OverlayCompressionDescription);
		tagList.add(TagFromName.OverlayCompressionStepPointers);
		tagList.add(TagFromName.OverlayRepeatInterval);
		tagList.add(TagFromName.OverlayBitsGrouped);
		tagList.add(TagFromName.OverlayBitsAllocated);
		tagList.add(TagFromName.OverlayBitPosition);
		tagList.add(TagFromName.OverlayFormat);
		tagList.add(TagFromName.OverlayLocation);
		tagList.add(TagFromName.OverlayCodeLabel);
		tagList.add(TagFromName.OverlayNumberOfTables);
		tagList.add(TagFromName.OverlayCodeTableLocation);
		tagList.add(TagFromName.OverlayBitsForCodeWord);
		tagList.add(TagFromName.OverlayActivationLayer);
		tagList.add(TagFromName.OverlayDescriptorGray);
		tagList.add(TagFromName.OverlayDescriptorRed);
		tagList.add(TagFromName.OverlayDescriptorGreen);
		tagList.add(TagFromName.OverlayDescriptorBlue);
		tagList.add(TagFromName.OverlayGray);
		tagList.add(TagFromName.OverlayRed);
		tagList.add(TagFromName.OverlayGreen);
		tagList.add(TagFromName.OverlayBlue);
		tagList.add(TagFromName.ROIArea);
		tagList.add(TagFromName.ROIMean);
		tagList.add(TagFromName.ROIStandardDeviation);
		tagList.add(TagFromName.OverlayLabel);
		tagList.add(TagFromName.OverlayData);
		tagList.add(TagFromName.OverlayComments);
		tagList.add(TagFromName.FloatPixelData);
		tagList.add(TagFromName.DoubleFloatPixelData);
		tagList.add(TagFromName.PixelData);
		tagList.add(TagFromName.CoefficientsSDVN);
		tagList.add(TagFromName.CoefficientsSDHN);
		tagList.add(TagFromName.CoefficientsSDDN);
		tagList.add(TagFromName.VariablePixelData);
		tagList.add(TagFromName.VariableNextDataGroup);
		tagList.add(TagFromName.VariableCoefficientsSDVN);
		tagList.add(TagFromName.VariableCoefficientsSDHN);
		tagList.add(TagFromName.VariableCoefficientsSDDN);
		tagList.add(TagFromName.DigitalSignaturesSequence);
		tagList.add(TagFromName.DataSetTrailingPadding);
	}

	protected void createValueRepresentationsByTag() {

		valueRepresentationsByTag = new HashMap(100);

		valueRepresentationsByTag.put(TagFromName.CommandGroupLength,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.CommandLengthToEnd,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.AffectedSOPClassUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.RequestedSOPClassUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.CommandRecognitionCode,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CommandField,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MessageID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MessageIDBeingRespondedTo,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Initiator,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.Receiver,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.FindLocation,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.MoveDestination,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.Priority,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CommandDataSetType,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfMatches,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ResponseSequenceNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Status,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OffendingElement,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.ErrorComment,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ErrorID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.AffectedSOPInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.RequestedSOPInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.EventTypeID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.AttributeIdentifierList,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.ActionTypeID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfRemainingSuboperations,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfCompletedSuboperations,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfFailedSuboperations,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfWarningSuboperations,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MoveOriginatorApplicationEntityTitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.MoveOriginatorMessageID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DialogReceiver,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.TerminalType,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.MessageSetID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.EndMessageID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.DisplayFormat,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.PagePositionID,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.TextFormatID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NormalReverse,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AddGrayScale,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Borders,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Copies,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CommandMagnificationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Erase,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Print,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Overlays,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.FileMetaInformationGroupLength,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.FileMetaInformationVersion,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.MediaStorageSOPClassUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.MediaStorageSOPInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.TransferSyntaxUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ImplementationClassUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ImplementationVersionName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SourceApplicationEntityTitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.SendingApplicationEntityTitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.ReceivingApplicationEntityTitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.PrivateInformationCreatorUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.PrivateInformation,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.FileSetID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FileSetDescriptorFileID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpecificCharacterSetOfFileSetDescriptorFile,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.FileSetConsistencyFlag,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DirectoryRecordSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OffsetOfTheNextDirectoryRecord,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.RecordInUseFlag,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OffsetOfReferencedLowerLevelDirectoryEntity,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.DirectoryRecordType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PrivateRecordUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedFileID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MRDRDirectoryRecordOffset,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ReferencedSOPClassUIDInFile,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedSOPInstanceUIDInFile,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedTransferSyntaxUIDInFile,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedRelatedGeneralSOPClassUIDInFile,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.NumberOfReferences,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.LengthToEnd,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SpecificCharacterSet,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LanguageCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RecognitionCode,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.InstanceCreationDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.InstanceCreationTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.InstanceCreatorUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.InstanceCoercionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.SOPClassUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.SOPInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.RelatedGeneralSOPClassUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.OriginalSpecializedSOPClassUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.StudyDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.SeriesDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.AcquisitionDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ContentDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.OverlayDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.CurveDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.AcquisitionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.StudyTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.SeriesTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.AcquisitionTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ContentTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.OverlayTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.CurveTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.DataSetType,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DataSetSubtype,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.NuclearMedicineSeriesType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AccessionNumber,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.IssuerOfAccessionNumberSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.QueryRetrieveLevel,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.QueryRetrieveView,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RetrieveAETitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.StationAETitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.InstanceAvailability,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FailedSOPInstanceUIDList,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.Modality,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModalitiesInStudy,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SOPClassesInStudy,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.AnatomicRegionsInStudyCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConversionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PresentationIntentType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Manufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.InstitutionName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.InstitutionAddress,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.InstitutionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferringPhysicianName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.ReferringPhysicianAddress,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ReferringPhysicianTelephoneNumbers,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ReferringPhysicianIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConsultingPhysicianName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.ConsultingPhysicianIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CodeValue,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ExtendedCodeValue,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeDesignator,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeVersion,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CodeMeaning,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MappingResource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContextGroupVersion,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ContextGroupLocalVersion,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ExtendedCodeMeaning,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeResourcesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeURLType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContextGroupExtensionFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ContextGroupExtensionCreatorUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeURL,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContextIdentifier,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeRegistry,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeExternalID,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeName,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CodingSchemeResponsibleOrganization,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ContextUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.MappingResourceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.LongCodeValue,ValueRepresentation.UC);
		valueRepresentationsByTag.put(TagFromName.URNCodeValue,ValueRepresentation.UR);
		valueRepresentationsByTag.put(TagFromName.EquivalentCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MappingResourceName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContextGroupIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MappingResourceIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TimezoneOffsetFromUTC,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ResponsibleGroupCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EquipmentModality,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ManufacturerRelatedModelGroup,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementCharacteristicsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrivateGroupReference,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PrivateCreatorReference,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.BlockIdentifyingInformationStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NonidentifyingPrivateElements,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DeidentificationActionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IdentifyingPrivateElements,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DeidentificationAction,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElement,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementValueMultiplicity,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementValueRepresentation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementNumberOfItems,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementName,ValueRepresentation.UC);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementKeyword,ValueRepresentation.UC);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementDescription,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementEncoding,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.PrivateDataElementDefinitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NetworkID,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.StationName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.StudyDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProcedureCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SeriesDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SeriesDescriptionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InstitutionalDepartmentName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PhysiciansOfRecord,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.PhysiciansOfRecordIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformingPhysicianName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.PerformingPhysicianIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NameOfPhysiciansReadingStudy,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.PhysiciansReadingStudyIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OperatorsName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.OperatorIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AdmittingDiagnosesDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AdmittingDiagnosesCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ManufacturerModelName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferencedResultsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedStudySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedPerformedProcedureStepSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSeriesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedPatientSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedVisitSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedOverlaySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedStereometricInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedWaveformSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedCurveSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedRealWorldValueMappingInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSOPClassUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedSOPInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DefinitionSourceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SOPClassesSupported,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedFrameNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SimpleFrameList,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.CalculatedFrameList,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TimeRange,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FrameExtractionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MultiFrameSourceSOPInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.RetrieveURL,ValueRepresentation.UR);
		valueRepresentationsByTag.put(TagFromName.TransactionUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.WarningReason,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.FailureReason,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.FailedSOPSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSOPSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OtherFailuresSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StudiesContainingOtherReferencedInstancesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelatedSeriesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LossyImageCompressionRetired,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DerivationDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.SourceImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StageName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.StageNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfStages,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ViewName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ViewNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfEventTimers,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfViewsInStage,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.EventElapsedTimes,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EventTimerNames,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.EventTimerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EventTimeOffset,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.EventCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StartTrim,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.StopTrim,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RecommendedDisplayFrameRate,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TransducerPosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TransducerOrientation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AnatomicStructure,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AnatomicRegionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnatomicRegionModifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrimaryAnatomicStructureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnatomicStructureSpaceOrRegionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrimaryAnatomicStructureModifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransducerPositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransducerPositionModifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransducerOrientationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransducerOrientationModifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnatomicStructureSpaceOrRegionCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnatomicPortalOfEntranceCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnatomicApproachDirectionCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnatomicPerspectiveDescriptionTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.AnatomicPerspectiveCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnatomicLocationOfExaminingInstrumentDescriptionTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.AnatomicLocationOfExaminingInstrumentCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OnAxisBackgroundAnatomicStructureCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AlternateRepresentationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IrradiationEventUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.SourceIrradiationEventSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalAdministrationEventUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.IdentifyingComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.FrameType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferencedImageEvidenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedRawDataSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CreatorVersionUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DerivationImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceImageEvidenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PixelPresentation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VolumetricProperties,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VolumeBasedCalculationTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ComplexImageComponent,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionContrast,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DerivationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedPresentationStateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedOtherPlaneSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FrameDisplaySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecommendedDisplayFrameRateInFloat,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SkipFrameRangeFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.PatientID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IssuerOfPatientID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TypeOfPatientID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IssuerOfPatientIDQualifiersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourcePatientGroupIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GroupOfPatientsIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SubjectRelativePositionInImage,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PatientBirthDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.PatientBirthTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.PatientSex,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientInsurancePlanCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientPrimaryLanguageCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientPrimaryLanguageModifierCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.QualityControlSubject,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.QualityControlSubjectTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StrainDescription,ValueRepresentation.UC);
		valueRepresentationsByTag.put(TagFromName.StrainNomenclature,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.StrainStockNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.StrainSourceRegistryCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StrainStockSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StrainSource,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.StrainAdditionalInformation,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.StrainCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GeneticModificationsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GeneticModificationsDescription,ValueRepresentation.UC);
		valueRepresentationsByTag.put(TagFromName.GeneticModificationsNomenclature,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.GeneticModificationsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OtherPatientIDs,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.OtherPatientNames,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.OtherPatientIDsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientBirthName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.PatientAge,ValueRepresentation.AS);
		valueRepresentationsByTag.put(TagFromName.PatientSize,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PatientSizeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientBodyMassIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MeasuredAPDimension,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MeasuredLateralDimension,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PatientWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PatientAddress,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.InsurancePlanIdentification,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientMotherBirthName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.MilitaryRank,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.BranchOfService,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MedicalRecordLocator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferencedPatientPhotoSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MedicalAlerts,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.Allergies,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CountryOfResidence,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RegionOfResidence,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientTelephoneNumbers,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PatientTelecomInformation,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.EthnicGroup,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.Occupation,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SmokingStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AdditionalPatientHistory,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.PregnancyStatus,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.LastMenstrualDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.PatientReligiousPreference,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientSpeciesDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientSpeciesCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientSexNeutered,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AnatomicalOrientationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientBreedDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientBreedCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BreedRegistrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BreedRegistrationNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.BreedRegistryCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ResponsiblePerson,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.ResponsiblePersonRole,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ResponsibleOrganization,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ExaminedBodyThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialSponsorName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialProtocolID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialProtocolName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialSiteID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialSiteName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialSubjectID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialSubjectReadingID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialTimePointID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialTimePointDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.LongitudinalTemporalOffsetFromEvent,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.LongitudinalTemporalEventType,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialCoordinatingCenterName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientIdentityRemoved,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DeidentificationMethod,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DeidentificationMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialSeriesID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialSeriesDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialProtocolEthicsCommitteeName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ClinicalTrialProtocolEthicsCommitteeApprovalNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ConsentForClinicalTrialUseSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DistributionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ConsentForDistributionFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EthicsCommitteeApprovalEffectivenessStartDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.EthicsCommitteeApprovalEffectivenessEndDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.CADFileFormatRetired,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ComponentReferenceSystemRetired,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ComponentManufacturingProcedure,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ComponentManufacturer,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.MaterialThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MaterialPipeDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MaterialIsolationDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MaterialGrade,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.MaterialPropertiesDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.MaterialPropertiesFileFormatRetired,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.MaterialNotes,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ComponentShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CurvatureType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OuterDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.InnerDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ComponentWelderIDs,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SecondaryApprovalStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SecondaryReviewDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.SecondaryReviewTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.SecondaryReviewerName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.RepairID,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.MultipleComponentApprovalSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OtherApprovalStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OtherSecondaryApprovalStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ActualEnvironmentalConditions,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ExpiryDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.EnvironmentalConditions,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.EvaluatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EvaluatorNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.EvaluatorName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.EvaluationAttempt,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.IndicationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IndicationNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.IndicationLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.IndicationDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.IndicationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IndicationDisposition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IndicationROISequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IndicationPhysicalPropertySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PropertyLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemNumberOfAxes,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemAxesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemAxisDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemDataSetMapping,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemAxisNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemAxisType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemAxisUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemAxisValues,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemTransformSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransformDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.TransformNumberOfAxes,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TransformOrderOfAxes,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TransformedAxisUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemTransformRotationAndScaleMatrix,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemTransformTranslationMatrix,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.InternalDetectorFrameTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfFramesIntegrated,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorTemperatureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SensorName,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.HorizontalOffsetOfSensor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.VerticalOffsetOfSensor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SensorTemperature,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DarkCurrentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DarkCurrentCounts,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.GainCorrectionReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AirCounts,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.KVUsedInGainCalibration,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MAUsedInGainCalibration,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfFramesUsedForIntegration,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FilterMaterialUsedInGainCalibration,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FilterThicknessUsedInGainCalibration,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DateOfGainCalibration,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.TimeOfGainCalibration,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.BadPixelImage,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.CalibrationNotes,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.PulserEquipmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PulserType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PulserNotes,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ReceiverEquipmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AmplifierType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReceiverNotes,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.PreAmplifierEquipmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PreAmplifierNotes,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.TransmitTransducerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReceiveTransducerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfElements,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ElementShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ElementDimensionA,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ElementDimensionB,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ElementPitchA,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MeasuredBeamDimensionA,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MeasuredBeamDimensionB,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.LocationOfMeasuredBeamDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NominalFrequency,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MeasuredCenterFrequency,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MeasuredBandwidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ElementPitchB,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PulserSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PulseWidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ExcitationFrequency,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ModulationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Damping,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReceiverSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AcquiredSoundpathLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionCompressionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionSampleSize,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RectifierSmoothing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DACSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DACType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DACGainPoints,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DACTimePoints,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DACAmplitude,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PreAmplifierSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransmitTransducerSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReceiveTransducerSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IncidentAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CouplingTechnique,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CouplingMedium,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CouplingVelocity,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ProbeCenterLocationX,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ProbeCenterLocationZ,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SoundPathLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DelayLawIdentifier,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.GateSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GateThreshold,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.VelocityOfSound,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CalibrationSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CalibrationProcedure,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ProcedureVersion,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ProcedureCreationDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ProcedureExpirationDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ProcedureLastModifiedDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.CalibrationTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.CalibrationDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ProbeDriveEquipmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DriveType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ProbeDriveNotes,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.DriveProbeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProbeInductance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ProbeResistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReceiveProbeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProbeDriveSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BridgeResistors,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ProbeOrientationAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.UserSelectedGainY,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.UserSelectedPhase,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.UserSelectedOffsetX,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.UserSelectedOffsetY,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelThreshold,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ScannerSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScanProcedure,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.TranslationRateX,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TranslationRateY,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelOverlap,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImageQualityIndicatorType,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImageQualityIndicatorMaterial,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImageQualityIndicatorSize,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.LINACEnergy,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.LINACOutput,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ActiveAperture,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TotalAperture,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ApertureElevation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MainLobeAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MainRoofAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ConnectorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.WedgeModelNumber,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.WedgeAngleFloat,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeRoofAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeElement1Position,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.WedgeMaterialVelocity,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeMaterial,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.WedgeOffsetZ,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeOriginOffsetX,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeTimeDelay,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.WedgeManufacturerName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.WedgeDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.NominalBeamAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeOffsetX,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeOffsetY,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeTotalLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeInContactLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeFrontGap,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeTotalHeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeFrontHeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeRearHeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeTotalWidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeInContactWidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeChamferHeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeCurve,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RadiusAlongWedge,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusAgent,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusAgentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusT1Relaxivity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusAdministrationRouteSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BodyPartExamined,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScanningSequence,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SequenceVariant,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScanOptions,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MRAcquisitionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SequenceName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.AngioFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InterventionDrugInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InterventionDrugStopTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.InterventionDrugDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.InterventionDrugCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AdditionalDrugSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.Radionuclide,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.Radiopharmaceutical,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowCenterline,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowTotalWidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.InterventionDrugName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.InterventionDrugStartTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.InterventionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TherapyType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InterventionStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TherapyDescription,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InterventionDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CineRate,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.InitialCineRunState,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SliceThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.KVP,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CountsAccumulated,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionTerminationCondition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EffectiveDuration,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionStartCondition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionStartConditionData,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionTerminationConditionData,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RepetitionTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EchoTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.InversionTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfAverages,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImagingFrequency,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImagedNucleus,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.EchoNumbers,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.MagneticFieldStrength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SpacingBetweenSlices,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfPhaseEncodingSteps,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.DataCollectionDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EchoTrainLength,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PercentSampling,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PercentPhaseFieldOfView,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PixelBandwidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeviceSerialNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DeviceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DeviceID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PlateID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.GeneratorID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.GridID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CassetteID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.GantryID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.UniqueDeviceIdentifier,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.UDISequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SecondaryCaptureDeviceID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HardcopyCreationDeviceID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DateOfSecondaryCapture,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.TimeOfSecondaryCapture,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.SecondaryCaptureDeviceManufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HardcopyDeviceManufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SecondaryCaptureDeviceManufacturerModelName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SecondaryCaptureDeviceSoftwareVersions,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HardcopyDeviceSoftwareVersion,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HardcopyDeviceManufacturerModelName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SoftwareVersions,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.VideoImageFormatAcquired,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.DigitalImageFormatAcquired,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProtocolName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusRoute,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusVolume,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusStartTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusStopTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusTotalDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SyringeCounts,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ContrastFlowRate,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContrastFlowDuration,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusIngredient,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusIngredientConcentration,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SpatialResolution,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TriggerTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TriggerSourceOrType,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.NominalInterval,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.FrameTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CardiacFramingType,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FrameTimeVector,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FrameDelay,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImageTriggerDelay,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MultiplexGroupTimeOffset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TriggerTimeOffset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SynchronizationTrigger,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SynchronizationChannel,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TriggerSamplePosition,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalRoute,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalVolume,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalStartTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalStopTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.RadionuclideTotalDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadionuclideHalfLife,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadionuclidePositronFraction,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalSpecificActivity,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalStartDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalStopDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.BeatRejectionFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LowRRValue,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.HighRRValue,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.IntervalsAcquired,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.IntervalsRejected,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PVCRejection,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SkipBeats,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.HeartRate,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CardiacNumberOfImages,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TriggerWindow,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReconstructionDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DistanceSourceToDetector,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DistanceSourceToPatient,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EstimatedRadiographicMagnificationFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.GantryDetectorTilt,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.GantryDetectorSlew,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableHeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTraverse,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableMotion,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TableVerticalIncrement,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableLateralIncrement,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableLongitudinalIncrement,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RotationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AngularPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadialPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ScanArc,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.AngularStep,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CenterOfRotationOffset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RotationOffset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FieldOfViewShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FieldOfViewDimensions,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ExposureTime,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.XRayTubeCurrent,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.Exposure,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ExposureInuAs,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AveragePulseWidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadiationSetting,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RectificationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RadiationMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageAndFluoroscopyAreaDoseProduct,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FilterType,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.TypeOfFilters,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IntensifierSize,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImagerPixelSpacing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.Grid,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GeneratorPower,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CollimatorGridName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CollimatorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FocalDistance,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.XFocusCenter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.YFocusCenter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FocalSpots,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.AnodeTargetMaterial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BodyPartThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CompressionForce,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CompressionPressure,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PaddleDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CompressionContactArea,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DateOfLastCalibration,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.TimeOfLastCalibration,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.DateTimeOfLastCalibration,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ConvolutionKernel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.UpperLowerPixelValues,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ActualFrameDuration,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CountRate,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PreferredPlaybackSequencing,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ReceiveCoilName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.TransmitCoilName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PlateType,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PhosphorType,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.WaterEquivalentDiameter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.WaterEquivalentDiameterCalculationMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScanVelocity,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WholeBodyTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScanLength,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionMatrix,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.InPlanePhaseEncodingDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FlipAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.VariableFlipAngleFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SAR,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.dBdt,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.B1rms,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AcquisitionDeviceProcessingDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AcquisitionDeviceProcessingCode,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CassetteOrientation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CassetteSize,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ExposuresOnPlate,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RelativeXRayExposure,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ExposureIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TargetExposureIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeviationIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ColumnAngulation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TomoLayerHeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TomoAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TomoTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TomoType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TomoClass,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfTomosynthesisSourceImages,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PositionerMotion,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PositionerType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PositionerPrimaryAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PositionerSecondaryAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PositionerPrimaryAngleIncrement,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PositionerSecondaryAngleIncrement,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorPrimaryAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorSecondaryAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ShutterShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShutterLeftVerticalEdge,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ShutterRightVerticalEdge,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ShutterUpperHorizontalEdge,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ShutterLowerHorizontalEdge,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CenterOfCircularShutter,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RadiusOfCircularShutter,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.VerticesOfThePolygonalShutter,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ShutterPresentationValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ShutterOverlayGroup,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ShutterPresentationColorCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CollimatorShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CollimatorLeftVerticalEdge,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CollimatorRightVerticalEdge,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CollimatorUpperHorizontalEdge,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CollimatorLowerHorizontalEdge,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CenterOfCircularCollimator,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RadiusOfCircularCollimator,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.VerticesOfThePolygonalCollimator,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionTimeSynchronized,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TimeSource,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.TimeDistributionProtocol,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NTPSourceAddress,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PageNumberVector,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.FrameLabelVector,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.FramePrimaryAngleVector,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FrameSecondaryAngleVector,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SliceLocationVector,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DisplayWindowLabelVector,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.NominalScannedPixelSpacing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DigitizingDeviceTransportDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RotationOfScannedFilm,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BiopsyTargetSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TargetUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.LocalizingCursorPosition,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CalculatedTargetPosition,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TargetLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.DisplayedZValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IVUSAcquisition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IVUSPullbackRate,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.IVUSGatedRate,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.IVUSPullbackStartFrameNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.IVUSPullbackStopFrameNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.LesionNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.OutputPower,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.TransducerData,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FocusDepth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ProcessingFunction,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PostprocessingFunction,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MechanicalIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BoneThermalIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CranialThermalIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SoftTissueThermalIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SoftTissueFocusThermalIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SoftTissueSurfaceThermalIndex,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DynamicRange,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TotalGain,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DepthOfScanField,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PatientPosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ViewPosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ProjectionEponymousNameCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageTransformationMatrix,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImageTranslationVector,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.Sensitivity,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SequenceOfUltrasoundRegions,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RegionSpatialFormat,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RegionDataType,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RegionFlags,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.RegionLocationMinX0,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.RegionLocationMinY0,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.RegionLocationMaxX1,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.RegionLocationMaxY1,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ReferencePixelX0,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.ReferencePixelY0,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.PhysicalUnitsXDirection,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PhysicalUnitsYDirection,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ReferencePixelPhysicalValueX,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ReferencePixelPhysicalValueY,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PhysicalDeltaX,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PhysicalDeltaY,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TransducerFrequency,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TransducerType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PulseRepetitionFrequency,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.DopplerCorrectionAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SteeringAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DopplerSampleVolumeXPositionRetired,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.DopplerSampleVolumeXPosition,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.DopplerSampleVolumeYPositionRetired,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.DopplerSampleVolumeYPosition,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.TMLinePositionX0Retired,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TMLinePositionX0,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.TMLinePositionY0Retired,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TMLinePositionY0,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.TMLinePositionX1Retired,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TMLinePositionX1,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.TMLinePositionY1Retired,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TMLinePositionY1,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.PixelComponentOrganization,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PixelComponentMask,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.PixelComponentRangeStart,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.PixelComponentRangeStop,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.PixelComponentPhysicalUnits,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PixelComponentDataType,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfTableBreakPoints,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TableOfXBreakPoints,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TableOfYBreakPoints,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.NumberOfTableEntries,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TableOfPixelValues,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TableOfParameterValues,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RWaveTimeVector,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DetectorConditionsNominalFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DetectorTemperature,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DetectorConfiguration,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DetectorDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.DetectorMode,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.DetectorID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.DateOfLastDetectorCalibration,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.TimeOfLastDetectorCalibration,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ExposuresOnDetectorSinceLastCalibration,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ExposuresOnDetectorSinceManufactured,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.DetectorTimeSinceLastExposure,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorActiveTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorActivationOffsetFromExposure,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorBinning,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorElementPhysicalSize,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorElementSpacing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorActiveShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DetectorActiveDimensions,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorActiveOrigin,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DetectorManufacturerName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DetectorManufacturerModelName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FieldOfViewOrigin,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FieldOfViewRotation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FieldOfViewHorizontalFlip,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PixelDataAreaOriginRelativeToFOV,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PixelDataAreaRotationAngleRelativeToFOV,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GridAbsorbingMaterial,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.GridSpacingMaterial,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.GridThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.GridPitch,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.GridAspectRatio,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.GridPeriod,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.GridFocalDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FilterMaterial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FilterThicknessMinimum,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FilterThicknessMaximum,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FilterBeamPathLengthMinimum,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FilterBeamPathLengthMaximum,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ExposureControlMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ExposureControlModeDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ExposureStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PhototimerSetting,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ExposureTimeInuS,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.XRayTubeCurrentInuA,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContentQualification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PulseSequenceName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.MRImagingModifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EchoPulseSequence,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InversionRecovery,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FlowCompensation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MultipleSpinEcho,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MultiPlanarExcitation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PhaseContrast,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TimeOfFlightContrast,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Spoiling,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SteadyStatePulseSequence,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EchoPlanarPulseSequence,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TagAngleFirstAxis,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MagnetizationTransfer,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.T2Preparation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BloodSignalNulling,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SaturationRecovery,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpectrallySelectedSuppression,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpectrallySelectedExcitation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpatialPresaturation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Tagging,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OversamplingPhase,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TagSpacingFirstDimension,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.GeometryOfKSpaceTraversal,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SegmentedKSpaceTraversal,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RectilinearPhaseEncodeReordering,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TagThickness,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PartialFourierDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CardiacSynchronizationTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReceiveCoilManufacturerName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MRReceiveCoilSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReceiveCoilType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.QuadratureReceiveCoil,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MultiCoilDefinitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MultiCoilConfiguration,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MultiCoilElementName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.MultiCoilElementUsed,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MRTransmitCoilSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransmitCoilManufacturerName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TransmitCoilType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpectralWidth,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ChemicalShiftReference,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VolumeLocalizationTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MRAcquisitionFrequencyEncodingSteps,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Decoupling,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DecoupledNucleus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DecouplingFrequency,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DecouplingMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DecouplingChemicalShiftReference,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.KSpaceFiltering,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TimeDomainFiltering,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfZeroFills,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BaselineCorrection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ParallelReductionFactorInPlane,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CardiacRRIntervalSpecified,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.AcquisitionDuration,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FrameAcquisitionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.DiffusionDirectionality,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DiffusionGradientDirectionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ParallelAcquisition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ParallelAcquisitionTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InversionTimes,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MetaboliteMapDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.PartialFourier,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EffectiveEchoTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MetaboliteMapCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChemicalShiftSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CardiacSignalSource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DiffusionBValue,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DiffusionGradientOrientation,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VelocityEncodingDirection,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VelocityEncodingMinimumValue,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VelocityEncodingAcquisitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfKSpaceTrajectories,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CoverageOfKSpace,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpectroscopyAcquisitionPhaseRows,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ParallelReductionFactorInPlaneRetired,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TransmitterFrequency,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ResonantNucleus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FrequencyCorrection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MRSpectroscopyFOVGeometrySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SlabThickness,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SlabOrientation,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MidSlabPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MRSpatialSaturationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MRTimingAndRelatedParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MREchoSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MRModifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MRDiffusionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CardiacSynchronizationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MRAveragesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MRFOVGeometrySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VolumeLocalizationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpectroscopyAcquisitionDataColumns,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.DiffusionAnisotropyType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FrameReferenceDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.MRMetaboliteMapSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ParallelReductionFactorOutOfPlane,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SpectroscopyAcquisitionOutOfPlanePhaseSteps,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.BulkMotionStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ParallelReductionFactorSecondInPlane,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CardiacBeatRejectionTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RespiratoryMotionCompensationTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RespiratorySignalSource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BulkMotionCompensationTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BulkMotionSignalSource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ApplicableSafetyStandardAgency,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ApplicableSafetyStandardDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.OperatingModeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OperatingModeType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OperatingMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpecificAbsorptionRateDefinition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GradientOutputType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpecificAbsorptionRateValue,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.GradientOutput,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FlowCompensationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TaggingDelay,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RespiratoryMotionCompensationTechniqueDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.RespiratorySignalSourceID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ChemicalShiftMinimumIntegrationLimitInHz,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ChemicalShiftMaximumIntegrationLimitInHz,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MRVelocityEncodingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FirstOrderPhaseCorrection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.WaterReferencedPhaseCorrection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MRSpectroscopyAcquisitionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RespiratoryCyclePosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VelocityEncodingMaximumValue,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TagSpacingSecondDimension,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TagAngleSecondAxis,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.FrameAcquisitionDuration,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MRImageFrameTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MRSpectroscopyFrameTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MRAcquisitionPhaseEncodingStepsInPlane,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MRAcquisitionPhaseEncodingStepsOutOfPlane,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SpectroscopyAcquisitionPhaseColumns,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.CardiacCyclePosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpecificAbsorptionRateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RFEchoTrainLength,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.GradientEchoTrainLength,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ArterialSpinLabelingContrast,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MRArterialSpinLabelingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ASLTechniqueDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ASLSlabNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ASLSlabThickness,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ASLSlabOrientation,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ASLMidSlabPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ASLContext,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ASLPulseTrainDuration,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ASLCrusherFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ASLCrusherFlowLimit,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ASLCrusherDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ASLBolusCutoffFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ASLBolusCutoffTimingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ASLBolusCutoffTechnique,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ASLBolusCutoffDelayTime,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ASLSlabSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChemicalShiftMinimumIntegrationLimitInppm,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ChemicalShiftMaximumIntegrationLimitInppm,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.WaterReferenceAcquisition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EchoPeakPosition,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CTAcquisitionTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AcquisitionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TubeAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CTAcquisitionDetailsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RevolutionTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SingleCollimationWidth,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TotalCollimationWidth,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CTTableDynamicsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TableSpeed,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TableFeedPerRotation,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SpiralPitchFactor,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CTGeometrySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DataCollectionCenterPatient,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CTReconstructionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionAlgorithm,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ConvolutionKernelGroup,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReconstructionFieldOfView,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ReconstructionTargetCenterPatient,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ReconstructionAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ImageFilter,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CTExposureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionPixelSpacing,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ExposureModulationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EstimatedDoseSaving,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CTXRayDetailsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CTPositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TablePosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ExposureTimeInms,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CTImageFrameTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XRayTubeCurrentInmA,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ExposureInmAs,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ConstantVolumeFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FluoroscopyFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DistanceSourceToDataCollectionCenter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusAgentNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusIngredientCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContrastAdministrationProfileSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusUsageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusAgentAdministered,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusAgentDetected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusAgentPhase,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CTDIvol,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CTDIPhantomTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CalciumScoringMassFactorPatient,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CalciumScoringMassFactorDevice,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.EnergyWeightingFactor,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CTAdditionalXRaySourceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProjectionPixelCalibrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DistanceSourceToIsocenter,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DistanceObjectToTableTop,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ObjectPixelSpacingInCenterOfBeam,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PositionerPositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TablePositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CollimatorShapeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlanesInAcquisition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.XAXRFFrameCharacteristicsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FrameAcquisitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XRayReceptorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionProtocolName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AcquisitionProtocolDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusIngredientOpaque,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DistanceReceptorPlaneToDetectorHousing,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IntensifierActiveShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IntensifierActiveDimensions,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PhysicalDetectorSize,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PositionOfIsocenterProjection,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FieldOfViewSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FieldOfViewDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ExposureControlSensingRegionsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ExposureControlSensingRegionShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ExposureControlSensingRegionLeftVerticalEdge,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.ExposureControlSensingRegionRightVerticalEdge,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.ExposureControlSensingRegionUpperHorizontalEdge,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.ExposureControlSensingRegionLowerHorizontalEdge,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.CenterOfCircularExposureControlSensingRegion,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.RadiusOfCircularExposureControlSensingRegion,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.VerticesOfThePolygonalExposureControlSensingRegion,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.ColumnAngulationPatient,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BeamAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FrameDetectorParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CalculatedAnatomyThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CalibrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObjectThicknessSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlaneIdentification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FieldOfViewDimensionsInFloat,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IsocenterReferenceSystemSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PositionerIsocenterPrimaryAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PositionerIsocenterSecondaryAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PositionerIsocenterDetectorRotationAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableXPositionToIsocenter,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableYPositionToIsocenter,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableZPositionToIsocenter,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableHorizontalRotationAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableHeadTiltAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableCradleTiltAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FrameDisplayShutterSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AcquiredImageAreaDoseProduct,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CArmPositionerTabletopRelationship,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.XRayGeometrySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IrradiationEventIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XRay3DFrameTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContributingSourcesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XRay3DAcquisitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrimaryPositionerScanArc,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SecondaryPositionerScanArc,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PrimaryPositionerScanStartAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SecondaryPositionerScanStartAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PrimaryPositionerIncrement,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SecondaryPositionerIncrement,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StartAcquisitionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.EndAcquisitionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.PrimaryPositionerIncrementSign,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.SecondaryPositionerIncrementSign,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.ApplicationName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ApplicationVersion,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ApplicationManufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AlgorithmType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AlgorithmDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.XRay3DReconstructionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PerProjectionAcquisitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DetectorPositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XRayAcquisitionDoseSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XRaySourceIsocenterPrimaryAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.XRaySourceIsocenterSecondaryAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BreastSupportIsocenterPrimaryAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BreastSupportIsocenterSecondaryAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BreastSupportXPositionToIsocenter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BreastSupportYPositionToIsocenter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BreastSupportZPositionToIsocenter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DetectorIsocenterPrimaryAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DetectorIsocenterSecondaryAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DetectorXPositionToIsocenter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DetectorYPositionToIsocenter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DetectorZPositionToIsocenter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.XRayGridSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XRayFilterSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DetectorActiveAreaTLHCPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DetectorActiveAreaOrientation,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PositionerPrimaryAngleDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DiffusionBMatrixSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DiffusionBValueXX,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DiffusionBValueXY,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DiffusionBValueXZ,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DiffusionBValueYY,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DiffusionBValueYZ,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DiffusionBValueZZ,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FunctionalMRSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FunctionalSettlingPhaseFramesPresent,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FunctionalSyncPulse,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.SettlingPhaseFrame,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DecayCorrectionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.StartDensityThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.StartRelativeDensityDifferenceThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.StartCardiacTriggerCountThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.StartRespiratoryTriggerCountThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TerminationCountsThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TerminationDensityThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TerminationRelativeDensityThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TerminationTimeThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TerminationCardiacTriggerCountThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TerminationRespiratoryTriggerCountThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DetectorGeometry,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TransverseDetectorSeparation,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.AxialDetectorDimension,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalAgentNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PETFrameAcquisitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PETDetectorMotionDetailsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PETTableDynamicsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PETPositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PETFrameCorrectionFactorsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalUsageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AttenuationCorrectionSource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfIterations,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfSubsets,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PETReconstructionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PETFrameTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TimeOfFlightInformationUsed,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReconstructionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DecayCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AttenuationCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScatterCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DeadTimeCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GantryMotionCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientMotionCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CountLossNormalizationCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RandomsCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NonUniformRadialSamplingCorrected,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SensitivityCalibrated,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DetectorNormalizationCorrection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IterativeReconstructionMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AttenuationCorrectionTemporalRelationship,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientPhysiologicalStateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientPhysiologicalStateCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DepthsOfFocus,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ExcludedIntervalsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ExclusionStartDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ExclusionDuration,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.USImageDescriptionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageDataTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DataType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TransducerScanPatternCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AliasedDataType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PositionMeasuringDeviceUsed,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TransducerGeometryCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransducerBeamSteeringCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransducerApplicationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ZeroVelocityPixelValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.ReferenceLocationLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferenceLocationDescription,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.ReferenceBasisCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferenceGeometryCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OffsetDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OffsetDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PotentialScheduledProtocolCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PotentialRequestedProcedureCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PotentialReasonsForProcedure,ValueRepresentation.UC);
		valueRepresentationsByTag.put(TagFromName.PotentialReasonsForProcedureCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PotentialDiagnosticTasks,ValueRepresentation.UC);
		valueRepresentationsByTag.put(TagFromName.ContraindicationsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedDefinedProtocolSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedPerformedProtocolSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PredecessorProtocolSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProtocolPlanningInformation,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.ProtocolDesignRationale,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.PatientSpecificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ModelSpecificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ParametersSpecificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InstructionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InstructionIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.InstructionText,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.InstructionDescription,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.InstructionPerformedFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InstructionPerformedDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.InstructionPerformanceComment,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.PatientPositioningInstructionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PositioningMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PositioningLandmarkSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TargetFrameOfReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.AcquisitionProtocolElementSpecificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AcquisitionProtocolElementSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProtocolElementNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ProtocolElementName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProtocolElementCharacteristicsSummary,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.ProtocolElementPurpose,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.AcquisitionMotion,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionStartLocationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AcquisitionEndLocationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionProtocolElementSpecificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionProtocolElementSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StorageProtocolElementSpecificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StorageProtocolElementSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RequestedSeriesDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SourceAcquisitionProtocolElementNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SourceAcquisitionBeamNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SourceReconstructionProtocolElementNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ReconstructionStartLocationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionEndLocationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionAlgorithmSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionTargetCenterLocationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageFilterDescription,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.CTDIvolNotificationTrigger,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DLPNotificationTrigger,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.AutoKVPSelectionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AutoKVPUpperBound,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.AutoKVPLowerBound,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ProtocolDefinedPatientPosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContributingEquipmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContributionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ContributionDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.StudyInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.SeriesInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.StudyID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SeriesNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.InstanceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.IsotopeNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PhaseNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.IntervalNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TimeSlotNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AngleNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ItemNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PatientOrientation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlayNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CurveNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.LUTNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ImagePosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImagePositionPatient,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImageOrientation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImageOrientationPatient,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.Location,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FrameOfReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.Laterality,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageLaterality,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageGeometryType,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MaskingImage,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReportNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TemporalPositionIdentifier,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfTemporalPositions,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TemporalResolution,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SynchronizationFrameOfReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.SOPInstanceUIDOfConcatenationSource,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.SeriesInStudy,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionsInSeries,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ImagesInAcquisition,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ImagesInSeries,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionsInStudy,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ImagesInStudy,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.Reference,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TargetPositionReferenceIndicator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PositionReferenceIndicator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SliceLocation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OtherStudyNumbers,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfPatientRelatedStudies,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfPatientRelatedSeries,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfPatientRelatedInstances,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfStudyRelatedSeries,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfStudyRelatedInstances,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfSeriesRelatedInstances,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SourceImageID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModifyingDeviceID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModifiedImageID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModifiedImageDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ModifyingDeviceManufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ModifiedImageTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ModifiedImageDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImageComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.OriginalImageIdentification,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.OriginalImageIdentificationNomenclature,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.StackID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.InStackPositionNumber,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.FrameAnatomySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FrameLaterality,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FrameContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlanePositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlaneOrientationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TemporalPositionIndex,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.NominalCardiacTriggerDelayTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.NominalCardiacTriggerTimePriorToRPeak,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ActualCardiacTriggerTimePriorToRPeak,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FrameAcquisitionNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DimensionIndexValues,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.FrameComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ConcatenationUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.InConcatenationNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.InConcatenationTotalNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DimensionOrganizationUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DimensionIndexPointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.FunctionalGroupPointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.UnassignedSharedConvertedAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.UnassignedPerFrameConvertedAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConversionSourceAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DimensionIndexPrivateCreator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DimensionOrganizationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DimensionIndexSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConcatenationFrameOffsetNumber,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.FunctionalGroupPrivateCreator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.NominalPercentageOfCardiacPhase,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NominalPercentageOfRespiratoryPhase,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StartingRespiratoryAmplitude,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StartingRespiratoryPhase,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EndingRespiratoryAmplitude,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.EndingRespiratoryPhase,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RespiratoryTriggerType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RRIntervalTimeNominal,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ActualCardiacTriggerDelayTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RespiratorySynchronizationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RespiratoryIntervalTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.NominalRespiratoryTriggerDelayTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RespiratoryTriggerDelayThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ActualRespiratoryTriggerDelayTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ImagePositionVolume,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ImageOrientationVolume,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.UltrasoundAcquisitionGeometry,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ApexPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VolumeToTransducerMappingMatrix,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VolumeToTableMappingMatrix,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VolumeToTransducerRelationship,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientFrameOfReferenceSource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TemporalPositionTimeOffset,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PlanePositionVolumeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlaneOrientationVolumeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TemporalPositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DimensionOrganizationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VolumeFrameOfReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.TableFrameOfReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DimensionDescriptionLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientOrientationInFrameSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FrameLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AcquisitionIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ContributingSOPInstancesReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReconstructionIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.LightPathFilterPassThroughWavelength,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.LightPathFilterPassBand,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImagePathFilterPassThroughWavelength,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImagePathFilterPassBand,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PatientEyeMovementCommanded,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientEyeMovementCommandCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SphericalLensPower,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CylinderLensPower,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CylinderAxis,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.EmmetropicMagnification,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IntraOcularPressure,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.HorizontalFieldOfView,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PupilDilated,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DegreeOfDilation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StereoBaselineAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StereoBaselineDisplacement,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StereoHorizontalPixelOffset,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StereoVerticalPixelOffset,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StereoRotation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AcquisitionDeviceTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IlluminationTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LightPathFilterTypeStackCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImagePathFilterTypeStackCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LensesCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelDescriptionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RefractiveStateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MydriaticAgentCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelativeImagePositionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CameraAngleOfView,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StereoPairsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LeftImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RightImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StereoPairsPresent,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AxialLengthOfTheEye,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.OphthalmicFrameLocationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferenceCoordinates,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DepthSpatialResolution,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MaximumDepthDistortion,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AlongScanSpatialResolution,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MaximumAlongScanDistortion,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.OphthalmicImageOrientation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DepthOfTransverseImage,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MydriaticAgentConcentrationUnitsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AcrossScanSpatialResolution,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MaximumAcrossScanDistortion,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MydriaticAgentConcentration,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.IlluminationWaveLength,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IlluminationPower,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IlluminationBandwidth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MydriaticAgentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialMeasurementsRightEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialMeasurementsLeftEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialMeasurementsDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLength,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.LensStatusCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VitreousStatusCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IOLFormulaCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IOLFormulaDetail,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.KeratometerIndex,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SourceOfOphthalmicAxialLengthCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TargetRefraction,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RefractiveProcedureOccurred,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RefractiveSurgeryTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicUltrasoundMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IOLPower,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PredictedRefractiveError,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthVelocity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.LensStatusDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.VitreousStatusDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IOLPowerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LensConstantSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IOLManufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.LensConstantDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImplantName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.KeratometryMeasurementTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantPartNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferencedOphthalmicAxialMeasurementsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RefractiveErrorBeforeRefractiveSurgeryCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IOLPowerForExactEmmetropia,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IOLPowerForExactTargetRefraction,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AnteriorChamberDepthDefinitionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LensThicknessSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnteriorChamberDepthSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LensThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AnteriorChamberDepth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SourceOfLensThicknessDataCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceOfAnteriorChamberDepthDataCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceOfRefractiveMeasurementsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceOfRefractiveMeasurementsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthMeasurementModified,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthDataSourceCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthAcquisitionMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SignalToNoiseRatio,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthDataSourceDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsTotalLengthSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSegmentalLengthSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsLengthSummationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.UltrasoundOphthalmicAxialLengthMeasurementsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OpticalOphthalmicAxialLengthMeasurementsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.UltrasoundSelectedOphthalmicAxialLengthSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthSelectionMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OpticalSelectedOphthalmicAxialLengthSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SelectedSegmentalOphthalmicAxialLengthSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SelectedTotalOphthalmicAxialLengthSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricTypeDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IntraocularLensCalculationsRightEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IntraocularLensCalculationsLeftEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedOphthalmicAxialLengthMeasurementQCImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicMappingDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AcquisitionMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AcquisitionMethodAlgorithmSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicThicknessMapTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicThicknessMappingNormalsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RetinalThicknessDefinitionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PixelValueMappingToCodedConceptSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MappedPixelValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.PixelValueMappingExplanation,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.OphthalmicThicknessMapQualityThresholdSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicThicknessMapThresholdQualityRating,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AnatomicStructureReferencePoint,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RegistrationToLocalizerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RegisteredLocalizerUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RegisteredLocalizerTopLeftHandCorner,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RegisteredLocalizerBottomRightHandCorner,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.OphthalmicThicknessMapQualityRatingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelevantOPTAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransformationMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransformationAlgorithmSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAxialLengthMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OphthalmicFOV,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TwoDimensionalToThreeDimensionalMapSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WideFieldOphthalmicPhotographyQualityRatingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WideFieldOphthalmicPhotographyQualityThresholdSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WideFieldOphthalmicPhotographyThresholdQualityRating,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.XCoordinatesCenterPixelViewAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.YCoordinatesCenterPixelViewAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NumberOfMapPoints,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TwoDimensionalToThreeDimensionalMapData,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.DerivationAlgorithmSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicImageTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicImageTypeDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ScanPatternTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSurfaceMeshIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicVolumetricPropertiesFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAnatomicReferencePointXCoordinate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.OphthalmicAnatomicReferencePointYCoordinate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.OphthalmicEnFaceImageQualityRatingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.QualityThreshold,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OCTBscanAnalysisAcquisitionParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberofBscansPerFrame,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.BscanSlabThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DistanceBetweenBscanSlabs,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BscanCycleTime,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BscanCycleTimeVector,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AscanRate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BscanRate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SurfaceMeshZPixelOffset,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.VisualFieldHorizontalExtent,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.VisualFieldVerticalExtent,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.VisualFieldShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScreeningTestModeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MaximumStimulusLuminance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BackgroundLuminance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StimulusColorCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BackgroundIlluminationColorCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StimulusArea,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StimulusPresentationTime,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FixationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FixationMonitoringCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisualFieldCatchTrialSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FixationCheckedQuantity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PatientNotProperlyFixatedQuantity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PresentedVisualStimuliDataFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfVisualStimuli,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ExcessiveFixationLossesDataFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ExcessiveFixationLosses,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.StimuliRetestingQuantity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CommentsOnPatientPerformanceOfVisualField,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.FalseNegativesEstimateFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FalseNegativesEstimate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NegativeCatchTrialsQuantity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.FalseNegativesQuantity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ExcessiveFalseNegativesDataFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ExcessiveFalseNegatives,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FalsePositivesEstimateFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FalsePositivesEstimate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CatchTrialsDataFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PositiveCatchTrialsQuantity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TestPointNormalsDataFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TestPointNormalsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GlobalDeviationProbabilityNormalsFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FalsePositivesQuantity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ExcessiveFalsePositivesDataFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ExcessiveFalsePositives,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VisualFieldTestNormalsFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ResultsNormalsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AgeCorrectedSensitivityDeviationAlgorithmSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GlobalDeviationFromNormal,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GeneralizedDefectSensitivityDeviationAlgorithmSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LocalizedDeviationFromNormal,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PatientReliabilityIndicator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.VisualFieldMeanSensitivity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GlobalDeviationProbability,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.LocalDeviationProbabilityNormalsFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LocalizedDeviationProbability,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ShortTermFluctuationCalculated,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShortTermFluctuation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ShortTermFluctuationProbabilityCalculated,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShortTermFluctuationProbability,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalCalculated,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormal,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalProbabilityCalculated,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalProbability,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GlobalDeviationProbabilitySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LocalizedDeviationProbabilitySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FovealSensitivityMeasured,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FovealSensitivity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.VisualFieldTestDuration,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.VisualFieldTestPointSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisualFieldTestPointXCoordinate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.VisualFieldTestPointYCoordinate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AgeCorrectedSensitivityDeviationValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.StimulusResults,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SensitivityValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RetestStimulusSeen,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RetestSensitivityValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.VisualFieldTestPointNormalsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.QuantifiedDefect,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AgeCorrectedSensitivityDeviationProbabilityValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MinimumSensitivityValue,ValueRepresentation.FL );
		valueRepresentationsByTag.put(TagFromName.BlindSpotLocalized,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BlindSpotXCoordinate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BlindSpotYCoordinate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.VisualAcuityMeasurementSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RefractiveParametersUsedOnPatientSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasurementLaterality,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OphthalmicPatientClinicalInformationLeftEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OphthalmicPatientClinicalInformationRightEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FovealPointNormativeDataFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FovealPointProbabilityValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ScreeningBaselineMeasured,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScreeningBaselineMeasuredSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScreeningBaselineType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScreeningBaselineValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AlgorithmSource,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DataSetName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DataSetVersion,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DataSetSource,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DataSetDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.VisualFieldTestReliabilityGlobalIndexSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisualFieldGlobalResultsIndexSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DataObservationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IndexNormalsFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IndexProbability,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IndexProbabilitySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SamplesPerPixel,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SamplesPerPixelUsed,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PhotometricInterpretation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageDimensions,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PlanarConfiguration,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfFrames,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.FrameIncrementPointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.FrameDimensionPointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.Rows,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Columns,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Planes,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.UltrasoundColorDataPresent,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PixelSpacing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ZoomFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ZoomCenter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PixelAspectRatio,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ImageFormat,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ManipulatedImage,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CorrectedImage,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CompressionRecognitionCode,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CompressionCode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CompressionOriginator,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CompressionLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CompressionDescription,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CompressionSequence,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CompressionStepPointers,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.RepeatInterval,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BitsGrouped,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PerimeterTable,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PerimeterValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.PredictorRows,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PredictorColumns,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PredictorConstants,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BlockedPixels,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BlockRows,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BlockColumns,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RowOverlap,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ColumnOverlap,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BitsAllocated,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BitsStored,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.HighBit,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PixelRepresentation,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SmallestValidPixelValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.LargestValidPixelValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.SmallestImagePixelValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.LargestImagePixelValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.SmallestPixelValueInSeries,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.LargestPixelValueInSeries,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.SmallestImagePixelValueInPlane,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.LargestImagePixelValueInPlane,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.PixelPaddingValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.PixelPaddingRangeLimit,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.FloatPixelPaddingValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DoubleFloatPixelPaddingValue,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FloatPixelPaddingRangeLimit,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DoubleFloatPixelPaddingRangeLimit,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ImageLocation,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.QualityControlImage,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BurnedInAnnotation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RecognizableVisualFeatures,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LongitudinalTemporalInformationModified,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferencedColorPaletteInstanceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.TransformLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TransformVersionNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.NumberOfTransformSteps,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SequenceOfCompressedData,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DetailsOfCoefficients,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.DCTLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DataBlockDescription,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DataBlock,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.NormalizationFactorFormat,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ZonalMapNumberFormat,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ZonalMapLocation,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.ZonalMapFormat,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.AdaptiveMapFormat,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CodeNumberFormat,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PixelSpacingCalibrationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PixelSpacingCalibrationDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PixelIntensityRelationship,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PixelIntensityRelationshipSign,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.WindowCenter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WindowWidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RescaleIntercept,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RescaleSlope,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RescaleType,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.WindowCenterWidthExplanation,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.VOILUTFunction,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GrayScale,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RecommendedViewingMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GrayLookupTableDescriptor,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.RedPaletteColorLookupTableDescriptor,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.GreenPaletteColorLookupTableDescriptor,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.BluePaletteColorLookupTableDescriptor,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.AlphaPaletteColorLookupTableDescriptor,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.LargeRedPaletteColorLookupTableDescriptor,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.LargeGreenPaletteColorLookupTableDescriptor,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.LargeBluePaletteColorLookupTableDescriptor,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.PaletteColorLookupTableUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.GrayLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.RedPaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.GreenPaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.BluePaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.AlphaPaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.LargeRedPaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.LargeGreenPaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.LargeBluePaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.LargePaletteColorLookupTableUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.SegmentedRedPaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.SegmentedGreenPaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.SegmentedBluePaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.SegmentedAlphaPaletteColorLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.StoredValueColorRangeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MinimumStoredValueMapped,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MaximumStoredValueMapped,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BreastImplantPresent,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PartialView,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PartialViewDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.PartialViewCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpatialLocationsPreserved,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DataFrameAssignmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DataPathAssignment,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BitsMappedToColorLookupTable,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BlendingLUT1Sequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlendingLUT1TransferFunction,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BlendingWeightConstant,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BlendingLookupTableDescriptor,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BlendingLookupTableData,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.EnhancedPaletteColorLookupTableSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlendingLUT2Sequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlendingLUT2TransferFunction,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DataPathID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RGBLUTTransferFunction,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AlphaLUTTransferFunction,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ICCProfile,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.ColorSpace,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LossyImageCompression,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LossyImageCompressionRatio,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.LossyImageCompressionMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModalityLUTSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LUTDescriptor,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.LUTExplanation,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ModalityLUTType,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.LUTData,ValueRepresentation.XO);
		valueRepresentationsByTag.put(TagFromName.VOILUTSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SoftcopyVOILUTSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImagePresentationComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.BiPlaneAcquisitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RepresentativeFrameNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.FrameNumbersOfInterest,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.FrameOfInterestDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FrameOfInterestType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MaskPointers,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RWavePointer,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MaskSubtractionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MaskOperation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ApplicableFrameRange,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MaskFrameNumbers,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ContrastFrameAveraging,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MaskSubPixelShift,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TIDOffset,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.MaskOperationExplanation,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.EquipmentAdministratorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfDisplaySubsystems,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CurrentConfigurationID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplaySystemID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplaySubsystemName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.DisplaySubsystemDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SystemStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SystemStatusComment,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TargetLuminanceCharacteristicsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LuminanceCharacteristicsID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplaySubsystemConfigurationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConfigurationID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ConfigurationName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ConfigurationDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferencedTargetLuminanceCharacteristicsID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.QAResultsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DisplaySubsystemQAResultsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConfigurationQAResultsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasurementEquipmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasurementFunctions,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MeasurementEquipmentType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VisualEvaluationResultSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DisplayCalibrationResultSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DDLValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CIExyWhitePoint,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DisplayFunctionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GammaValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NumberOfLuminancePoints,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.LuminanceResponseSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TargetMinimumLuminance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TargetMaximumLuminance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.LuminanceValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.LuminanceResponseDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.WhitePointFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DisplayDeviceTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DisplaySubsystemSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LuminanceResultSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AmbientLightValueSource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MeasuredCharacteristics,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LuminanceUniformityResultSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisualEvaluationTestSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TestResult,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TestResultComment,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TestImageValidation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TestPatternCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasurementPatternCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisualEvaluationMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PixelDataProviderURL,ValueRepresentation.UR);
		valueRepresentationsByTag.put(TagFromName.DataPointRows,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.DataPointColumns,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SignalDomainColumns,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LargestMonochromePixelValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DataRepresentation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PixelMeasuresSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FrameVOILUTSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PixelValueTransformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SignalDomainRows,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DisplayFilterPercentage,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FramePixelShiftSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SubtractionItemID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PixelIntensityRelationshipLUTSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FramePixelDataPropertiesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GeometricalProperties,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GeometricMaximumDistortion,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ImageProcessingApplied,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MaskSelectionMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LUTFunction,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MaskVisibilityPercentage,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PixelShiftSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RegionPixelShiftSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VerticesOfTheRegion,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.MultiFramePresentationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PixelShiftFrameRange,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.LUTFrameRange,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageToEquipmentMappingMatrix,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EquipmentCoordinateSystemIdentification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.StudyStatusID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.StudyPriorityID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.StudyIDIssuer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.StudyVerifiedDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.StudyVerifiedTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.StudyReadDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.StudyReadTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ScheduledStudyStartDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ScheduledStudyStartTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ScheduledStudyStopDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ScheduledStudyStopTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ScheduledStudyLocation,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ScheduledStudyLocationAETitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.ReasonForStudy,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RequestingPhysicianIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RequestingPhysician,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.RequestingService,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RequestingServiceCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StudyArrivalDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.StudyArrivalTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.StudyCompletionDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.StudyCompletionTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.StudyComponentStatusID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RequestedProcedureDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RequestedProcedureCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RequestedContrastAgent,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.StudyComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ReferencedPatientAliasSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisitStatusID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AdmissionID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IssuerOfAdmissionID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IssuerOfAdmissionIDSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RouteOfAdmissions,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ScheduledAdmissionDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ScheduledAdmissionTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ScheduledDischargeDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ScheduledDischargeTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ScheduledPatientInstitutionResidence,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AdmittingDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.AdmittingTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.DischargeDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.DischargeTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.DischargeDiagnosisDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DischargeDiagnosisCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecialNeeds,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ServiceEpisodeID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IssuerOfServiceEpisodeID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ServiceEpisodeDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IssuerOfServiceEpisodeIDSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PertinentDocumentsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PertinentResourcesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ResourceDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CurrentPatientLocation,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientInstitutionResidence,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientState,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientClinicalTrialParticipationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisitComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.WaveformOriginality,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfWaveformChannels,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfWaveformSamples,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SamplingFrequency,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MultiplexGroupLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ChannelDefinitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WaveformChannelNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ChannelLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ChannelStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ChannelSourceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelSourceModifiersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceWaveformSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelDerivationDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ChannelSensitivity,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelSensitivityUnitsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelSensitivityCorrectionFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelBaseline,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelTimeSkew,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelSampleSkew,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelOffset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WaveformBitsStored,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.FilterLowFrequency,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FilterHighFrequency,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NotchFilterFrequency,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NotchFilterBandwidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WaveformDataDisplayScale,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.WaveformDisplayBackgroundCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.WaveformPresentationGroupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PresentationGroupNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ChannelDisplaySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelRecommendedDisplayCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ChannelPosition,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DisplayShadingFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FractionalChannelDisplayScale,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AbsoluteChannelDisplayScale,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MultiplexedAudioChannelsDescriptionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelIdentificationCode,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ChannelMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScheduledStationAETitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepStartDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepStartTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepEndDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepEndTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ScheduledPerformingPhysicianName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ScheduledProtocolCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.StageCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledPerformingPhysicianIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledStationName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepLocation,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PreMedication,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OrderPlacerIdentifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OrderFillerIdentifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LocalNamespaceEntityID,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.UniversalEntityID,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.UniversalEntityIDType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IdentifierTypeCode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AssigningFacilitySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssigningJurisdictionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssigningAgencyOrDepartmentCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedNonImageCompositeSOPInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedStationAETitle,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.PerformedStationName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PerformedLocation,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepStartDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepStartTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepEndDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepEndTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureTypeDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PerformedProtocolCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedProtocolType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScheduledStepAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RequestAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CommentsOnThePerformedProcedureStep,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepDiscontinuationReasonCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.QuantitySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.Quantity,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MeasuringUnitsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BillingItemSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TotalTimeOfFluoroscopy,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TotalNumberOfExposures,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.EntranceDose,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ExposedArea,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DistanceSourceToEntrance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DistanceSourceToSupport,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ExposureDoseSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CommentsOnRadiationDose,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.XRayOutput,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.HalfValueLayer,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OrganDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OrganExposed,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BillingProcedureStepSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FilmConsumptionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BillingSuppliesAndDevicesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedProcedureStepSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedSeriesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CommentsOnTheScheduledProcedureStep,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ProtocolContextSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContentItemModifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledSpecimenSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenAccessionNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContainerIdentifier,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IssuerOfTheContainerIdentifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AlternateContainerIdentifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContainerTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContainerDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenIdentifier,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SpecimenDescriptionSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenDescriptionTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.SpecimenUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.AcquisitionContextSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AcquisitionContextDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.SpecimenDescriptionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IssuerOfTheSpecimenIdentifierSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenShortDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SpecimenDetailedDescription,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.SpecimenPreparationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenPreparationStepContentItemSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenLocalizationContentItemSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SlideIdentifier,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.WholeSlideMicroscopyImageFrameTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageCenterPointCoordinatesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XOffsetInSlideCoordinateSystem,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.YOffsetInSlideCoordinateSystem,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ZOffsetInSlideCoordinateSystem,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PixelSpacingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CoordinateSystemAxisCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasurementUnitsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VitalStainCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RequestedProcedureID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ReasonForTheRequestedProcedure,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RequestedProcedurePriority,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PatientTransportArrangements,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RequestedProcedureLocation,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PlacerOrderNumberProcedure,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.FillerOrderNumberProcedure,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ConfidentialityCode,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReportingPriority,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ReasonForRequestedProcedureCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NamesOfIntendedRecipientsOfResults,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.IntendedRecipientsOfResultsIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReasonForPerformedProcedureCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RequestedProcedureDescriptionTrial,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PersonIdentificationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PersonAddress,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.PersonTelephoneNumbers,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PersonTelecomInformation,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.RequestedProcedureComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ReasonForTheImagingServiceRequest,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IssueDateOfImagingServiceRequest,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.IssueTimeOfImagingServiceRequest,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.PlacerOrderNumberImagingServiceRequestRetired,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.FillerOrderNumberImagingServiceRequestRetired,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.OrderEnteredBy,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.OrderEntererLocation,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.OrderCallbackPhoneNumber,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.OrderCallbackTelecomInformation,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.PlacerOrderNumberImagingServiceRequest,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FillerOrderNumberImagingServiceRequest,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImagingServiceRequestComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ConfidentialityConstraintOnPatientDataDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.GeneralPurposeScheduledProcedureStepStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GeneralPurposePerformedProcedureStepStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GeneralPurposeScheduledProcedureStepPriority,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcessingApplicationsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepStartDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.MultipleCopiesFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PerformedProcessingApplicationsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepExpirationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.HumanPerformerCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepModificationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ExpectedCompletionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ResultingGeneralPurposePerformedProcedureStepsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedGeneralPurposeScheduledProcedureStepSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledWorkitemCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedWorkitemCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InputAvailabilityFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InputInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelevantInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedGeneralPurposeScheduledProcedureStepTransactionUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ScheduledStationNameCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledStationClassCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledStationGeographicLocationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedStationNameCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedStationClassCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedStationGeographicLocationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RequestedSubsequentWorkitemCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NonDICOMOutputCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OutputInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScheduledHumanPerformersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ActualHumanPerformersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HumanPerformerOrganization,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HumanPerformerName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.RawDataHandling,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InputReadinessState,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepStartDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureStepEndDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepCancellationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.OutputDestinationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DICOMStorageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.STOWRSStorageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StorageURL,ValueRepresentation.UR);
		valueRepresentationsByTag.put(TagFromName.XDSStorageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EntranceDoseInmGy,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EntranceDoseDerivation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ParametricMapFrameTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedImageRealWorldValueMappingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RealWorldValueMappingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PixelValueMappingCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LUTLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RealWorldValueLastValueMapped,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.RealWorldValueLUTData,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DoubleFloatRealWorldValueLastValueMapped,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DoubleFloatRealWorldValueFirstValueMapped,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RealWorldValueFirstValueMapped,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.QuantityDefinitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RealWorldValueIntercept,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RealWorldValueSlope,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FindingsFlagTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RelationshipType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FindingsSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FindingsGroupUIDTrial,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedFindingsGroupUIDTrial,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.FindingsGroupRecordingDateTrial,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.FindingsGroupRecordingTimeTrial,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.FindingsSourceCategoryCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VerifyingOrganization,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DocumentingOrganizationIdentifierCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VerificationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ObservationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ValueType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ConceptNameCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasurementPrecisionDescriptionTrial,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContinuityOfContent,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.UrgencyOrPriorityAlertsTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SequencingIndicatorTrial,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DocumentIdentifierCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DocumentAuthorTrial,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.DocumentAuthorIdentifierCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IdentifierCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VerifyingObserverSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObjectBinaryIdentifierTrial,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.VerifyingObserverName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.DocumentingObserverIdentifierCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AuthorObserverSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ParticipantSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CustodialOrganizationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ParticipationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ParticipationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ObserverType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ProcedureIdentifierCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VerifyingObserverIdentificationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObjectDirectoryBinaryIdentifierTrial,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.EquivalentCDADocumentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedWaveformChannels,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DateOfDocumentOrVerbalTransactionTrial,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.TimeOfDocumentCreationOrVerbalTransactionTrial,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.DateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.Date,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.Time,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.PersonName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.UID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReportStatusIDTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TemporalRangeType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferencedSamplePositions,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ReferencedFrameNumbers,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ReferencedTimeOffsets,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReferencedDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.TextValue,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.FloatingPointValue,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RationalNumeratorValue,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.RationalDenominatorValue,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ObservationCategoryCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConceptCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BibliographicCitationTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.PurposeOfReferenceCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObservationUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedObservationUIDTrial,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedObservationClassTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferencedObjectObservationClassTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AnnotationGroupNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ObservationDateTrial,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ObservationTimeTrial,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.MeasurementAutomationTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModifierCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IdentificationDescriptionTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CoordinatesSetGeometricTypeTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AlgorithmCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AlgorithmDescriptionTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.PixelCoordinatesSetTrial,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.MeasuredValueSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumericValueQualifierCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CurrentObserverTrial,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.NumericValue,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReferencedAccessionSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReportStatusCommentTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ProcedureContextSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VerbalSourceTrial,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.AddressTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.TelephoneNumberTrial,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.VerbalSourceIdentifierCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PredecessorDocumentsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedRequestSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedProcedureCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CurrentRequestedProcedureEvidenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReportDetailSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PertinentOtherEvidenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HL7StructuredDocumentReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObservationSubjectUIDTrial,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ObservationSubjectClassTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ObservationSubjectTypeCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CompletionFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CompletionFlagDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.VerificationFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ArchiveRequested,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PreliminaryFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContentTemplateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IdenticalDocumentsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObservationSubjectContextFlagTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ObserverContextFlagTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ProcedureContextFlagTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelationshipSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelationshipTypeCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LanguageCodeSequenceTrial,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.UniformResourceLocatorTrial,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.WaveformAnnotationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TemplateIdentifier,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TemplateVersion,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.TemplateLocalVersion,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.TemplateExtensionFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TemplateExtensionOrganizationUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.TemplateExtensionCreatorUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedContentItemIdentifier,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.HL7InstanceIdentifier,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.HL7DocumentEffectiveTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.HL7DocumentTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DocumentClassCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RetrieveURI,ValueRepresentation.UR);
		valueRepresentationsByTag.put(TagFromName.RetrieveLocationUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.TypeOfInstances,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DICOMRetrievalSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DICOMMediaRetrievalSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WADORetrievalSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.XDSRetrievalSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WADORSRetrievalSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RepositoryUniqueID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.HomeCommunityID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DocumentTitle,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.EncapsulatedDocument,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.MIMETypeOfEncapsulatedDocument,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SourceInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ListOfMIMETypes,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProductPackageIdentifier,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.SubstanceAdministrationApproval,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ApprovalStatusFurtherDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ApprovalStatusDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ProductTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProductName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProductDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ProductLotIdentifier,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProductExpirationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.SubstanceAdministrationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.SubstanceAdministrationNotes,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SubstanceAdministrationDeviceID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProductParameterSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SubstanceAdministrationParameterSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ApprovalSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssertionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssertionUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.AsserterIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssertionDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.AssertionExpirationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.AssertionComments,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.RelatedAssertionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedAssertionUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ApprovalSubjectSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OrganizationalRoleCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LensDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RightLensSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LeftLensSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.UnspecifiedLateralityLensSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CylinderSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrismSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HorizontalPrismPower,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.HorizontalPrismBase,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VerticalPrismPower,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VerticalPrismBase,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LensSegmentType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OpticalTransmittance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ChannelWidth,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PupilSize,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CornealSize,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.AutorefractionRightEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AutorefractionLeftEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DistancePupillaryDistance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.NearPupillaryDistance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.IntermediatePupillaryDistance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.OtherPupillaryDistance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.KeratometryRightEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.KeratometryLeftEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SteepKeratometricAxisSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RadiusOfCurvature,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.KeratometricPower,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.KeratometricAxis,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FlatKeratometricAxisSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BackgroundColor,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Optotype,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OptotypePresentation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SubjectiveRefractionRightEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SubjectiveRefractionLeftEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AddNearSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AddIntermediateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AddOtherSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AddPower,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ViewingDistance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VisualAcuityTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisualAcuityRightEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisualAcuityLeftEyeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VisualAcuityBothEyesOpenSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ViewingDistanceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VisualAcuityModifiers,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.DecimalVisualAcuity,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.OptotypeDetailedDefinition,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferencedRefractiveMeasurementsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpherePower,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CylinderPower,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CornealTopographySurface,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CornealVertexLocation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PupilCentroidXCoordinate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PupilCentroidYCoordinate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.EquivalentPupilRadius,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CornealTopographyMapTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VerticesOfTheOutlineOfPupil,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CornealTopographyMappingNormalsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MaximumCornealCurvatureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MaximumCornealCurvature,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MaximumCornealCurvatureLocation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MinimumKeratometricSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SimulatedKeratometricCylinderSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AverageCornealPower,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CornealISValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AnalyzedArea,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SurfaceRegularityIndex,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SurfaceAsymmetryIndex,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CornealEccentricityIndex,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.KeratoconusPredictionIndex,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DecimalPotentialVisualAcuity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CornealTopographyMapQualityEvaluation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SourceImageCornealProcessedDataSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CornealPointLocation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CornealPointEstimated,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AxialPower,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TangentialPower,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RefractivePower,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RelativeElevation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CornealWavefront,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ImagedVolumeWidth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ImagedVolumeHeight,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ImagedVolumeDepth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TotalPixelMatrixColumns,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TotalPixelMatrixRows,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TotalPixelMatrixOriginSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenLabelInImage,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FocusMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ExtendedDepthOfField,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfFocalPlanes,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DistanceBetweenFocalPlanes,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RecommendedAbsentPixelCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.IlluminatorTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageOrientationSlide,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OpticalPathSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OpticalPathIdentifier,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.OpticalPathDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.IlluminationColorCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecimenReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CondenserLensPower,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ObjectiveLensPower,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ObjectiveLensNumericalAperture,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PaletteColorLookupTableSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedImageNavigationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TopLeftHandCornerOfLocalizerArea,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BottomRightHandCornerOfLocalizerArea,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OpticalPathIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlanePositionSlideSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ColumnPositionInTotalImagePixelMatrix,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.RowPositionInTotalImagePixelMatrix,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.PixelOriginInterpretation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfOpticalPaths,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TotalPixelMatrixFocalPlanes,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.CalibrationImage,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentThickness,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DeviceLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentWidth,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DeviceDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeviceDiameterUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DeviceVolume,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.InterMarkerDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentMaterial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentLength,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentDiameter,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ContainerComponentDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DeviceDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContrastBolusIngredientPercentByVolume,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.OCTFocalDistance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BeamSpotSize,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.EffectiveRefractiveIndex,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.OCTAcquisitionDomain,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OCTOpticalCenterWavelength,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.AxialResolution,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RangingDepth,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ALineRate,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ALinesPerFrame,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CatheterRotationalRate,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ALinePixelSpacing,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ModeOfPercutaneousAccessSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IntravascularOCTFrameTypeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OCTZOffsetApplied,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IntravascularFrameContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IntravascularLongitudinalDistance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.IntravascularOCTFrameContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OCTZOffsetCorrection,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.CatheterDirectionOfRotation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SeamLineLocation,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FirstALineLocation,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SeamLineIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfPaddedALines,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.InterpolationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RefractiveIndexApplied,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfEnergyWindows,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowRangeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowLowerLimit,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowUpperLimit,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ResidualSyringeCounts,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.DetectorVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfDetectors,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DetectorInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PhaseVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfPhases,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PhaseInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfFramesInPhase,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PhaseDelay,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PauseBetweenFrames,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PhaseDescription,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RotationVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfRotations,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RotationInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfFramesInRotation,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RRIntervalVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfRRIntervals,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.GatedInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DataInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TimeSlotVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfTimeSlots,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TimeSlotInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TimeSlotTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SliceVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfSlices,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.AngularViewVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TimeSliceVector,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfTimeSlices,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.StartAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TypeOfDetectorMotion,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TriggerVector,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfTriggersInPhase,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ViewCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ViewModifierCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RadionuclideCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AdministrationRouteCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RadiopharmaceuticalCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CalibrationDataSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EnergyWindowNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PatientOrientationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientOrientationModifierCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientGantryRelationshipCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SliceProgressionDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScanProgressionDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SeriesType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Units,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CountsSource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReprojectionMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SUVType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RandomsCorrectionMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AttenuationCorrectionMethod,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DecayCorrection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReconstructionMethod,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DetectorLinesOfResponseUsed,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ScatterCorrectionMethod,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AxialAcceptance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.AxialMash,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TransverseMash,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.DetectorElementSize,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CoincidenceWindowWidth,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SecondaryCountsType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FrameReferenceTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PrimaryPromptsCountsAccumulated,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SecondaryCountsAccumulated,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SliceSensitivityFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DecayFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DoseCalibrationFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ScatterFractionFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeadTimeFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImageIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CountsIncluded,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DeadTimeCorrectionFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.HistogramSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HistogramNumberOfBins,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.HistogramFirstBinValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.HistogramLastBinValue,ValueRepresentation.XS);
		valueRepresentationsByTag.put(TagFromName.HistogramBinWidth,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.HistogramExplanation,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HistogramData,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SegmentationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SegmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SegmentedPropertyCategoryCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SegmentNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SegmentLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SegmentDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.SegmentationAlgorithmIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SegmentAlgorithmType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SegmentAlgorithmName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SegmentIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSegmentNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RecommendedDisplayGrayscaleValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RecommendedDisplayCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MaximumFractionalValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SegmentedPropertyTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SegmentationFractionalType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SegmentedPropertyTypeModifierCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.UsedSegmentsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TrackingID,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.TrackingUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DeformableRegistrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceFrameOfReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DeformableRegistrationGridSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GridDimensions,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.GridResolution,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VectorGridData,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.PreDeformationMatrixRegistrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PostDeformationMatrixRegistrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfSurfaces,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SurfaceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SurfaceNumber,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SurfaceComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.SurfaceProcessing,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SurfaceProcessingRatio,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SurfaceProcessingDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RecommendedPresentationOpacity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RecommendedPresentationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FiniteVolume,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Manifold,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SurfacePointsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SurfacePointsNormalsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SurfaceMeshPrimitivesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfSurfacePoints,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.PointCoordinatesData,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.PointPositionAccuracy,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MeanPointDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MaximumPointDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PointsBoundingBoxCoordinates,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AxisOfRotation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CenterOfRotation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NumberOfVectors,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.VectorDimensionality,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.VectorAccuracy,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.VectorCoordinateData,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.TrianglePointIndexList,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.EdgePointIndexList,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.VertexPointIndexList,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.TriangleStripSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TriangleFanSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LineSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrimitivePointIndexList,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.SurfaceCount,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ReferencedSurfaceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSurfaceNumber,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SegmentSurfaceGenerationAlgorithmIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SegmentSurfaceSourceInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AlgorithmFamilyCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AlgorithmNameCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AlgorithmVersion,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AlgorithmParameters,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.FacetSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SurfaceProcessingAlgorithmIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AlgorithmName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RecommendedPointRadius,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RecommendedLineThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.LongPrimitivePointIndexList,ValueRepresentation.OL);
		valueRepresentationsByTag.put(TagFromName.LongTrianglePointIndexList,ValueRepresentation.OL);
		valueRepresentationsByTag.put(TagFromName.LongEdgePointIndexList,ValueRepresentation.OL);
		valueRepresentationsByTag.put(TagFromName.LongVertexPointIndexList,ValueRepresentation.OL);
		valueRepresentationsByTag.put(TagFromName.TrackSetSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TrackSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecommendedDisplayCIELabValueList,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.TrackingAlgorithmIdentificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TrackSetNumber,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TrackSetLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TrackSetDescription,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.TrackSetAnatomicalTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasurementsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TrackSetStatisticsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FloatingPointValues,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.TrackPointIndexList,ValueRepresentation.OL);
		valueRepresentationsByTag.put(TagFromName.TrackStatisticsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasurementValuesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DiffusionAcquisitionCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DiffusionModelCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantSize,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateVersion,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReplacedImplantTemplateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DerivationImplantTemplateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OriginalImplantTemplateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EffectiveDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ImplantTargetAnatomySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InformationFromManufacturerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NotificationFromManufacturerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InformationIssueDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.InformationSummary,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ImplantRegulatoryDisapprovalCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OverallTemplateSpatialTolerance,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.HPGLDocumentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HPGLDocumentID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.HPGLDocumentLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ViewOrientationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ViewOrientationModifierCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HPGLDocumentScaling,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.HPGLDocument,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.HPGLContourPenNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.HPGLPenSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HPGLPenNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.HPGLPenLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HPGLPenDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.RecommendedRotationPoint,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BoundingRectangle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplate3DModelSurfaceNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SurfaceModelDescriptionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SurfaceModelLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SurfaceModelScalingFactor,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MaterialsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CoatingMaterialsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FixationMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MatingFeatureSetsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MatingFeatureSetID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MatingFeatureSetLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MatingFeatureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MatingFeatureID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MatingFeatureDegreeOfFreedomSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DegreeOfFreedomID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DegreeOfFreedomType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TwoDMatingFeatureCoordinatesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedHPGLDocumentID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TwoDMatingPoint,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TwoDMatingAxes,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TwoDDegreeOfFreedomSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ThreeDDegreeOfFreedomAxis,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RangeOfFreedom,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ThreeDMatingPoint,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ThreeDMatingAxes,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TwoDDegreeOfFreedomAxis,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PlanningLandmarkPointSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlanningLandmarkLineSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlanningLandmarkPlaneSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PlanningLandmarkID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PlanningLandmarkDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PlanningLandmarkIdentificationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TwoDPointCoordinatesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TwoDPointCoordinates,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ThreeDPointCoordinates,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TwoDLineCoordinatesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TwoDLineCoordinates,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ThreeDLineCoordinates,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TwoDPlaneCoordinatesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TwoDPlaneIntersection,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ThreeDPlaneOrigin,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ThreeDPlaneNormal,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ModelModification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModelMirroring,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModelUsageCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GraphicAnnotationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GraphicLayer,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BoundingBoxAnnotationUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AnchorPointAnnotationUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GraphicAnnotationUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.UnformattedTextValue,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.TextObjectSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GraphicObjectSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BoundingBoxTopLeftHandCorner,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BoundingBoxBottomRightHandCorner,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BoundingBoxTextHorizontalJustification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AnchorPoint,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AnchorPointVisibility,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GraphicDimensions,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfGraphicPoints,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.GraphicData,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GraphicType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GraphicFilled,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageRotationRetired,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ImageHorizontalFlip,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageRotation,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplayedAreaTopLeftHandCornerTrial,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplayedAreaBottomRightHandCornerTrial,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplayedAreaTopLeftHandCorner,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.DisplayedAreaBottomRightHandCorner,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.DisplayedAreaSelectionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GraphicLayerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GraphicLayerOrder,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.GraphicLayerRecommendedDisplayGrayscaleValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.GraphicLayerRecommendedDisplayRGBValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.GraphicLayerDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ContentLabel,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContentDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PresentationCreationDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.PresentationCreationTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ContentCreatorName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.ContentCreatorIdentificationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AlternateContentDescriptionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PresentationSizeMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PresentationPixelSpacing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PresentationPixelAspectRatio,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PresentationPixelMagnificationRatio,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GraphicGroupLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.GraphicGroupDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CompoundGraphicSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CompoundGraphicInstanceID,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.FontName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FontNameType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CSSFontName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RotationAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TextStyleSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LineStyleSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FillStyleSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GraphicGroupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TextColorCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.HorizontalAlignment,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VerticalAlignment,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShadowStyle,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShadowOffsetX,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ShadowOffsetY,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ShadowColorCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Underlined,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Bold,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Italic,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatternOnColorCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PatternOffColorCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.LineThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.LineDashingStyle,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LinePattern,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.FillPattern,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.FillMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShadowOpacity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GapLength,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DiameterOfVisibility,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RotationPoint,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TickAlignment,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShowTickLabel,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TickLabelAlignment,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CompoundGraphicUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatternOnOpacity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PatternOffOpacity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MajorTicksSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TickPosition,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TickLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CompoundGraphicType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GraphicGroupID,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.ShapeType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RegistrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MatrixRegistrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MatrixSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FrameOfReferenceTransformationMatrixType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RegistrationTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FiducialDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.FiducialIdentifier,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.FiducialIdentifierCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContourUncertaintyRadius,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.UsedFiducialsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GraphicCoordinatesDataSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FiducialUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ReferencedFiducialUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.FiducialSetSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FiducialSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FiducialsPropertyCategoryCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GraphicLayerRecommendedDisplayCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BlendingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelativeOpacity,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ReferencedSpatialRegistrationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlendingPosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PresentationDisplayCollectionUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.PresentationSequenceCollectionUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.PresentationSequencePositionIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RenderedImageReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VolumetricPresentationStateInputSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PresentationInputType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InputSequencePositionIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Crop,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CroppingSpecificationIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CompositingMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VolumetricPresentationInputNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageVolumeGeometry,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VolumetricPresentationInputSetUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.VolumetricPresentationInputSetSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GlobalCrop,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GlobalCroppingSpecificationIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RenderingMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VolumeCroppingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VolumeCroppingMethod,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BoundingBoxCrop,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ObliqueCroppingPlaneSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.Plane,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PlaneNormal,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.CroppingSpecificationNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MultiPlanarReconstructionStyle,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MPRThicknessType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MPRSlabThickness,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MPRTopLeftHandCorner,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MPRViewWidthDirection,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MPRViewWidth,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.NumberOfVolumetricCurvePoints,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.VolumetricCurvePoints,ValueRepresentation.OD);
		valueRepresentationsByTag.put(TagFromName.MPRViewHeightDirection,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.MPRViewHeight,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RenderProjection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ViewpointPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ViewpointLookAtPoint,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ViewpointUpDirection,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RenderFieldOfView,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SamplingStepSize,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ShadingStyle,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AmbientReflectionIntensity,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.LightDirection,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DiffuseReflectionIntensity,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SpecularReflectionIntensity,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.Shininess,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PresentationStateClassificationComponentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ComponentType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ComponentInputSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VolumetricPresentationInputIndex,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PresentationStateCompositorComponentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WeightingTransferFunctionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WeightingLookupTableDescriptor,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.WeightingLookupTableData,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.VolumetricAnnotationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedStructuredContextSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedContentItem,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.VolumetricPresentationInputAnnotationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnnotationClipping,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PresentationAnimationStyle,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RecommendedAnimationRate,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.AnimationCurveSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnimationStepSize,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SwivelRange,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.VolumetricCurveUpDirections,ValueRepresentation.OD);
		valueRepresentationsByTag.put(TagFromName.VolumeStreamSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RGBATransferFunctionDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AdvancedBlendingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlendingInputNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BlendingDisplayInputSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlendingDisplaySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlendingMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TimeSeriesBlending,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GeometryForDisplay,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ThresholdSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ThresholdValueSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ThresholdType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ThresholdValue,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.HangingProtocolName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.HangingProtocolDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HangingProtocolLevel,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.HangingProtocolCreator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.HangingProtocolCreationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.HangingProtocolDefinitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HangingProtocolUserIdentificationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.HangingProtocolUserGroupName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SourceHangingProtocolSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfPriorsReferenced,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageSetsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageSetSelectorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageSetSelectorUsageFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SelectorAttribute,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.SelectorValueNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TimeBasedImageSetsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageSetNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageSetSelectorCategory,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RelativeTime,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RelativeTimeUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AbstractPriorValue,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.AbstractPriorCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageSetLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SelectorAttributeVR,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SelectorSequencePointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.SelectorSequencePointerPrivateCreator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SelectorAttributePrivateCreator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SelectorAEValue,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.SelectorASValue,ValueRepresentation.AS);
		valueRepresentationsByTag.put(TagFromName.SelectorATValue,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.SelectorDAValue,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.SelectorCSValue,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SelectorDTValue,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.SelectorISValue,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SelectorOBValue,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.SelectorLOValue,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SelectorOFValue,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.SelectorLTValue,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.SelectorOWValue,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.SelectorPNValue,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.SelectorTMValue,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.SelectorSHValue,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SelectorUNValue,ValueRepresentation.UN);
		valueRepresentationsByTag.put(TagFromName.SelectorSTValue,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.SelectorUCValue,ValueRepresentation.UC);
		valueRepresentationsByTag.put(TagFromName.SelectorUTValue,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.SelectorURValue,ValueRepresentation.UR);
		valueRepresentationsByTag.put(TagFromName.SelectorDSValue,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SelectorODValue,ValueRepresentation.OD);
		valueRepresentationsByTag.put(TagFromName.SelectorFDValue,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SelectorOLValue,ValueRepresentation.OL);
		valueRepresentationsByTag.put(TagFromName.SelectorFLValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SelectorULValue,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SelectorUSValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SelectorSLValue,ValueRepresentation.SL);
		valueRepresentationsByTag.put(TagFromName.SelectorSSValue,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.SelectorUIValue,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.SelectorCodeSequenceValue,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfScreens,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NominalScreenDefinitionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfVerticalPixels,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfHorizontalPixels,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplayEnvironmentSpatialPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ScreenMinimumGrayscaleBitDepth,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ScreenMinimumColorBitDepth,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ApplicationMaximumRepaintTime,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplaySetsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DisplaySetNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplaySetLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DisplaySetPresentationGroup,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DisplaySetPresentationGroupDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PartialDataDisplayHandling,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SynchronizedScrollingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DisplaySetScrollingGroup,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NavigationIndicatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NavigationDisplaySet,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ReferenceDisplaySets,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageBoxesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageBoxNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageBoxLayoutType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageBoxTileHorizontalDimension,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageBoxTileVerticalDimension,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageBoxScrollDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageBoxSmallScrollType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageBoxSmallScrollAmount,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageBoxLargeScrollType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageBoxLargeScrollAmount,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImageBoxOverlapPriority,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CineRelativeToRealTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.FilterOperationsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FilterByCategory,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FilterByAttributePresence,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FilterByOperator,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.StructuredDisplayBackgroundCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.EmptyImageBoxCIELabValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.StructuredDisplayImageBoxSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StructuredDisplayTextBoxSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedFirstFrameSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageBoxSynchronizationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SynchronizedImageBoxList,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TypeOfSynchronization,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BlendingOperationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReformattingOperationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReformattingThickness,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ReformattingInterval,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ReformattingOperationInitialViewDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ThreeDRenderingType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SortingOperationsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SortByCategory,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SortingDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DisplaySetPatientOrientation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VOIType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PseudoColorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PseudoColorPaletteInstanceReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ShowGrayscaleInverted,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShowImageTrueSizeFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShowGraphicAnnotationFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShowPatientDemographicsFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShowAcquisitionTechniquesFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DisplaySetHorizontalJustification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DisplaySetVerticalJustification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContinuationStartMeterset,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ContinuationEndMeterset,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepState,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepProgressInformationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepProgress,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepProgressDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepProgressParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepCommunicationsURISequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContactURI,ValueRepresentation.UR);
		valueRepresentationsByTag.put(TagFromName.ContactDisplayName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepDiscontinuationReasonCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BeamTaskSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BeamTaskType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BeamOrderIndexTrial,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AutosequenceFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TableTopVerticalAdjustedPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TableTopLongitudinalAdjustedPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TableTopLateralAdjustedPosition,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.PatientSupportAdjustedAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TableTopEccentricAdjustedAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TableTopPitchAdjustedAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TableTopRollAdjustedAngle,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DeliveryVerificationImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.VerificationImageTiming,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DoubleExposureFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DoubleExposureOrdering,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DoubleExposureMetersetTrial,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DoubleExposureFieldDeltaTrial,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RelatedReferenceRTImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GeneralMachineVerificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConventionalMachineVerificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonMachineVerificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FailedAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OverriddenAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConventionalControlPointVerificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonControlPointVerificationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AttributeOccurrenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AttributeOccurrencePointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.AttributeItemSelector,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.AttributeOccurrencePrivateCreator,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SelectorSequencePointerItems,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcedureStepPriority,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.WorklistLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ScheduledProcessingParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerformedProcessingParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.UnifiedProcedureStepPerformedProcedureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelatedProcedureStepSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProcedureStepRelationshipType,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReplacedProcedureStepSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DeletionLock,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReceivingAE,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.RequestingAE,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.ReasonForCancellation,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.SCPStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SubscriptionListStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.UnifiedProcedureStepListStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BeamOrderIndex,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.DoubleExposureMeterset,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.DoubleExposureFieldDelta,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.BrachyTaskSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContinuationStartTotalReferenceAirKerma,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContinuationEndTotalReferenceAirKerma,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContinuationPulseNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ChannelDeliveryOrderSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedChannelNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.StartCumulativeTimeWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EndCumulativeTimeWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OmittedChannelSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReasonForChannelOmission,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReasonForChannelOmissionDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ChannelDeliveryOrderIndex,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ChannelDeliveryContinuationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OmittedApplicationSetupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantAssemblyTemplateName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImplantAssemblyTemplateIssuer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImplantAssemblyTemplateVersion,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReplacedImplantAssemblyTemplateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantAssemblyTemplateType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OriginalImplantAssemblyTemplateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DerivationImplantAssemblyTemplateSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantAssemblyTemplateTargetAnatomySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProcedureTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SurgicalTechnique,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ComponentTypesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ComponentTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ExclusiveComponentType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MandatoryComponentType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ComponentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ComponentID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ComponentAssemblySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.Component1ReferencedID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Component1ReferencedMatingFeatureSetID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Component1ReferencedMatingFeatureID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Component2ReferencedID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Component2ReferencedMatingFeatureSetID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Component2ReferencedMatingFeatureID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupIssuer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupVersion,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReplacedImplantTemplateGroupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupTargetAnatomySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupMembersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupMemberID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ThreeDImplantTemplateGroupMemberMatchingPoint,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ThreeDImplantTemplateGroupMemberMatchingAxes,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupMemberMatching2DCoordinatesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TwoDImplantTemplateGroupMemberMatchingPoint,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.TwoDImplantTemplateGroupMemberMatchingAxes,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionRankSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedImplantTemplateGroupMemberID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionRank,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SurfaceScanAcquisitionTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SurfaceScanModeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RegistrationMethodCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ShotDurationTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ShotOffsetTime,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.SurfacePointPresentationValueData,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.SurfacePointColorCIELabValueData,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.UVMappingSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TextureLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.UValueData,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.VValueData,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.ReferencedTextureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSurfaceDataSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssessmentSummary,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AssessmentSummaryDescription,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.AssessedSOPInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedComparisonSOPInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.NumberOfAssessmentObservations,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.AssessmentObservationsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObservationSignificance,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ObservationDescription,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.StructuredContraintObservationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssessedAttributeValueSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssessmentSetID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AssessmentRequesterSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SelectorAttributeName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SelectorAttributeKeyword,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AssessmentTypeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObservationBasisCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AssessmentLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ConstraintType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpecificationSelectionGuidance,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.ConstraintValueSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecommendedDefaultValueSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ConstraintViolationSignificance,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ConstraintViolationCondition,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.ModifiableConstraintFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.StorageMediaFileSetID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.StorageMediaFileSetUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.IconImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TopicTitle,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TopicSubject,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.TopicAuthor,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TopicKeywords,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SOPInstanceStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SOPAuthorizationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.SOPAuthorizationComment,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.AuthorizationEquipmentCertificationNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MACIDNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MACCalculationTransferSyntaxUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.MACAlgorithm,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DataElementsSigned,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.DigitalSignatureUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DigitalSignatureDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.CertificateType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CertificateOfSigner,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.Signature,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.CertifiedTimestampType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CertifiedTimestamp,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.DigitalSignaturePurposeCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedDigitalSignatureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSOPInstanceMACSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MAC,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.EncryptedAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.EncryptedContentTransferSyntaxUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.EncryptedContent,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.ModifiedAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OriginalAttributesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AttributeModificationDateTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.ModifyingSystem,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SourceOfPreviousValues,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReasonForTheAttributeModification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InstanceOriginStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ZonalMap,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfCopies,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PrinterConfigurationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrintPriority,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MediumType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FilmDestination,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FilmSessionLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MemoryAllocation,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.MaximumMemoryAllocation,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ColorImagePrintingFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CollationFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AnnotationFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageOverlayFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PresentationLUTFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ImageBoxPresentationLUTFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MemoryBitDepth,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PrintingBitDepth,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MediaInstalledSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OtherMediaAvailableSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SupportedImageDisplayFormatsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedFilmBoxSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedStoredPrintSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageDisplayFormat,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.AnnotationDisplayFormatID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FilmOrientation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FilmSizeID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PrinterResolutionID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DefaultPrinterResolutionID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MagnificationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SmoothingType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DefaultMagnificationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OtherMagnificationTypesAvailable,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DefaultSmoothingType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OtherSmoothingTypesAvailable,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BorderDensity,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.EmptyImageDensity,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MinDensity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MaxDensity,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Trim,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ConfigurationInformation,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ConfigurationInformationDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.MaximumCollatedFilms,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.Illumination,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ReflectedAmbientLight,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PrinterPixelSpacing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReferencedFilmSessionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedImageBoxSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedBasicAnnotationBoxSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageBoxPosition,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.Polarity,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RequestedImageSize,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RequestedDecimateCropBehavior,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RequestedResolutionID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RequestedImageSizeFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DecimateCropResult,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BasicGrayscaleImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BasicColorImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedImageOverlayBoxSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedVOILUTBoxSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnnotationPosition,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TextString,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferencedOverlayPlaneSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedOverlayPlaneGroups,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayPixelDataSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OverlayMagnificationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlaySmoothingType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlayOrImageMagnification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MagnifyToNumberOfColumns,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayForegroundDensity,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlayBackgroundDensity,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlayMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ThresholdDensity,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferencedImageBoxSequenceRetired,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PresentationLUTSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PresentationLUTShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferencedPresentationLUTSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrintJobID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ExecutionStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ExecutionStatusInfo,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CreationDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.CreationTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.Originator,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.DestinationAE,ValueRepresentation.AE);
		valueRepresentationsByTag.put(TagFromName.OwnerID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.NumberOfFilms,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedPrintJobSequencePullStoredPrint,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrinterStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PrinterStatusInfo,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PrinterName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PrintQueueID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.QueueStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PrintJobDescriptionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedPrintJobSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrintManagementCapabilitiesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PrinterCharacteristicsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FilmBoxContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageBoxContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnnotationContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImageOverlayBoxContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PresentationLUTContentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ProposedStudySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.OriginalImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LabelUsingInformationExtractedFromInstances,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LabelText,ValueRepresentation.UT);
		valueRepresentationsByTag.put(TagFromName.LabelStyleSelection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MediaDisposition,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.BarcodeValue,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.BarcodeSymbology,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AllowMediaSplitting,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IncludeNonDICOMObjects,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.IncludeDisplayApplication,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PreserveCompositeInstancesAfterMediaCreation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TotalNumberOfPiecesOfMediaCreated,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.RequestedMediaApplicationProfile,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferencedStorageMediaSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FailureAttributes,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.AllowLossyCompression,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RequestPriority,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RTImageLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RTImageName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RTImageDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ReportedValuesOrigin,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RTImagePlane,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.XRayImageReceptorTranslation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.XRayImageReceptorAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RTImageOrientation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ImagePlanePixelSpacing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RTImagePosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadiationMachineName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RadiationMachineSAD,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RadiationMachineSSD,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RTImageSID,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceToReferenceObjectDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FractionNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ExposureSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MetersetExposure,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DiaphragmPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FluenceMapSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FluenceDataSource,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FluenceDataScale,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PrimaryFluenceModeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FluenceMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FluenceModeID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.DVHType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DoseUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DoseType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SpatialTransformOfDose,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DoseComment,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.NormalizationPoint,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DoseSummationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GridFrameOffsetVector,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DoseGridScaling,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RTDoseROISequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DoseValue,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TissueHeterogeneityCorrection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DVHNormalizationPoint,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DVHNormalizationDoseValue,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DVHSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DVHDoseScaling,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DVHVolumeUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DVHNumberOfBins,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.DVHData,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DVHReferencedROISequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DVHROIContributionType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DVHMinimumDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DVHMaximumDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DVHMeanDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.StructureSetLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.StructureSetName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.StructureSetDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.StructureSetDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.StructureSetTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ReferencedFrameOfReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RTReferencedStudySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RTReferencedSeriesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContourImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PredecessorStructureSetSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.StructureSetROISequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ROINumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedFrameOfReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.ROIName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ROIDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ROIDisplayColor,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ROIVolume,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RTRelatedROISequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RTROIRelationship,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ROIGenerationAlgorithm,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ROIGenerationDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ROIContourSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContourSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ContourGeometricType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ContourSlabThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ContourOffsetVector,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfContourPoints,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ContourNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.AttachedContours,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ContourData,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RTROIObservationsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ObservationNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedROINumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ROIObservationLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RTROIIdentificationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ROIObservationDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.RelatedRTROIObservationsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RTROIInterpretedType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ROIInterpreter,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.ROIPhysicalPropertiesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ROIPhysicalProperty,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ROIPhysicalPropertyValue,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ROIElementalCompositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ROIElementalCompositionAtomicNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ROIElementalCompositionAtomicMassFraction,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AdditionalRTROIClassificationCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FrameOfReferenceRelationshipSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RelatedFrameOfReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.FrameOfReferenceTransformationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FrameOfReferenceTransformationMatrix,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FrameOfReferenceTransformationComment,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.MeasuredDoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.MeasuredDoseDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.MeasuredDoseType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.MeasuredDoseValue,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TreatmentSessionBeamSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TreatmentSessionIonBeamSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CurrentFractionNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TreatmentControlPointDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.TreatmentControlPointTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.TreatmentTerminationStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TreatmentTerminationCode,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.TreatmentVerificationStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferencedTreatmentRecordSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecifiedPrimaryMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SpecifiedSecondaryMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeliveredPrimaryMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeliveredSecondaryMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SpecifiedTreatmentTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeliveredTreatmentTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ControlPointDeliverySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonControlPointDeliverySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecifiedMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeliveredMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MetersetRateSet,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MetersetRateDelivered,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ScanSpotMetersetsDelivered,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DoseRateDelivered,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TreatmentSummaryCalculatedDoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CumulativeDoseToDoseReference,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FirstTreatmentDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.MostRecentTreatmentDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.NumberOfFractionsDelivered,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.OverrideSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ParameterSequencePointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.OverrideParameterPointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.ParameterItemIndex,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.MeasuredDoseReferenceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ParameterPointer,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.OverrideReason,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ParameterValueNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CorrectedParameterSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CorrectionValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CalculatedDoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CalculatedDoseReferenceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CalculatedDoseReferenceDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.CalculatedDoseReferenceDoseValue,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.StartMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EndMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReferencedMeasuredDoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedMeasuredDoseReferenceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedCalculatedDoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedCalculatedDoseReferenceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BeamLimitingDeviceLeafPairsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecordedWedgeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecordedCompensatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecordedBlockSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TreatmentSummaryMeasuredDoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecordedSnoutSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecordedRangeShifterSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecordedLateralSpreadingDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecordedRangeModulatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RecordedSourceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceSerialNumber,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TreatmentSessionApplicationSetupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ApplicationSetupCheck,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RecordedBrachyAccessoryDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedBrachyAccessoryDeviceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RecordedChannelSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SpecifiedChannelTotalTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeliveredChannelTotalTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SpecifiedNumberOfPulses,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.DeliveredNumberOfPulses,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SpecifiedPulseRepetitionInterval,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeliveredPulseRepetitionInterval,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RecordedSourceApplicatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSourceApplicatorNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RecordedChannelShieldSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedChannelShieldNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BrachyControlPointDeliveredSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SafePositionExitDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.SafePositionExitTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.SafePositionReturnDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.SafePositionReturnTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.PulseSpecificBrachyControlPointDeliveredSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PulseNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.BrachyPulseControlPointDeliveredSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CurrentTreatmentStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TreatmentStatusComment,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.FractionGroupSummarySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedFractionNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.FractionGroupType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BeamStopperPosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FractionStatusSummarySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TreatmentDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.TreatmentTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.RTPlanLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RTPlanName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RTPlanDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.RTPlanDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.RTPlanTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.TreatmentProtocols,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PlanIntent,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TreatmentSites,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RTPlanGeometry,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PrescriptionDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.DoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DoseReferenceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.DoseReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.DoseReferenceStructureType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NominalBeamEnergyUnit,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DoseReferenceDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.DoseReferencePointCoordinates,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NominalPriorDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DoseReferenceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ConstraintWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeliveryWarningDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DeliveryMaximumDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TargetMinimumDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TargetPrescriptionDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TargetMaximumDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TargetUnderdoseVolumeFraction,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OrganAtRiskFullVolumeDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OrganAtRiskLimitDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OrganAtRiskMaximumDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OrganAtRiskOverdoseVolumeFraction,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ToleranceTableSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ToleranceTableNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ToleranceTableLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.GantryAngleTolerance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BeamLimitingDeviceAngleTolerance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BeamLimitingDeviceToleranceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BeamLimitingDevicePositionTolerance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SnoutPositionTolerance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PatientSupportAngleTolerance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopEccentricAngleTolerance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopPitchAngleTolerance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableTopRollAngleTolerance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableTopVerticalPositionTolerance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopLongitudinalPositionTolerance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopLateralPositionTolerance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.RTPlanRelationship,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FractionGroupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FractionGroupNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.FractionGroupDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.NumberOfFractionsPlanned,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfFractionPatternDigitsPerDay,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RepeatFractionCycleLength,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.FractionPattern,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.NumberOfBeams,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BeamDoseSpecificationPoint,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReferencedDoseReferenceUID,ValueRepresentation.UI);
		valueRepresentationsByTag.put(TagFromName.BeamDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BeamMeterset,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BeamDosePointDepth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BeamDosePointEquivalentDepth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BeamDosePointSSD,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BeamDoseMeaning,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BeamDoseVerificationControlPointSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AverageBeamDosePointDepth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AverageBeamDosePointEquivalentDepth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AverageBeamDosePointSSD,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BeamDoseType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AlternateBeamDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.AlternateBeamDoseType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DepthValueAveragingFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BeamDosePointSourceToExternalContourDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfBrachyApplicationSetups,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BrachyApplicationSetupDoseSpecificationPoint,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BrachyApplicationSetupDose,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BeamSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TreatmentMachineName,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PrimaryDosimeterUnit,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SourceAxisDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BeamLimitingDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RTBeamLimitingDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SourceToBeamLimitingDeviceDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.IsocenterToBeamLimitingDeviceDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NumberOfLeafJawPairs,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.LeafPositionBoundaries,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BeamNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BeamName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.BeamDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.BeamType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BeamDeliveryDurationLimit,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.RadiationType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.HighDoseTechniqueType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferenceImageNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PlannedVerificationImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ImagingDeviceSpecificAcquisitionParameters,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TreatmentDeliveryType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfWedges,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.WedgeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WedgeNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.WedgeType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.WedgeID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.WedgeAngle,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.WedgeFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TotalWedgeTrayWaterEquivalentThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.WedgeOrientation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.IsocenterToWedgeTrayDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SourceToWedgeTrayDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgeThinEdgePosition,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BolusID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.BolusDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.EffectiveWedgeAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfCompensators,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.MaterialID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.TotalCompensatorTrayFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CompensatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CompensatorNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CompensatorID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SourceToCompensatorTrayDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CompensatorRows,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CompensatorColumns,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CompensatorPixelSpacing,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CompensatorPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CompensatorTransmissionData,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CompensatorThicknessData,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfBoli,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.CompensatorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CompensatorTrayID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.NumberOfBlocks,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TotalBlockTrayFactor,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TotalBlockTrayWaterEquivalentThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BlockSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlockTrayID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SourceToBlockTrayDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.IsocenterToBlockTrayDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BlockType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AccessoryCode,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.BlockDivergence,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BlockMountingPosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BlockNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BlockName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.BlockThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BlockTransmission,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BlockNumberOfPoints,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BlockData,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ApplicatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ApplicatorID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ApplicatorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ApplicatorDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CumulativeDoseReferenceCoefficient,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FinalCumulativeMetersetWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.NumberOfControlPoints,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ControlPointSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ControlPointIndex,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NominalBeamEnergy,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.DoseRateSet,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.WedgePositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WedgePosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BeamLimitingDevicePositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LeafJawPositions,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.GantryAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.GantryRotationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BeamLimitingDeviceAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BeamLimitingDeviceRotationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientSupportAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.PatientSupportRotationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TableTopEccentricAxisDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopEccentricAngle,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopEccentricRotationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TableTopVerticalPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopLongitudinalPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopLateralPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.IsocenterPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SurfaceEntryPoint,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceToSurfaceDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.AverageBeamDosePointSourceToExternalContourDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SourceToExternalContourDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ExternalContourEntryPoint,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CumulativeMetersetWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopPitchAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableTopPitchRotationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TableTopRollAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.TableTopRollRotationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.HeadFixationAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GantryPitchAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GantryPitchRotationDirection,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GantryPitchAngleTolerance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PatientSetupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PatientSetupNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PatientSetupLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.PatientAdditionalPosition,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FixationDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.FixationDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.FixationDeviceLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.FixationDeviceDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.FixationDevicePosition,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.FixationDevicePitchAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FixationDeviceRollAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ShieldingDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ShieldingDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ShieldingDeviceLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ShieldingDeviceDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ShieldingDevicePosition,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SetupTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SetupTechniqueDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.SetupDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SetupDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SetupDeviceLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SetupDeviceDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.SetupDeviceParameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SetupReferenceDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.TableTopVerticalSetupDisplacement,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopLongitudinalSetupDisplacement,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TableTopLateralSetupDisplacement,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BrachyTreatmentTechnique,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BrachyTreatmentType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.TreatmentMachineSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SourceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SourceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SourceManufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ActiveSourceDiameter,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ActiveSourceLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceModelID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SourceDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SourceEncapsulationNominalThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceEncapsulationNominalTransmission,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceIsotopeName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SourceIsotopeHalfLife,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceStrengthUnits,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferenceAirKermaRate,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceStrength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceStrengthReferenceDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.SourceStrengthReferenceTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ApplicationSetupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ApplicationSetupType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ApplicationSetupNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ApplicationSetupName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ApplicationSetupManufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TemplateNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TemplateType,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.TemplateName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TotalReferenceAirKerma,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BrachyAccessoryDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BrachyAccessoryDeviceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BrachyAccessoryDeviceID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.BrachyAccessoryDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BrachyAccessoryDeviceName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.BrachyAccessoryDeviceNominalThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BrachyAccessoryDeviceNominalTransmission,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelEffectiveLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelInnerLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.AfterloaderChannelID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorTipLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ChannelLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelTotalTime,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceMovementType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfPulses,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.PulseRepetitionInterval,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorManufacturer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorWallNominalThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorWallNominalTransmission,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.SourceApplicatorStepSize,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TransferTubeNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.TransferTubeLength,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelShieldSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelShieldNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ChannelShieldID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ChannelShieldName,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ChannelShieldNominalThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ChannelShieldNominalTransmission,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.FinalCumulativeTimeWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BrachyControlPointSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ControlPointRelativePosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ControlPoint3DPosition,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CumulativeTimeWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.CompensatorDivergence,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CompensatorMountingPosition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SourceToCompensatorDistance,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.TotalCompensatorTrayWaterEquivalentThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IsocenterToCompensatorTrayDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CompensatorColumnOffset,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IsocenterToCompensatorDistances,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CompensatorRelativeStoppingPowerRatio,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CompensatorMillingToolDiameter,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IonRangeCompensatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CompensatorDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.RadiationMassNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RadiationAtomicNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RadiationChargeState,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.ScanMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ModulatedScanModeType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VirtualSourceAxisDistances,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SnoutSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SnoutPosition,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SnoutID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.NumberOfRangeShifters,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RangeShifterSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RangeShifterNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RangeShifterID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RangeShifterType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RangeShifterDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.NumberOfLateralSpreadingDevices,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.LateralSpreadingDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LateralSpreadingDeviceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.LateralSpreadingDeviceID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.LateralSpreadingDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.LateralSpreadingDeviceDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.LateralSpreadingDeviceWaterEquivalentThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NumberOfRangeModulators,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.BeamCurrentModulationID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PatientSupportType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.PatientSupportID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.PatientSupportAccessoryCode,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.TrayAccessoryCode,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.FixationLightAzimuthalAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.FixationLightPolarAngle,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.MetersetRate,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RangeShifterSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RangeShifterSetting,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IsocenterToRangeShifterDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RangeShifterWaterEquivalentThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.LateralSpreadingDeviceSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.LateralSpreadingDeviceSetting,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.IsocenterToLateralSpreadingDeviceDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorSettingsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorGatingStartValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorGatingStopValue,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorGatingStartWaterEquivalentThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RangeModulatorGatingStopWaterEquivalentThickness,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.IsocenterToRangeModulatorDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ScanSpotTimeOffset,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ScanSpotTuneID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ScanSpotPrescribedIndices,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.NumberOfScanSpotPositions,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ScanSpotReordered,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScanSpotPositionMap,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ScanSpotReorderingAllowed,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ScanSpotMetersetWeights,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ScanningSpotSize,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NumberOfPaintings,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.IonToleranceTableSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonBeamSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonBeamLimitingDeviceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonBlockSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonControlPointSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonWedgeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.IonWedgePositionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedSetupImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SetupImageComment,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.MotionSynchronizationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ControlPointOrientation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.GeneralAccessorySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.GeneralAccessoryID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.GeneralAccessoryDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.GeneralAccessoryType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.GeneralAccessoryNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.SourceToGeneralAccessoryDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ApplicatorGeometrySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ApplicatorApertureShape,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ApplicatorOpening,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ApplicatorOpeningX,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ApplicatorOpeningY,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SourceToApplicatorMountingPositionDistance,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NumberOfBlockSlabItems,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BlockSlabSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.BlockSlabThickness,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.BlockSlabNumber,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.DeviceMotionControlSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DeviceMotionExecutionMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DeviceMotionObservationMode,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DeviceMotionParameterCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DistalDepthFraction,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DistalDepth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NominalRangeModulatioFractions,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.NominalRangeModulatedRegionDepths,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DepthDoseParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DeliveredDepthDoseParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DeliveredDistalDepthFraction,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DeliveredDistalDepth,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DeliveredNominalRangeModulationFractions,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DeliveredNominalRangeModulatedRegionDepths,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DeliveredReferenceDoseDefinition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferenceDoseDefinition,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReferencedRTPlanSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedBeamSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedBeamNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedReferenceImageNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.StartCumulativeMetersetWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.EndCumulativeMetersetWeight,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReferencedBrachyApplicationSetupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedBrachyApplicationSetupNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedSourceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedFractionGroupSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedFractionGroupNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedVerificationImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedReferenceImageSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedDoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedDoseReferenceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.BrachyReferencedDoseReferenceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedStructureSetSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedPatientSetupNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedDoseSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedToleranceTableNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedBolusSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedWedgeNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedCompensatorNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedBlockNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedControlPointIndex,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedControlPointSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedStartControlPointIndex,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedStopControlPointIndex,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedRangeShifterNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedLateralSpreadingDeviceNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ReferencedRangeModulatorNumber,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.OmittedBeamTaskSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReasonForOmission,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReasonForOmissionDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ApprovalStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ReviewDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.ReviewTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.ReviewerName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.Arbitrary,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.TextComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ResultsID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ResultsIDIssuer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ReferencedInterpretationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReportProductionStatusTrial,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InterpretationRecordedDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.InterpretationRecordedTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.InterpretationRecorder,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.ReferenceToRecordedSound,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.InterpretationTranscriptionDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.InterpretationTranscriptionTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.InterpretationTranscriber,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.InterpretationText,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.InterpretationAuthor,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.InterpretationApproverSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InterpretationApprovalDate,ValueRepresentation.DA);
		valueRepresentationsByTag.put(TagFromName.InterpretationApprovalTime,ValueRepresentation.TM);
		valueRepresentationsByTag.put(TagFromName.PhysicianApprovingInterpretation,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.InterpretationDiagnosisDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.InterpretationDiagnosisCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ResultsDistributionListSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DistributionName,ValueRepresentation.PN);
		valueRepresentationsByTag.put(TagFromName.DistributionAddress,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.InterpretationID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.InterpretationIDIssuer,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.InterpretationTypeID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InterpretationStatusID,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.Impressions,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.ResultsComments,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.LowEnergyDetectors,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.HighEnergyDetectors,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DetectorGeometrySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ThreatROIVoxelSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ThreatROIBase,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ThreatROIExtents,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ThreatROIBitmap,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.RouteSegmentID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.GantryType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OOIOwnerType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RouteSegmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PotentialThreatObjectID,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ThreatSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ThreatCategory,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ThreatCategoryDescription,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.ATDAbilityAssessment,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ATDAssessmentFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ATDAssessmentProbability,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.Mass,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.Density,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.ZEffective,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BoardingPassID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CenterOfMass,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.CenterOfPTO,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BoundingPolygon,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.RouteSegmentStartLocationID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RouteSegmentEndLocationID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RouteSegmentLocationIDType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AbortReason,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.VolumeOfPTO,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AbortFlag,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.RouteSegmentStartTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.RouteSegmentEndTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.TDRType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.InternationalRouteSegment,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ThreatDetectionAlgorithmAndVersion,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AssignedLocation,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.AlarmDecisionTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.AlarmDecision,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.NumberOfTotalObjects,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfAlarmObjects,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.PTORepresentationSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ATDAssessmentSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TIPType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.DICOSVersion,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OOIOwnerCreationTime,ValueRepresentation.DT);
		valueRepresentationsByTag.put(TagFromName.OOIType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OOISize,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AcquisitionStatus,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.BasisMaterialsCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PhantomType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OOIOwnerSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ScanType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.ItineraryID,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.ItineraryIDType,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.ItineraryIDAssigningAuthority,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.RouteID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.RouteIDAssigningAuthority,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.InboundArrivalType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CarrierID,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CarrierIDAssigningAuthority,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SourceOrientation,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.SourcePosition,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.BeltHeight,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.AlgorithmRoutingCodeSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TransportClassification,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OOITypeDescriptor,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.TotalProcessingTime,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.DetectorCalibrationData,ValueRepresentation.OB);
		valueRepresentationsByTag.put(TagFromName.AdditionalScreeningPerformed,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AdditionalInspectionSelectionCriteria,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AdditionalInspectionMethodSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AITDeviceType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.QRMeasurementsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.TargetMaterialSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.SNRThreshold,ValueRepresentation.FD);
		valueRepresentationsByTag.put(TagFromName.ImageScaleRepresentation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ReferencedPTOSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ReferencedTDRInstanceSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PTOLocationDescription,ValueRepresentation.ST);
		valueRepresentationsByTag.put(TagFromName.AnomalyLocatorIndicatorSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.AnomalyLocatorIndicator,ValueRepresentation.FL);
		valueRepresentationsByTag.put(TagFromName.PTORegionSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.InspectionSelectionCriteria,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.SecondaryInspectionMethodSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PRCSToRCSOrientation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.MACParametersSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CurveDimensions,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfPoints,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.TypeOfData,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.CurveDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.AxisUnits,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.AxisLabels,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.DataValueRepresentation,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MinimumCoordinateValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.MaximumCoordinateValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CurveRange,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.CurveDataDescriptor,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CoordinateStartValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CoordinateStepValue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CurveActivationLayer,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.AudioType,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.AudioSampleFormat,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfChannels,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfSamples,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.SampleRate,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.TotalTime,ValueRepresentation.UL);
		valueRepresentationsByTag.put(TagFromName.AudioSampleData,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.AudioComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.CurveLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.CurveReferencedOverlaySequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.CurveReferencedOverlayGroup,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.CurveData,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.SharedFunctionalGroupsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.PerFrameFunctionalGroupsSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.WaveformSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.ChannelMinimumValue,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.ChannelMaximumValue,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.WaveformBitsAllocated,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.WaveformSampleInterpretation,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.WaveformPaddingValue,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.WaveformData,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.FirstOrderPhaseCorrectionAngle,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.SpectroscopyData,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.OverlayRows,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayColumns,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayPlanes,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.NumberOfFramesInOverlay,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.OverlayDescription,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.OverlayType,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlaySubtype,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.OverlayOrigin,ValueRepresentation.SS);
		valueRepresentationsByTag.put(TagFromName.ImageFrameOrigin,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayPlaneOrigin,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayCompressionCode,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.OverlayCompressionOriginator,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.OverlayCompressionLabel,ValueRepresentation.SH);
		valueRepresentationsByTag.put(TagFromName.OverlayCompressionDescription,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlayCompressionStepPointers,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.OverlayRepeatInterval,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayBitsGrouped,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayBitsAllocated,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayBitPosition,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayFormat,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.OverlayLocation,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayCodeLabel,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlayNumberOfTables,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayCodeTableLocation,ValueRepresentation.AT);
		valueRepresentationsByTag.put(TagFromName.OverlayBitsForCodeWord,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayActivationLayer,ValueRepresentation.CS);
		valueRepresentationsByTag.put(TagFromName.OverlayDescriptorGray,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayDescriptorRed,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayDescriptorGreen,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayDescriptorBlue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayGray,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayRed,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayGreen,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.OverlayBlue,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.ROIArea,ValueRepresentation.IS);
		valueRepresentationsByTag.put(TagFromName.ROIMean,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.ROIStandardDeviation,ValueRepresentation.DS);
		valueRepresentationsByTag.put(TagFromName.OverlayLabel,ValueRepresentation.LO);
		valueRepresentationsByTag.put(TagFromName.OverlayData,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.OverlayComments,ValueRepresentation.LT);
		valueRepresentationsByTag.put(TagFromName.FloatPixelData,ValueRepresentation.OF);
		valueRepresentationsByTag.put(TagFromName.DoubleFloatPixelData,ValueRepresentation.OD);
		valueRepresentationsByTag.put(TagFromName.PixelData,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.CoefficientsSDVN,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.CoefficientsSDHN,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.CoefficientsSDDN,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.VariablePixelData,ValueRepresentation.OX);
		valueRepresentationsByTag.put(TagFromName.VariableNextDataGroup,ValueRepresentation.US);
		valueRepresentationsByTag.put(TagFromName.VariableCoefficientsSDVN,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.VariableCoefficientsSDHN,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.VariableCoefficientsSDDN,ValueRepresentation.OW);
		valueRepresentationsByTag.put(TagFromName.DigitalSignaturesSequence,ValueRepresentation.SQ);
		valueRepresentationsByTag.put(TagFromName.DataSetTrailingPadding,ValueRepresentation.OB);
	}

	protected void createInformationEntityByTag() {

		informationEntityByTag = new HashMap(100);

		informationEntityByTag.put(TagFromName.ReferencedFrameNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedSegmentNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedSeriesSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PrimaryAnatomicStructureSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AnatomicRegionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AnatomicRegionModifierSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PrimaryAnatomicStructureModifierSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RequestedProcedureID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.RequestedProcedureDescription,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.RequestedProcedureCodeSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ReasonForTheRequestedProcedure,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ReasonForRequestedProcedureCodeSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ScheduledProcedureStepID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ScheduledProcedureStepDescription,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ScheduledProtocolCodeSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PixelSpacing,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelSpacingCalibrationType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelSpacingCalibrationDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ShutterShape,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ShutterLeftVerticalEdge,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ShutterRightVerticalEdge,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ShutterUpperHorizontalEdge,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ShutterLowerHorizontalEdge,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CenterOfCircularShutter,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RadiusOfCircularShutter,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VerticesOfThePolygonalShutter,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ShutterPresentationValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ShutterPresentationColorCIELabValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContentLabel,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContentDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ConceptNameCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AlternateContentDescriptionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContentCreatorName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContentCreatorIdentificationCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.Rows,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.Columns,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BitsStored,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LossyImageCompression,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LossyImageCompressionRatio,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LossyImageCompressionMethod,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PerformedProcedureStepID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PerformedProcedureStepStartDate,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PerformedProcedureStepStartTime,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PerformedProcedureStepDescription,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PerformedProtocolCodeSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.CommentsOnThePerformedProcedureStep,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ExposureIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TargetExposureIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DeviationIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ViewCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SliceProgressionDirection,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PatientSupportAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableTopPitchAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableTopRollAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableTopLongitudinalPosition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableTopLateralPosition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SourcePatientGroupIdentificationSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.GroupOfPatientsIdentificationSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.UniqueDeviceIdentifier,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.DeviceDescription,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PatientName,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientID,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientBirthDate,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientSex,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.QualityControlSubject,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ReferencedPatientSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientBirthTime,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.OtherPatientIDsSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.OtherPatientNames,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.EthnicGroup,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientComments,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientSpeciesDescription,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientSpeciesCodeSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientBreedDescription,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientBreedCodeSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.BreedRegistrationSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.StrainDescription,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.StrainNomenclature,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.StrainCodeSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.StrainAdditionalInformation,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.StrainStockSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.GeneticModificationsSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ResponsiblePerson,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ResponsiblePersonRole,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ResponsibleOrganization,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.PatientIdentityRemoved,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.DeidentificationMethod,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.DeidentificationMethodCodeSequence,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialSponsorName,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialProtocolID,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialProtocolName,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialSiteID,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialSiteName,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialSubjectID,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialSubjectReadingID,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialProtocolEthicsCommitteeName,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.ClinicalTrialProtocolEthicsCommitteeApprovalNumber,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.StudyDate,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.StudyTime,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ReferringPhysicianName,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ReferringPhysicianIdentificationSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.StudyID,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.StudyDescription,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.PhysiciansOfRecord,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.PhysiciansOfRecordIdentificationSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.NameOfPhysiciansReadingStudy,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.PhysiciansReadingStudyIdentificationSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ConsultingPhysicianName,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ConsultingPhysicianIdentificationSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.RequestingServiceCodeSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ProcedureCodeSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ReasonForPerformedProcedureCodeSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.AdmittingDiagnosesDescription,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.AdmittingDiagnosesCodeSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.PatientAge,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.PatientSize,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.PatientWeight,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.PatientSizeCodeSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.Occupation,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.AdditionalPatientHistory,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.AdmissionID,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.IssuerOfAdmissionID,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.IssuerOfAdmissionIDSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ServiceEpisodeID,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.IssuerOfServiceEpisodeIDSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ServiceEpisodeDescription,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.PatientSexNeutered,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ClinicalTrialTimePointID,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ClinicalTrialTimePointDescription,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.LongitudinalTemporalOffsetFromEvent,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.LongitudinalTemporalEventType,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ConsentForClinicalTrialUseSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.Modality,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SeriesNumber,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.Laterality,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SeriesDate,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SeriesTime,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PerformingPhysicianName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PerformingPhysicianIdentificationSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ProtocolName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SeriesDescription,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SeriesDescriptionCodeSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.OperatorsName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.OperatorIdentificationSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ReferencedPerformedProcedureStepSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.RelatedSeriesSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.BodyPartExamined,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SmallestPixelValueInSeries,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.LargestPixelValueInSeries,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.RequestAttributesSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.AnatomicalOrientationType,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ClinicalTrialCoordinatingCenterName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ClinicalTrialSeriesID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ClinicalTrialSeriesDescription,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.FrameOfReferenceUID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PositionReferenceIndicator,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.Manufacturer,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.StationName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.InstitutionalDepartmentName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ManufacturerModelName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.DeviceSerialNumber,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SoftwareVersions,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.GantryID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.UDISequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SpatialResolution,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.DateOfLastCalibration,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.TimeOfLastCalibration,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PixelPaddingValue,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ReferencedInstanceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DerivationDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DerivationCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SourceImageSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SourceInstanceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PatientOrientation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContentDate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContentTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionDate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionDateTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagesInAcquisition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageComments,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.QualityControlImage,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BurnedInAnnotation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RecognizableVisualFeatures,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IconImageSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PresentationLUTShape,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IrradiationEventUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RealWorldValueMappingSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageOrientationPatient,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagePositionPatient,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SliceThickness,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SliceLocation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SamplesPerPixel,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PhotometricInterpretation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BitsAllocated,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.HighBit,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelRepresentation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PlanarConfiguration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelAspectRatio,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SmallestImagePixelValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LargestImagePixelValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RedPaletteColorLookupTableDescriptor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GreenPaletteColorLookupTableDescriptor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BluePaletteColorLookupTableDescriptor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RedPaletteColorLookupTableData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GreenPaletteColorLookupTableData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BluePaletteColorLookupTableData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ICCProfile,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ColorSpace,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FloatPixelData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FloatPixelPaddingValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FloatPixelPaddingRangeLimit,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoubleFloatPixelData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoubleFloatPixelPaddingValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoubleFloatPixelPaddingRangeLimit,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelDataProviderURL,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelPaddingRangeLimit,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusAgent,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusAgentSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusRoute,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusAdministrationRouteSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusVolume,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusStartTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusStopTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusTotalDose,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastFlowRate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastFlowDuration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusIngredient,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContrastBolusIngredientConcentration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PreferredPlaybackSequencing,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameTimeVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StartTrim,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StopTrim,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RecommendedDisplayFrameRate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CineRate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameDelay,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageTriggerDelay,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EffectiveDuration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ActualFrameDuration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MultiplexedAudioChannelsDescriptionCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfFrames,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameIncrementPointer,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StereoPairsPresent,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ConcatenationFrameOffsetNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RepresentativeFrameNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SOPInstanceUIDOfConcatenationSource,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InConcatenationNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DimensionOrganizationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DimensionOrganizationType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DimensionIndexSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CardiacSynchronizationTechnique,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CardiacSignalSource,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CardiacRRIntervalSpecified,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CardiacBeatRejectionTechnique,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LowRRValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.HighRRValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IntervalsAcquired,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IntervalsRejected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RespiratoryMotionCompensationTechnique,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RespiratorySignalSource,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RespiratoryTriggerDelayThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RespiratoryTriggerType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BulkMotionCompensationTechnique,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BulkMotionSignalSource,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageToEquipmentMappingMatrix,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EquipmentCoordinateSystemIdentification,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CollimatorGridName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PlateType,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PhosphorType,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.KVP,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PlateID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DistanceSourceToDetector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DistanceSourceToPatient,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.XRayTubeCurrent,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.Exposure,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureInuAs,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagerPixelSpacing,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GeneratorPower,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionDeviceProcessingDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionDeviceProcessingCode,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CassetteOrientation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CassetteSize,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposuresOnPlate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RelativeXRayExposure,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.Sensitivity,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RescaleIntercept,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RescaleSlope,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RescaleType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ScanOptions,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DataCollectionDiameter,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DataCollectionCenterPatient,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReconstructionTargetCenterPatient,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableHeight,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RotationDirection,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RevolutionTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SingleCollimationWidth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TotalCollimationWidth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableSpeed,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableFeedPerRotation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SpiralPitchFactor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureModulationType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EstimatedDoseSaving,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CTDIvol,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CTDIPhantomTypeCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.WaterEquivalentDiameter,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.WaterEquivalentDiameterCalculationMethodCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageAndFluoroscopyAreaDoseProduct,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CalciumScoringMassFactorPatient,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CalciumScoringMassFactorDevice,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EnergyWeightingFactor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CTAdditionalXRaySourceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IsocenterPosition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ScanningSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SequenceVariant,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MRAcquisitionType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RepetitionTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EchoTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EchoTrainLength,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InversionTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TriggerTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SequenceName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AngioFlag,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfAverages,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagingFrequency,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagedNucleus,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EchoNumbers,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MagneticFieldStrength,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SpacingBetweenSlices,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfPhaseEncodingSteps,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PercentSampling,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PercentPhaseFieldOfView,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelBandwidth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NominalInterval,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CardiacNumberOfImages,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TriggerWindow,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReceiveCoilName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TransmitCoilName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionMatrix,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InPlanePhaseEncodingDirection,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FlipAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SAR,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VariableFlipAngleFlag,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.dBdt,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TemporalPositionIdentifier,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfTemporalPositions,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TemporalResolution,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.B1rms,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EnergyWindowVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfEnergyWindows,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfDetectors,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PhaseVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfPhases,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RotationVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfRotations,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RRIntervalVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TimeSlotVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SliceVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AngularViewVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TimeSliceVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CountsAccumulated,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableTraverse,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CountRate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ProcessingFunction,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.WholeBodyTechnique,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ScanVelocity,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ScanLength,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EnergyWindowInformationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorInformationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RotationInformationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GatedInformationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PhaseInformationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SequenceOfUltrasoundRegions,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfStages,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfViewsInStage,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RWaveTimeVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.UltrasoundColorDataPresent,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StageName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StageCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StageNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ViewName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ViewNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfEventTimers,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EventElapsedTimes,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EventTimerNames,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IVUSAcquisition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IVUSPullbackRate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IVUSGatedRate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IVUSPullbackStartFrameNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IVUSPullbackStopFrameNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LesionNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OutputPower,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TransducerData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TransducerType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FocusDepth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MechanicalIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BoneThermalIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CranialThermalIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SoftTissueThermalIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SoftTissueFocusThermalIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SoftTissueSurfaceThermalIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DepthOfScanField,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlaySubtype,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SecondaryCaptureDeviceID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SecondaryCaptureDeviceManufacturer,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SecondaryCaptureDeviceManufacturerModelName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SecondaryCaptureDeviceSoftwareVersions,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.VideoImageFormatAcquired,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.DigitalImageFormatAcquired,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.DateOfSecondaryCapture,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TimeOfSecondaryCapture,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NominalScannedPixelSpacing,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.Illumination,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReflectedAmbientLight,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DigitizingDeviceTransportDirection,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RotationOfScannedFilm,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PageNumberVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameLabelVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FramePrimaryAngleVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameSecondaryAngleVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SliceLocationVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DisplayWindowLabelVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SharedFunctionalGroupsSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PerFrameFunctionalGroupsSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayRows,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayColumns,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayOrigin,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayBitsAllocated,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayBitPosition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayLabel,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ROIArea,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ROIMean,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ROIStandardDeviation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfFramesInOverlay,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageFrameOrigin,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ModalityLUTSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VOILUTSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.WindowCenter,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.WindowWidth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.WindowCenterWidthExplanation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VOILUTFunction,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LUTNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MACParametersSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DigitalSignaturesSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SpecificCharacterSet,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InstanceCreationDate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InstanceCreationTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InstanceCoercionDateTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InstanceCreatorUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RelatedGeneralSOPClassUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OriginalSpecializedSOPClassUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CodingSchemeIdentificationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContextGroupIdentificationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MappingResourceIdentificationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TimezoneOffsetFromUTC,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContributingEquipmentSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SOPInstanceStatus,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SOPAuthorizationDateTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SOPAuthorizationComment,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AuthorizationEquipmentCertificationNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EncryptedAttributesSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OriginalAttributesSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.HL7StructuredDocumentReferenceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LongitudinalTemporalInformationModified,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.QueryRetrieveView,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ConversionSourceAttributesSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContentQualification,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InstanceOriginStatus,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameExtractionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StudiesContainingOtherReferencedInstancesSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentationType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentationFractionalType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MaximumFractionalValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentLabel,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentAlgorithmType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentedPropertyCategoryCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentedPropertyTypeCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TrackingID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TrackingUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfSurfacePoints,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PointCoordinatesData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PointPositionAccuracy,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MeanPointDistance,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MaximumPointDistance,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PointsBoundingBoxCoordinates,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AxisOfRotation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CenterOfRotation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfVectors,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VectorDimensionality,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VectorAccuracy,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VectorCoordinateData,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LongVertexPointIndexList,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LongEdgePointIndexList,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LongTrianglePointIndexList,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TriangleStripSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TriangleFanSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LineSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FacetSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfSurfaces,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SurfaceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PresentationIntentType,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.VolumetricProperties,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelPresentation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionDuration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InterpolationType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedColorPaletteInstanceUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OCTFocalDistance,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BeamSpotSize,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EffectiveRefractiveIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OCTAcquisitionDomain,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OCTOpticalCenterWavelength,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AxialResolution,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RangingDepth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ALineRate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ALinesPerFrame,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CatheterDirectionOfRotation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CatheterRotationalRate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ModeOfPercutaneousAccessSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OCTZOffsetApplied,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RefractiveIndexApplied,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ALinePixelSpacing,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelIntensityRelationship,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FirstALineLocation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PaletteColorLookupTableUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.Units,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SUVType,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SeriesType,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ReprojectionMethod,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.NumberOfTimeSlices,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.AttenuationCorrectionMethod,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.DecayCorrection,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ReconstructionMethod,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.DetectorLinesOfResponseUsed,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.AcquisitionStartConditionData,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.AcquisitionTerminationConditionData,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.GantryDetectorSlew,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.AxialAcceptance,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.AxialMash,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.TransverseMash,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.DetectorElementSize,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SecondaryCountsType,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.FrameReferenceTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageIndex,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PrimaryPromptsCountsAccumulated,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SecondaryCountsAccumulated,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SliceSensitivityFactor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DecayFactor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoseCalibrationFactor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ScatterFractionFactor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DeadTimeFactor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StartDensityThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StartRelativeDensityDifferenceThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StartCardiacTriggerCountThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StartRespiratoryTriggerCountThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TerminationCountsThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TerminationDensityThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TerminationRelativeDensityThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TerminationTimeThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TerminationCardiacTriggerCountThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TerminationRespiratoryTriggerCountThreshold,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorGeometry,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TransverseDetectorSeparation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AxialDetectorDimension,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableMotion,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TimeOfFlightInformationUsed,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedRawDataSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedWaveformSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedImageEvidenceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SourceImageEvidenceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DecayCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AttenuationCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ScatterCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DeadTimeCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GantryMotionCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PatientMotionCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CountLossNormalizationCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RandomsCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NonUniformRadialSamplingCorrected,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SensitivityCalibrated,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorNormalizationCorrection,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AttenuationCorrectionSource,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AttenuationCorrectionTemporalRelationship,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DecayCorrectionDateTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PixelIntensityRelationshipSign,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RTImageLabel,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RTImageName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RTImageDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReportedValuesOrigin,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RTImagePlane,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.XRayImageReceptorAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RTImageOrientation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagePlanePixelSpacing,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RTImagePosition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RadiationMachineName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PrimaryDosimeterUnit,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RadiationMachineSAD,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RadiationMachineSSD,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RTImageSID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SourceToReferenceObjectDistance,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedRTPlanSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedBeamNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedFractionGroupNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FractionNumber,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StartCumulativeMetersetWeight,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EndCumulativeMetersetWeight,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FluenceMapSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GantryAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GantryPitchAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BeamLimitingDeviceAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableTopEccentricAxisDistance,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableTopEccentricAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableTopVerticalPosition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureTimeInms,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MetersetExposure,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoseUnits,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoseType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SpatialTransformOfDose,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedSpatialRegistrationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoseComment,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NormalizationPoint,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoseSummationType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridFrameOffsetVector,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DoseGridScaling,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TissueHeterogeneityCorrection,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedStructureSetSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DVHNormalizationPoint,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DVHNormalizationDoseValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DVHSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RTDoseROISequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionContextSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionContextDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.XRayTubeCurrentInuA,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureTimeInuS,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BodyPartThickness,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EntranceDose,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EntranceDoseInmGy,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EntranceDoseDerivation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposedArea,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DistanceSourceToEntrance,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CommentsOnRadiationDose,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.XRayOutput,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.HalfValueLayer,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OrganDose,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OrganExposed,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AnodeTargetMaterial,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RectificationType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureControlMode,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureControlModeDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureStatus,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PhototimerSetting,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GeneratorID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridAbsorbingMaterial,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridSpacingMaterial,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridThickness,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridPitch,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridAspectRatio,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridPeriod,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridFocalDistance,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GridID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.Grid,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageLaterality,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CalibrationImage,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorConfiguration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorMode,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DateOfLastDetectorCalibration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TimeOfLastDetectorCalibration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposuresOnDetectorSinceLastCalibration,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposuresOnDetectorSinceManufactured,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorTimeSinceLastExposure,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorBinning,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorManufacturerName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorManufacturerModelName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorConditionsNominalFlag,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorTemperature,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorElementPhysicalSize,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorElementSpacing,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorActiveShape,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorActiveDimensions,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorActiveOrigin,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorActiveTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorActivationOffsetFromExposure,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FieldOfViewOrigin,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FieldOfViewRotation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FieldOfViewHorizontalFlip,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CassetteID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ProjectionEponymousNameCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ViewModifierCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PatientOrientationModifierCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EstimatedRadiographicMagnificationFactor,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PositionerType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PositionerPrimaryAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PositionerSecondaryAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorPrimaryAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DetectorSecondaryAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ColumnAngulation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CompressionForce,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PaddleDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PositionerPrimaryAngleDirection,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BreastImplantPresent,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PartialView,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PartialViewDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PartialViewCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BiopsyTargetSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.HistogramSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ContributingSourcesSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.XRay3DAcquisitionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PositionerMotion,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.XRayTubeCurrentInmA,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExposureInmAs,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageCenterPointCoordinatesSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SamplesPerPixelUsed,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionDeviceTypeCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IlluminationTypeCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LightPathFilterTypeStackCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LightPathFilterPassThroughWavelength,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LightPathFilterPassBand,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagePathFilterTypeStackCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagePathFilterPassThroughWavelength,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagePathFilterPassBand,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LensesCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ChannelDescriptionCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CameraAngleOfView,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RefractiveStateSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EmmetropicMagnification,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IntraOcularPressure,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PupilDilated,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MydriaticAgentSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DegreeOfDilation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PatientEyeMovementCommanded,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PatientEyeMovementCommandCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.HorizontalFieldOfView,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RelativeImagePositionCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StereoPairsSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AxialLengthOfTheEye,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IlluminationWaveLength,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IlluminationPower,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IlluminationBandwidth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DepthSpatialResolution,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MaximumDepthDistortion,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AlongScanSpatialResolution,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MaximumAlongScanDistortion,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcrossScanSpatialResolution,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MaximumAcrossScanDistortion,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OphthalmicFrameLocationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagedVolumeWidth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagedVolumeHeight,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImagedVolumeDepth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TotalPixelMatrixColumns,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TotalPixelMatrixRows,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TotalPixelMatrixFocalPlanes,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TotalPixelMatrixOriginSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageOrientationSlide,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SpecimenLabelInImage,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FocusMethod,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExtendedDepthOfField,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfFocalPlanes,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DistanceBetweenFocalPlanes,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RecommendedAbsentPixelCIELabValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfOpticalPaths,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OpticalPathSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedImageNavigationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BarcodeValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.LabelText,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SynchronizationFrameOfReferenceUID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SynchronizationTrigger,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.SynchronizationChannel,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.AcquisitionTimeSynchronized,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.TimeSource,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.TimeDistributionProtocol,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.NTPSourceAddress,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.WaveformSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.WaveformAnnotationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PreliminaryFlag,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CompletionFlag,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CompletionFlagDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VerificationFlag,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VerifyingObserverSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AuthorObserverSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ParticipantSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CustodialOrganizationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PredecessorDocumentsSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IdenticalDocumentsSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedRequestSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PerformedProcedureCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CurrentRequestedProcedureEvidenceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PertinentOtherEvidenceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ShutterOverlayGroup,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DisplayedAreaSelectionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GraphicAnnotationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageRotation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageHorizontalFlip,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GraphicLayerSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PresentationLUTSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OverlayActivationLayer,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SoftcopyVOILUTSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PresentationCreationDate,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PresentationCreationTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MaskSubtractionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RecommendedViewingMode,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BlendingSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RelativeOpacity,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfScreens,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NominalScreenDefinitionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StructuredDisplayBackgroundCIELabValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EmptyImageBoxCIELabValue,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.HangingProtocolName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.HangingProtocolCreator,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StructuredDisplayImageBoxSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ImageBoxSynchronizationSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.StructuredDisplayTextBoxSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VolumeBasedCalculationTechnique,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ComplexImageComponent,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionContrast,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedPresentationStateSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ResonantNucleus,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.KSpaceFiltering,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ApplicableSafetyStandardAgency,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ApplicableSafetyStandardDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PulseSequenceName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EchoPulseSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MultipleSpinEcho,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.MultiPlanarExcitation,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PhaseContrast,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VelocityEncodingAcquisitionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TimeOfFlightContrast,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ArterialSpinLabelingContrast,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SteadyStatePulseSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EchoPlanarPulseSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SaturationRecovery,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SpectrallySelectedSuppression,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OversamplingPhase,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.GeometryOfKSpaceTraversal,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RectilinearPhaseEncodeReordering,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SegmentedKSpaceTraversal,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CoverageOfKSpace,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfKSpaceTrajectories,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameNumbersOfInterest,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameOfInterestDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameOfInterestType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DeviceSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InterventionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RWavePointer,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameDimensionPointer,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RadiationSetting,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AveragePulseWidth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RadiationMode,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TypeOfFilters,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IntensifierSize,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CollimatorLeftVerticalEdge,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CollimatorRightVerticalEdge,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CollimatorUpperHorizontalEdge,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CollimatorLowerHorizontalEdge,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CenterOfCircularCollimator,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.RadiusOfCircularCollimator,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.VerticesOfThePolygonalCollimator,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CollimatorShape,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableVerticalIncrement,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableLongitudinalIncrement,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TableLateralIncrement,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PositionerPrimaryAngleIncrement,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PositionerSecondaryAngleIncrement,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TomoLayerHeight,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TomoAngle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TomoTime,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TomoType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TomoClass,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfTomosynthesisSourceImages,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PlanesInAcquisition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PlaneIdentification,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionProtocolName,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionProtocolDescription,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExaminedBodyThickness,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ReferencedOtherPlaneSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.XRayReceptorType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DistanceReceptorPlaneToDetectorHousing,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CArmPositionerTabletopRelationship,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquiredImageAreaDoseProduct,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IntensifierActiveShape,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IntensifierActiveDimensions,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PhysicalDetectorSize,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PositionOfIsocenterProjection,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.FrameDisplaySequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SourceIrradiationEventSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.XRay3DReconstructionSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DataFrameAssignmentSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BlendingLUT1Sequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.BlendingLUT2Sequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EnhancedPaletteColorLookupTableSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.PerformedProtocolType,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.VolumeFrameOfReferenceUID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.UltrasoundAcquisitionGeometry,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.ApexPosition,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.VolumeToTransducerRelationship,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.VolumeToTransducerMappingMatrix,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PatientFrameOfReferenceSource,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.TableFrameOfReferenceUID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.VolumeToTableMappingMatrix,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.PositionMeasuringDeviceUsed,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.EventTimerSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TransducerScanPatternCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TransducerGeometryCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TransducerBeamSteeringCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.TransducerApplicationCodeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.DepthsOfFocus,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ExcludedIntervalsSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ViewPosition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InstanceNumber,InformationEntity.CONCATENATION);
		informationEntityByTag.put(TagFromName.ScatterCorrectionMethod,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.IssuerOfAccessionNumberSequence,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.SeriesInstanceUID,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.RandomsCorrectionMethod,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.CollimatorType,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InstitutionName,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.NumberOfStudyRelatedSeries,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.NumberOfPatientRelatedStudies,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.CoincidenceWindowWidth,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SOPClassUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfSeriesRelatedInstances,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.CountsSource,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.NumberOfPatientRelatedSeries,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.AcquisitionTerminationCondition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InConcatenationTotalNumber,InformationEntity.CONCATENATION);
		informationEntityByTag.put(TagFromName.NumberOfStudyRelatedInstances,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.SourceApplicationEntityTitle,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.ConcatenationUID,InformationEntity.CONCATENATION);
		informationEntityByTag.put(TagFromName.StudyInstanceUID,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.EnergyWindowRangeSequence,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.SOPClassesInStudy,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.TransferSyntaxUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.OtherStudyNumbers,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.SOPInstanceUID,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.AcquisitionStartCondition,InformationEntity.INSTANCE);
		informationEntityByTag.put(TagFromName.InstitutionAddress,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.NumberOfPatientRelatedInstances,InformationEntity.PATIENT);
		informationEntityByTag.put(TagFromName.AccessionNumber,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.InstitutionCodeSequence,InformationEntity.SERIES);
		informationEntityByTag.put(TagFromName.InterpretationAuthor,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.ModalitiesInStudy,InformationEntity.STUDY);
		informationEntityByTag.put(TagFromName.FocalSpots,InformationEntity.INSTANCE);
	}

	protected void createTagByName() {

		tagByName = new HashMap(100);

		tagByName.put("CommandGroupLength",TagFromName.CommandGroupLength);
		tagByName.put("CommandLengthToEnd",TagFromName.CommandLengthToEnd);
		tagByName.put("AffectedSOPClassUID",TagFromName.AffectedSOPClassUID);
		tagByName.put("RequestedSOPClassUID",TagFromName.RequestedSOPClassUID);
		tagByName.put("CommandRecognitionCode",TagFromName.CommandRecognitionCode);
		tagByName.put("CommandField",TagFromName.CommandField);
		tagByName.put("MessageID",TagFromName.MessageID);
		tagByName.put("MessageIDBeingRespondedTo",TagFromName.MessageIDBeingRespondedTo);
		tagByName.put("Initiator",TagFromName.Initiator);
		tagByName.put("Receiver",TagFromName.Receiver);
		tagByName.put("FindLocation",TagFromName.FindLocation);
		tagByName.put("MoveDestination",TagFromName.MoveDestination);
		tagByName.put("Priority",TagFromName.Priority);
		tagByName.put("CommandDataSetType",TagFromName.CommandDataSetType);
		tagByName.put("NumberOfMatches",TagFromName.NumberOfMatches);
		tagByName.put("ResponseSequenceNumber",TagFromName.ResponseSequenceNumber);
		tagByName.put("Status",TagFromName.Status);
		tagByName.put("OffendingElement",TagFromName.OffendingElement);
		tagByName.put("ErrorComment",TagFromName.ErrorComment);
		tagByName.put("ErrorID",TagFromName.ErrorID);
		tagByName.put("AffectedSOPInstanceUID",TagFromName.AffectedSOPInstanceUID);
		tagByName.put("RequestedSOPInstanceUID",TagFromName.RequestedSOPInstanceUID);
		tagByName.put("EventTypeID",TagFromName.EventTypeID);
		tagByName.put("AttributeIdentifierList",TagFromName.AttributeIdentifierList);
		tagByName.put("ActionTypeID",TagFromName.ActionTypeID);
		tagByName.put("NumberOfRemainingSuboperations",TagFromName.NumberOfRemainingSuboperations);
		tagByName.put("NumberOfCompletedSuboperations",TagFromName.NumberOfCompletedSuboperations);
		tagByName.put("NumberOfFailedSuboperations",TagFromName.NumberOfFailedSuboperations);
		tagByName.put("NumberOfWarningSuboperations",TagFromName.NumberOfWarningSuboperations);
		tagByName.put("MoveOriginatorApplicationEntityTitle",TagFromName.MoveOriginatorApplicationEntityTitle);
		tagByName.put("MoveOriginatorMessageID",TagFromName.MoveOriginatorMessageID);
		tagByName.put("DialogReceiver",TagFromName.DialogReceiver);
		tagByName.put("TerminalType",TagFromName.TerminalType);
		tagByName.put("MessageSetID",TagFromName.MessageSetID);
		tagByName.put("EndMessageID",TagFromName.EndMessageID);
		tagByName.put("DisplayFormat",TagFromName.DisplayFormat);
		tagByName.put("PagePositionID",TagFromName.PagePositionID);
		tagByName.put("TextFormatID",TagFromName.TextFormatID);
		tagByName.put("NormalReverse",TagFromName.NormalReverse);
		tagByName.put("AddGrayScale",TagFromName.AddGrayScale);
		tagByName.put("Borders",TagFromName.Borders);
		tagByName.put("Copies",TagFromName.Copies);
		tagByName.put("CommandMagnificationType",TagFromName.CommandMagnificationType);
		tagByName.put("Erase",TagFromName.Erase);
		tagByName.put("Print",TagFromName.Print);
		tagByName.put("Overlays",TagFromName.Overlays);
		tagByName.put("FileMetaInformationGroupLength",TagFromName.FileMetaInformationGroupLength);
		tagByName.put("FileMetaInformationVersion",TagFromName.FileMetaInformationVersion);
		tagByName.put("MediaStorageSOPClassUID",TagFromName.MediaStorageSOPClassUID);
		tagByName.put("MediaStorageSOPInstanceUID",TagFromName.MediaStorageSOPInstanceUID);
		tagByName.put("TransferSyntaxUID",TagFromName.TransferSyntaxUID);
		tagByName.put("ImplementationClassUID",TagFromName.ImplementationClassUID);
		tagByName.put("ImplementationVersionName",TagFromName.ImplementationVersionName);
		tagByName.put("SourceApplicationEntityTitle",TagFromName.SourceApplicationEntityTitle);
		tagByName.put("SendingApplicationEntityTitle",TagFromName.SendingApplicationEntityTitle);
		tagByName.put("ReceivingApplicationEntityTitle",TagFromName.ReceivingApplicationEntityTitle);
		tagByName.put("PrivateInformationCreatorUID",TagFromName.PrivateInformationCreatorUID);
		tagByName.put("PrivateInformation",TagFromName.PrivateInformation);
		tagByName.put("FileSetID",TagFromName.FileSetID);
		tagByName.put("FileSetDescriptorFileID",TagFromName.FileSetDescriptorFileID);
		tagByName.put("SpecificCharacterSetOfFileSetDescriptorFile",TagFromName.SpecificCharacterSetOfFileSetDescriptorFile);
		tagByName.put("OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity",TagFromName.OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity);
		tagByName.put("OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity",TagFromName.OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity);
		tagByName.put("FileSetConsistencyFlag",TagFromName.FileSetConsistencyFlag);
		tagByName.put("DirectoryRecordSequence",TagFromName.DirectoryRecordSequence);
		tagByName.put("OffsetOfTheNextDirectoryRecord",TagFromName.OffsetOfTheNextDirectoryRecord);
		tagByName.put("RecordInUseFlag",TagFromName.RecordInUseFlag);
		tagByName.put("OffsetOfReferencedLowerLevelDirectoryEntity",TagFromName.OffsetOfReferencedLowerLevelDirectoryEntity);
		tagByName.put("DirectoryRecordType",TagFromName.DirectoryRecordType);
		tagByName.put("PrivateRecordUID",TagFromName.PrivateRecordUID);
		tagByName.put("ReferencedFileID",TagFromName.ReferencedFileID);
		tagByName.put("MRDRDirectoryRecordOffset",TagFromName.MRDRDirectoryRecordOffset);
		tagByName.put("ReferencedSOPClassUIDInFile",TagFromName.ReferencedSOPClassUIDInFile);
		tagByName.put("ReferencedSOPInstanceUIDInFile",TagFromName.ReferencedSOPInstanceUIDInFile);
		tagByName.put("ReferencedTransferSyntaxUIDInFile",TagFromName.ReferencedTransferSyntaxUIDInFile);
		tagByName.put("ReferencedRelatedGeneralSOPClassUIDInFile",TagFromName.ReferencedRelatedGeneralSOPClassUIDInFile);
		tagByName.put("NumberOfReferences",TagFromName.NumberOfReferences);
		tagByName.put("LengthToEnd",TagFromName.LengthToEnd);
		tagByName.put("SpecificCharacterSet",TagFromName.SpecificCharacterSet);
		tagByName.put("LanguageCodeSequence",TagFromName.LanguageCodeSequence);
		tagByName.put("ImageType",TagFromName.ImageType);
		tagByName.put("RecognitionCode",TagFromName.RecognitionCode);
		tagByName.put("InstanceCreationDate",TagFromName.InstanceCreationDate);
		tagByName.put("InstanceCreationTime",TagFromName.InstanceCreationTime);
		tagByName.put("InstanceCreatorUID",TagFromName.InstanceCreatorUID);
		tagByName.put("InstanceCoercionDateTime",TagFromName.InstanceCoercionDateTime);
		tagByName.put("SOPClassUID",TagFromName.SOPClassUID);
		tagByName.put("SOPInstanceUID",TagFromName.SOPInstanceUID);
		tagByName.put("RelatedGeneralSOPClassUID",TagFromName.RelatedGeneralSOPClassUID);
		tagByName.put("OriginalSpecializedSOPClassUID",TagFromName.OriginalSpecializedSOPClassUID);
		tagByName.put("StudyDate",TagFromName.StudyDate);
		tagByName.put("SeriesDate",TagFromName.SeriesDate);
		tagByName.put("AcquisitionDate",TagFromName.AcquisitionDate);
		tagByName.put("ContentDate",TagFromName.ContentDate);
		tagByName.put("OverlayDate",TagFromName.OverlayDate);
		tagByName.put("CurveDate",TagFromName.CurveDate);
		tagByName.put("AcquisitionDateTime",TagFromName.AcquisitionDateTime);
		tagByName.put("StudyTime",TagFromName.StudyTime);
		tagByName.put("SeriesTime",TagFromName.SeriesTime);
		tagByName.put("AcquisitionTime",TagFromName.AcquisitionTime);
		tagByName.put("ContentTime",TagFromName.ContentTime);
		tagByName.put("OverlayTime",TagFromName.OverlayTime);
		tagByName.put("CurveTime",TagFromName.CurveTime);
		tagByName.put("DataSetType",TagFromName.DataSetType);
		tagByName.put("DataSetSubtype",TagFromName.DataSetSubtype);
		tagByName.put("NuclearMedicineSeriesType",TagFromName.NuclearMedicineSeriesType);
		tagByName.put("AccessionNumber",TagFromName.AccessionNumber);
		tagByName.put("IssuerOfAccessionNumberSequence",TagFromName.IssuerOfAccessionNumberSequence);
		tagByName.put("QueryRetrieveLevel",TagFromName.QueryRetrieveLevel);
		tagByName.put("QueryRetrieveView",TagFromName.QueryRetrieveView);
		tagByName.put("RetrieveAETitle",TagFromName.RetrieveAETitle);
		tagByName.put("StationAETitle",TagFromName.StationAETitle);
		tagByName.put("InstanceAvailability",TagFromName.InstanceAvailability);
		tagByName.put("FailedSOPInstanceUIDList",TagFromName.FailedSOPInstanceUIDList);
		tagByName.put("Modality",TagFromName.Modality);
		tagByName.put("ModalitiesInStudy",TagFromName.ModalitiesInStudy);
		tagByName.put("SOPClassesInStudy",TagFromName.SOPClassesInStudy);
		tagByName.put("AnatomicRegionsInStudyCodeSequence",TagFromName.AnatomicRegionsInStudyCodeSequence);
		tagByName.put("ConversionType",TagFromName.ConversionType);
		tagByName.put("PresentationIntentType",TagFromName.PresentationIntentType);
		tagByName.put("Manufacturer",TagFromName.Manufacturer);
		tagByName.put("InstitutionName",TagFromName.InstitutionName);
		tagByName.put("InstitutionAddress",TagFromName.InstitutionAddress);
		tagByName.put("InstitutionCodeSequence",TagFromName.InstitutionCodeSequence);
		tagByName.put("ReferringPhysicianName",TagFromName.ReferringPhysicianName);
		tagByName.put("ReferringPhysicianAddress",TagFromName.ReferringPhysicianAddress);
		tagByName.put("ReferringPhysicianTelephoneNumbers",TagFromName.ReferringPhysicianTelephoneNumbers);
		tagByName.put("ReferringPhysicianIdentificationSequence",TagFromName.ReferringPhysicianIdentificationSequence);
		tagByName.put("ConsultingPhysicianName",TagFromName.ConsultingPhysicianName);
		tagByName.put("ConsultingPhysicianIdentificationSequence",TagFromName.ConsultingPhysicianIdentificationSequence);
		tagByName.put("CodeValue",TagFromName.CodeValue);
		tagByName.put("ExtendedCodeValue",TagFromName.ExtendedCodeValue);
		tagByName.put("CodingSchemeDesignator",TagFromName.CodingSchemeDesignator);
		tagByName.put("CodingSchemeVersion",TagFromName.CodingSchemeVersion);
		tagByName.put("CodeMeaning",TagFromName.CodeMeaning);
		tagByName.put("MappingResource",TagFromName.MappingResource);
		tagByName.put("ContextGroupVersion",TagFromName.ContextGroupVersion);
		tagByName.put("ContextGroupLocalVersion",TagFromName.ContextGroupLocalVersion);
		tagByName.put("ExtendedCodeMeaning",TagFromName.ExtendedCodeMeaning);
		tagByName.put("CodingSchemeResourcesSequence",TagFromName.CodingSchemeResourcesSequence);
		tagByName.put("CodingSchemeURLType",TagFromName.CodingSchemeURLType);
		tagByName.put("ContextGroupExtensionFlag",TagFromName.ContextGroupExtensionFlag);
		tagByName.put("CodingSchemeUID",TagFromName.CodingSchemeUID);
		tagByName.put("ContextGroupExtensionCreatorUID",TagFromName.ContextGroupExtensionCreatorUID);
		tagByName.put("CodingSchemeURL",TagFromName.CodingSchemeURL);
		tagByName.put("ContextIdentifier",TagFromName.ContextIdentifier);
		tagByName.put("CodingSchemeIdentificationSequence",TagFromName.CodingSchemeIdentificationSequence);
		tagByName.put("CodingSchemeRegistry",TagFromName.CodingSchemeRegistry);
		tagByName.put("CodingSchemeExternalID",TagFromName.CodingSchemeExternalID);
		tagByName.put("CodingSchemeName",TagFromName.CodingSchemeName);
		tagByName.put("CodingSchemeResponsibleOrganization",TagFromName.CodingSchemeResponsibleOrganization);
		tagByName.put("ContextUID",TagFromName.ContextUID);
		tagByName.put("MappingResourceUID",TagFromName.MappingResourceUID);
		tagByName.put("LongCodeValue",TagFromName.LongCodeValue);
		tagByName.put("URNCodeValue",TagFromName.URNCodeValue);
		tagByName.put("EquivalentCodeSequence",TagFromName.EquivalentCodeSequence);
		tagByName.put("MappingResourceName",TagFromName.MappingResourceName);
		tagByName.put("ContextGroupIdentificationSequence",TagFromName.ContextGroupIdentificationSequence);
		tagByName.put("MappingResourceIdentificationSequence",TagFromName.MappingResourceIdentificationSequence);
		tagByName.put("TimezoneOffsetFromUTC",TagFromName.TimezoneOffsetFromUTC);
		tagByName.put("ResponsibleGroupCodeSequence",TagFromName.ResponsibleGroupCodeSequence);
		tagByName.put("EquipmentModality",TagFromName.EquipmentModality);
		tagByName.put("ManufacturerRelatedModelGroup",TagFromName.ManufacturerRelatedModelGroup);
		tagByName.put("PrivateDataElementCharacteristicsSequence",TagFromName.PrivateDataElementCharacteristicsSequence);
		tagByName.put("PrivateGroupReference",TagFromName.PrivateGroupReference);
		tagByName.put("PrivateCreatorReference",TagFromName.PrivateCreatorReference);
		tagByName.put("BlockIdentifyingInformationStatus",TagFromName.BlockIdentifyingInformationStatus);
		tagByName.put("NonidentifyingPrivateElements",TagFromName.NonidentifyingPrivateElements);
		tagByName.put("DeidentificationActionSequence",TagFromName.DeidentificationActionSequence);
		tagByName.put("IdentifyingPrivateElements",TagFromName.IdentifyingPrivateElements);
		tagByName.put("DeidentificationAction",TagFromName.DeidentificationAction);
		tagByName.put("PrivateDataElement",TagFromName.PrivateDataElement);
		tagByName.put("PrivateDataElementValueMultiplicity",TagFromName.PrivateDataElementValueMultiplicity);
		tagByName.put("PrivateDataElementValueRepresentation",TagFromName.PrivateDataElementValueRepresentation);
		tagByName.put("PrivateDataElementNumberOfItems",TagFromName.PrivateDataElementNumberOfItems);
		tagByName.put("PrivateDataElementName",TagFromName.PrivateDataElementName);
		tagByName.put("PrivateDataElementKeyword",TagFromName.PrivateDataElementKeyword);
		tagByName.put("PrivateDataElementDescription",TagFromName.PrivateDataElementDescription);
		tagByName.put("PrivateDataElementEncoding",TagFromName.PrivateDataElementEncoding);
		tagByName.put("PrivateDataElementDefinitionSequence",TagFromName.PrivateDataElementDefinitionSequence);
		tagByName.put("NetworkID",TagFromName.NetworkID);
		tagByName.put("StationName",TagFromName.StationName);
		tagByName.put("StudyDescription",TagFromName.StudyDescription);
		tagByName.put("ProcedureCodeSequence",TagFromName.ProcedureCodeSequence);
		tagByName.put("SeriesDescription",TagFromName.SeriesDescription);
		tagByName.put("SeriesDescriptionCodeSequence",TagFromName.SeriesDescriptionCodeSequence);
		tagByName.put("InstitutionalDepartmentName",TagFromName.InstitutionalDepartmentName);
		tagByName.put("PhysiciansOfRecord",TagFromName.PhysiciansOfRecord);
		tagByName.put("PhysiciansOfRecordIdentificationSequence",TagFromName.PhysiciansOfRecordIdentificationSequence);
		tagByName.put("PerformingPhysicianName",TagFromName.PerformingPhysicianName);
		tagByName.put("PerformingPhysicianIdentificationSequence",TagFromName.PerformingPhysicianIdentificationSequence);
		tagByName.put("NameOfPhysiciansReadingStudy",TagFromName.NameOfPhysiciansReadingStudy);
		tagByName.put("PhysiciansReadingStudyIdentificationSequence",TagFromName.PhysiciansReadingStudyIdentificationSequence);
		tagByName.put("OperatorsName",TagFromName.OperatorsName);
		tagByName.put("OperatorIdentificationSequence",TagFromName.OperatorIdentificationSequence);
		tagByName.put("AdmittingDiagnosesDescription",TagFromName.AdmittingDiagnosesDescription);
		tagByName.put("AdmittingDiagnosesCodeSequence",TagFromName.AdmittingDiagnosesCodeSequence);
		tagByName.put("ManufacturerModelName",TagFromName.ManufacturerModelName);
		tagByName.put("ReferencedResultsSequence",TagFromName.ReferencedResultsSequence);
		tagByName.put("ReferencedStudySequence",TagFromName.ReferencedStudySequence);
		tagByName.put("ReferencedPerformedProcedureStepSequence",TagFromName.ReferencedPerformedProcedureStepSequence);
		tagByName.put("ReferencedSeriesSequence",TagFromName.ReferencedSeriesSequence);
		tagByName.put("ReferencedPatientSequence",TagFromName.ReferencedPatientSequence);
		tagByName.put("ReferencedVisitSequence",TagFromName.ReferencedVisitSequence);
		tagByName.put("ReferencedOverlaySequence",TagFromName.ReferencedOverlaySequence);
		tagByName.put("ReferencedStereometricInstanceSequence",TagFromName.ReferencedStereometricInstanceSequence);
		tagByName.put("ReferencedWaveformSequence",TagFromName.ReferencedWaveformSequence);
		tagByName.put("ReferencedImageSequence",TagFromName.ReferencedImageSequence);
		tagByName.put("ReferencedCurveSequence",TagFromName.ReferencedCurveSequence);
		tagByName.put("ReferencedInstanceSequence",TagFromName.ReferencedInstanceSequence);
		tagByName.put("ReferencedRealWorldValueMappingInstanceSequence",TagFromName.ReferencedRealWorldValueMappingInstanceSequence);
		tagByName.put("ReferencedSOPClassUID",TagFromName.ReferencedSOPClassUID);
		tagByName.put("ReferencedSOPInstanceUID",TagFromName.ReferencedSOPInstanceUID);
		tagByName.put("DefinitionSourceSequence",TagFromName.DefinitionSourceSequence);
		tagByName.put("SOPClassesSupported",TagFromName.SOPClassesSupported);
		tagByName.put("ReferencedFrameNumber",TagFromName.ReferencedFrameNumber);
		tagByName.put("SimpleFrameList",TagFromName.SimpleFrameList);
		tagByName.put("CalculatedFrameList",TagFromName.CalculatedFrameList);
		tagByName.put("TimeRange",TagFromName.TimeRange);
		tagByName.put("FrameExtractionSequence",TagFromName.FrameExtractionSequence);
		tagByName.put("MultiFrameSourceSOPInstanceUID",TagFromName.MultiFrameSourceSOPInstanceUID);
		tagByName.put("RetrieveURL",TagFromName.RetrieveURL);
		tagByName.put("TransactionUID",TagFromName.TransactionUID);
		tagByName.put("WarningReason",TagFromName.WarningReason);
		tagByName.put("FailureReason",TagFromName.FailureReason);
		tagByName.put("FailedSOPSequence",TagFromName.FailedSOPSequence);
		tagByName.put("ReferencedSOPSequence",TagFromName.ReferencedSOPSequence);
		tagByName.put("OtherFailuresSequence",TagFromName.OtherFailuresSequence);
		tagByName.put("StudiesContainingOtherReferencedInstancesSequence",TagFromName.StudiesContainingOtherReferencedInstancesSequence);
		tagByName.put("RelatedSeriesSequence",TagFromName.RelatedSeriesSequence);
		tagByName.put("LossyImageCompressionRetired",TagFromName.LossyImageCompressionRetired);
		tagByName.put("DerivationDescription",TagFromName.DerivationDescription);
		tagByName.put("SourceImageSequence",TagFromName.SourceImageSequence);
		tagByName.put("StageName",TagFromName.StageName);
		tagByName.put("StageNumber",TagFromName.StageNumber);
		tagByName.put("NumberOfStages",TagFromName.NumberOfStages);
		tagByName.put("ViewName",TagFromName.ViewName);
		tagByName.put("ViewNumber",TagFromName.ViewNumber);
		tagByName.put("NumberOfEventTimers",TagFromName.NumberOfEventTimers);
		tagByName.put("NumberOfViewsInStage",TagFromName.NumberOfViewsInStage);
		tagByName.put("EventElapsedTimes",TagFromName.EventElapsedTimes);
		tagByName.put("EventTimerNames",TagFromName.EventTimerNames);
		tagByName.put("EventTimerSequence",TagFromName.EventTimerSequence);
		tagByName.put("EventTimeOffset",TagFromName.EventTimeOffset);
		tagByName.put("EventCodeSequence",TagFromName.EventCodeSequence);
		tagByName.put("StartTrim",TagFromName.StartTrim);
		tagByName.put("StopTrim",TagFromName.StopTrim);
		tagByName.put("RecommendedDisplayFrameRate",TagFromName.RecommendedDisplayFrameRate);
		tagByName.put("TransducerPosition",TagFromName.TransducerPosition);
		tagByName.put("TransducerOrientation",TagFromName.TransducerOrientation);
		tagByName.put("AnatomicStructure",TagFromName.AnatomicStructure);
		tagByName.put("AnatomicRegionSequence",TagFromName.AnatomicRegionSequence);
		tagByName.put("AnatomicRegionModifierSequence",TagFromName.AnatomicRegionModifierSequence);
		tagByName.put("PrimaryAnatomicStructureSequence",TagFromName.PrimaryAnatomicStructureSequence);
		tagByName.put("AnatomicStructureSpaceOrRegionSequence",TagFromName.AnatomicStructureSpaceOrRegionSequence);
		tagByName.put("PrimaryAnatomicStructureModifierSequence",TagFromName.PrimaryAnatomicStructureModifierSequence);
		tagByName.put("TransducerPositionSequence",TagFromName.TransducerPositionSequence);
		tagByName.put("TransducerPositionModifierSequence",TagFromName.TransducerPositionModifierSequence);
		tagByName.put("TransducerOrientationSequence",TagFromName.TransducerOrientationSequence);
		tagByName.put("TransducerOrientationModifierSequence",TagFromName.TransducerOrientationModifierSequence);
		tagByName.put("AnatomicStructureSpaceOrRegionCodeSequenceTrial",TagFromName.AnatomicStructureSpaceOrRegionCodeSequenceTrial);
		tagByName.put("AnatomicPortalOfEntranceCodeSequenceTrial",TagFromName.AnatomicPortalOfEntranceCodeSequenceTrial);
		tagByName.put("AnatomicApproachDirectionCodeSequenceTrial",TagFromName.AnatomicApproachDirectionCodeSequenceTrial);
		tagByName.put("AnatomicPerspectiveDescriptionTrial",TagFromName.AnatomicPerspectiveDescriptionTrial);
		tagByName.put("AnatomicPerspectiveCodeSequenceTrial",TagFromName.AnatomicPerspectiveCodeSequenceTrial);
		tagByName.put("AnatomicLocationOfExaminingInstrumentDescriptionTrial",TagFromName.AnatomicLocationOfExaminingInstrumentDescriptionTrial);
		tagByName.put("AnatomicLocationOfExaminingInstrumentCodeSequenceTrial",TagFromName.AnatomicLocationOfExaminingInstrumentCodeSequenceTrial);
		tagByName.put("AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial",TagFromName.AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial);
		tagByName.put("OnAxisBackgroundAnatomicStructureCodeSequenceTrial",TagFromName.OnAxisBackgroundAnatomicStructureCodeSequenceTrial);
		tagByName.put("AlternateRepresentationSequence",TagFromName.AlternateRepresentationSequence);
		tagByName.put("IrradiationEventUID",TagFromName.IrradiationEventUID);
		tagByName.put("SourceIrradiationEventSequence",TagFromName.SourceIrradiationEventSequence);
		tagByName.put("RadiopharmaceuticalAdministrationEventUID",TagFromName.RadiopharmaceuticalAdministrationEventUID);
		tagByName.put("IdentifyingComments",TagFromName.IdentifyingComments);
		tagByName.put("FrameType",TagFromName.FrameType);
		tagByName.put("ReferencedImageEvidenceSequence",TagFromName.ReferencedImageEvidenceSequence);
		tagByName.put("ReferencedRawDataSequence",TagFromName.ReferencedRawDataSequence);
		tagByName.put("CreatorVersionUID",TagFromName.CreatorVersionUID);
		tagByName.put("DerivationImageSequence",TagFromName.DerivationImageSequence);
		tagByName.put("SourceImageEvidenceSequence",TagFromName.SourceImageEvidenceSequence);
		tagByName.put("PixelPresentation",TagFromName.PixelPresentation);
		tagByName.put("VolumetricProperties",TagFromName.VolumetricProperties);
		tagByName.put("VolumeBasedCalculationTechnique",TagFromName.VolumeBasedCalculationTechnique);
		tagByName.put("ComplexImageComponent",TagFromName.ComplexImageComponent);
		tagByName.put("AcquisitionContrast",TagFromName.AcquisitionContrast);
		tagByName.put("DerivationCodeSequence",TagFromName.DerivationCodeSequence);
		tagByName.put("ReferencedPresentationStateSequence",TagFromName.ReferencedPresentationStateSequence);
		tagByName.put("ReferencedOtherPlaneSequence",TagFromName.ReferencedOtherPlaneSequence);
		tagByName.put("FrameDisplaySequence",TagFromName.FrameDisplaySequence);
		tagByName.put("RecommendedDisplayFrameRateInFloat",TagFromName.RecommendedDisplayFrameRateInFloat);
		tagByName.put("SkipFrameRangeFlag",TagFromName.SkipFrameRangeFlag);
		tagByName.put("PatientName",TagFromName.PatientName);
		tagByName.put("PatientID",TagFromName.PatientID);
		tagByName.put("IssuerOfPatientID",TagFromName.IssuerOfPatientID);
		tagByName.put("TypeOfPatientID",TagFromName.TypeOfPatientID);
		tagByName.put("IssuerOfPatientIDQualifiersSequence",TagFromName.IssuerOfPatientIDQualifiersSequence);
		tagByName.put("SourcePatientGroupIdentificationSequence",TagFromName.SourcePatientGroupIdentificationSequence);
		tagByName.put("GroupOfPatientsIdentificationSequence",TagFromName.GroupOfPatientsIdentificationSequence);
		tagByName.put("SubjectRelativePositionInImage",TagFromName.SubjectRelativePositionInImage);
		tagByName.put("PatientBirthDate",TagFromName.PatientBirthDate);
		tagByName.put("PatientBirthTime",TagFromName.PatientBirthTime);
		tagByName.put("PatientSex",TagFromName.PatientSex);
		tagByName.put("PatientInsurancePlanCodeSequence",TagFromName.PatientInsurancePlanCodeSequence);
		tagByName.put("PatientPrimaryLanguageCodeSequence",TagFromName.PatientPrimaryLanguageCodeSequence);
		tagByName.put("PatientPrimaryLanguageModifierCodeSequence",TagFromName.PatientPrimaryLanguageModifierCodeSequence);
		tagByName.put("QualityControlSubject",TagFromName.QualityControlSubject);
		tagByName.put("QualityControlSubjectTypeCodeSequence",TagFromName.QualityControlSubjectTypeCodeSequence);
		tagByName.put("StrainDescription",TagFromName.StrainDescription);
		tagByName.put("StrainNomenclature",TagFromName.StrainNomenclature);
		tagByName.put("StrainStockNumber",TagFromName.StrainStockNumber);
		tagByName.put("StrainSourceRegistryCodeSequence",TagFromName.StrainSourceRegistryCodeSequence);
		tagByName.put("StrainStockSequence",TagFromName.StrainStockSequence);
		tagByName.put("StrainSource",TagFromName.StrainSource);
		tagByName.put("StrainAdditionalInformation",TagFromName.StrainAdditionalInformation);
		tagByName.put("StrainCodeSequence",TagFromName.StrainCodeSequence);
		tagByName.put("GeneticModificationsSequence",TagFromName.GeneticModificationsSequence);
		tagByName.put("GeneticModificationsDescription",TagFromName.GeneticModificationsDescription);
		tagByName.put("GeneticModificationsNomenclature",TagFromName.GeneticModificationsNomenclature);
		tagByName.put("GeneticModificationsCodeSequence",TagFromName.GeneticModificationsCodeSequence);
		tagByName.put("OtherPatientIDs",TagFromName.OtherPatientIDs);
		tagByName.put("OtherPatientNames",TagFromName.OtherPatientNames);
		tagByName.put("OtherPatientIDsSequence",TagFromName.OtherPatientIDsSequence);
		tagByName.put("PatientBirthName",TagFromName.PatientBirthName);
		tagByName.put("PatientAge",TagFromName.PatientAge);
		tagByName.put("PatientSize",TagFromName.PatientSize);
		tagByName.put("PatientSizeCodeSequence",TagFromName.PatientSizeCodeSequence);
		tagByName.put("PatientBodyMassIndex",TagFromName.PatientBodyMassIndex);
		tagByName.put("MeasuredAPDimension",TagFromName.MeasuredAPDimension);
		tagByName.put("MeasuredLateralDimension",TagFromName.MeasuredLateralDimension);
		tagByName.put("PatientWeight",TagFromName.PatientWeight);
		tagByName.put("PatientAddress",TagFromName.PatientAddress);
		tagByName.put("InsurancePlanIdentification",TagFromName.InsurancePlanIdentification);
		tagByName.put("PatientMotherBirthName",TagFromName.PatientMotherBirthName);
		tagByName.put("MilitaryRank",TagFromName.MilitaryRank);
		tagByName.put("BranchOfService",TagFromName.BranchOfService);
		tagByName.put("MedicalRecordLocator",TagFromName.MedicalRecordLocator);
		tagByName.put("ReferencedPatientPhotoSequence",TagFromName.ReferencedPatientPhotoSequence);
		tagByName.put("MedicalAlerts",TagFromName.MedicalAlerts);
		tagByName.put("Allergies",TagFromName.Allergies);
		tagByName.put("CountryOfResidence",TagFromName.CountryOfResidence);
		tagByName.put("RegionOfResidence",TagFromName.RegionOfResidence);
		tagByName.put("PatientTelephoneNumbers",TagFromName.PatientTelephoneNumbers);
		tagByName.put("PatientTelecomInformation",TagFromName.PatientTelecomInformation);
		tagByName.put("EthnicGroup",TagFromName.EthnicGroup);
		tagByName.put("Occupation",TagFromName.Occupation);
		tagByName.put("SmokingStatus",TagFromName.SmokingStatus);
		tagByName.put("AdditionalPatientHistory",TagFromName.AdditionalPatientHistory);
		tagByName.put("PregnancyStatus",TagFromName.PregnancyStatus);
		tagByName.put("LastMenstrualDate",TagFromName.LastMenstrualDate);
		tagByName.put("PatientReligiousPreference",TagFromName.PatientReligiousPreference);
		tagByName.put("PatientSpeciesDescription",TagFromName.PatientSpeciesDescription);
		tagByName.put("PatientSpeciesCodeSequence",TagFromName.PatientSpeciesCodeSequence);
		tagByName.put("PatientSexNeutered",TagFromName.PatientSexNeutered);
		tagByName.put("AnatomicalOrientationType",TagFromName.AnatomicalOrientationType);
		tagByName.put("PatientBreedDescription",TagFromName.PatientBreedDescription);
		tagByName.put("PatientBreedCodeSequence",TagFromName.PatientBreedCodeSequence);
		tagByName.put("BreedRegistrationSequence",TagFromName.BreedRegistrationSequence);
		tagByName.put("BreedRegistrationNumber",TagFromName.BreedRegistrationNumber);
		tagByName.put("BreedRegistryCodeSequence",TagFromName.BreedRegistryCodeSequence);
		tagByName.put("ResponsiblePerson",TagFromName.ResponsiblePerson);
		tagByName.put("ResponsiblePersonRole",TagFromName.ResponsiblePersonRole);
		tagByName.put("ResponsibleOrganization",TagFromName.ResponsibleOrganization);
		tagByName.put("PatientComments",TagFromName.PatientComments);
		tagByName.put("ExaminedBodyThickness",TagFromName.ExaminedBodyThickness);
		tagByName.put("ClinicalTrialSponsorName",TagFromName.ClinicalTrialSponsorName);
		tagByName.put("ClinicalTrialProtocolID",TagFromName.ClinicalTrialProtocolID);
		tagByName.put("ClinicalTrialProtocolName",TagFromName.ClinicalTrialProtocolName);
		tagByName.put("ClinicalTrialSiteID",TagFromName.ClinicalTrialSiteID);
		tagByName.put("ClinicalTrialSiteName",TagFromName.ClinicalTrialSiteName);
		tagByName.put("ClinicalTrialSubjectID",TagFromName.ClinicalTrialSubjectID);
		tagByName.put("ClinicalTrialSubjectReadingID",TagFromName.ClinicalTrialSubjectReadingID);
		tagByName.put("ClinicalTrialTimePointID",TagFromName.ClinicalTrialTimePointID);
		tagByName.put("ClinicalTrialTimePointDescription",TagFromName.ClinicalTrialTimePointDescription);
		tagByName.put("LongitudinalTemporalOffsetFromEvent",TagFromName.LongitudinalTemporalOffsetFromEvent);
		tagByName.put("LongitudinalTemporalEventType",TagFromName.LongitudinalTemporalEventType);
		tagByName.put("ClinicalTrialCoordinatingCenterName",TagFromName.ClinicalTrialCoordinatingCenterName);
		tagByName.put("PatientIdentityRemoved",TagFromName.PatientIdentityRemoved);
		tagByName.put("DeidentificationMethod",TagFromName.DeidentificationMethod);
		tagByName.put("DeidentificationMethodCodeSequence",TagFromName.DeidentificationMethodCodeSequence);
		tagByName.put("ClinicalTrialSeriesID",TagFromName.ClinicalTrialSeriesID);
		tagByName.put("ClinicalTrialSeriesDescription",TagFromName.ClinicalTrialSeriesDescription);
		tagByName.put("ClinicalTrialProtocolEthicsCommitteeName",TagFromName.ClinicalTrialProtocolEthicsCommitteeName);
		tagByName.put("ClinicalTrialProtocolEthicsCommitteeApprovalNumber",TagFromName.ClinicalTrialProtocolEthicsCommitteeApprovalNumber);
		tagByName.put("ConsentForClinicalTrialUseSequence",TagFromName.ConsentForClinicalTrialUseSequence);
		tagByName.put("DistributionType",TagFromName.DistributionType);
		tagByName.put("ConsentForDistributionFlag",TagFromName.ConsentForDistributionFlag);
		tagByName.put("EthicsCommitteeApprovalEffectivenessStartDate",TagFromName.EthicsCommitteeApprovalEffectivenessStartDate);
		tagByName.put("EthicsCommitteeApprovalEffectivenessEndDate",TagFromName.EthicsCommitteeApprovalEffectivenessEndDate);
		tagByName.put("CADFileFormatRetired",TagFromName.CADFileFormatRetired);
		tagByName.put("ComponentReferenceSystemRetired",TagFromName.ComponentReferenceSystemRetired);
		tagByName.put("ComponentManufacturingProcedure",TagFromName.ComponentManufacturingProcedure);
		tagByName.put("ComponentManufacturer",TagFromName.ComponentManufacturer);
		tagByName.put("MaterialThickness",TagFromName.MaterialThickness);
		tagByName.put("MaterialPipeDiameter",TagFromName.MaterialPipeDiameter);
		tagByName.put("MaterialIsolationDiameter",TagFromName.MaterialIsolationDiameter);
		tagByName.put("MaterialGrade",TagFromName.MaterialGrade);
		tagByName.put("MaterialPropertiesDescription",TagFromName.MaterialPropertiesDescription);
		tagByName.put("MaterialPropertiesFileFormatRetired",TagFromName.MaterialPropertiesFileFormatRetired);
		tagByName.put("MaterialNotes",TagFromName.MaterialNotes);
		tagByName.put("ComponentShape",TagFromName.ComponentShape);
		tagByName.put("CurvatureType",TagFromName.CurvatureType);
		tagByName.put("OuterDiameter",TagFromName.OuterDiameter);
		tagByName.put("InnerDiameter",TagFromName.InnerDiameter);
		tagByName.put("ComponentWelderIDs",TagFromName.ComponentWelderIDs);
		tagByName.put("SecondaryApprovalStatus",TagFromName.SecondaryApprovalStatus);
		tagByName.put("SecondaryReviewDate",TagFromName.SecondaryReviewDate);
		tagByName.put("SecondaryReviewTime",TagFromName.SecondaryReviewTime);
		tagByName.put("SecondaryReviewerName",TagFromName.SecondaryReviewerName);
		tagByName.put("RepairID",TagFromName.RepairID);
		tagByName.put("MultipleComponentApprovalSequence",TagFromName.MultipleComponentApprovalSequence);
		tagByName.put("OtherApprovalStatus",TagFromName.OtherApprovalStatus);
		tagByName.put("OtherSecondaryApprovalStatus",TagFromName.OtherSecondaryApprovalStatus);
		tagByName.put("ActualEnvironmentalConditions",TagFromName.ActualEnvironmentalConditions);
		tagByName.put("ExpiryDate",TagFromName.ExpiryDate);
		tagByName.put("EnvironmentalConditions",TagFromName.EnvironmentalConditions);
		tagByName.put("EvaluatorSequence",TagFromName.EvaluatorSequence);
		tagByName.put("EvaluatorNumber",TagFromName.EvaluatorNumber);
		tagByName.put("EvaluatorName",TagFromName.EvaluatorName);
		tagByName.put("EvaluationAttempt",TagFromName.EvaluationAttempt);
		tagByName.put("IndicationSequence",TagFromName.IndicationSequence);
		tagByName.put("IndicationNumber",TagFromName.IndicationNumber);
		tagByName.put("IndicationLabel",TagFromName.IndicationLabel);
		tagByName.put("IndicationDescription",TagFromName.IndicationDescription);
		tagByName.put("IndicationType",TagFromName.IndicationType);
		tagByName.put("IndicationDisposition",TagFromName.IndicationDisposition);
		tagByName.put("IndicationROISequence",TagFromName.IndicationROISequence);
		tagByName.put("IndicationPhysicalPropertySequence",TagFromName.IndicationPhysicalPropertySequence);
		tagByName.put("PropertyLabel",TagFromName.PropertyLabel);
		tagByName.put("CoordinateSystemNumberOfAxes",TagFromName.CoordinateSystemNumberOfAxes);
		tagByName.put("CoordinateSystemAxesSequence",TagFromName.CoordinateSystemAxesSequence);
		tagByName.put("CoordinateSystemAxisDescription",TagFromName.CoordinateSystemAxisDescription);
		tagByName.put("CoordinateSystemDataSetMapping",TagFromName.CoordinateSystemDataSetMapping);
		tagByName.put("CoordinateSystemAxisNumber",TagFromName.CoordinateSystemAxisNumber);
		tagByName.put("CoordinateSystemAxisType",TagFromName.CoordinateSystemAxisType);
		tagByName.put("CoordinateSystemAxisUnits",TagFromName.CoordinateSystemAxisUnits);
		tagByName.put("CoordinateSystemAxisValues",TagFromName.CoordinateSystemAxisValues);
		tagByName.put("CoordinateSystemTransformSequence",TagFromName.CoordinateSystemTransformSequence);
		tagByName.put("TransformDescription",TagFromName.TransformDescription);
		tagByName.put("TransformNumberOfAxes",TagFromName.TransformNumberOfAxes);
		tagByName.put("TransformOrderOfAxes",TagFromName.TransformOrderOfAxes);
		tagByName.put("TransformedAxisUnits",TagFromName.TransformedAxisUnits);
		tagByName.put("CoordinateSystemTransformRotationAndScaleMatrix",TagFromName.CoordinateSystemTransformRotationAndScaleMatrix);
		tagByName.put("CoordinateSystemTransformTranslationMatrix",TagFromName.CoordinateSystemTransformTranslationMatrix);
		tagByName.put("InternalDetectorFrameTime",TagFromName.InternalDetectorFrameTime);
		tagByName.put("NumberOfFramesIntegrated",TagFromName.NumberOfFramesIntegrated);
		tagByName.put("DetectorTemperatureSequence",TagFromName.DetectorTemperatureSequence);
		tagByName.put("SensorName",TagFromName.SensorName);
		tagByName.put("HorizontalOffsetOfSensor",TagFromName.HorizontalOffsetOfSensor);
		tagByName.put("VerticalOffsetOfSensor",TagFromName.VerticalOffsetOfSensor);
		tagByName.put("SensorTemperature",TagFromName.SensorTemperature);
		tagByName.put("DarkCurrentSequence",TagFromName.DarkCurrentSequence);
		tagByName.put("DarkCurrentCounts",TagFromName.DarkCurrentCounts);
		tagByName.put("GainCorrectionReferenceSequence",TagFromName.GainCorrectionReferenceSequence);
		tagByName.put("AirCounts",TagFromName.AirCounts);
		tagByName.put("KVUsedInGainCalibration",TagFromName.KVUsedInGainCalibration);
		tagByName.put("MAUsedInGainCalibration",TagFromName.MAUsedInGainCalibration);
		tagByName.put("NumberOfFramesUsedForIntegration",TagFromName.NumberOfFramesUsedForIntegration);
		tagByName.put("FilterMaterialUsedInGainCalibration",TagFromName.FilterMaterialUsedInGainCalibration);
		tagByName.put("FilterThicknessUsedInGainCalibration",TagFromName.FilterThicknessUsedInGainCalibration);
		tagByName.put("DateOfGainCalibration",TagFromName.DateOfGainCalibration);
		tagByName.put("TimeOfGainCalibration",TagFromName.TimeOfGainCalibration);
		tagByName.put("BadPixelImage",TagFromName.BadPixelImage);
		tagByName.put("CalibrationNotes",TagFromName.CalibrationNotes);
		tagByName.put("PulserEquipmentSequence",TagFromName.PulserEquipmentSequence);
		tagByName.put("PulserType",TagFromName.PulserType);
		tagByName.put("PulserNotes",TagFromName.PulserNotes);
		tagByName.put("ReceiverEquipmentSequence",TagFromName.ReceiverEquipmentSequence);
		tagByName.put("AmplifierType",TagFromName.AmplifierType);
		tagByName.put("ReceiverNotes",TagFromName.ReceiverNotes);
		tagByName.put("PreAmplifierEquipmentSequence",TagFromName.PreAmplifierEquipmentSequence);
		tagByName.put("PreAmplifierNotes",TagFromName.PreAmplifierNotes);
		tagByName.put("TransmitTransducerSequence",TagFromName.TransmitTransducerSequence);
		tagByName.put("ReceiveTransducerSequence",TagFromName.ReceiveTransducerSequence);
		tagByName.put("NumberOfElements",TagFromName.NumberOfElements);
		tagByName.put("ElementShape",TagFromName.ElementShape);
		tagByName.put("ElementDimensionA",TagFromName.ElementDimensionA);
		tagByName.put("ElementDimensionB",TagFromName.ElementDimensionB);
		tagByName.put("ElementPitchA",TagFromName.ElementPitchA);
		tagByName.put("MeasuredBeamDimensionA",TagFromName.MeasuredBeamDimensionA);
		tagByName.put("MeasuredBeamDimensionB",TagFromName.MeasuredBeamDimensionB);
		tagByName.put("LocationOfMeasuredBeamDiameter",TagFromName.LocationOfMeasuredBeamDiameter);
		tagByName.put("NominalFrequency",TagFromName.NominalFrequency);
		tagByName.put("MeasuredCenterFrequency",TagFromName.MeasuredCenterFrequency);
		tagByName.put("MeasuredBandwidth",TagFromName.MeasuredBandwidth);
		tagByName.put("ElementPitchB",TagFromName.ElementPitchB);
		tagByName.put("PulserSettingsSequence",TagFromName.PulserSettingsSequence);
		tagByName.put("PulseWidth",TagFromName.PulseWidth);
		tagByName.put("ExcitationFrequency",TagFromName.ExcitationFrequency);
		tagByName.put("ModulationType",TagFromName.ModulationType);
		tagByName.put("Damping",TagFromName.Damping);
		tagByName.put("ReceiverSettingsSequence",TagFromName.ReceiverSettingsSequence);
		tagByName.put("AcquiredSoundpathLength",TagFromName.AcquiredSoundpathLength);
		tagByName.put("AcquisitionCompressionType",TagFromName.AcquisitionCompressionType);
		tagByName.put("AcquisitionSampleSize",TagFromName.AcquisitionSampleSize);
		tagByName.put("RectifierSmoothing",TagFromName.RectifierSmoothing);
		tagByName.put("DACSequence",TagFromName.DACSequence);
		tagByName.put("DACType",TagFromName.DACType);
		tagByName.put("DACGainPoints",TagFromName.DACGainPoints);
		tagByName.put("DACTimePoints",TagFromName.DACTimePoints);
		tagByName.put("DACAmplitude",TagFromName.DACAmplitude);
		tagByName.put("PreAmplifierSettingsSequence",TagFromName.PreAmplifierSettingsSequence);
		tagByName.put("TransmitTransducerSettingsSequence",TagFromName.TransmitTransducerSettingsSequence);
		tagByName.put("ReceiveTransducerSettingsSequence",TagFromName.ReceiveTransducerSettingsSequence);
		tagByName.put("IncidentAngle",TagFromName.IncidentAngle);
		tagByName.put("CouplingTechnique",TagFromName.CouplingTechnique);
		tagByName.put("CouplingMedium",TagFromName.CouplingMedium);
		tagByName.put("CouplingVelocity",TagFromName.CouplingVelocity);
		tagByName.put("ProbeCenterLocationX",TagFromName.ProbeCenterLocationX);
		tagByName.put("ProbeCenterLocationZ",TagFromName.ProbeCenterLocationZ);
		tagByName.put("SoundPathLength",TagFromName.SoundPathLength);
		tagByName.put("DelayLawIdentifier",TagFromName.DelayLawIdentifier);
		tagByName.put("GateSettingsSequence",TagFromName.GateSettingsSequence);
		tagByName.put("GateThreshold",TagFromName.GateThreshold);
		tagByName.put("VelocityOfSound",TagFromName.VelocityOfSound);
		tagByName.put("CalibrationSettingsSequence",TagFromName.CalibrationSettingsSequence);
		tagByName.put("CalibrationProcedure",TagFromName.CalibrationProcedure);
		tagByName.put("ProcedureVersion",TagFromName.ProcedureVersion);
		tagByName.put("ProcedureCreationDate",TagFromName.ProcedureCreationDate);
		tagByName.put("ProcedureExpirationDate",TagFromName.ProcedureExpirationDate);
		tagByName.put("ProcedureLastModifiedDate",TagFromName.ProcedureLastModifiedDate);
		tagByName.put("CalibrationTime",TagFromName.CalibrationTime);
		tagByName.put("CalibrationDate",TagFromName.CalibrationDate);
		tagByName.put("ProbeDriveEquipmentSequence",TagFromName.ProbeDriveEquipmentSequence);
		tagByName.put("DriveType",TagFromName.DriveType);
		tagByName.put("ProbeDriveNotes",TagFromName.ProbeDriveNotes);
		tagByName.put("DriveProbeSequence",TagFromName.DriveProbeSequence);
		tagByName.put("ProbeInductance",TagFromName.ProbeInductance);
		tagByName.put("ProbeResistance",TagFromName.ProbeResistance);
		tagByName.put("ReceiveProbeSequence",TagFromName.ReceiveProbeSequence);
		tagByName.put("ProbeDriveSettingsSequence",TagFromName.ProbeDriveSettingsSequence);
		tagByName.put("BridgeResistors",TagFromName.BridgeResistors);
		tagByName.put("ProbeOrientationAngle",TagFromName.ProbeOrientationAngle);
		tagByName.put("UserSelectedGainY",TagFromName.UserSelectedGainY);
		tagByName.put("UserSelectedPhase",TagFromName.UserSelectedPhase);
		tagByName.put("UserSelectedOffsetX",TagFromName.UserSelectedOffsetX);
		tagByName.put("UserSelectedOffsetY",TagFromName.UserSelectedOffsetY);
		tagByName.put("ChannelSettingsSequence",TagFromName.ChannelSettingsSequence);
		tagByName.put("ChannelThreshold",TagFromName.ChannelThreshold);
		tagByName.put("ScannerSettingsSequence",TagFromName.ScannerSettingsSequence);
		tagByName.put("ScanProcedure",TagFromName.ScanProcedure);
		tagByName.put("TranslationRateX",TagFromName.TranslationRateX);
		tagByName.put("TranslationRateY",TagFromName.TranslationRateY);
		tagByName.put("ChannelOverlap",TagFromName.ChannelOverlap);
		tagByName.put("ImageQualityIndicatorType",TagFromName.ImageQualityIndicatorType);
		tagByName.put("ImageQualityIndicatorMaterial",TagFromName.ImageQualityIndicatorMaterial);
		tagByName.put("ImageQualityIndicatorSize",TagFromName.ImageQualityIndicatorSize);
		tagByName.put("LINACEnergy",TagFromName.LINACEnergy);
		tagByName.put("LINACOutput",TagFromName.LINACOutput);
		tagByName.put("ActiveAperture",TagFromName.ActiveAperture);
		tagByName.put("TotalAperture",TagFromName.TotalAperture);
		tagByName.put("ApertureElevation",TagFromName.ApertureElevation);
		tagByName.put("MainLobeAngle",TagFromName.MainLobeAngle);
		tagByName.put("MainRoofAngle",TagFromName.MainRoofAngle);
		tagByName.put("ConnectorType",TagFromName.ConnectorType);
		tagByName.put("WedgeModelNumber",TagFromName.WedgeModelNumber);
		tagByName.put("WedgeAngleFloat",TagFromName.WedgeAngleFloat);
		tagByName.put("WedgeRoofAngle",TagFromName.WedgeRoofAngle);
		tagByName.put("WedgeElement1Position",TagFromName.WedgeElement1Position);
		tagByName.put("WedgeMaterialVelocity",TagFromName.WedgeMaterialVelocity);
		tagByName.put("WedgeMaterial",TagFromName.WedgeMaterial);
		tagByName.put("WedgeOffsetZ",TagFromName.WedgeOffsetZ);
		tagByName.put("WedgeOriginOffsetX",TagFromName.WedgeOriginOffsetX);
		tagByName.put("WedgeTimeDelay",TagFromName.WedgeTimeDelay);
		tagByName.put("WedgeName",TagFromName.WedgeName);
		tagByName.put("WedgeManufacturerName",TagFromName.WedgeManufacturerName);
		tagByName.put("WedgeDescription",TagFromName.WedgeDescription);
		tagByName.put("NominalBeamAngle",TagFromName.NominalBeamAngle);
		tagByName.put("WedgeOffsetX",TagFromName.WedgeOffsetX);
		tagByName.put("WedgeOffsetY",TagFromName.WedgeOffsetY);
		tagByName.put("WedgeTotalLength",TagFromName.WedgeTotalLength);
		tagByName.put("WedgeInContactLength",TagFromName.WedgeInContactLength);
		tagByName.put("WedgeFrontGap",TagFromName.WedgeFrontGap);
		tagByName.put("WedgeTotalHeight",TagFromName.WedgeTotalHeight);
		tagByName.put("WedgeFrontHeight",TagFromName.WedgeFrontHeight);
		tagByName.put("WedgeRearHeight",TagFromName.WedgeRearHeight);
		tagByName.put("WedgeTotalWidth",TagFromName.WedgeTotalWidth);
		tagByName.put("WedgeInContactWidth",TagFromName.WedgeInContactWidth);
		tagByName.put("WedgeChamferHeight",TagFromName.WedgeChamferHeight);
		tagByName.put("WedgeCurve",TagFromName.WedgeCurve);
		tagByName.put("RadiusAlongWedge",TagFromName.RadiusAlongWedge);
		tagByName.put("ContrastBolusAgent",TagFromName.ContrastBolusAgent);
		tagByName.put("ContrastBolusAgentSequence",TagFromName.ContrastBolusAgentSequence);
		tagByName.put("ContrastBolusT1Relaxivity",TagFromName.ContrastBolusT1Relaxivity);
		tagByName.put("ContrastBolusAdministrationRouteSequence",TagFromName.ContrastBolusAdministrationRouteSequence);
		tagByName.put("BodyPartExamined",TagFromName.BodyPartExamined);
		tagByName.put("ScanningSequence",TagFromName.ScanningSequence);
		tagByName.put("SequenceVariant",TagFromName.SequenceVariant);
		tagByName.put("ScanOptions",TagFromName.ScanOptions);
		tagByName.put("MRAcquisitionType",TagFromName.MRAcquisitionType);
		tagByName.put("SequenceName",TagFromName.SequenceName);
		tagByName.put("AngioFlag",TagFromName.AngioFlag);
		tagByName.put("InterventionDrugInformationSequence",TagFromName.InterventionDrugInformationSequence);
		tagByName.put("InterventionDrugStopTime",TagFromName.InterventionDrugStopTime);
		tagByName.put("InterventionDrugDose",TagFromName.InterventionDrugDose);
		tagByName.put("InterventionDrugCodeSequence",TagFromName.InterventionDrugCodeSequence);
		tagByName.put("AdditionalDrugSequence",TagFromName.AdditionalDrugSequence);
		tagByName.put("Radionuclide",TagFromName.Radionuclide);
		tagByName.put("Radiopharmaceutical",TagFromName.Radiopharmaceutical);
		tagByName.put("EnergyWindowCenterline",TagFromName.EnergyWindowCenterline);
		tagByName.put("EnergyWindowTotalWidth",TagFromName.EnergyWindowTotalWidth);
		tagByName.put("InterventionDrugName",TagFromName.InterventionDrugName);
		tagByName.put("InterventionDrugStartTime",TagFromName.InterventionDrugStartTime);
		tagByName.put("InterventionSequence",TagFromName.InterventionSequence);
		tagByName.put("TherapyType",TagFromName.TherapyType);
		tagByName.put("InterventionStatus",TagFromName.InterventionStatus);
		tagByName.put("TherapyDescription",TagFromName.TherapyDescription);
		tagByName.put("InterventionDescription",TagFromName.InterventionDescription);
		tagByName.put("CineRate",TagFromName.CineRate);
		tagByName.put("InitialCineRunState",TagFromName.InitialCineRunState);
		tagByName.put("SliceThickness",TagFromName.SliceThickness);
		tagByName.put("KVP",TagFromName.KVP);
		tagByName.put("CountsAccumulated",TagFromName.CountsAccumulated);
		tagByName.put("AcquisitionTerminationCondition",TagFromName.AcquisitionTerminationCondition);
		tagByName.put("EffectiveDuration",TagFromName.EffectiveDuration);
		tagByName.put("AcquisitionStartCondition",TagFromName.AcquisitionStartCondition);
		tagByName.put("AcquisitionStartConditionData",TagFromName.AcquisitionStartConditionData);
		tagByName.put("AcquisitionTerminationConditionData",TagFromName.AcquisitionTerminationConditionData);
		tagByName.put("RepetitionTime",TagFromName.RepetitionTime);
		tagByName.put("EchoTime",TagFromName.EchoTime);
		tagByName.put("InversionTime",TagFromName.InversionTime);
		tagByName.put("NumberOfAverages",TagFromName.NumberOfAverages);
		tagByName.put("ImagingFrequency",TagFromName.ImagingFrequency);
		tagByName.put("ImagedNucleus",TagFromName.ImagedNucleus);
		tagByName.put("EchoNumbers",TagFromName.EchoNumbers);
		tagByName.put("MagneticFieldStrength",TagFromName.MagneticFieldStrength);
		tagByName.put("SpacingBetweenSlices",TagFromName.SpacingBetweenSlices);
		tagByName.put("NumberOfPhaseEncodingSteps",TagFromName.NumberOfPhaseEncodingSteps);
		tagByName.put("DataCollectionDiameter",TagFromName.DataCollectionDiameter);
		tagByName.put("EchoTrainLength",TagFromName.EchoTrainLength);
		tagByName.put("PercentSampling",TagFromName.PercentSampling);
		tagByName.put("PercentPhaseFieldOfView",TagFromName.PercentPhaseFieldOfView);
		tagByName.put("PixelBandwidth",TagFromName.PixelBandwidth);
		tagByName.put("DeviceSerialNumber",TagFromName.DeviceSerialNumber);
		tagByName.put("DeviceUID",TagFromName.DeviceUID);
		tagByName.put("DeviceID",TagFromName.DeviceID);
		tagByName.put("PlateID",TagFromName.PlateID);
		tagByName.put("GeneratorID",TagFromName.GeneratorID);
		tagByName.put("GridID",TagFromName.GridID);
		tagByName.put("CassetteID",TagFromName.CassetteID);
		tagByName.put("GantryID",TagFromName.GantryID);
		tagByName.put("UniqueDeviceIdentifier",TagFromName.UniqueDeviceIdentifier);
		tagByName.put("UDISequence",TagFromName.UDISequence);
		tagByName.put("SecondaryCaptureDeviceID",TagFromName.SecondaryCaptureDeviceID);
		tagByName.put("HardcopyCreationDeviceID",TagFromName.HardcopyCreationDeviceID);
		tagByName.put("DateOfSecondaryCapture",TagFromName.DateOfSecondaryCapture);
		tagByName.put("TimeOfSecondaryCapture",TagFromName.TimeOfSecondaryCapture);
		tagByName.put("SecondaryCaptureDeviceManufacturer",TagFromName.SecondaryCaptureDeviceManufacturer);
		tagByName.put("HardcopyDeviceManufacturer",TagFromName.HardcopyDeviceManufacturer);
		tagByName.put("SecondaryCaptureDeviceManufacturerModelName",TagFromName.SecondaryCaptureDeviceManufacturerModelName);
		tagByName.put("SecondaryCaptureDeviceSoftwareVersions",TagFromName.SecondaryCaptureDeviceSoftwareVersions);
		tagByName.put("HardcopyDeviceSoftwareVersion",TagFromName.HardcopyDeviceSoftwareVersion);
		tagByName.put("HardcopyDeviceManufacturerModelName",TagFromName.HardcopyDeviceManufacturerModelName);
		tagByName.put("SoftwareVersions",TagFromName.SoftwareVersions);
		tagByName.put("VideoImageFormatAcquired",TagFromName.VideoImageFormatAcquired);
		tagByName.put("DigitalImageFormatAcquired",TagFromName.DigitalImageFormatAcquired);
		tagByName.put("ProtocolName",TagFromName.ProtocolName);
		tagByName.put("ContrastBolusRoute",TagFromName.ContrastBolusRoute);
		tagByName.put("ContrastBolusVolume",TagFromName.ContrastBolusVolume);
		tagByName.put("ContrastBolusStartTime",TagFromName.ContrastBolusStartTime);
		tagByName.put("ContrastBolusStopTime",TagFromName.ContrastBolusStopTime);
		tagByName.put("ContrastBolusTotalDose",TagFromName.ContrastBolusTotalDose);
		tagByName.put("SyringeCounts",TagFromName.SyringeCounts);
		tagByName.put("ContrastFlowRate",TagFromName.ContrastFlowRate);
		tagByName.put("ContrastFlowDuration",TagFromName.ContrastFlowDuration);
		tagByName.put("ContrastBolusIngredient",TagFromName.ContrastBolusIngredient);
		tagByName.put("ContrastBolusIngredientConcentration",TagFromName.ContrastBolusIngredientConcentration);
		tagByName.put("SpatialResolution",TagFromName.SpatialResolution);
		tagByName.put("TriggerTime",TagFromName.TriggerTime);
		tagByName.put("TriggerSourceOrType",TagFromName.TriggerSourceOrType);
		tagByName.put("NominalInterval",TagFromName.NominalInterval);
		tagByName.put("FrameTime",TagFromName.FrameTime);
		tagByName.put("CardiacFramingType",TagFromName.CardiacFramingType);
		tagByName.put("FrameTimeVector",TagFromName.FrameTimeVector);
		tagByName.put("FrameDelay",TagFromName.FrameDelay);
		tagByName.put("ImageTriggerDelay",TagFromName.ImageTriggerDelay);
		tagByName.put("MultiplexGroupTimeOffset",TagFromName.MultiplexGroupTimeOffset);
		tagByName.put("TriggerTimeOffset",TagFromName.TriggerTimeOffset);
		tagByName.put("SynchronizationTrigger",TagFromName.SynchronizationTrigger);
		tagByName.put("SynchronizationChannel",TagFromName.SynchronizationChannel);
		tagByName.put("TriggerSamplePosition",TagFromName.TriggerSamplePosition);
		tagByName.put("RadiopharmaceuticalRoute",TagFromName.RadiopharmaceuticalRoute);
		tagByName.put("RadiopharmaceuticalVolume",TagFromName.RadiopharmaceuticalVolume);
		tagByName.put("RadiopharmaceuticalStartTime",TagFromName.RadiopharmaceuticalStartTime);
		tagByName.put("RadiopharmaceuticalStopTime",TagFromName.RadiopharmaceuticalStopTime);
		tagByName.put("RadionuclideTotalDose",TagFromName.RadionuclideTotalDose);
		tagByName.put("RadionuclideHalfLife",TagFromName.RadionuclideHalfLife);
		tagByName.put("RadionuclidePositronFraction",TagFromName.RadionuclidePositronFraction);
		tagByName.put("RadiopharmaceuticalSpecificActivity",TagFromName.RadiopharmaceuticalSpecificActivity);
		tagByName.put("RadiopharmaceuticalStartDateTime",TagFromName.RadiopharmaceuticalStartDateTime);
		tagByName.put("RadiopharmaceuticalStopDateTime",TagFromName.RadiopharmaceuticalStopDateTime);
		tagByName.put("BeatRejectionFlag",TagFromName.BeatRejectionFlag);
		tagByName.put("LowRRValue",TagFromName.LowRRValue);
		tagByName.put("HighRRValue",TagFromName.HighRRValue);
		tagByName.put("IntervalsAcquired",TagFromName.IntervalsAcquired);
		tagByName.put("IntervalsRejected",TagFromName.IntervalsRejected);
		tagByName.put("PVCRejection",TagFromName.PVCRejection);
		tagByName.put("SkipBeats",TagFromName.SkipBeats);
		tagByName.put("HeartRate",TagFromName.HeartRate);
		tagByName.put("CardiacNumberOfImages",TagFromName.CardiacNumberOfImages);
		tagByName.put("TriggerWindow",TagFromName.TriggerWindow);
		tagByName.put("ReconstructionDiameter",TagFromName.ReconstructionDiameter);
		tagByName.put("DistanceSourceToDetector",TagFromName.DistanceSourceToDetector);
		tagByName.put("DistanceSourceToPatient",TagFromName.DistanceSourceToPatient);
		tagByName.put("EstimatedRadiographicMagnificationFactor",TagFromName.EstimatedRadiographicMagnificationFactor);
		tagByName.put("GantryDetectorTilt",TagFromName.GantryDetectorTilt);
		tagByName.put("GantryDetectorSlew",TagFromName.GantryDetectorSlew);
		tagByName.put("TableHeight",TagFromName.TableHeight);
		tagByName.put("TableTraverse",TagFromName.TableTraverse);
		tagByName.put("TableMotion",TagFromName.TableMotion);
		tagByName.put("TableVerticalIncrement",TagFromName.TableVerticalIncrement);
		tagByName.put("TableLateralIncrement",TagFromName.TableLateralIncrement);
		tagByName.put("TableLongitudinalIncrement",TagFromName.TableLongitudinalIncrement);
		tagByName.put("TableAngle",TagFromName.TableAngle);
		tagByName.put("TableType",TagFromName.TableType);
		tagByName.put("RotationDirection",TagFromName.RotationDirection);
		tagByName.put("AngularPosition",TagFromName.AngularPosition);
		tagByName.put("RadialPosition",TagFromName.RadialPosition);
		tagByName.put("ScanArc",TagFromName.ScanArc);
		tagByName.put("AngularStep",TagFromName.AngularStep);
		tagByName.put("CenterOfRotationOffset",TagFromName.CenterOfRotationOffset);
		tagByName.put("RotationOffset",TagFromName.RotationOffset);
		tagByName.put("FieldOfViewShape",TagFromName.FieldOfViewShape);
		tagByName.put("FieldOfViewDimensions",TagFromName.FieldOfViewDimensions);
		tagByName.put("ExposureTime",TagFromName.ExposureTime);
		tagByName.put("XRayTubeCurrent",TagFromName.XRayTubeCurrent);
		tagByName.put("Exposure",TagFromName.Exposure);
		tagByName.put("ExposureInuAs",TagFromName.ExposureInuAs);
		tagByName.put("AveragePulseWidth",TagFromName.AveragePulseWidth);
		tagByName.put("RadiationSetting",TagFromName.RadiationSetting);
		tagByName.put("RectificationType",TagFromName.RectificationType);
		tagByName.put("RadiationMode",TagFromName.RadiationMode);
		tagByName.put("ImageAndFluoroscopyAreaDoseProduct",TagFromName.ImageAndFluoroscopyAreaDoseProduct);
		tagByName.put("FilterType",TagFromName.FilterType);
		tagByName.put("TypeOfFilters",TagFromName.TypeOfFilters);
		tagByName.put("IntensifierSize",TagFromName.IntensifierSize);
		tagByName.put("ImagerPixelSpacing",TagFromName.ImagerPixelSpacing);
		tagByName.put("Grid",TagFromName.Grid);
		tagByName.put("GeneratorPower",TagFromName.GeneratorPower);
		tagByName.put("CollimatorGridName",TagFromName.CollimatorGridName);
		tagByName.put("CollimatorType",TagFromName.CollimatorType);
		tagByName.put("FocalDistance",TagFromName.FocalDistance);
		tagByName.put("XFocusCenter",TagFromName.XFocusCenter);
		tagByName.put("YFocusCenter",TagFromName.YFocusCenter);
		tagByName.put("FocalSpots",TagFromName.FocalSpots);
		tagByName.put("AnodeTargetMaterial",TagFromName.AnodeTargetMaterial);
		tagByName.put("BodyPartThickness",TagFromName.BodyPartThickness);
		tagByName.put("CompressionForce",TagFromName.CompressionForce);
		tagByName.put("CompressionPressure",TagFromName.CompressionPressure);
		tagByName.put("PaddleDescription",TagFromName.PaddleDescription);
		tagByName.put("CompressionContactArea",TagFromName.CompressionContactArea);
		tagByName.put("DateOfLastCalibration",TagFromName.DateOfLastCalibration);
		tagByName.put("TimeOfLastCalibration",TagFromName.TimeOfLastCalibration);
		tagByName.put("DateTimeOfLastCalibration",TagFromName.DateTimeOfLastCalibration);
		tagByName.put("ConvolutionKernel",TagFromName.ConvolutionKernel);
		tagByName.put("UpperLowerPixelValues",TagFromName.UpperLowerPixelValues);
		tagByName.put("ActualFrameDuration",TagFromName.ActualFrameDuration);
		tagByName.put("CountRate",TagFromName.CountRate);
		tagByName.put("PreferredPlaybackSequencing",TagFromName.PreferredPlaybackSequencing);
		tagByName.put("ReceiveCoilName",TagFromName.ReceiveCoilName);
		tagByName.put("TransmitCoilName",TagFromName.TransmitCoilName);
		tagByName.put("PlateType",TagFromName.PlateType);
		tagByName.put("PhosphorType",TagFromName.PhosphorType);
		tagByName.put("WaterEquivalentDiameter",TagFromName.WaterEquivalentDiameter);
		tagByName.put("WaterEquivalentDiameterCalculationMethodCodeSequence",TagFromName.WaterEquivalentDiameterCalculationMethodCodeSequence);
		tagByName.put("ScanVelocity",TagFromName.ScanVelocity);
		tagByName.put("WholeBodyTechnique",TagFromName.WholeBodyTechnique);
		tagByName.put("ScanLength",TagFromName.ScanLength);
		tagByName.put("AcquisitionMatrix",TagFromName.AcquisitionMatrix);
		tagByName.put("InPlanePhaseEncodingDirection",TagFromName.InPlanePhaseEncodingDirection);
		tagByName.put("FlipAngle",TagFromName.FlipAngle);
		tagByName.put("VariableFlipAngleFlag",TagFromName.VariableFlipAngleFlag);
		tagByName.put("SAR",TagFromName.SAR);
		tagByName.put("dBdt",TagFromName.dBdt);
		tagByName.put("B1rms",TagFromName.B1rms);
		tagByName.put("AcquisitionDeviceProcessingDescription",TagFromName.AcquisitionDeviceProcessingDescription);
		tagByName.put("AcquisitionDeviceProcessingCode",TagFromName.AcquisitionDeviceProcessingCode);
		tagByName.put("CassetteOrientation",TagFromName.CassetteOrientation);
		tagByName.put("CassetteSize",TagFromName.CassetteSize);
		tagByName.put("ExposuresOnPlate",TagFromName.ExposuresOnPlate);
		tagByName.put("RelativeXRayExposure",TagFromName.RelativeXRayExposure);
		tagByName.put("ExposureIndex",TagFromName.ExposureIndex);
		tagByName.put("TargetExposureIndex",TagFromName.TargetExposureIndex);
		tagByName.put("DeviationIndex",TagFromName.DeviationIndex);
		tagByName.put("ColumnAngulation",TagFromName.ColumnAngulation);
		tagByName.put("TomoLayerHeight",TagFromName.TomoLayerHeight);
		tagByName.put("TomoAngle",TagFromName.TomoAngle);
		tagByName.put("TomoTime",TagFromName.TomoTime);
		tagByName.put("TomoType",TagFromName.TomoType);
		tagByName.put("TomoClass",TagFromName.TomoClass);
		tagByName.put("NumberOfTomosynthesisSourceImages",TagFromName.NumberOfTomosynthesisSourceImages);
		tagByName.put("PositionerMotion",TagFromName.PositionerMotion);
		tagByName.put("PositionerType",TagFromName.PositionerType);
		tagByName.put("PositionerPrimaryAngle",TagFromName.PositionerPrimaryAngle);
		tagByName.put("PositionerSecondaryAngle",TagFromName.PositionerSecondaryAngle);
		tagByName.put("PositionerPrimaryAngleIncrement",TagFromName.PositionerPrimaryAngleIncrement);
		tagByName.put("PositionerSecondaryAngleIncrement",TagFromName.PositionerSecondaryAngleIncrement);
		tagByName.put("DetectorPrimaryAngle",TagFromName.DetectorPrimaryAngle);
		tagByName.put("DetectorSecondaryAngle",TagFromName.DetectorSecondaryAngle);
		tagByName.put("ShutterShape",TagFromName.ShutterShape);
		tagByName.put("ShutterLeftVerticalEdge",TagFromName.ShutterLeftVerticalEdge);
		tagByName.put("ShutterRightVerticalEdge",TagFromName.ShutterRightVerticalEdge);
		tagByName.put("ShutterUpperHorizontalEdge",TagFromName.ShutterUpperHorizontalEdge);
		tagByName.put("ShutterLowerHorizontalEdge",TagFromName.ShutterLowerHorizontalEdge);
		tagByName.put("CenterOfCircularShutter",TagFromName.CenterOfCircularShutter);
		tagByName.put("RadiusOfCircularShutter",TagFromName.RadiusOfCircularShutter);
		tagByName.put("VerticesOfThePolygonalShutter",TagFromName.VerticesOfThePolygonalShutter);
		tagByName.put("ShutterPresentationValue",TagFromName.ShutterPresentationValue);
		tagByName.put("ShutterOverlayGroup",TagFromName.ShutterOverlayGroup);
		tagByName.put("ShutterPresentationColorCIELabValue",TagFromName.ShutterPresentationColorCIELabValue);
		tagByName.put("CollimatorShape",TagFromName.CollimatorShape);
		tagByName.put("CollimatorLeftVerticalEdge",TagFromName.CollimatorLeftVerticalEdge);
		tagByName.put("CollimatorRightVerticalEdge",TagFromName.CollimatorRightVerticalEdge);
		tagByName.put("CollimatorUpperHorizontalEdge",TagFromName.CollimatorUpperHorizontalEdge);
		tagByName.put("CollimatorLowerHorizontalEdge",TagFromName.CollimatorLowerHorizontalEdge);
		tagByName.put("CenterOfCircularCollimator",TagFromName.CenterOfCircularCollimator);
		tagByName.put("RadiusOfCircularCollimator",TagFromName.RadiusOfCircularCollimator);
		tagByName.put("VerticesOfThePolygonalCollimator",TagFromName.VerticesOfThePolygonalCollimator);
		tagByName.put("AcquisitionTimeSynchronized",TagFromName.AcquisitionTimeSynchronized);
		tagByName.put("TimeSource",TagFromName.TimeSource);
		tagByName.put("TimeDistributionProtocol",TagFromName.TimeDistributionProtocol);
		tagByName.put("NTPSourceAddress",TagFromName.NTPSourceAddress);
		tagByName.put("PageNumberVector",TagFromName.PageNumberVector);
		tagByName.put("FrameLabelVector",TagFromName.FrameLabelVector);
		tagByName.put("FramePrimaryAngleVector",TagFromName.FramePrimaryAngleVector);
		tagByName.put("FrameSecondaryAngleVector",TagFromName.FrameSecondaryAngleVector);
		tagByName.put("SliceLocationVector",TagFromName.SliceLocationVector);
		tagByName.put("DisplayWindowLabelVector",TagFromName.DisplayWindowLabelVector);
		tagByName.put("NominalScannedPixelSpacing",TagFromName.NominalScannedPixelSpacing);
		tagByName.put("DigitizingDeviceTransportDirection",TagFromName.DigitizingDeviceTransportDirection);
		tagByName.put("RotationOfScannedFilm",TagFromName.RotationOfScannedFilm);
		tagByName.put("BiopsyTargetSequence",TagFromName.BiopsyTargetSequence);
		tagByName.put("TargetUID",TagFromName.TargetUID);
		tagByName.put("LocalizingCursorPosition",TagFromName.LocalizingCursorPosition);
		tagByName.put("CalculatedTargetPosition",TagFromName.CalculatedTargetPosition);
		tagByName.put("TargetLabel",TagFromName.TargetLabel);
		tagByName.put("DisplayedZValue",TagFromName.DisplayedZValue);
		tagByName.put("IVUSAcquisition",TagFromName.IVUSAcquisition);
		tagByName.put("IVUSPullbackRate",TagFromName.IVUSPullbackRate);
		tagByName.put("IVUSGatedRate",TagFromName.IVUSGatedRate);
		tagByName.put("IVUSPullbackStartFrameNumber",TagFromName.IVUSPullbackStartFrameNumber);
		tagByName.put("IVUSPullbackStopFrameNumber",TagFromName.IVUSPullbackStopFrameNumber);
		tagByName.put("LesionNumber",TagFromName.LesionNumber);
		tagByName.put("AcquisitionComments",TagFromName.AcquisitionComments);
		tagByName.put("OutputPower",TagFromName.OutputPower);
		tagByName.put("TransducerData",TagFromName.TransducerData);
		tagByName.put("FocusDepth",TagFromName.FocusDepth);
		tagByName.put("ProcessingFunction",TagFromName.ProcessingFunction);
		tagByName.put("PostprocessingFunction",TagFromName.PostprocessingFunction);
		tagByName.put("MechanicalIndex",TagFromName.MechanicalIndex);
		tagByName.put("BoneThermalIndex",TagFromName.BoneThermalIndex);
		tagByName.put("CranialThermalIndex",TagFromName.CranialThermalIndex);
		tagByName.put("SoftTissueThermalIndex",TagFromName.SoftTissueThermalIndex);
		tagByName.put("SoftTissueFocusThermalIndex",TagFromName.SoftTissueFocusThermalIndex);
		tagByName.put("SoftTissueSurfaceThermalIndex",TagFromName.SoftTissueSurfaceThermalIndex);
		tagByName.put("DynamicRange",TagFromName.DynamicRange);
		tagByName.put("TotalGain",TagFromName.TotalGain);
		tagByName.put("DepthOfScanField",TagFromName.DepthOfScanField);
		tagByName.put("PatientPosition",TagFromName.PatientPosition);
		tagByName.put("ViewPosition",TagFromName.ViewPosition);
		tagByName.put("ProjectionEponymousNameCodeSequence",TagFromName.ProjectionEponymousNameCodeSequence);
		tagByName.put("ImageTransformationMatrix",TagFromName.ImageTransformationMatrix);
		tagByName.put("ImageTranslationVector",TagFromName.ImageTranslationVector);
		tagByName.put("Sensitivity",TagFromName.Sensitivity);
		tagByName.put("SequenceOfUltrasoundRegions",TagFromName.SequenceOfUltrasoundRegions);
		tagByName.put("RegionSpatialFormat",TagFromName.RegionSpatialFormat);
		tagByName.put("RegionDataType",TagFromName.RegionDataType);
		tagByName.put("RegionFlags",TagFromName.RegionFlags);
		tagByName.put("RegionLocationMinX0",TagFromName.RegionLocationMinX0);
		tagByName.put("RegionLocationMinY0",TagFromName.RegionLocationMinY0);
		tagByName.put("RegionLocationMaxX1",TagFromName.RegionLocationMaxX1);
		tagByName.put("RegionLocationMaxY1",TagFromName.RegionLocationMaxY1);
		tagByName.put("ReferencePixelX0",TagFromName.ReferencePixelX0);
		tagByName.put("ReferencePixelY0",TagFromName.ReferencePixelY0);
		tagByName.put("PhysicalUnitsXDirection",TagFromName.PhysicalUnitsXDirection);
		tagByName.put("PhysicalUnitsYDirection",TagFromName.PhysicalUnitsYDirection);
		tagByName.put("ReferencePixelPhysicalValueX",TagFromName.ReferencePixelPhysicalValueX);
		tagByName.put("ReferencePixelPhysicalValueY",TagFromName.ReferencePixelPhysicalValueY);
		tagByName.put("PhysicalDeltaX",TagFromName.PhysicalDeltaX);
		tagByName.put("PhysicalDeltaY",TagFromName.PhysicalDeltaY);
		tagByName.put("TransducerFrequency",TagFromName.TransducerFrequency);
		tagByName.put("TransducerType",TagFromName.TransducerType);
		tagByName.put("PulseRepetitionFrequency",TagFromName.PulseRepetitionFrequency);
		tagByName.put("DopplerCorrectionAngle",TagFromName.DopplerCorrectionAngle);
		tagByName.put("SteeringAngle",TagFromName.SteeringAngle);
		tagByName.put("DopplerSampleVolumeXPositionRetired",TagFromName.DopplerSampleVolumeXPositionRetired);
		tagByName.put("DopplerSampleVolumeXPosition",TagFromName.DopplerSampleVolumeXPosition);
		tagByName.put("DopplerSampleVolumeYPositionRetired",TagFromName.DopplerSampleVolumeYPositionRetired);
		tagByName.put("DopplerSampleVolumeYPosition",TagFromName.DopplerSampleVolumeYPosition);
		tagByName.put("TMLinePositionX0Retired",TagFromName.TMLinePositionX0Retired);
		tagByName.put("TMLinePositionX0",TagFromName.TMLinePositionX0);
		tagByName.put("TMLinePositionY0Retired",TagFromName.TMLinePositionY0Retired);
		tagByName.put("TMLinePositionY0",TagFromName.TMLinePositionY0);
		tagByName.put("TMLinePositionX1Retired",TagFromName.TMLinePositionX1Retired);
		tagByName.put("TMLinePositionX1",TagFromName.TMLinePositionX1);
		tagByName.put("TMLinePositionY1Retired",TagFromName.TMLinePositionY1Retired);
		tagByName.put("TMLinePositionY1",TagFromName.TMLinePositionY1);
		tagByName.put("PixelComponentOrganization",TagFromName.PixelComponentOrganization);
		tagByName.put("PixelComponentMask",TagFromName.PixelComponentMask);
		tagByName.put("PixelComponentRangeStart",TagFromName.PixelComponentRangeStart);
		tagByName.put("PixelComponentRangeStop",TagFromName.PixelComponentRangeStop);
		tagByName.put("PixelComponentPhysicalUnits",TagFromName.PixelComponentPhysicalUnits);
		tagByName.put("PixelComponentDataType",TagFromName.PixelComponentDataType);
		tagByName.put("NumberOfTableBreakPoints",TagFromName.NumberOfTableBreakPoints);
		tagByName.put("TableOfXBreakPoints",TagFromName.TableOfXBreakPoints);
		tagByName.put("TableOfYBreakPoints",TagFromName.TableOfYBreakPoints);
		tagByName.put("NumberOfTableEntries",TagFromName.NumberOfTableEntries);
		tagByName.put("TableOfPixelValues",TagFromName.TableOfPixelValues);
		tagByName.put("TableOfParameterValues",TagFromName.TableOfParameterValues);
		tagByName.put("RWaveTimeVector",TagFromName.RWaveTimeVector);
		tagByName.put("DetectorConditionsNominalFlag",TagFromName.DetectorConditionsNominalFlag);
		tagByName.put("DetectorTemperature",TagFromName.DetectorTemperature);
		tagByName.put("DetectorType",TagFromName.DetectorType);
		tagByName.put("DetectorConfiguration",TagFromName.DetectorConfiguration);
		tagByName.put("DetectorDescription",TagFromName.DetectorDescription);
		tagByName.put("DetectorMode",TagFromName.DetectorMode);
		tagByName.put("DetectorID",TagFromName.DetectorID);
		tagByName.put("DateOfLastDetectorCalibration",TagFromName.DateOfLastDetectorCalibration);
		tagByName.put("TimeOfLastDetectorCalibration",TagFromName.TimeOfLastDetectorCalibration);
		tagByName.put("ExposuresOnDetectorSinceLastCalibration",TagFromName.ExposuresOnDetectorSinceLastCalibration);
		tagByName.put("ExposuresOnDetectorSinceManufactured",TagFromName.ExposuresOnDetectorSinceManufactured);
		tagByName.put("DetectorTimeSinceLastExposure",TagFromName.DetectorTimeSinceLastExposure);
		tagByName.put("DetectorActiveTime",TagFromName.DetectorActiveTime);
		tagByName.put("DetectorActivationOffsetFromExposure",TagFromName.DetectorActivationOffsetFromExposure);
		tagByName.put("DetectorBinning",TagFromName.DetectorBinning);
		tagByName.put("DetectorElementPhysicalSize",TagFromName.DetectorElementPhysicalSize);
		tagByName.put("DetectorElementSpacing",TagFromName.DetectorElementSpacing);
		tagByName.put("DetectorActiveShape",TagFromName.DetectorActiveShape);
		tagByName.put("DetectorActiveDimensions",TagFromName.DetectorActiveDimensions);
		tagByName.put("DetectorActiveOrigin",TagFromName.DetectorActiveOrigin);
		tagByName.put("DetectorManufacturerName",TagFromName.DetectorManufacturerName);
		tagByName.put("DetectorManufacturerModelName",TagFromName.DetectorManufacturerModelName);
		tagByName.put("FieldOfViewOrigin",TagFromName.FieldOfViewOrigin);
		tagByName.put("FieldOfViewRotation",TagFromName.FieldOfViewRotation);
		tagByName.put("FieldOfViewHorizontalFlip",TagFromName.FieldOfViewHorizontalFlip);
		tagByName.put("PixelDataAreaOriginRelativeToFOV",TagFromName.PixelDataAreaOriginRelativeToFOV);
		tagByName.put("PixelDataAreaRotationAngleRelativeToFOV",TagFromName.PixelDataAreaRotationAngleRelativeToFOV);
		tagByName.put("GridAbsorbingMaterial",TagFromName.GridAbsorbingMaterial);
		tagByName.put("GridSpacingMaterial",TagFromName.GridSpacingMaterial);
		tagByName.put("GridThickness",TagFromName.GridThickness);
		tagByName.put("GridPitch",TagFromName.GridPitch);
		tagByName.put("GridAspectRatio",TagFromName.GridAspectRatio);
		tagByName.put("GridPeriod",TagFromName.GridPeriod);
		tagByName.put("GridFocalDistance",TagFromName.GridFocalDistance);
		tagByName.put("FilterMaterial",TagFromName.FilterMaterial);
		tagByName.put("FilterThicknessMinimum",TagFromName.FilterThicknessMinimum);
		tagByName.put("FilterThicknessMaximum",TagFromName.FilterThicknessMaximum);
		tagByName.put("FilterBeamPathLengthMinimum",TagFromName.FilterBeamPathLengthMinimum);
		tagByName.put("FilterBeamPathLengthMaximum",TagFromName.FilterBeamPathLengthMaximum);
		tagByName.put("ExposureControlMode",TagFromName.ExposureControlMode);
		tagByName.put("ExposureControlModeDescription",TagFromName.ExposureControlModeDescription);
		tagByName.put("ExposureStatus",TagFromName.ExposureStatus);
		tagByName.put("PhototimerSetting",TagFromName.PhototimerSetting);
		tagByName.put("ExposureTimeInuS",TagFromName.ExposureTimeInuS);
		tagByName.put("XRayTubeCurrentInuA",TagFromName.XRayTubeCurrentInuA);
		tagByName.put("ContentQualification",TagFromName.ContentQualification);
		tagByName.put("PulseSequenceName",TagFromName.PulseSequenceName);
		tagByName.put("MRImagingModifierSequence",TagFromName.MRImagingModifierSequence);
		tagByName.put("EchoPulseSequence",TagFromName.EchoPulseSequence);
		tagByName.put("InversionRecovery",TagFromName.InversionRecovery);
		tagByName.put("FlowCompensation",TagFromName.FlowCompensation);
		tagByName.put("MultipleSpinEcho",TagFromName.MultipleSpinEcho);
		tagByName.put("MultiPlanarExcitation",TagFromName.MultiPlanarExcitation);
		tagByName.put("PhaseContrast",TagFromName.PhaseContrast);
		tagByName.put("TimeOfFlightContrast",TagFromName.TimeOfFlightContrast);
		tagByName.put("Spoiling",TagFromName.Spoiling);
		tagByName.put("SteadyStatePulseSequence",TagFromName.SteadyStatePulseSequence);
		tagByName.put("EchoPlanarPulseSequence",TagFromName.EchoPlanarPulseSequence);
		tagByName.put("TagAngleFirstAxis",TagFromName.TagAngleFirstAxis);
		tagByName.put("MagnetizationTransfer",TagFromName.MagnetizationTransfer);
		tagByName.put("T2Preparation",TagFromName.T2Preparation);
		tagByName.put("BloodSignalNulling",TagFromName.BloodSignalNulling);
		tagByName.put("SaturationRecovery",TagFromName.SaturationRecovery);
		tagByName.put("SpectrallySelectedSuppression",TagFromName.SpectrallySelectedSuppression);
		tagByName.put("SpectrallySelectedExcitation",TagFromName.SpectrallySelectedExcitation);
		tagByName.put("SpatialPresaturation",TagFromName.SpatialPresaturation);
		tagByName.put("Tagging",TagFromName.Tagging);
		tagByName.put("OversamplingPhase",TagFromName.OversamplingPhase);
		tagByName.put("TagSpacingFirstDimension",TagFromName.TagSpacingFirstDimension);
		tagByName.put("GeometryOfKSpaceTraversal",TagFromName.GeometryOfKSpaceTraversal);
		tagByName.put("SegmentedKSpaceTraversal",TagFromName.SegmentedKSpaceTraversal);
		tagByName.put("RectilinearPhaseEncodeReordering",TagFromName.RectilinearPhaseEncodeReordering);
		tagByName.put("TagThickness",TagFromName.TagThickness);
		tagByName.put("PartialFourierDirection",TagFromName.PartialFourierDirection);
		tagByName.put("CardiacSynchronizationTechnique",TagFromName.CardiacSynchronizationTechnique);
		tagByName.put("ReceiveCoilManufacturerName",TagFromName.ReceiveCoilManufacturerName);
		tagByName.put("MRReceiveCoilSequence",TagFromName.MRReceiveCoilSequence);
		tagByName.put("ReceiveCoilType",TagFromName.ReceiveCoilType);
		tagByName.put("QuadratureReceiveCoil",TagFromName.QuadratureReceiveCoil);
		tagByName.put("MultiCoilDefinitionSequence",TagFromName.MultiCoilDefinitionSequence);
		tagByName.put("MultiCoilConfiguration",TagFromName.MultiCoilConfiguration);
		tagByName.put("MultiCoilElementName",TagFromName.MultiCoilElementName);
		tagByName.put("MultiCoilElementUsed",TagFromName.MultiCoilElementUsed);
		tagByName.put("MRTransmitCoilSequence",TagFromName.MRTransmitCoilSequence);
		tagByName.put("TransmitCoilManufacturerName",TagFromName.TransmitCoilManufacturerName);
		tagByName.put("TransmitCoilType",TagFromName.TransmitCoilType);
		tagByName.put("SpectralWidth",TagFromName.SpectralWidth);
		tagByName.put("ChemicalShiftReference",TagFromName.ChemicalShiftReference);
		tagByName.put("VolumeLocalizationTechnique",TagFromName.VolumeLocalizationTechnique);
		tagByName.put("MRAcquisitionFrequencyEncodingSteps",TagFromName.MRAcquisitionFrequencyEncodingSteps);
		tagByName.put("Decoupling",TagFromName.Decoupling);
		tagByName.put("DecoupledNucleus",TagFromName.DecoupledNucleus);
		tagByName.put("DecouplingFrequency",TagFromName.DecouplingFrequency);
		tagByName.put("DecouplingMethod",TagFromName.DecouplingMethod);
		tagByName.put("DecouplingChemicalShiftReference",TagFromName.DecouplingChemicalShiftReference);
		tagByName.put("KSpaceFiltering",TagFromName.KSpaceFiltering);
		tagByName.put("TimeDomainFiltering",TagFromName.TimeDomainFiltering);
		tagByName.put("NumberOfZeroFills",TagFromName.NumberOfZeroFills);
		tagByName.put("BaselineCorrection",TagFromName.BaselineCorrection);
		tagByName.put("ParallelReductionFactorInPlane",TagFromName.ParallelReductionFactorInPlane);
		tagByName.put("CardiacRRIntervalSpecified",TagFromName.CardiacRRIntervalSpecified);
		tagByName.put("AcquisitionDuration",TagFromName.AcquisitionDuration);
		tagByName.put("FrameAcquisitionDateTime",TagFromName.FrameAcquisitionDateTime);
		tagByName.put("DiffusionDirectionality",TagFromName.DiffusionDirectionality);
		tagByName.put("DiffusionGradientDirectionSequence",TagFromName.DiffusionGradientDirectionSequence);
		tagByName.put("ParallelAcquisition",TagFromName.ParallelAcquisition);
		tagByName.put("ParallelAcquisitionTechnique",TagFromName.ParallelAcquisitionTechnique);
		tagByName.put("InversionTimes",TagFromName.InversionTimes);
		tagByName.put("MetaboliteMapDescription",TagFromName.MetaboliteMapDescription);
		tagByName.put("PartialFourier",TagFromName.PartialFourier);
		tagByName.put("EffectiveEchoTime",TagFromName.EffectiveEchoTime);
		tagByName.put("MetaboliteMapCodeSequence",TagFromName.MetaboliteMapCodeSequence);
		tagByName.put("ChemicalShiftSequence",TagFromName.ChemicalShiftSequence);
		tagByName.put("CardiacSignalSource",TagFromName.CardiacSignalSource);
		tagByName.put("DiffusionBValue",TagFromName.DiffusionBValue);
		tagByName.put("DiffusionGradientOrientation",TagFromName.DiffusionGradientOrientation);
		tagByName.put("VelocityEncodingDirection",TagFromName.VelocityEncodingDirection);
		tagByName.put("VelocityEncodingMinimumValue",TagFromName.VelocityEncodingMinimumValue);
		tagByName.put("VelocityEncodingAcquisitionSequence",TagFromName.VelocityEncodingAcquisitionSequence);
		tagByName.put("NumberOfKSpaceTrajectories",TagFromName.NumberOfKSpaceTrajectories);
		tagByName.put("CoverageOfKSpace",TagFromName.CoverageOfKSpace);
		tagByName.put("SpectroscopyAcquisitionPhaseRows",TagFromName.SpectroscopyAcquisitionPhaseRows);
		tagByName.put("ParallelReductionFactorInPlaneRetired",TagFromName.ParallelReductionFactorInPlaneRetired);
		tagByName.put("TransmitterFrequency",TagFromName.TransmitterFrequency);
		tagByName.put("ResonantNucleus",TagFromName.ResonantNucleus);
		tagByName.put("FrequencyCorrection",TagFromName.FrequencyCorrection);
		tagByName.put("MRSpectroscopyFOVGeometrySequence",TagFromName.MRSpectroscopyFOVGeometrySequence);
		tagByName.put("SlabThickness",TagFromName.SlabThickness);
		tagByName.put("SlabOrientation",TagFromName.SlabOrientation);
		tagByName.put("MidSlabPosition",TagFromName.MidSlabPosition);
		tagByName.put("MRSpatialSaturationSequence",TagFromName.MRSpatialSaturationSequence);
		tagByName.put("MRTimingAndRelatedParametersSequence",TagFromName.MRTimingAndRelatedParametersSequence);
		tagByName.put("MREchoSequence",TagFromName.MREchoSequence);
		tagByName.put("MRModifierSequence",TagFromName.MRModifierSequence);
		tagByName.put("MRDiffusionSequence",TagFromName.MRDiffusionSequence);
		tagByName.put("CardiacSynchronizationSequence",TagFromName.CardiacSynchronizationSequence);
		tagByName.put("MRAveragesSequence",TagFromName.MRAveragesSequence);
		tagByName.put("MRFOVGeometrySequence",TagFromName.MRFOVGeometrySequence);
		tagByName.put("VolumeLocalizationSequence",TagFromName.VolumeLocalizationSequence);
		tagByName.put("SpectroscopyAcquisitionDataColumns",TagFromName.SpectroscopyAcquisitionDataColumns);
		tagByName.put("DiffusionAnisotropyType",TagFromName.DiffusionAnisotropyType);
		tagByName.put("FrameReferenceDateTime",TagFromName.FrameReferenceDateTime);
		tagByName.put("MRMetaboliteMapSequence",TagFromName.MRMetaboliteMapSequence);
		tagByName.put("ParallelReductionFactorOutOfPlane",TagFromName.ParallelReductionFactorOutOfPlane);
		tagByName.put("SpectroscopyAcquisitionOutOfPlanePhaseSteps",TagFromName.SpectroscopyAcquisitionOutOfPlanePhaseSteps);
		tagByName.put("BulkMotionStatus",TagFromName.BulkMotionStatus);
		tagByName.put("ParallelReductionFactorSecondInPlane",TagFromName.ParallelReductionFactorSecondInPlane);
		tagByName.put("CardiacBeatRejectionTechnique",TagFromName.CardiacBeatRejectionTechnique);
		tagByName.put("RespiratoryMotionCompensationTechnique",TagFromName.RespiratoryMotionCompensationTechnique);
		tagByName.put("RespiratorySignalSource",TagFromName.RespiratorySignalSource);
		tagByName.put("BulkMotionCompensationTechnique",TagFromName.BulkMotionCompensationTechnique);
		tagByName.put("BulkMotionSignalSource",TagFromName.BulkMotionSignalSource);
		tagByName.put("ApplicableSafetyStandardAgency",TagFromName.ApplicableSafetyStandardAgency);
		tagByName.put("ApplicableSafetyStandardDescription",TagFromName.ApplicableSafetyStandardDescription);
		tagByName.put("OperatingModeSequence",TagFromName.OperatingModeSequence);
		tagByName.put("OperatingModeType",TagFromName.OperatingModeType);
		tagByName.put("OperatingMode",TagFromName.OperatingMode);
		tagByName.put("SpecificAbsorptionRateDefinition",TagFromName.SpecificAbsorptionRateDefinition);
		tagByName.put("GradientOutputType",TagFromName.GradientOutputType);
		tagByName.put("SpecificAbsorptionRateValue",TagFromName.SpecificAbsorptionRateValue);
		tagByName.put("GradientOutput",TagFromName.GradientOutput);
		tagByName.put("FlowCompensationDirection",TagFromName.FlowCompensationDirection);
		tagByName.put("TaggingDelay",TagFromName.TaggingDelay);
		tagByName.put("RespiratoryMotionCompensationTechniqueDescription",TagFromName.RespiratoryMotionCompensationTechniqueDescription);
		tagByName.put("RespiratorySignalSourceID",TagFromName.RespiratorySignalSourceID);
		tagByName.put("ChemicalShiftMinimumIntegrationLimitInHz",TagFromName.ChemicalShiftMinimumIntegrationLimitInHz);
		tagByName.put("ChemicalShiftMaximumIntegrationLimitInHz",TagFromName.ChemicalShiftMaximumIntegrationLimitInHz);
		tagByName.put("MRVelocityEncodingSequence",TagFromName.MRVelocityEncodingSequence);
		tagByName.put("FirstOrderPhaseCorrection",TagFromName.FirstOrderPhaseCorrection);
		tagByName.put("WaterReferencedPhaseCorrection",TagFromName.WaterReferencedPhaseCorrection);
		tagByName.put("MRSpectroscopyAcquisitionType",TagFromName.MRSpectroscopyAcquisitionType);
		tagByName.put("RespiratoryCyclePosition",TagFromName.RespiratoryCyclePosition);
		tagByName.put("VelocityEncodingMaximumValue",TagFromName.VelocityEncodingMaximumValue);
		tagByName.put("TagSpacingSecondDimension",TagFromName.TagSpacingSecondDimension);
		tagByName.put("TagAngleSecondAxis",TagFromName.TagAngleSecondAxis);
		tagByName.put("FrameAcquisitionDuration",TagFromName.FrameAcquisitionDuration);
		tagByName.put("MRImageFrameTypeSequence",TagFromName.MRImageFrameTypeSequence);
		tagByName.put("MRSpectroscopyFrameTypeSequence",TagFromName.MRSpectroscopyFrameTypeSequence);
		tagByName.put("MRAcquisitionPhaseEncodingStepsInPlane",TagFromName.MRAcquisitionPhaseEncodingStepsInPlane);
		tagByName.put("MRAcquisitionPhaseEncodingStepsOutOfPlane",TagFromName.MRAcquisitionPhaseEncodingStepsOutOfPlane);
		tagByName.put("SpectroscopyAcquisitionPhaseColumns",TagFromName.SpectroscopyAcquisitionPhaseColumns);
		tagByName.put("CardiacCyclePosition",TagFromName.CardiacCyclePosition);
		tagByName.put("SpecificAbsorptionRateSequence",TagFromName.SpecificAbsorptionRateSequence);
		tagByName.put("RFEchoTrainLength",TagFromName.RFEchoTrainLength);
		tagByName.put("GradientEchoTrainLength",TagFromName.GradientEchoTrainLength);
		tagByName.put("ArterialSpinLabelingContrast",TagFromName.ArterialSpinLabelingContrast);
		tagByName.put("MRArterialSpinLabelingSequence",TagFromName.MRArterialSpinLabelingSequence);
		tagByName.put("ASLTechniqueDescription",TagFromName.ASLTechniqueDescription);
		tagByName.put("ASLSlabNumber",TagFromName.ASLSlabNumber);
		tagByName.put("ASLSlabThickness",TagFromName.ASLSlabThickness);
		tagByName.put("ASLSlabOrientation",TagFromName.ASLSlabOrientation);
		tagByName.put("ASLMidSlabPosition",TagFromName.ASLMidSlabPosition);
		tagByName.put("ASLContext",TagFromName.ASLContext);
		tagByName.put("ASLPulseTrainDuration",TagFromName.ASLPulseTrainDuration);
		tagByName.put("ASLCrusherFlag",TagFromName.ASLCrusherFlag);
		tagByName.put("ASLCrusherFlowLimit",TagFromName.ASLCrusherFlowLimit);
		tagByName.put("ASLCrusherDescription",TagFromName.ASLCrusherDescription);
		tagByName.put("ASLBolusCutoffFlag",TagFromName.ASLBolusCutoffFlag);
		tagByName.put("ASLBolusCutoffTimingSequence",TagFromName.ASLBolusCutoffTimingSequence);
		tagByName.put("ASLBolusCutoffTechnique",TagFromName.ASLBolusCutoffTechnique);
		tagByName.put("ASLBolusCutoffDelayTime",TagFromName.ASLBolusCutoffDelayTime);
		tagByName.put("ASLSlabSequence",TagFromName.ASLSlabSequence);
		tagByName.put("ChemicalShiftMinimumIntegrationLimitInppm",TagFromName.ChemicalShiftMinimumIntegrationLimitInppm);
		tagByName.put("ChemicalShiftMaximumIntegrationLimitInppm",TagFromName.ChemicalShiftMaximumIntegrationLimitInppm);
		tagByName.put("WaterReferenceAcquisition",TagFromName.WaterReferenceAcquisition);
		tagByName.put("EchoPeakPosition",TagFromName.EchoPeakPosition);
		tagByName.put("CTAcquisitionTypeSequence",TagFromName.CTAcquisitionTypeSequence);
		tagByName.put("AcquisitionType",TagFromName.AcquisitionType);
		tagByName.put("TubeAngle",TagFromName.TubeAngle);
		tagByName.put("CTAcquisitionDetailsSequence",TagFromName.CTAcquisitionDetailsSequence);
		tagByName.put("RevolutionTime",TagFromName.RevolutionTime);
		tagByName.put("SingleCollimationWidth",TagFromName.SingleCollimationWidth);
		tagByName.put("TotalCollimationWidth",TagFromName.TotalCollimationWidth);
		tagByName.put("CTTableDynamicsSequence",TagFromName.CTTableDynamicsSequence);
		tagByName.put("TableSpeed",TagFromName.TableSpeed);
		tagByName.put("TableFeedPerRotation",TagFromName.TableFeedPerRotation);
		tagByName.put("SpiralPitchFactor",TagFromName.SpiralPitchFactor);
		tagByName.put("CTGeometrySequence",TagFromName.CTGeometrySequence);
		tagByName.put("DataCollectionCenterPatient",TagFromName.DataCollectionCenterPatient);
		tagByName.put("CTReconstructionSequence",TagFromName.CTReconstructionSequence);
		tagByName.put("ReconstructionAlgorithm",TagFromName.ReconstructionAlgorithm);
		tagByName.put("ConvolutionKernelGroup",TagFromName.ConvolutionKernelGroup);
		tagByName.put("ReconstructionFieldOfView",TagFromName.ReconstructionFieldOfView);
		tagByName.put("ReconstructionTargetCenterPatient",TagFromName.ReconstructionTargetCenterPatient);
		tagByName.put("ReconstructionAngle",TagFromName.ReconstructionAngle);
		tagByName.put("ImageFilter",TagFromName.ImageFilter);
		tagByName.put("CTExposureSequence",TagFromName.CTExposureSequence);
		tagByName.put("ReconstructionPixelSpacing",TagFromName.ReconstructionPixelSpacing);
		tagByName.put("ExposureModulationType",TagFromName.ExposureModulationType);
		tagByName.put("EstimatedDoseSaving",TagFromName.EstimatedDoseSaving);
		tagByName.put("CTXRayDetailsSequence",TagFromName.CTXRayDetailsSequence);
		tagByName.put("CTPositionSequence",TagFromName.CTPositionSequence);
		tagByName.put("TablePosition",TagFromName.TablePosition);
		tagByName.put("ExposureTimeInms",TagFromName.ExposureTimeInms);
		tagByName.put("CTImageFrameTypeSequence",TagFromName.CTImageFrameTypeSequence);
		tagByName.put("XRayTubeCurrentInmA",TagFromName.XRayTubeCurrentInmA);
		tagByName.put("ExposureInmAs",TagFromName.ExposureInmAs);
		tagByName.put("ConstantVolumeFlag",TagFromName.ConstantVolumeFlag);
		tagByName.put("FluoroscopyFlag",TagFromName.FluoroscopyFlag);
		tagByName.put("DistanceSourceToDataCollectionCenter",TagFromName.DistanceSourceToDataCollectionCenter);
		tagByName.put("ContrastBolusAgentNumber",TagFromName.ContrastBolusAgentNumber);
		tagByName.put("ContrastBolusIngredientCodeSequence",TagFromName.ContrastBolusIngredientCodeSequence);
		tagByName.put("ContrastAdministrationProfileSequence",TagFromName.ContrastAdministrationProfileSequence);
		tagByName.put("ContrastBolusUsageSequence",TagFromName.ContrastBolusUsageSequence);
		tagByName.put("ContrastBolusAgentAdministered",TagFromName.ContrastBolusAgentAdministered);
		tagByName.put("ContrastBolusAgentDetected",TagFromName.ContrastBolusAgentDetected);
		tagByName.put("ContrastBolusAgentPhase",TagFromName.ContrastBolusAgentPhase);
		tagByName.put("CTDIvol",TagFromName.CTDIvol);
		tagByName.put("CTDIPhantomTypeCodeSequence",TagFromName.CTDIPhantomTypeCodeSequence);
		tagByName.put("CalciumScoringMassFactorPatient",TagFromName.CalciumScoringMassFactorPatient);
		tagByName.put("CalciumScoringMassFactorDevice",TagFromName.CalciumScoringMassFactorDevice);
		tagByName.put("EnergyWeightingFactor",TagFromName.EnergyWeightingFactor);
		tagByName.put("CTAdditionalXRaySourceSequence",TagFromName.CTAdditionalXRaySourceSequence);
		tagByName.put("ProjectionPixelCalibrationSequence",TagFromName.ProjectionPixelCalibrationSequence);
		tagByName.put("DistanceSourceToIsocenter",TagFromName.DistanceSourceToIsocenter);
		tagByName.put("DistanceObjectToTableTop",TagFromName.DistanceObjectToTableTop);
		tagByName.put("ObjectPixelSpacingInCenterOfBeam",TagFromName.ObjectPixelSpacingInCenterOfBeam);
		tagByName.put("PositionerPositionSequence",TagFromName.PositionerPositionSequence);
		tagByName.put("TablePositionSequence",TagFromName.TablePositionSequence);
		tagByName.put("CollimatorShapeSequence",TagFromName.CollimatorShapeSequence);
		tagByName.put("PlanesInAcquisition",TagFromName.PlanesInAcquisition);
		tagByName.put("XAXRFFrameCharacteristicsSequence",TagFromName.XAXRFFrameCharacteristicsSequence);
		tagByName.put("FrameAcquisitionSequence",TagFromName.FrameAcquisitionSequence);
		tagByName.put("XRayReceptorType",TagFromName.XRayReceptorType);
		tagByName.put("AcquisitionProtocolName",TagFromName.AcquisitionProtocolName);
		tagByName.put("AcquisitionProtocolDescription",TagFromName.AcquisitionProtocolDescription);
		tagByName.put("ContrastBolusIngredientOpaque",TagFromName.ContrastBolusIngredientOpaque);
		tagByName.put("DistanceReceptorPlaneToDetectorHousing",TagFromName.DistanceReceptorPlaneToDetectorHousing);
		tagByName.put("IntensifierActiveShape",TagFromName.IntensifierActiveShape);
		tagByName.put("IntensifierActiveDimensions",TagFromName.IntensifierActiveDimensions);
		tagByName.put("PhysicalDetectorSize",TagFromName.PhysicalDetectorSize);
		tagByName.put("PositionOfIsocenterProjection",TagFromName.PositionOfIsocenterProjection);
		tagByName.put("FieldOfViewSequence",TagFromName.FieldOfViewSequence);
		tagByName.put("FieldOfViewDescription",TagFromName.FieldOfViewDescription);
		tagByName.put("ExposureControlSensingRegionsSequence",TagFromName.ExposureControlSensingRegionsSequence);
		tagByName.put("ExposureControlSensingRegionShape",TagFromName.ExposureControlSensingRegionShape);
		tagByName.put("ExposureControlSensingRegionLeftVerticalEdge",TagFromName.ExposureControlSensingRegionLeftVerticalEdge);
		tagByName.put("ExposureControlSensingRegionRightVerticalEdge",TagFromName.ExposureControlSensingRegionRightVerticalEdge);
		tagByName.put("ExposureControlSensingRegionUpperHorizontalEdge",TagFromName.ExposureControlSensingRegionUpperHorizontalEdge);
		tagByName.put("ExposureControlSensingRegionLowerHorizontalEdge",TagFromName.ExposureControlSensingRegionLowerHorizontalEdge);
		tagByName.put("CenterOfCircularExposureControlSensingRegion",TagFromName.CenterOfCircularExposureControlSensingRegion);
		tagByName.put("RadiusOfCircularExposureControlSensingRegion",TagFromName.RadiusOfCircularExposureControlSensingRegion);
		tagByName.put("VerticesOfThePolygonalExposureControlSensingRegion",TagFromName.VerticesOfThePolygonalExposureControlSensingRegion);
		tagByName.put("ColumnAngulationPatient",TagFromName.ColumnAngulationPatient);
		tagByName.put("BeamAngle",TagFromName.BeamAngle);
		tagByName.put("FrameDetectorParametersSequence",TagFromName.FrameDetectorParametersSequence);
		tagByName.put("CalculatedAnatomyThickness",TagFromName.CalculatedAnatomyThickness);
		tagByName.put("CalibrationSequence",TagFromName.CalibrationSequence);
		tagByName.put("ObjectThicknessSequence",TagFromName.ObjectThicknessSequence);
		tagByName.put("PlaneIdentification",TagFromName.PlaneIdentification);
		tagByName.put("FieldOfViewDimensionsInFloat",TagFromName.FieldOfViewDimensionsInFloat);
		tagByName.put("IsocenterReferenceSystemSequence",TagFromName.IsocenterReferenceSystemSequence);
		tagByName.put("PositionerIsocenterPrimaryAngle",TagFromName.PositionerIsocenterPrimaryAngle);
		tagByName.put("PositionerIsocenterSecondaryAngle",TagFromName.PositionerIsocenterSecondaryAngle);
		tagByName.put("PositionerIsocenterDetectorRotationAngle",TagFromName.PositionerIsocenterDetectorRotationAngle);
		tagByName.put("TableXPositionToIsocenter",TagFromName.TableXPositionToIsocenter);
		tagByName.put("TableYPositionToIsocenter",TagFromName.TableYPositionToIsocenter);
		tagByName.put("TableZPositionToIsocenter",TagFromName.TableZPositionToIsocenter);
		tagByName.put("TableHorizontalRotationAngle",TagFromName.TableHorizontalRotationAngle);
		tagByName.put("TableHeadTiltAngle",TagFromName.TableHeadTiltAngle);
		tagByName.put("TableCradleTiltAngle",TagFromName.TableCradleTiltAngle);
		tagByName.put("FrameDisplayShutterSequence",TagFromName.FrameDisplayShutterSequence);
		tagByName.put("AcquiredImageAreaDoseProduct",TagFromName.AcquiredImageAreaDoseProduct);
		tagByName.put("CArmPositionerTabletopRelationship",TagFromName.CArmPositionerTabletopRelationship);
		tagByName.put("XRayGeometrySequence",TagFromName.XRayGeometrySequence);
		tagByName.put("IrradiationEventIdentificationSequence",TagFromName.IrradiationEventIdentificationSequence);
		tagByName.put("XRay3DFrameTypeSequence",TagFromName.XRay3DFrameTypeSequence);
		tagByName.put("ContributingSourcesSequence",TagFromName.ContributingSourcesSequence);
		tagByName.put("XRay3DAcquisitionSequence",TagFromName.XRay3DAcquisitionSequence);
		tagByName.put("PrimaryPositionerScanArc",TagFromName.PrimaryPositionerScanArc);
		tagByName.put("SecondaryPositionerScanArc",TagFromName.SecondaryPositionerScanArc);
		tagByName.put("PrimaryPositionerScanStartAngle",TagFromName.PrimaryPositionerScanStartAngle);
		tagByName.put("SecondaryPositionerScanStartAngle",TagFromName.SecondaryPositionerScanStartAngle);
		tagByName.put("PrimaryPositionerIncrement",TagFromName.PrimaryPositionerIncrement);
		tagByName.put("SecondaryPositionerIncrement",TagFromName.SecondaryPositionerIncrement);
		tagByName.put("StartAcquisitionDateTime",TagFromName.StartAcquisitionDateTime);
		tagByName.put("EndAcquisitionDateTime",TagFromName.EndAcquisitionDateTime);
		tagByName.put("PrimaryPositionerIncrementSign",TagFromName.PrimaryPositionerIncrementSign);
		tagByName.put("SecondaryPositionerIncrementSign",TagFromName.SecondaryPositionerIncrementSign);
		tagByName.put("ApplicationName",TagFromName.ApplicationName);
		tagByName.put("ApplicationVersion",TagFromName.ApplicationVersion);
		tagByName.put("ApplicationManufacturer",TagFromName.ApplicationManufacturer);
		tagByName.put("AlgorithmType",TagFromName.AlgorithmType);
		tagByName.put("AlgorithmDescription",TagFromName.AlgorithmDescription);
		tagByName.put("XRay3DReconstructionSequence",TagFromName.XRay3DReconstructionSequence);
		tagByName.put("ReconstructionDescription",TagFromName.ReconstructionDescription);
		tagByName.put("PerProjectionAcquisitionSequence",TagFromName.PerProjectionAcquisitionSequence);
		tagByName.put("DetectorPositionSequence",TagFromName.DetectorPositionSequence);
		tagByName.put("XRayAcquisitionDoseSequence",TagFromName.XRayAcquisitionDoseSequence);
		tagByName.put("XRaySourceIsocenterPrimaryAngle",TagFromName.XRaySourceIsocenterPrimaryAngle);
		tagByName.put("XRaySourceIsocenterSecondaryAngle",TagFromName.XRaySourceIsocenterSecondaryAngle);
		tagByName.put("BreastSupportIsocenterPrimaryAngle",TagFromName.BreastSupportIsocenterPrimaryAngle);
		tagByName.put("BreastSupportIsocenterSecondaryAngle",TagFromName.BreastSupportIsocenterSecondaryAngle);
		tagByName.put("BreastSupportXPositionToIsocenter",TagFromName.BreastSupportXPositionToIsocenter);
		tagByName.put("BreastSupportYPositionToIsocenter",TagFromName.BreastSupportYPositionToIsocenter);
		tagByName.put("BreastSupportZPositionToIsocenter",TagFromName.BreastSupportZPositionToIsocenter);
		tagByName.put("DetectorIsocenterPrimaryAngle",TagFromName.DetectorIsocenterPrimaryAngle);
		tagByName.put("DetectorIsocenterSecondaryAngle",TagFromName.DetectorIsocenterSecondaryAngle);
		tagByName.put("DetectorXPositionToIsocenter",TagFromName.DetectorXPositionToIsocenter);
		tagByName.put("DetectorYPositionToIsocenter",TagFromName.DetectorYPositionToIsocenter);
		tagByName.put("DetectorZPositionToIsocenter",TagFromName.DetectorZPositionToIsocenter);
		tagByName.put("XRayGridSequence",TagFromName.XRayGridSequence);
		tagByName.put("XRayFilterSequence",TagFromName.XRayFilterSequence);
		tagByName.put("DetectorActiveAreaTLHCPosition",TagFromName.DetectorActiveAreaTLHCPosition);
		tagByName.put("DetectorActiveAreaOrientation",TagFromName.DetectorActiveAreaOrientation);
		tagByName.put("PositionerPrimaryAngleDirection",TagFromName.PositionerPrimaryAngleDirection);
		tagByName.put("DiffusionBMatrixSequence",TagFromName.DiffusionBMatrixSequence);
		tagByName.put("DiffusionBValueXX",TagFromName.DiffusionBValueXX);
		tagByName.put("DiffusionBValueXY",TagFromName.DiffusionBValueXY);
		tagByName.put("DiffusionBValueXZ",TagFromName.DiffusionBValueXZ);
		tagByName.put("DiffusionBValueYY",TagFromName.DiffusionBValueYY);
		tagByName.put("DiffusionBValueYZ",TagFromName.DiffusionBValueYZ);
		tagByName.put("DiffusionBValueZZ",TagFromName.DiffusionBValueZZ);
		tagByName.put("FunctionalMRSequence",TagFromName.FunctionalMRSequence);
		tagByName.put("FunctionalSettlingPhaseFramesPresent",TagFromName.FunctionalSettlingPhaseFramesPresent);
		tagByName.put("FunctionalSyncPulse",TagFromName.FunctionalSyncPulse);
		tagByName.put("SettlingPhaseFrame",TagFromName.SettlingPhaseFrame);
		tagByName.put("DecayCorrectionDateTime",TagFromName.DecayCorrectionDateTime);
		tagByName.put("StartDensityThreshold",TagFromName.StartDensityThreshold);
		tagByName.put("StartRelativeDensityDifferenceThreshold",TagFromName.StartRelativeDensityDifferenceThreshold);
		tagByName.put("StartCardiacTriggerCountThreshold",TagFromName.StartCardiacTriggerCountThreshold);
		tagByName.put("StartRespiratoryTriggerCountThreshold",TagFromName.StartRespiratoryTriggerCountThreshold);
		tagByName.put("TerminationCountsThreshold",TagFromName.TerminationCountsThreshold);
		tagByName.put("TerminationDensityThreshold",TagFromName.TerminationDensityThreshold);
		tagByName.put("TerminationRelativeDensityThreshold",TagFromName.TerminationRelativeDensityThreshold);
		tagByName.put("TerminationTimeThreshold",TagFromName.TerminationTimeThreshold);
		tagByName.put("TerminationCardiacTriggerCountThreshold",TagFromName.TerminationCardiacTriggerCountThreshold);
		tagByName.put("TerminationRespiratoryTriggerCountThreshold",TagFromName.TerminationRespiratoryTriggerCountThreshold);
		tagByName.put("DetectorGeometry",TagFromName.DetectorGeometry);
		tagByName.put("TransverseDetectorSeparation",TagFromName.TransverseDetectorSeparation);
		tagByName.put("AxialDetectorDimension",TagFromName.AxialDetectorDimension);
		tagByName.put("RadiopharmaceuticalAgentNumber",TagFromName.RadiopharmaceuticalAgentNumber);
		tagByName.put("PETFrameAcquisitionSequence",TagFromName.PETFrameAcquisitionSequence);
		tagByName.put("PETDetectorMotionDetailsSequence",TagFromName.PETDetectorMotionDetailsSequence);
		tagByName.put("PETTableDynamicsSequence",TagFromName.PETTableDynamicsSequence);
		tagByName.put("PETPositionSequence",TagFromName.PETPositionSequence);
		tagByName.put("PETFrameCorrectionFactorsSequence",TagFromName.PETFrameCorrectionFactorsSequence);
		tagByName.put("RadiopharmaceuticalUsageSequence",TagFromName.RadiopharmaceuticalUsageSequence);
		tagByName.put("AttenuationCorrectionSource",TagFromName.AttenuationCorrectionSource);
		tagByName.put("NumberOfIterations",TagFromName.NumberOfIterations);
		tagByName.put("NumberOfSubsets",TagFromName.NumberOfSubsets);
		tagByName.put("PETReconstructionSequence",TagFromName.PETReconstructionSequence);
		tagByName.put("PETFrameTypeSequence",TagFromName.PETFrameTypeSequence);
		tagByName.put("TimeOfFlightInformationUsed",TagFromName.TimeOfFlightInformationUsed);
		tagByName.put("ReconstructionType",TagFromName.ReconstructionType);
		tagByName.put("DecayCorrected",TagFromName.DecayCorrected);
		tagByName.put("AttenuationCorrected",TagFromName.AttenuationCorrected);
		tagByName.put("ScatterCorrected",TagFromName.ScatterCorrected);
		tagByName.put("DeadTimeCorrected",TagFromName.DeadTimeCorrected);
		tagByName.put("GantryMotionCorrected",TagFromName.GantryMotionCorrected);
		tagByName.put("PatientMotionCorrected",TagFromName.PatientMotionCorrected);
		tagByName.put("CountLossNormalizationCorrected",TagFromName.CountLossNormalizationCorrected);
		tagByName.put("RandomsCorrected",TagFromName.RandomsCorrected);
		tagByName.put("NonUniformRadialSamplingCorrected",TagFromName.NonUniformRadialSamplingCorrected);
		tagByName.put("SensitivityCalibrated",TagFromName.SensitivityCalibrated);
		tagByName.put("DetectorNormalizationCorrection",TagFromName.DetectorNormalizationCorrection);
		tagByName.put("IterativeReconstructionMethod",TagFromName.IterativeReconstructionMethod);
		tagByName.put("AttenuationCorrectionTemporalRelationship",TagFromName.AttenuationCorrectionTemporalRelationship);
		tagByName.put("PatientPhysiologicalStateSequence",TagFromName.PatientPhysiologicalStateSequence);
		tagByName.put("PatientPhysiologicalStateCodeSequence",TagFromName.PatientPhysiologicalStateCodeSequence);
		tagByName.put("DepthsOfFocus",TagFromName.DepthsOfFocus);
		tagByName.put("ExcludedIntervalsSequence",TagFromName.ExcludedIntervalsSequence);
		tagByName.put("ExclusionStartDateTime",TagFromName.ExclusionStartDateTime);
		tagByName.put("ExclusionDuration",TagFromName.ExclusionDuration);
		tagByName.put("USImageDescriptionSequence",TagFromName.USImageDescriptionSequence);
		tagByName.put("ImageDataTypeSequence",TagFromName.ImageDataTypeSequence);
		tagByName.put("DataType",TagFromName.DataType);
		tagByName.put("TransducerScanPatternCodeSequence",TagFromName.TransducerScanPatternCodeSequence);
		tagByName.put("AliasedDataType",TagFromName.AliasedDataType);
		tagByName.put("PositionMeasuringDeviceUsed",TagFromName.PositionMeasuringDeviceUsed);
		tagByName.put("TransducerGeometryCodeSequence",TagFromName.TransducerGeometryCodeSequence);
		tagByName.put("TransducerBeamSteeringCodeSequence",TagFromName.TransducerBeamSteeringCodeSequence);
		tagByName.put("TransducerApplicationCodeSequence",TagFromName.TransducerApplicationCodeSequence);
		tagByName.put("ZeroVelocityPixelValue",TagFromName.ZeroVelocityPixelValue);
		tagByName.put("ReferenceLocationLabel",TagFromName.ReferenceLocationLabel);
		tagByName.put("ReferenceLocationDescription",TagFromName.ReferenceLocationDescription);
		tagByName.put("ReferenceBasisCodeSequence",TagFromName.ReferenceBasisCodeSequence);
		tagByName.put("ReferenceGeometryCodeSequence",TagFromName.ReferenceGeometryCodeSequence);
		tagByName.put("OffsetDistance",TagFromName.OffsetDistance);
		tagByName.put("OffsetDirection",TagFromName.OffsetDirection);
		tagByName.put("PotentialScheduledProtocolCodeSequence",TagFromName.PotentialScheduledProtocolCodeSequence);
		tagByName.put("PotentialRequestedProcedureCodeSequence",TagFromName.PotentialRequestedProcedureCodeSequence);
		tagByName.put("PotentialReasonsForProcedure",TagFromName.PotentialReasonsForProcedure);
		tagByName.put("PotentialReasonsForProcedureCodeSequence",TagFromName.PotentialReasonsForProcedureCodeSequence);
		tagByName.put("PotentialDiagnosticTasks",TagFromName.PotentialDiagnosticTasks);
		tagByName.put("ContraindicationsCodeSequence",TagFromName.ContraindicationsCodeSequence);
		tagByName.put("ReferencedDefinedProtocolSequence",TagFromName.ReferencedDefinedProtocolSequence);
		tagByName.put("ReferencedPerformedProtocolSequence",TagFromName.ReferencedPerformedProtocolSequence);
		tagByName.put("PredecessorProtocolSequence",TagFromName.PredecessorProtocolSequence);
		tagByName.put("ProtocolPlanningInformation",TagFromName.ProtocolPlanningInformation);
		tagByName.put("ProtocolDesignRationale",TagFromName.ProtocolDesignRationale);
		tagByName.put("PatientSpecificationSequence",TagFromName.PatientSpecificationSequence);
		tagByName.put("ModelSpecificationSequence",TagFromName.ModelSpecificationSequence);
		tagByName.put("ParametersSpecificationSequence",TagFromName.ParametersSpecificationSequence);
		tagByName.put("InstructionSequence",TagFromName.InstructionSequence);
		tagByName.put("InstructionIndex",TagFromName.InstructionIndex);
		tagByName.put("InstructionText",TagFromName.InstructionText);
		tagByName.put("InstructionDescription",TagFromName.InstructionDescription);
		tagByName.put("InstructionPerformedFlag",TagFromName.InstructionPerformedFlag);
		tagByName.put("InstructionPerformedDateTime",TagFromName.InstructionPerformedDateTime);
		tagByName.put("InstructionPerformanceComment",TagFromName.InstructionPerformanceComment);
		tagByName.put("PatientPositioningInstructionSequence",TagFromName.PatientPositioningInstructionSequence);
		tagByName.put("PositioningMethodCodeSequence",TagFromName.PositioningMethodCodeSequence);
		tagByName.put("PositioningLandmarkSequence",TagFromName.PositioningLandmarkSequence);
		tagByName.put("TargetFrameOfReferenceUID",TagFromName.TargetFrameOfReferenceUID);
		tagByName.put("AcquisitionProtocolElementSpecificationSequence",TagFromName.AcquisitionProtocolElementSpecificationSequence);
		tagByName.put("AcquisitionProtocolElementSequence",TagFromName.AcquisitionProtocolElementSequence);
		tagByName.put("ProtocolElementNumber",TagFromName.ProtocolElementNumber);
		tagByName.put("ProtocolElementName",TagFromName.ProtocolElementName);
		tagByName.put("ProtocolElementCharacteristicsSummary",TagFromName.ProtocolElementCharacteristicsSummary);
		tagByName.put("ProtocolElementPurpose",TagFromName.ProtocolElementPurpose);
		tagByName.put("AcquisitionMotion",TagFromName.AcquisitionMotion);
		tagByName.put("AcquisitionStartLocationSequence",TagFromName.AcquisitionStartLocationSequence);
		tagByName.put("AcquisitionEndLocationSequence",TagFromName.AcquisitionEndLocationSequence);
		tagByName.put("ReconstructionProtocolElementSpecificationSequence",TagFromName.ReconstructionProtocolElementSpecificationSequence);
		tagByName.put("ReconstructionProtocolElementSequence",TagFromName.ReconstructionProtocolElementSequence);
		tagByName.put("StorageProtocolElementSpecificationSequence",TagFromName.StorageProtocolElementSpecificationSequence);
		tagByName.put("StorageProtocolElementSequence",TagFromName.StorageProtocolElementSequence);
		tagByName.put("RequestedSeriesDescription",TagFromName.RequestedSeriesDescription);
		tagByName.put("SourceAcquisitionProtocolElementNumber",TagFromName.SourceAcquisitionProtocolElementNumber);
		tagByName.put("SourceAcquisitionBeamNumber",TagFromName.SourceAcquisitionBeamNumber);
		tagByName.put("SourceReconstructionProtocolElementNumber",TagFromName.SourceReconstructionProtocolElementNumber);
		tagByName.put("ReconstructionStartLocationSequence",TagFromName.ReconstructionStartLocationSequence);
		tagByName.put("ReconstructionEndLocationSequence",TagFromName.ReconstructionEndLocationSequence);
		tagByName.put("ReconstructionAlgorithmSequence",TagFromName.ReconstructionAlgorithmSequence);
		tagByName.put("ReconstructionTargetCenterLocationSequence",TagFromName.ReconstructionTargetCenterLocationSequence);
		tagByName.put("ImageFilterDescription",TagFromName.ImageFilterDescription);
		tagByName.put("CTDIvolNotificationTrigger",TagFromName.CTDIvolNotificationTrigger);
		tagByName.put("DLPNotificationTrigger",TagFromName.DLPNotificationTrigger);
		tagByName.put("AutoKVPSelectionType",TagFromName.AutoKVPSelectionType);
		tagByName.put("AutoKVPUpperBound",TagFromName.AutoKVPUpperBound);
		tagByName.put("AutoKVPLowerBound",TagFromName.AutoKVPLowerBound);
		tagByName.put("ProtocolDefinedPatientPosition",TagFromName.ProtocolDefinedPatientPosition);
		tagByName.put("ContributingEquipmentSequence",TagFromName.ContributingEquipmentSequence);
		tagByName.put("ContributionDateTime",TagFromName.ContributionDateTime);
		tagByName.put("ContributionDescription",TagFromName.ContributionDescription);
		tagByName.put("StudyInstanceUID",TagFromName.StudyInstanceUID);
		tagByName.put("SeriesInstanceUID",TagFromName.SeriesInstanceUID);
		tagByName.put("StudyID",TagFromName.StudyID);
		tagByName.put("SeriesNumber",TagFromName.SeriesNumber);
		tagByName.put("AcquisitionNumber",TagFromName.AcquisitionNumber);
		tagByName.put("InstanceNumber",TagFromName.InstanceNumber);
		tagByName.put("IsotopeNumber",TagFromName.IsotopeNumber);
		tagByName.put("PhaseNumber",TagFromName.PhaseNumber);
		tagByName.put("IntervalNumber",TagFromName.IntervalNumber);
		tagByName.put("TimeSlotNumber",TagFromName.TimeSlotNumber);
		tagByName.put("AngleNumber",TagFromName.AngleNumber);
		tagByName.put("ItemNumber",TagFromName.ItemNumber);
		tagByName.put("PatientOrientation",TagFromName.PatientOrientation);
		tagByName.put("OverlayNumber",TagFromName.OverlayNumber);
		tagByName.put("CurveNumber",TagFromName.CurveNumber);
		tagByName.put("LUTNumber",TagFromName.LUTNumber);
		tagByName.put("ImagePosition",TagFromName.ImagePosition);
		tagByName.put("ImagePositionPatient",TagFromName.ImagePositionPatient);
		tagByName.put("ImageOrientation",TagFromName.ImageOrientation);
		tagByName.put("ImageOrientationPatient",TagFromName.ImageOrientationPatient);
		tagByName.put("Location",TagFromName.Location);
		tagByName.put("FrameOfReferenceUID",TagFromName.FrameOfReferenceUID);
		tagByName.put("Laterality",TagFromName.Laterality);
		tagByName.put("ImageLaterality",TagFromName.ImageLaterality);
		tagByName.put("ImageGeometryType",TagFromName.ImageGeometryType);
		tagByName.put("MaskingImage",TagFromName.MaskingImage);
		tagByName.put("ReportNumber",TagFromName.ReportNumber);
		tagByName.put("TemporalPositionIdentifier",TagFromName.TemporalPositionIdentifier);
		tagByName.put("NumberOfTemporalPositions",TagFromName.NumberOfTemporalPositions);
		tagByName.put("TemporalResolution",TagFromName.TemporalResolution);
		tagByName.put("SynchronizationFrameOfReferenceUID",TagFromName.SynchronizationFrameOfReferenceUID);
		tagByName.put("SOPInstanceUIDOfConcatenationSource",TagFromName.SOPInstanceUIDOfConcatenationSource);
		tagByName.put("SeriesInStudy",TagFromName.SeriesInStudy);
		tagByName.put("AcquisitionsInSeries",TagFromName.AcquisitionsInSeries);
		tagByName.put("ImagesInAcquisition",TagFromName.ImagesInAcquisition);
		tagByName.put("ImagesInSeries",TagFromName.ImagesInSeries);
		tagByName.put("AcquisitionsInStudy",TagFromName.AcquisitionsInStudy);
		tagByName.put("ImagesInStudy",TagFromName.ImagesInStudy);
		tagByName.put("Reference",TagFromName.Reference);
		tagByName.put("TargetPositionReferenceIndicator",TagFromName.TargetPositionReferenceIndicator);
		tagByName.put("PositionReferenceIndicator",TagFromName.PositionReferenceIndicator);
		tagByName.put("SliceLocation",TagFromName.SliceLocation);
		tagByName.put("OtherStudyNumbers",TagFromName.OtherStudyNumbers);
		tagByName.put("NumberOfPatientRelatedStudies",TagFromName.NumberOfPatientRelatedStudies);
		tagByName.put("NumberOfPatientRelatedSeries",TagFromName.NumberOfPatientRelatedSeries);
		tagByName.put("NumberOfPatientRelatedInstances",TagFromName.NumberOfPatientRelatedInstances);
		tagByName.put("NumberOfStudyRelatedSeries",TagFromName.NumberOfStudyRelatedSeries);
		tagByName.put("NumberOfStudyRelatedInstances",TagFromName.NumberOfStudyRelatedInstances);
		tagByName.put("NumberOfSeriesRelatedInstances",TagFromName.NumberOfSeriesRelatedInstances);
		tagByName.put("SourceImageID",TagFromName.SourceImageID);
		tagByName.put("ModifyingDeviceID",TagFromName.ModifyingDeviceID);
		tagByName.put("ModifiedImageID",TagFromName.ModifiedImageID);
		tagByName.put("ModifiedImageDate",TagFromName.ModifiedImageDate);
		tagByName.put("ModifyingDeviceManufacturer",TagFromName.ModifyingDeviceManufacturer);
		tagByName.put("ModifiedImageTime",TagFromName.ModifiedImageTime);
		tagByName.put("ModifiedImageDescription",TagFromName.ModifiedImageDescription);
		tagByName.put("ImageComments",TagFromName.ImageComments);
		tagByName.put("OriginalImageIdentification",TagFromName.OriginalImageIdentification);
		tagByName.put("OriginalImageIdentificationNomenclature",TagFromName.OriginalImageIdentificationNomenclature);
		tagByName.put("StackID",TagFromName.StackID);
		tagByName.put("InStackPositionNumber",TagFromName.InStackPositionNumber);
		tagByName.put("FrameAnatomySequence",TagFromName.FrameAnatomySequence);
		tagByName.put("FrameLaterality",TagFromName.FrameLaterality);
		tagByName.put("FrameContentSequence",TagFromName.FrameContentSequence);
		tagByName.put("PlanePositionSequence",TagFromName.PlanePositionSequence);
		tagByName.put("PlaneOrientationSequence",TagFromName.PlaneOrientationSequence);
		tagByName.put("TemporalPositionIndex",TagFromName.TemporalPositionIndex);
		tagByName.put("NominalCardiacTriggerDelayTime",TagFromName.NominalCardiacTriggerDelayTime);
		tagByName.put("NominalCardiacTriggerTimePriorToRPeak",TagFromName.NominalCardiacTriggerTimePriorToRPeak);
		tagByName.put("ActualCardiacTriggerTimePriorToRPeak",TagFromName.ActualCardiacTriggerTimePriorToRPeak);
		tagByName.put("FrameAcquisitionNumber",TagFromName.FrameAcquisitionNumber);
		tagByName.put("DimensionIndexValues",TagFromName.DimensionIndexValues);
		tagByName.put("FrameComments",TagFromName.FrameComments);
		tagByName.put("ConcatenationUID",TagFromName.ConcatenationUID);
		tagByName.put("InConcatenationNumber",TagFromName.InConcatenationNumber);
		tagByName.put("InConcatenationTotalNumber",TagFromName.InConcatenationTotalNumber);
		tagByName.put("DimensionOrganizationUID",TagFromName.DimensionOrganizationUID);
		tagByName.put("DimensionIndexPointer",TagFromName.DimensionIndexPointer);
		tagByName.put("FunctionalGroupPointer",TagFromName.FunctionalGroupPointer);
		tagByName.put("UnassignedSharedConvertedAttributesSequence",TagFromName.UnassignedSharedConvertedAttributesSequence);
		tagByName.put("UnassignedPerFrameConvertedAttributesSequence",TagFromName.UnassignedPerFrameConvertedAttributesSequence);
		tagByName.put("ConversionSourceAttributesSequence",TagFromName.ConversionSourceAttributesSequence);
		tagByName.put("DimensionIndexPrivateCreator",TagFromName.DimensionIndexPrivateCreator);
		tagByName.put("DimensionOrganizationSequence",TagFromName.DimensionOrganizationSequence);
		tagByName.put("DimensionIndexSequence",TagFromName.DimensionIndexSequence);
		tagByName.put("ConcatenationFrameOffsetNumber",TagFromName.ConcatenationFrameOffsetNumber);
		tagByName.put("FunctionalGroupPrivateCreator",TagFromName.FunctionalGroupPrivateCreator);
		tagByName.put("NominalPercentageOfCardiacPhase",TagFromName.NominalPercentageOfCardiacPhase);
		tagByName.put("NominalPercentageOfRespiratoryPhase",TagFromName.NominalPercentageOfRespiratoryPhase);
		tagByName.put("StartingRespiratoryAmplitude",TagFromName.StartingRespiratoryAmplitude);
		tagByName.put("StartingRespiratoryPhase",TagFromName.StartingRespiratoryPhase);
		tagByName.put("EndingRespiratoryAmplitude",TagFromName.EndingRespiratoryAmplitude);
		tagByName.put("EndingRespiratoryPhase",TagFromName.EndingRespiratoryPhase);
		tagByName.put("RespiratoryTriggerType",TagFromName.RespiratoryTriggerType);
		tagByName.put("RRIntervalTimeNominal",TagFromName.RRIntervalTimeNominal);
		tagByName.put("ActualCardiacTriggerDelayTime",TagFromName.ActualCardiacTriggerDelayTime);
		tagByName.put("RespiratorySynchronizationSequence",TagFromName.RespiratorySynchronizationSequence);
		tagByName.put("RespiratoryIntervalTime",TagFromName.RespiratoryIntervalTime);
		tagByName.put("NominalRespiratoryTriggerDelayTime",TagFromName.NominalRespiratoryTriggerDelayTime);
		tagByName.put("RespiratoryTriggerDelayThreshold",TagFromName.RespiratoryTriggerDelayThreshold);
		tagByName.put("ActualRespiratoryTriggerDelayTime",TagFromName.ActualRespiratoryTriggerDelayTime);
		tagByName.put("ImagePositionVolume",TagFromName.ImagePositionVolume);
		tagByName.put("ImageOrientationVolume",TagFromName.ImageOrientationVolume);
		tagByName.put("UltrasoundAcquisitionGeometry",TagFromName.UltrasoundAcquisitionGeometry);
		tagByName.put("ApexPosition",TagFromName.ApexPosition);
		tagByName.put("VolumeToTransducerMappingMatrix",TagFromName.VolumeToTransducerMappingMatrix);
		tagByName.put("VolumeToTableMappingMatrix",TagFromName.VolumeToTableMappingMatrix);
		tagByName.put("VolumeToTransducerRelationship",TagFromName.VolumeToTransducerRelationship);
		tagByName.put("PatientFrameOfReferenceSource",TagFromName.PatientFrameOfReferenceSource);
		tagByName.put("TemporalPositionTimeOffset",TagFromName.TemporalPositionTimeOffset);
		tagByName.put("PlanePositionVolumeSequence",TagFromName.PlanePositionVolumeSequence);
		tagByName.put("PlaneOrientationVolumeSequence",TagFromName.PlaneOrientationVolumeSequence);
		tagByName.put("TemporalPositionSequence",TagFromName.TemporalPositionSequence);
		tagByName.put("DimensionOrganizationType",TagFromName.DimensionOrganizationType);
		tagByName.put("VolumeFrameOfReferenceUID",TagFromName.VolumeFrameOfReferenceUID);
		tagByName.put("TableFrameOfReferenceUID",TagFromName.TableFrameOfReferenceUID);
		tagByName.put("DimensionDescriptionLabel",TagFromName.DimensionDescriptionLabel);
		tagByName.put("PatientOrientationInFrameSequence",TagFromName.PatientOrientationInFrameSequence);
		tagByName.put("FrameLabel",TagFromName.FrameLabel);
		tagByName.put("AcquisitionIndex",TagFromName.AcquisitionIndex);
		tagByName.put("ContributingSOPInstancesReferenceSequence",TagFromName.ContributingSOPInstancesReferenceSequence);
		tagByName.put("ReconstructionIndex",TagFromName.ReconstructionIndex);
		tagByName.put("LightPathFilterPassThroughWavelength",TagFromName.LightPathFilterPassThroughWavelength);
		tagByName.put("LightPathFilterPassBand",TagFromName.LightPathFilterPassBand);
		tagByName.put("ImagePathFilterPassThroughWavelength",TagFromName.ImagePathFilterPassThroughWavelength);
		tagByName.put("ImagePathFilterPassBand",TagFromName.ImagePathFilterPassBand);
		tagByName.put("PatientEyeMovementCommanded",TagFromName.PatientEyeMovementCommanded);
		tagByName.put("PatientEyeMovementCommandCodeSequence",TagFromName.PatientEyeMovementCommandCodeSequence);
		tagByName.put("SphericalLensPower",TagFromName.SphericalLensPower);
		tagByName.put("CylinderLensPower",TagFromName.CylinderLensPower);
		tagByName.put("CylinderAxis",TagFromName.CylinderAxis);
		tagByName.put("EmmetropicMagnification",TagFromName.EmmetropicMagnification);
		tagByName.put("IntraOcularPressure",TagFromName.IntraOcularPressure);
		tagByName.put("HorizontalFieldOfView",TagFromName.HorizontalFieldOfView);
		tagByName.put("PupilDilated",TagFromName.PupilDilated);
		tagByName.put("DegreeOfDilation",TagFromName.DegreeOfDilation);
		tagByName.put("StereoBaselineAngle",TagFromName.StereoBaselineAngle);
		tagByName.put("StereoBaselineDisplacement",TagFromName.StereoBaselineDisplacement);
		tagByName.put("StereoHorizontalPixelOffset",TagFromName.StereoHorizontalPixelOffset);
		tagByName.put("StereoVerticalPixelOffset",TagFromName.StereoVerticalPixelOffset);
		tagByName.put("StereoRotation",TagFromName.StereoRotation);
		tagByName.put("AcquisitionDeviceTypeCodeSequence",TagFromName.AcquisitionDeviceTypeCodeSequence);
		tagByName.put("IlluminationTypeCodeSequence",TagFromName.IlluminationTypeCodeSequence);
		tagByName.put("LightPathFilterTypeStackCodeSequence",TagFromName.LightPathFilterTypeStackCodeSequence);
		tagByName.put("ImagePathFilterTypeStackCodeSequence",TagFromName.ImagePathFilterTypeStackCodeSequence);
		tagByName.put("LensesCodeSequence",TagFromName.LensesCodeSequence);
		tagByName.put("ChannelDescriptionCodeSequence",TagFromName.ChannelDescriptionCodeSequence);
		tagByName.put("RefractiveStateSequence",TagFromName.RefractiveStateSequence);
		tagByName.put("MydriaticAgentCodeSequence",TagFromName.MydriaticAgentCodeSequence);
		tagByName.put("RelativeImagePositionCodeSequence",TagFromName.RelativeImagePositionCodeSequence);
		tagByName.put("CameraAngleOfView",TagFromName.CameraAngleOfView);
		tagByName.put("StereoPairsSequence",TagFromName.StereoPairsSequence);
		tagByName.put("LeftImageSequence",TagFromName.LeftImageSequence);
		tagByName.put("RightImageSequence",TagFromName.RightImageSequence);
		tagByName.put("StereoPairsPresent",TagFromName.StereoPairsPresent);
		tagByName.put("AxialLengthOfTheEye",TagFromName.AxialLengthOfTheEye);
		tagByName.put("OphthalmicFrameLocationSequence",TagFromName.OphthalmicFrameLocationSequence);
		tagByName.put("ReferenceCoordinates",TagFromName.ReferenceCoordinates);
		tagByName.put("DepthSpatialResolution",TagFromName.DepthSpatialResolution);
		tagByName.put("MaximumDepthDistortion",TagFromName.MaximumDepthDistortion);
		tagByName.put("AlongScanSpatialResolution",TagFromName.AlongScanSpatialResolution);
		tagByName.put("MaximumAlongScanDistortion",TagFromName.MaximumAlongScanDistortion);
		tagByName.put("OphthalmicImageOrientation",TagFromName.OphthalmicImageOrientation);
		tagByName.put("DepthOfTransverseImage",TagFromName.DepthOfTransverseImage);
		tagByName.put("MydriaticAgentConcentrationUnitsSequence",TagFromName.MydriaticAgentConcentrationUnitsSequence);
		tagByName.put("AcrossScanSpatialResolution",TagFromName.AcrossScanSpatialResolution);
		tagByName.put("MaximumAcrossScanDistortion",TagFromName.MaximumAcrossScanDistortion);
		tagByName.put("MydriaticAgentConcentration",TagFromName.MydriaticAgentConcentration);
		tagByName.put("IlluminationWaveLength",TagFromName.IlluminationWaveLength);
		tagByName.put("IlluminationPower",TagFromName.IlluminationPower);
		tagByName.put("IlluminationBandwidth",TagFromName.IlluminationBandwidth);
		tagByName.put("MydriaticAgentSequence",TagFromName.MydriaticAgentSequence);
		tagByName.put("OphthalmicAxialMeasurementsRightEyeSequence",TagFromName.OphthalmicAxialMeasurementsRightEyeSequence);
		tagByName.put("OphthalmicAxialMeasurementsLeftEyeSequence",TagFromName.OphthalmicAxialMeasurementsLeftEyeSequence);
		tagByName.put("OphthalmicAxialMeasurementsDeviceType",TagFromName.OphthalmicAxialMeasurementsDeviceType);
		tagByName.put("OphthalmicAxialLengthMeasurementsType",TagFromName.OphthalmicAxialLengthMeasurementsType);
		tagByName.put("OphthalmicAxialLengthSequence",TagFromName.OphthalmicAxialLengthSequence);
		tagByName.put("OphthalmicAxialLength",TagFromName.OphthalmicAxialLength);
		tagByName.put("LensStatusCodeSequence",TagFromName.LensStatusCodeSequence);
		tagByName.put("VitreousStatusCodeSequence",TagFromName.VitreousStatusCodeSequence);
		tagByName.put("IOLFormulaCodeSequence",TagFromName.IOLFormulaCodeSequence);
		tagByName.put("IOLFormulaDetail",TagFromName.IOLFormulaDetail);
		tagByName.put("KeratometerIndex",TagFromName.KeratometerIndex);
		tagByName.put("SourceOfOphthalmicAxialLengthCodeSequence",TagFromName.SourceOfOphthalmicAxialLengthCodeSequence);
		tagByName.put("TargetRefraction",TagFromName.TargetRefraction);
		tagByName.put("RefractiveProcedureOccurred",TagFromName.RefractiveProcedureOccurred);
		tagByName.put("RefractiveSurgeryTypeCodeSequence",TagFromName.RefractiveSurgeryTypeCodeSequence);
		tagByName.put("OphthalmicUltrasoundMethodCodeSequence",TagFromName.OphthalmicUltrasoundMethodCodeSequence);
		tagByName.put("OphthalmicAxialLengthMeasurementsSequence",TagFromName.OphthalmicAxialLengthMeasurementsSequence);
		tagByName.put("IOLPower",TagFromName.IOLPower);
		tagByName.put("PredictedRefractiveError",TagFromName.PredictedRefractiveError);
		tagByName.put("OphthalmicAxialLengthVelocity",TagFromName.OphthalmicAxialLengthVelocity);
		tagByName.put("LensStatusDescription",TagFromName.LensStatusDescription);
		tagByName.put("VitreousStatusDescription",TagFromName.VitreousStatusDescription);
		tagByName.put("IOLPowerSequence",TagFromName.IOLPowerSequence);
		tagByName.put("LensConstantSequence",TagFromName.LensConstantSequence);
		tagByName.put("IOLManufacturer",TagFromName.IOLManufacturer);
		tagByName.put("LensConstantDescription",TagFromName.LensConstantDescription);
		tagByName.put("ImplantName",TagFromName.ImplantName);
		tagByName.put("KeratometryMeasurementTypeCodeSequence",TagFromName.KeratometryMeasurementTypeCodeSequence);
		tagByName.put("ImplantPartNumber",TagFromName.ImplantPartNumber);
		tagByName.put("ReferencedOphthalmicAxialMeasurementsSequence",TagFromName.ReferencedOphthalmicAxialMeasurementsSequence);
		tagByName.put("OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence",TagFromName.OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence);
		tagByName.put("RefractiveErrorBeforeRefractiveSurgeryCodeSequence",TagFromName.RefractiveErrorBeforeRefractiveSurgeryCodeSequence);
		tagByName.put("IOLPowerForExactEmmetropia",TagFromName.IOLPowerForExactEmmetropia);
		tagByName.put("IOLPowerForExactTargetRefraction",TagFromName.IOLPowerForExactTargetRefraction);
		tagByName.put("AnteriorChamberDepthDefinitionCodeSequence",TagFromName.AnteriorChamberDepthDefinitionCodeSequence);
		tagByName.put("LensThicknessSequence",TagFromName.LensThicknessSequence);
		tagByName.put("AnteriorChamberDepthSequence",TagFromName.AnteriorChamberDepthSequence);
		tagByName.put("LensThickness",TagFromName.LensThickness);
		tagByName.put("AnteriorChamberDepth",TagFromName.AnteriorChamberDepth);
		tagByName.put("SourceOfLensThicknessDataCodeSequence",TagFromName.SourceOfLensThicknessDataCodeSequence);
		tagByName.put("SourceOfAnteriorChamberDepthDataCodeSequence",TagFromName.SourceOfAnteriorChamberDepthDataCodeSequence);
		tagByName.put("SourceOfRefractiveMeasurementsSequence",TagFromName.SourceOfRefractiveMeasurementsSequence);
		tagByName.put("SourceOfRefractiveMeasurementsCodeSequence",TagFromName.SourceOfRefractiveMeasurementsCodeSequence);
		tagByName.put("OphthalmicAxialLengthMeasurementModified",TagFromName.OphthalmicAxialLengthMeasurementModified);
		tagByName.put("OphthalmicAxialLengthDataSourceCodeSequence",TagFromName.OphthalmicAxialLengthDataSourceCodeSequence);
		tagByName.put("OphthalmicAxialLengthAcquisitionMethodCodeSequence",TagFromName.OphthalmicAxialLengthAcquisitionMethodCodeSequence);
		tagByName.put("SignalToNoiseRatio",TagFromName.SignalToNoiseRatio);
		tagByName.put("OphthalmicAxialLengthDataSourceDescription",TagFromName.OphthalmicAxialLengthDataSourceDescription);
		tagByName.put("OphthalmicAxialLengthMeasurementsTotalLengthSequence",TagFromName.OphthalmicAxialLengthMeasurementsTotalLengthSequence);
		tagByName.put("OphthalmicAxialLengthMeasurementsSegmentalLengthSequence",TagFromName.OphthalmicAxialLengthMeasurementsSegmentalLengthSequence);
		tagByName.put("OphthalmicAxialLengthMeasurementsLengthSummationSequence",TagFromName.OphthalmicAxialLengthMeasurementsLengthSummationSequence);
		tagByName.put("UltrasoundOphthalmicAxialLengthMeasurementsSequence",TagFromName.UltrasoundOphthalmicAxialLengthMeasurementsSequence);
		tagByName.put("OpticalOphthalmicAxialLengthMeasurementsSequence",TagFromName.OpticalOphthalmicAxialLengthMeasurementsSequence);
		tagByName.put("UltrasoundSelectedOphthalmicAxialLengthSequence",TagFromName.UltrasoundSelectedOphthalmicAxialLengthSequence);
		tagByName.put("OphthalmicAxialLengthSelectionMethodCodeSequence",TagFromName.OphthalmicAxialLengthSelectionMethodCodeSequence);
		tagByName.put("OpticalSelectedOphthalmicAxialLengthSequence",TagFromName.OpticalSelectedOphthalmicAxialLengthSequence);
		tagByName.put("SelectedSegmentalOphthalmicAxialLengthSequence",TagFromName.SelectedSegmentalOphthalmicAxialLengthSequence);
		tagByName.put("SelectedTotalOphthalmicAxialLengthSequence",TagFromName.SelectedTotalOphthalmicAxialLengthSequence);
		tagByName.put("OphthalmicAxialLengthQualityMetricSequence",TagFromName.OphthalmicAxialLengthQualityMetricSequence);
		tagByName.put("OphthalmicAxialLengthQualityMetricTypeCodeSequence",TagFromName.OphthalmicAxialLengthQualityMetricTypeCodeSequence);
		tagByName.put("OphthalmicAxialLengthQualityMetricTypeDescription",TagFromName.OphthalmicAxialLengthQualityMetricTypeDescription);
		tagByName.put("IntraocularLensCalculationsRightEyeSequence",TagFromName.IntraocularLensCalculationsRightEyeSequence);
		tagByName.put("IntraocularLensCalculationsLeftEyeSequence",TagFromName.IntraocularLensCalculationsLeftEyeSequence);
		tagByName.put("ReferencedOphthalmicAxialLengthMeasurementQCImageSequence",TagFromName.ReferencedOphthalmicAxialLengthMeasurementQCImageSequence);
		tagByName.put("OphthalmicMappingDeviceType",TagFromName.OphthalmicMappingDeviceType);
		tagByName.put("AcquisitionMethodCodeSequence",TagFromName.AcquisitionMethodCodeSequence);
		tagByName.put("AcquisitionMethodAlgorithmSequence",TagFromName.AcquisitionMethodAlgorithmSequence);
		tagByName.put("OphthalmicThicknessMapTypeCodeSequence",TagFromName.OphthalmicThicknessMapTypeCodeSequence);
		tagByName.put("OphthalmicThicknessMappingNormalsSequence",TagFromName.OphthalmicThicknessMappingNormalsSequence);
		tagByName.put("RetinalThicknessDefinitionCodeSequence",TagFromName.RetinalThicknessDefinitionCodeSequence);
		tagByName.put("PixelValueMappingToCodedConceptSequence",TagFromName.PixelValueMappingToCodedConceptSequence);
		tagByName.put("MappedPixelValue",TagFromName.MappedPixelValue);
		tagByName.put("PixelValueMappingExplanation",TagFromName.PixelValueMappingExplanation);
		tagByName.put("OphthalmicThicknessMapQualityThresholdSequence",TagFromName.OphthalmicThicknessMapQualityThresholdSequence);
		tagByName.put("OphthalmicThicknessMapThresholdQualityRating",TagFromName.OphthalmicThicknessMapThresholdQualityRating);
		tagByName.put("AnatomicStructureReferencePoint",TagFromName.AnatomicStructureReferencePoint);
		tagByName.put("RegistrationToLocalizerSequence",TagFromName.RegistrationToLocalizerSequence);
		tagByName.put("RegisteredLocalizerUnits",TagFromName.RegisteredLocalizerUnits);
		tagByName.put("RegisteredLocalizerTopLeftHandCorner",TagFromName.RegisteredLocalizerTopLeftHandCorner);
		tagByName.put("RegisteredLocalizerBottomRightHandCorner",TagFromName.RegisteredLocalizerBottomRightHandCorner);
		tagByName.put("OphthalmicThicknessMapQualityRatingSequence",TagFromName.OphthalmicThicknessMapQualityRatingSequence);
		tagByName.put("RelevantOPTAttributesSequence",TagFromName.RelevantOPTAttributesSequence);
		tagByName.put("TransformationMethodCodeSequence",TagFromName.TransformationMethodCodeSequence);
		tagByName.put("TransformationAlgorithmSequence",TagFromName.TransformationAlgorithmSequence);
		tagByName.put("OphthalmicAxialLengthMethod",TagFromName.OphthalmicAxialLengthMethod);
		tagByName.put("OphthalmicFOV",TagFromName.OphthalmicFOV);
		tagByName.put("TwoDimensionalToThreeDimensionalMapSequence",TagFromName.TwoDimensionalToThreeDimensionalMapSequence);
		tagByName.put("WideFieldOphthalmicPhotographyQualityRatingSequence",TagFromName.WideFieldOphthalmicPhotographyQualityRatingSequence);
		tagByName.put("WideFieldOphthalmicPhotographyQualityThresholdSequence",TagFromName.WideFieldOphthalmicPhotographyQualityThresholdSequence);
		tagByName.put("WideFieldOphthalmicPhotographyThresholdQualityRating",TagFromName.WideFieldOphthalmicPhotographyThresholdQualityRating);
		tagByName.put("XCoordinatesCenterPixelViewAngle",TagFromName.XCoordinatesCenterPixelViewAngle);
		tagByName.put("YCoordinatesCenterPixelViewAngle",TagFromName.YCoordinatesCenterPixelViewAngle);
		tagByName.put("NumberOfMapPoints",TagFromName.NumberOfMapPoints);
		tagByName.put("TwoDimensionalToThreeDimensionalMapData",TagFromName.TwoDimensionalToThreeDimensionalMapData);
		tagByName.put("DerivationAlgorithmSequence",TagFromName.DerivationAlgorithmSequence);
		tagByName.put("OphthalmicImageTypeCodeSequence",TagFromName.OphthalmicImageTypeCodeSequence);
		tagByName.put("OphthalmicImageTypeDescription",TagFromName.OphthalmicImageTypeDescription);
		tagByName.put("ScanPatternTypeCodeSequence",TagFromName.ScanPatternTypeCodeSequence);
		tagByName.put("ReferencedSurfaceMeshIdentificationSequence",TagFromName.ReferencedSurfaceMeshIdentificationSequence);
		tagByName.put("OphthalmicVolumetricPropertiesFlag",TagFromName.OphthalmicVolumetricPropertiesFlag);
		tagByName.put("OphthalmicAnatomicReferencePointXCoordinate",TagFromName.OphthalmicAnatomicReferencePointXCoordinate);
		tagByName.put("OphthalmicAnatomicReferencePointYCoordinate",TagFromName.OphthalmicAnatomicReferencePointYCoordinate);
		tagByName.put("OphthalmicEnFaceImageQualityRatingSequence",TagFromName.OphthalmicEnFaceImageQualityRatingSequence);
		tagByName.put("QualityThreshold",TagFromName.QualityThreshold);
		tagByName.put("OCTBscanAnalysisAcquisitionParametersSequence",TagFromName.OCTBscanAnalysisAcquisitionParametersSequence);
		tagByName.put("NumberofBscansPerFrame",TagFromName.NumberofBscansPerFrame);
		tagByName.put("BscanSlabThickness",TagFromName.BscanSlabThickness);
		tagByName.put("DistanceBetweenBscanSlabs",TagFromName.DistanceBetweenBscanSlabs);
		tagByName.put("BscanCycleTime",TagFromName.BscanCycleTime);
		tagByName.put("BscanCycleTimeVector",TagFromName.BscanCycleTimeVector);
		tagByName.put("AscanRate",TagFromName.AscanRate);
		tagByName.put("BscanRate",TagFromName.BscanRate);
		tagByName.put("SurfaceMeshZPixelOffset",TagFromName.SurfaceMeshZPixelOffset);
		tagByName.put("VisualFieldHorizontalExtent",TagFromName.VisualFieldHorizontalExtent);
		tagByName.put("VisualFieldVerticalExtent",TagFromName.VisualFieldVerticalExtent);
		tagByName.put("VisualFieldShape",TagFromName.VisualFieldShape);
		tagByName.put("ScreeningTestModeCodeSequence",TagFromName.ScreeningTestModeCodeSequence);
		tagByName.put("MaximumStimulusLuminance",TagFromName.MaximumStimulusLuminance);
		tagByName.put("BackgroundLuminance",TagFromName.BackgroundLuminance);
		tagByName.put("StimulusColorCodeSequence",TagFromName.StimulusColorCodeSequence);
		tagByName.put("BackgroundIlluminationColorCodeSequence",TagFromName.BackgroundIlluminationColorCodeSequence);
		tagByName.put("StimulusArea",TagFromName.StimulusArea);
		tagByName.put("StimulusPresentationTime",TagFromName.StimulusPresentationTime);
		tagByName.put("FixationSequence",TagFromName.FixationSequence);
		tagByName.put("FixationMonitoringCodeSequence",TagFromName.FixationMonitoringCodeSequence);
		tagByName.put("VisualFieldCatchTrialSequence",TagFromName.VisualFieldCatchTrialSequence);
		tagByName.put("FixationCheckedQuantity",TagFromName.FixationCheckedQuantity);
		tagByName.put("PatientNotProperlyFixatedQuantity",TagFromName.PatientNotProperlyFixatedQuantity);
		tagByName.put("PresentedVisualStimuliDataFlag",TagFromName.PresentedVisualStimuliDataFlag);
		tagByName.put("NumberOfVisualStimuli",TagFromName.NumberOfVisualStimuli);
		tagByName.put("ExcessiveFixationLossesDataFlag",TagFromName.ExcessiveFixationLossesDataFlag);
		tagByName.put("ExcessiveFixationLosses",TagFromName.ExcessiveFixationLosses);
		tagByName.put("StimuliRetestingQuantity",TagFromName.StimuliRetestingQuantity);
		tagByName.put("CommentsOnPatientPerformanceOfVisualField",TagFromName.CommentsOnPatientPerformanceOfVisualField);
		tagByName.put("FalseNegativesEstimateFlag",TagFromName.FalseNegativesEstimateFlag);
		tagByName.put("FalseNegativesEstimate",TagFromName.FalseNegativesEstimate);
		tagByName.put("NegativeCatchTrialsQuantity",TagFromName.NegativeCatchTrialsQuantity);
		tagByName.put("FalseNegativesQuantity",TagFromName.FalseNegativesQuantity);
		tagByName.put("ExcessiveFalseNegativesDataFlag",TagFromName.ExcessiveFalseNegativesDataFlag);
		tagByName.put("ExcessiveFalseNegatives",TagFromName.ExcessiveFalseNegatives);
		tagByName.put("FalsePositivesEstimateFlag",TagFromName.FalsePositivesEstimateFlag);
		tagByName.put("FalsePositivesEstimate",TagFromName.FalsePositivesEstimate);
		tagByName.put("CatchTrialsDataFlag",TagFromName.CatchTrialsDataFlag);
		tagByName.put("PositiveCatchTrialsQuantity",TagFromName.PositiveCatchTrialsQuantity);
		tagByName.put("TestPointNormalsDataFlag",TagFromName.TestPointNormalsDataFlag);
		tagByName.put("TestPointNormalsSequence",TagFromName.TestPointNormalsSequence);
		tagByName.put("GlobalDeviationProbabilityNormalsFlag",TagFromName.GlobalDeviationProbabilityNormalsFlag);
		tagByName.put("FalsePositivesQuantity",TagFromName.FalsePositivesQuantity);
		tagByName.put("ExcessiveFalsePositivesDataFlag",TagFromName.ExcessiveFalsePositivesDataFlag);
		tagByName.put("ExcessiveFalsePositives",TagFromName.ExcessiveFalsePositives);
		tagByName.put("VisualFieldTestNormalsFlag",TagFromName.VisualFieldTestNormalsFlag);
		tagByName.put("ResultsNormalsSequence",TagFromName.ResultsNormalsSequence);
		tagByName.put("AgeCorrectedSensitivityDeviationAlgorithmSequence",TagFromName.AgeCorrectedSensitivityDeviationAlgorithmSequence);
		tagByName.put("GlobalDeviationFromNormal",TagFromName.GlobalDeviationFromNormal);
		tagByName.put("GeneralizedDefectSensitivityDeviationAlgorithmSequence",TagFromName.GeneralizedDefectSensitivityDeviationAlgorithmSequence);
		tagByName.put("LocalizedDeviationFromNormal",TagFromName.LocalizedDeviationFromNormal);
		tagByName.put("PatientReliabilityIndicator",TagFromName.PatientReliabilityIndicator);
		tagByName.put("VisualFieldMeanSensitivity",TagFromName.VisualFieldMeanSensitivity);
		tagByName.put("GlobalDeviationProbability",TagFromName.GlobalDeviationProbability);
		tagByName.put("LocalDeviationProbabilityNormalsFlag",TagFromName.LocalDeviationProbabilityNormalsFlag);
		tagByName.put("LocalizedDeviationProbability",TagFromName.LocalizedDeviationProbability);
		tagByName.put("ShortTermFluctuationCalculated",TagFromName.ShortTermFluctuationCalculated);
		tagByName.put("ShortTermFluctuation",TagFromName.ShortTermFluctuation);
		tagByName.put("ShortTermFluctuationProbabilityCalculated",TagFromName.ShortTermFluctuationProbabilityCalculated);
		tagByName.put("ShortTermFluctuationProbability",TagFromName.ShortTermFluctuationProbability);
		tagByName.put("CorrectedLocalizedDeviationFromNormalCalculated",TagFromName.CorrectedLocalizedDeviationFromNormalCalculated);
		tagByName.put("CorrectedLocalizedDeviationFromNormal",TagFromName.CorrectedLocalizedDeviationFromNormal);
		tagByName.put("CorrectedLocalizedDeviationFromNormalProbabilityCalculated",TagFromName.CorrectedLocalizedDeviationFromNormalProbabilityCalculated);
		tagByName.put("CorrectedLocalizedDeviationFromNormalProbability",TagFromName.CorrectedLocalizedDeviationFromNormalProbability);
		tagByName.put("GlobalDeviationProbabilitySequence",TagFromName.GlobalDeviationProbabilitySequence);
		tagByName.put("LocalizedDeviationProbabilitySequence",TagFromName.LocalizedDeviationProbabilitySequence);
		tagByName.put("FovealSensitivityMeasured",TagFromName.FovealSensitivityMeasured);
		tagByName.put("FovealSensitivity",TagFromName.FovealSensitivity);
		tagByName.put("VisualFieldTestDuration",TagFromName.VisualFieldTestDuration);
		tagByName.put("VisualFieldTestPointSequence",TagFromName.VisualFieldTestPointSequence);
		tagByName.put("VisualFieldTestPointXCoordinate",TagFromName.VisualFieldTestPointXCoordinate);
		tagByName.put("VisualFieldTestPointYCoordinate",TagFromName.VisualFieldTestPointYCoordinate);
		tagByName.put("AgeCorrectedSensitivityDeviationValue",TagFromName.AgeCorrectedSensitivityDeviationValue);
		tagByName.put("StimulusResults",TagFromName.StimulusResults);
		tagByName.put("SensitivityValue",TagFromName.SensitivityValue);
		tagByName.put("RetestStimulusSeen",TagFromName.RetestStimulusSeen);
		tagByName.put("RetestSensitivityValue",TagFromName.RetestSensitivityValue);
		tagByName.put("VisualFieldTestPointNormalsSequence",TagFromName.VisualFieldTestPointNormalsSequence);
		tagByName.put("QuantifiedDefect",TagFromName.QuantifiedDefect);
		tagByName.put("AgeCorrectedSensitivityDeviationProbabilityValue",TagFromName.AgeCorrectedSensitivityDeviationProbabilityValue);
		tagByName.put("GeneralizedDefectCorrectedSensitivityDeviationFlag",TagFromName.GeneralizedDefectCorrectedSensitivityDeviationFlag);
		tagByName.put("GeneralizedDefectCorrectedSensitivityDeviationValue",TagFromName.GeneralizedDefectCorrectedSensitivityDeviationValue);
		tagByName.put("GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue",TagFromName.GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue);
		tagByName.put("MinimumSensitivityValue",TagFromName.MinimumSensitivityValue);
		tagByName.put("BlindSpotLocalized",TagFromName.BlindSpotLocalized);
		tagByName.put("BlindSpotXCoordinate",TagFromName.BlindSpotXCoordinate);
		tagByName.put("BlindSpotYCoordinate",TagFromName.BlindSpotYCoordinate);
		tagByName.put("VisualAcuityMeasurementSequence",TagFromName.VisualAcuityMeasurementSequence);
		tagByName.put("RefractiveParametersUsedOnPatientSequence",TagFromName.RefractiveParametersUsedOnPatientSequence);
		tagByName.put("MeasurementLaterality",TagFromName.MeasurementLaterality);
		tagByName.put("OphthalmicPatientClinicalInformationLeftEyeSequence",TagFromName.OphthalmicPatientClinicalInformationLeftEyeSequence);
		tagByName.put("OphthalmicPatientClinicalInformationRightEyeSequence",TagFromName.OphthalmicPatientClinicalInformationRightEyeSequence);
		tagByName.put("FovealPointNormativeDataFlag",TagFromName.FovealPointNormativeDataFlag);
		tagByName.put("FovealPointProbabilityValue",TagFromName.FovealPointProbabilityValue);
		tagByName.put("ScreeningBaselineMeasured",TagFromName.ScreeningBaselineMeasured);
		tagByName.put("ScreeningBaselineMeasuredSequence",TagFromName.ScreeningBaselineMeasuredSequence);
		tagByName.put("ScreeningBaselineType",TagFromName.ScreeningBaselineType);
		tagByName.put("ScreeningBaselineValue",TagFromName.ScreeningBaselineValue);
		tagByName.put("AlgorithmSource",TagFromName.AlgorithmSource);
		tagByName.put("DataSetName",TagFromName.DataSetName);
		tagByName.put("DataSetVersion",TagFromName.DataSetVersion);
		tagByName.put("DataSetSource",TagFromName.DataSetSource);
		tagByName.put("DataSetDescription",TagFromName.DataSetDescription);
		tagByName.put("VisualFieldTestReliabilityGlobalIndexSequence",TagFromName.VisualFieldTestReliabilityGlobalIndexSequence);
		tagByName.put("VisualFieldGlobalResultsIndexSequence",TagFromName.VisualFieldGlobalResultsIndexSequence);
		tagByName.put("DataObservationSequence",TagFromName.DataObservationSequence);
		tagByName.put("IndexNormalsFlag",TagFromName.IndexNormalsFlag);
		tagByName.put("IndexProbability",TagFromName.IndexProbability);
		tagByName.put("IndexProbabilitySequence",TagFromName.IndexProbabilitySequence);
		tagByName.put("SamplesPerPixel",TagFromName.SamplesPerPixel);
		tagByName.put("SamplesPerPixelUsed",TagFromName.SamplesPerPixelUsed);
		tagByName.put("PhotometricInterpretation",TagFromName.PhotometricInterpretation);
		tagByName.put("ImageDimensions",TagFromName.ImageDimensions);
		tagByName.put("PlanarConfiguration",TagFromName.PlanarConfiguration);
		tagByName.put("NumberOfFrames",TagFromName.NumberOfFrames);
		tagByName.put("FrameIncrementPointer",TagFromName.FrameIncrementPointer);
		tagByName.put("FrameDimensionPointer",TagFromName.FrameDimensionPointer);
		tagByName.put("Rows",TagFromName.Rows);
		tagByName.put("Columns",TagFromName.Columns);
		tagByName.put("Planes",TagFromName.Planes);
		tagByName.put("UltrasoundColorDataPresent",TagFromName.UltrasoundColorDataPresent);
		tagByName.put("PixelSpacing",TagFromName.PixelSpacing);
		tagByName.put("ZoomFactor",TagFromName.ZoomFactor);
		tagByName.put("ZoomCenter",TagFromName.ZoomCenter);
		tagByName.put("PixelAspectRatio",TagFromName.PixelAspectRatio);
		tagByName.put("ImageFormat",TagFromName.ImageFormat);
		tagByName.put("ManipulatedImage",TagFromName.ManipulatedImage);
		tagByName.put("CorrectedImage",TagFromName.CorrectedImage);
		tagByName.put("CompressionRecognitionCode",TagFromName.CompressionRecognitionCode);
		tagByName.put("CompressionCode",TagFromName.CompressionCode);
		tagByName.put("CompressionOriginator",TagFromName.CompressionOriginator);
		tagByName.put("CompressionLabel",TagFromName.CompressionLabel);
		tagByName.put("CompressionDescription",TagFromName.CompressionDescription);
		tagByName.put("CompressionSequence",TagFromName.CompressionSequence);
		tagByName.put("CompressionStepPointers",TagFromName.CompressionStepPointers);
		tagByName.put("RepeatInterval",TagFromName.RepeatInterval);
		tagByName.put("BitsGrouped",TagFromName.BitsGrouped);
		tagByName.put("PerimeterTable",TagFromName.PerimeterTable);
		tagByName.put("PerimeterValue",TagFromName.PerimeterValue);
		tagByName.put("PredictorRows",TagFromName.PredictorRows);
		tagByName.put("PredictorColumns",TagFromName.PredictorColumns);
		tagByName.put("PredictorConstants",TagFromName.PredictorConstants);
		tagByName.put("BlockedPixels",TagFromName.BlockedPixels);
		tagByName.put("BlockRows",TagFromName.BlockRows);
		tagByName.put("BlockColumns",TagFromName.BlockColumns);
		tagByName.put("RowOverlap",TagFromName.RowOverlap);
		tagByName.put("ColumnOverlap",TagFromName.ColumnOverlap);
		tagByName.put("BitsAllocated",TagFromName.BitsAllocated);
		tagByName.put("BitsStored",TagFromName.BitsStored);
		tagByName.put("HighBit",TagFromName.HighBit);
		tagByName.put("PixelRepresentation",TagFromName.PixelRepresentation);
		tagByName.put("SmallestValidPixelValue",TagFromName.SmallestValidPixelValue);
		tagByName.put("LargestValidPixelValue",TagFromName.LargestValidPixelValue);
		tagByName.put("SmallestImagePixelValue",TagFromName.SmallestImagePixelValue);
		tagByName.put("LargestImagePixelValue",TagFromName.LargestImagePixelValue);
		tagByName.put("SmallestPixelValueInSeries",TagFromName.SmallestPixelValueInSeries);
		tagByName.put("LargestPixelValueInSeries",TagFromName.LargestPixelValueInSeries);
		tagByName.put("SmallestImagePixelValueInPlane",TagFromName.SmallestImagePixelValueInPlane);
		tagByName.put("LargestImagePixelValueInPlane",TagFromName.LargestImagePixelValueInPlane);
		tagByName.put("PixelPaddingValue",TagFromName.PixelPaddingValue);
		tagByName.put("PixelPaddingRangeLimit",TagFromName.PixelPaddingRangeLimit);
		tagByName.put("FloatPixelPaddingValue",TagFromName.FloatPixelPaddingValue);
		tagByName.put("DoubleFloatPixelPaddingValue",TagFromName.DoubleFloatPixelPaddingValue);
		tagByName.put("FloatPixelPaddingRangeLimit",TagFromName.FloatPixelPaddingRangeLimit);
		tagByName.put("DoubleFloatPixelPaddingRangeLimit",TagFromName.DoubleFloatPixelPaddingRangeLimit);
		tagByName.put("ImageLocation",TagFromName.ImageLocation);
		tagByName.put("QualityControlImage",TagFromName.QualityControlImage);
		tagByName.put("BurnedInAnnotation",TagFromName.BurnedInAnnotation);
		tagByName.put("RecognizableVisualFeatures",TagFromName.RecognizableVisualFeatures);
		tagByName.put("LongitudinalTemporalInformationModified",TagFromName.LongitudinalTemporalInformationModified);
		tagByName.put("ReferencedColorPaletteInstanceUID",TagFromName.ReferencedColorPaletteInstanceUID);
		tagByName.put("TransformLabel",TagFromName.TransformLabel);
		tagByName.put("TransformVersionNumber",TagFromName.TransformVersionNumber);
		tagByName.put("NumberOfTransformSteps",TagFromName.NumberOfTransformSteps);
		tagByName.put("SequenceOfCompressedData",TagFromName.SequenceOfCompressedData);
		tagByName.put("DetailsOfCoefficients",TagFromName.DetailsOfCoefficients);
		tagByName.put("DCTLabel",TagFromName.DCTLabel);
		tagByName.put("DataBlockDescription",TagFromName.DataBlockDescription);
		tagByName.put("DataBlock",TagFromName.DataBlock);
		tagByName.put("NormalizationFactorFormat",TagFromName.NormalizationFactorFormat);
		tagByName.put("ZonalMapNumberFormat",TagFromName.ZonalMapNumberFormat);
		tagByName.put("ZonalMapLocation",TagFromName.ZonalMapLocation);
		tagByName.put("ZonalMapFormat",TagFromName.ZonalMapFormat);
		tagByName.put("AdaptiveMapFormat",TagFromName.AdaptiveMapFormat);
		tagByName.put("CodeNumberFormat",TagFromName.CodeNumberFormat);
		tagByName.put("PixelSpacingCalibrationType",TagFromName.PixelSpacingCalibrationType);
		tagByName.put("PixelSpacingCalibrationDescription",TagFromName.PixelSpacingCalibrationDescription);
		tagByName.put("PixelIntensityRelationship",TagFromName.PixelIntensityRelationship);
		tagByName.put("PixelIntensityRelationshipSign",TagFromName.PixelIntensityRelationshipSign);
		tagByName.put("WindowCenter",TagFromName.WindowCenter);
		tagByName.put("WindowWidth",TagFromName.WindowWidth);
		tagByName.put("RescaleIntercept",TagFromName.RescaleIntercept);
		tagByName.put("RescaleSlope",TagFromName.RescaleSlope);
		tagByName.put("RescaleType",TagFromName.RescaleType);
		tagByName.put("WindowCenterWidthExplanation",TagFromName.WindowCenterWidthExplanation);
		tagByName.put("VOILUTFunction",TagFromName.VOILUTFunction);
		tagByName.put("GrayScale",TagFromName.GrayScale);
		tagByName.put("RecommendedViewingMode",TagFromName.RecommendedViewingMode);
		tagByName.put("GrayLookupTableDescriptor",TagFromName.GrayLookupTableDescriptor);
		tagByName.put("RedPaletteColorLookupTableDescriptor",TagFromName.RedPaletteColorLookupTableDescriptor);
		tagByName.put("GreenPaletteColorLookupTableDescriptor",TagFromName.GreenPaletteColorLookupTableDescriptor);
		tagByName.put("BluePaletteColorLookupTableDescriptor",TagFromName.BluePaletteColorLookupTableDescriptor);
		tagByName.put("AlphaPaletteColorLookupTableDescriptor",TagFromName.AlphaPaletteColorLookupTableDescriptor);
		tagByName.put("LargeRedPaletteColorLookupTableDescriptor",TagFromName.LargeRedPaletteColorLookupTableDescriptor);
		tagByName.put("LargeGreenPaletteColorLookupTableDescriptor",TagFromName.LargeGreenPaletteColorLookupTableDescriptor);
		tagByName.put("LargeBluePaletteColorLookupTableDescriptor",TagFromName.LargeBluePaletteColorLookupTableDescriptor);
		tagByName.put("PaletteColorLookupTableUID",TagFromName.PaletteColorLookupTableUID);
		tagByName.put("GrayLookupTableData",TagFromName.GrayLookupTableData);
		tagByName.put("RedPaletteColorLookupTableData",TagFromName.RedPaletteColorLookupTableData);
		tagByName.put("GreenPaletteColorLookupTableData",TagFromName.GreenPaletteColorLookupTableData);
		tagByName.put("BluePaletteColorLookupTableData",TagFromName.BluePaletteColorLookupTableData);
		tagByName.put("AlphaPaletteColorLookupTableData",TagFromName.AlphaPaletteColorLookupTableData);
		tagByName.put("LargeRedPaletteColorLookupTableData",TagFromName.LargeRedPaletteColorLookupTableData);
		tagByName.put("LargeGreenPaletteColorLookupTableData",TagFromName.LargeGreenPaletteColorLookupTableData);
		tagByName.put("LargeBluePaletteColorLookupTableData",TagFromName.LargeBluePaletteColorLookupTableData);
		tagByName.put("LargePaletteColorLookupTableUID",TagFromName.LargePaletteColorLookupTableUID);
		tagByName.put("SegmentedRedPaletteColorLookupTableData",TagFromName.SegmentedRedPaletteColorLookupTableData);
		tagByName.put("SegmentedGreenPaletteColorLookupTableData",TagFromName.SegmentedGreenPaletteColorLookupTableData);
		tagByName.put("SegmentedBluePaletteColorLookupTableData",TagFromName.SegmentedBluePaletteColorLookupTableData);
		tagByName.put("SegmentedAlphaPaletteColorLookupTableData",TagFromName.SegmentedAlphaPaletteColorLookupTableData);
		tagByName.put("StoredValueColorRangeSequence",TagFromName.StoredValueColorRangeSequence);
		tagByName.put("MinimumStoredValueMapped",TagFromName.MinimumStoredValueMapped);
		tagByName.put("MaximumStoredValueMapped",TagFromName.MaximumStoredValueMapped);
		tagByName.put("BreastImplantPresent",TagFromName.BreastImplantPresent);
		tagByName.put("PartialView",TagFromName.PartialView);
		tagByName.put("PartialViewDescription",TagFromName.PartialViewDescription);
		tagByName.put("PartialViewCodeSequence",TagFromName.PartialViewCodeSequence);
		tagByName.put("SpatialLocationsPreserved",TagFromName.SpatialLocationsPreserved);
		tagByName.put("DataFrameAssignmentSequence",TagFromName.DataFrameAssignmentSequence);
		tagByName.put("DataPathAssignment",TagFromName.DataPathAssignment);
		tagByName.put("BitsMappedToColorLookupTable",TagFromName.BitsMappedToColorLookupTable);
		tagByName.put("BlendingLUT1Sequence",TagFromName.BlendingLUT1Sequence);
		tagByName.put("BlendingLUT1TransferFunction",TagFromName.BlendingLUT1TransferFunction);
		tagByName.put("BlendingWeightConstant",TagFromName.BlendingWeightConstant);
		tagByName.put("BlendingLookupTableDescriptor",TagFromName.BlendingLookupTableDescriptor);
		tagByName.put("BlendingLookupTableData",TagFromName.BlendingLookupTableData);
		tagByName.put("EnhancedPaletteColorLookupTableSequence",TagFromName.EnhancedPaletteColorLookupTableSequence);
		tagByName.put("BlendingLUT2Sequence",TagFromName.BlendingLUT2Sequence);
		tagByName.put("BlendingLUT2TransferFunction",TagFromName.BlendingLUT2TransferFunction);
		tagByName.put("DataPathID",TagFromName.DataPathID);
		tagByName.put("RGBLUTTransferFunction",TagFromName.RGBLUTTransferFunction);
		tagByName.put("AlphaLUTTransferFunction",TagFromName.AlphaLUTTransferFunction);
		tagByName.put("ICCProfile",TagFromName.ICCProfile);
		tagByName.put("ColorSpace",TagFromName.ColorSpace);
		tagByName.put("LossyImageCompression",TagFromName.LossyImageCompression);
		tagByName.put("LossyImageCompressionRatio",TagFromName.LossyImageCompressionRatio);
		tagByName.put("LossyImageCompressionMethod",TagFromName.LossyImageCompressionMethod);
		tagByName.put("ModalityLUTSequence",TagFromName.ModalityLUTSequence);
		tagByName.put("LUTDescriptor",TagFromName.LUTDescriptor);
		tagByName.put("LUTExplanation",TagFromName.LUTExplanation);
		tagByName.put("ModalityLUTType",TagFromName.ModalityLUTType);
		tagByName.put("LUTData",TagFromName.LUTData);
		tagByName.put("VOILUTSequence",TagFromName.VOILUTSequence);
		tagByName.put("SoftcopyVOILUTSequence",TagFromName.SoftcopyVOILUTSequence);
		tagByName.put("ImagePresentationComments",TagFromName.ImagePresentationComments);
		tagByName.put("BiPlaneAcquisitionSequence",TagFromName.BiPlaneAcquisitionSequence);
		tagByName.put("RepresentativeFrameNumber",TagFromName.RepresentativeFrameNumber);
		tagByName.put("FrameNumbersOfInterest",TagFromName.FrameNumbersOfInterest);
		tagByName.put("FrameOfInterestDescription",TagFromName.FrameOfInterestDescription);
		tagByName.put("FrameOfInterestType",TagFromName.FrameOfInterestType);
		tagByName.put("MaskPointers",TagFromName.MaskPointers);
		tagByName.put("RWavePointer",TagFromName.RWavePointer);
		tagByName.put("MaskSubtractionSequence",TagFromName.MaskSubtractionSequence);
		tagByName.put("MaskOperation",TagFromName.MaskOperation);
		tagByName.put("ApplicableFrameRange",TagFromName.ApplicableFrameRange);
		tagByName.put("MaskFrameNumbers",TagFromName.MaskFrameNumbers);
		tagByName.put("ContrastFrameAveraging",TagFromName.ContrastFrameAveraging);
		tagByName.put("MaskSubPixelShift",TagFromName.MaskSubPixelShift);
		tagByName.put("TIDOffset",TagFromName.TIDOffset);
		tagByName.put("MaskOperationExplanation",TagFromName.MaskOperationExplanation);
		tagByName.put("EquipmentAdministratorSequence",TagFromName.EquipmentAdministratorSequence);
		tagByName.put("NumberOfDisplaySubsystems",TagFromName.NumberOfDisplaySubsystems);
		tagByName.put("CurrentConfigurationID",TagFromName.CurrentConfigurationID);
		tagByName.put("DisplaySystemID",TagFromName.DisplaySystemID);
		tagByName.put("DisplaySubsystemName",TagFromName.DisplaySubsystemName);
		tagByName.put("DisplaySubsystemDescription",TagFromName.DisplaySubsystemDescription);
		tagByName.put("SystemStatus",TagFromName.SystemStatus);
		tagByName.put("SystemStatusComment",TagFromName.SystemStatusComment);
		tagByName.put("TargetLuminanceCharacteristicsSequence",TagFromName.TargetLuminanceCharacteristicsSequence);
		tagByName.put("LuminanceCharacteristicsID",TagFromName.LuminanceCharacteristicsID);
		tagByName.put("DisplaySubsystemConfigurationSequence",TagFromName.DisplaySubsystemConfigurationSequence);
		tagByName.put("ConfigurationID",TagFromName.ConfigurationID);
		tagByName.put("ConfigurationName",TagFromName.ConfigurationName);
		tagByName.put("ConfigurationDescription",TagFromName.ConfigurationDescription);
		tagByName.put("ReferencedTargetLuminanceCharacteristicsID",TagFromName.ReferencedTargetLuminanceCharacteristicsID);
		tagByName.put("QAResultsSequence",TagFromName.QAResultsSequence);
		tagByName.put("DisplaySubsystemQAResultsSequence",TagFromName.DisplaySubsystemQAResultsSequence);
		tagByName.put("ConfigurationQAResultsSequence",TagFromName.ConfigurationQAResultsSequence);
		tagByName.put("MeasurementEquipmentSequence",TagFromName.MeasurementEquipmentSequence);
		tagByName.put("MeasurementFunctions",TagFromName.MeasurementFunctions);
		tagByName.put("MeasurementEquipmentType",TagFromName.MeasurementEquipmentType);
		tagByName.put("VisualEvaluationResultSequence",TagFromName.VisualEvaluationResultSequence);
		tagByName.put("DisplayCalibrationResultSequence",TagFromName.DisplayCalibrationResultSequence);
		tagByName.put("DDLValue",TagFromName.DDLValue);
		tagByName.put("CIExyWhitePoint",TagFromName.CIExyWhitePoint);
		tagByName.put("DisplayFunctionType",TagFromName.DisplayFunctionType);
		tagByName.put("GammaValue",TagFromName.GammaValue);
		tagByName.put("NumberOfLuminancePoints",TagFromName.NumberOfLuminancePoints);
		tagByName.put("LuminanceResponseSequence",TagFromName.LuminanceResponseSequence);
		tagByName.put("TargetMinimumLuminance",TagFromName.TargetMinimumLuminance);
		tagByName.put("TargetMaximumLuminance",TagFromName.TargetMaximumLuminance);
		tagByName.put("LuminanceValue",TagFromName.LuminanceValue);
		tagByName.put("LuminanceResponseDescription",TagFromName.LuminanceResponseDescription);
		tagByName.put("WhitePointFlag",TagFromName.WhitePointFlag);
		tagByName.put("DisplayDeviceTypeCodeSequence",TagFromName.DisplayDeviceTypeCodeSequence);
		tagByName.put("DisplaySubsystemSequence",TagFromName.DisplaySubsystemSequence);
		tagByName.put("LuminanceResultSequence",TagFromName.LuminanceResultSequence);
		tagByName.put("AmbientLightValueSource",TagFromName.AmbientLightValueSource);
		tagByName.put("MeasuredCharacteristics",TagFromName.MeasuredCharacteristics);
		tagByName.put("LuminanceUniformityResultSequence",TagFromName.LuminanceUniformityResultSequence);
		tagByName.put("VisualEvaluationTestSequence",TagFromName.VisualEvaluationTestSequence);
		tagByName.put("TestResult",TagFromName.TestResult);
		tagByName.put("TestResultComment",TagFromName.TestResultComment);
		tagByName.put("TestImageValidation",TagFromName.TestImageValidation);
		tagByName.put("TestPatternCodeSequence",TagFromName.TestPatternCodeSequence);
		tagByName.put("MeasurementPatternCodeSequence",TagFromName.MeasurementPatternCodeSequence);
		tagByName.put("VisualEvaluationMethodCodeSequence",TagFromName.VisualEvaluationMethodCodeSequence);
		tagByName.put("PixelDataProviderURL",TagFromName.PixelDataProviderURL);
		tagByName.put("DataPointRows",TagFromName.DataPointRows);
		tagByName.put("DataPointColumns",TagFromName.DataPointColumns);
		tagByName.put("SignalDomainColumns",TagFromName.SignalDomainColumns);
		tagByName.put("LargestMonochromePixelValue",TagFromName.LargestMonochromePixelValue);
		tagByName.put("DataRepresentation",TagFromName.DataRepresentation);
		tagByName.put("PixelMeasuresSequence",TagFromName.PixelMeasuresSequence);
		tagByName.put("FrameVOILUTSequence",TagFromName.FrameVOILUTSequence);
		tagByName.put("PixelValueTransformationSequence",TagFromName.PixelValueTransformationSequence);
		tagByName.put("SignalDomainRows",TagFromName.SignalDomainRows);
		tagByName.put("DisplayFilterPercentage",TagFromName.DisplayFilterPercentage);
		tagByName.put("FramePixelShiftSequence",TagFromName.FramePixelShiftSequence);
		tagByName.put("SubtractionItemID",TagFromName.SubtractionItemID);
		tagByName.put("PixelIntensityRelationshipLUTSequence",TagFromName.PixelIntensityRelationshipLUTSequence);
		tagByName.put("FramePixelDataPropertiesSequence",TagFromName.FramePixelDataPropertiesSequence);
		tagByName.put("GeometricalProperties",TagFromName.GeometricalProperties);
		tagByName.put("GeometricMaximumDistortion",TagFromName.GeometricMaximumDistortion);
		tagByName.put("ImageProcessingApplied",TagFromName.ImageProcessingApplied);
		tagByName.put("MaskSelectionMode",TagFromName.MaskSelectionMode);
		tagByName.put("LUTFunction",TagFromName.LUTFunction);
		tagByName.put("MaskVisibilityPercentage",TagFromName.MaskVisibilityPercentage);
		tagByName.put("PixelShiftSequence",TagFromName.PixelShiftSequence);
		tagByName.put("RegionPixelShiftSequence",TagFromName.RegionPixelShiftSequence);
		tagByName.put("VerticesOfTheRegion",TagFromName.VerticesOfTheRegion);
		tagByName.put("MultiFramePresentationSequence",TagFromName.MultiFramePresentationSequence);
		tagByName.put("PixelShiftFrameRange",TagFromName.PixelShiftFrameRange);
		tagByName.put("LUTFrameRange",TagFromName.LUTFrameRange);
		tagByName.put("ImageToEquipmentMappingMatrix",TagFromName.ImageToEquipmentMappingMatrix);
		tagByName.put("EquipmentCoordinateSystemIdentification",TagFromName.EquipmentCoordinateSystemIdentification);
		tagByName.put("StudyStatusID",TagFromName.StudyStatusID);
		tagByName.put("StudyPriorityID",TagFromName.StudyPriorityID);
		tagByName.put("StudyIDIssuer",TagFromName.StudyIDIssuer);
		tagByName.put("StudyVerifiedDate",TagFromName.StudyVerifiedDate);
		tagByName.put("StudyVerifiedTime",TagFromName.StudyVerifiedTime);
		tagByName.put("StudyReadDate",TagFromName.StudyReadDate);
		tagByName.put("StudyReadTime",TagFromName.StudyReadTime);
		tagByName.put("ScheduledStudyStartDate",TagFromName.ScheduledStudyStartDate);
		tagByName.put("ScheduledStudyStartTime",TagFromName.ScheduledStudyStartTime);
		tagByName.put("ScheduledStudyStopDate",TagFromName.ScheduledStudyStopDate);
		tagByName.put("ScheduledStudyStopTime",TagFromName.ScheduledStudyStopTime);
		tagByName.put("ScheduledStudyLocation",TagFromName.ScheduledStudyLocation);
		tagByName.put("ScheduledStudyLocationAETitle",TagFromName.ScheduledStudyLocationAETitle);
		tagByName.put("ReasonForStudy",TagFromName.ReasonForStudy);
		tagByName.put("RequestingPhysicianIdentificationSequence",TagFromName.RequestingPhysicianIdentificationSequence);
		tagByName.put("RequestingPhysician",TagFromName.RequestingPhysician);
		tagByName.put("RequestingService",TagFromName.RequestingService);
		tagByName.put("RequestingServiceCodeSequence",TagFromName.RequestingServiceCodeSequence);
		tagByName.put("StudyArrivalDate",TagFromName.StudyArrivalDate);
		tagByName.put("StudyArrivalTime",TagFromName.StudyArrivalTime);
		tagByName.put("StudyCompletionDate",TagFromName.StudyCompletionDate);
		tagByName.put("StudyCompletionTime",TagFromName.StudyCompletionTime);
		tagByName.put("StudyComponentStatusID",TagFromName.StudyComponentStatusID);
		tagByName.put("RequestedProcedureDescription",TagFromName.RequestedProcedureDescription);
		tagByName.put("RequestedProcedureCodeSequence",TagFromName.RequestedProcedureCodeSequence);
		tagByName.put("RequestedContrastAgent",TagFromName.RequestedContrastAgent);
		tagByName.put("StudyComments",TagFromName.StudyComments);
		tagByName.put("ReferencedPatientAliasSequence",TagFromName.ReferencedPatientAliasSequence);
		tagByName.put("VisitStatusID",TagFromName.VisitStatusID);
		tagByName.put("AdmissionID",TagFromName.AdmissionID);
		tagByName.put("IssuerOfAdmissionID",TagFromName.IssuerOfAdmissionID);
		tagByName.put("IssuerOfAdmissionIDSequence",TagFromName.IssuerOfAdmissionIDSequence);
		tagByName.put("RouteOfAdmissions",TagFromName.RouteOfAdmissions);
		tagByName.put("ScheduledAdmissionDate",TagFromName.ScheduledAdmissionDate);
		tagByName.put("ScheduledAdmissionTime",TagFromName.ScheduledAdmissionTime);
		tagByName.put("ScheduledDischargeDate",TagFromName.ScheduledDischargeDate);
		tagByName.put("ScheduledDischargeTime",TagFromName.ScheduledDischargeTime);
		tagByName.put("ScheduledPatientInstitutionResidence",TagFromName.ScheduledPatientInstitutionResidence);
		tagByName.put("AdmittingDate",TagFromName.AdmittingDate);
		tagByName.put("AdmittingTime",TagFromName.AdmittingTime);
		tagByName.put("DischargeDate",TagFromName.DischargeDate);
		tagByName.put("DischargeTime",TagFromName.DischargeTime);
		tagByName.put("DischargeDiagnosisDescription",TagFromName.DischargeDiagnosisDescription);
		tagByName.put("DischargeDiagnosisCodeSequence",TagFromName.DischargeDiagnosisCodeSequence);
		tagByName.put("SpecialNeeds",TagFromName.SpecialNeeds);
		tagByName.put("ServiceEpisodeID",TagFromName.ServiceEpisodeID);
		tagByName.put("IssuerOfServiceEpisodeID",TagFromName.IssuerOfServiceEpisodeID);
		tagByName.put("ServiceEpisodeDescription",TagFromName.ServiceEpisodeDescription);
		tagByName.put("IssuerOfServiceEpisodeIDSequence",TagFromName.IssuerOfServiceEpisodeIDSequence);
		tagByName.put("PertinentDocumentsSequence",TagFromName.PertinentDocumentsSequence);
		tagByName.put("PertinentResourcesSequence",TagFromName.PertinentResourcesSequence);
		tagByName.put("ResourceDescription",TagFromName.ResourceDescription);
		tagByName.put("CurrentPatientLocation",TagFromName.CurrentPatientLocation);
		tagByName.put("PatientInstitutionResidence",TagFromName.PatientInstitutionResidence);
		tagByName.put("PatientState",TagFromName.PatientState);
		tagByName.put("PatientClinicalTrialParticipationSequence",TagFromName.PatientClinicalTrialParticipationSequence);
		tagByName.put("VisitComments",TagFromName.VisitComments);
		tagByName.put("WaveformOriginality",TagFromName.WaveformOriginality);
		tagByName.put("NumberOfWaveformChannels",TagFromName.NumberOfWaveformChannels);
		tagByName.put("NumberOfWaveformSamples",TagFromName.NumberOfWaveformSamples);
		tagByName.put("SamplingFrequency",TagFromName.SamplingFrequency);
		tagByName.put("MultiplexGroupLabel",TagFromName.MultiplexGroupLabel);
		tagByName.put("ChannelDefinitionSequence",TagFromName.ChannelDefinitionSequence);
		tagByName.put("WaveformChannelNumber",TagFromName.WaveformChannelNumber);
		tagByName.put("ChannelLabel",TagFromName.ChannelLabel);
		tagByName.put("ChannelStatus",TagFromName.ChannelStatus);
		tagByName.put("ChannelSourceSequence",TagFromName.ChannelSourceSequence);
		tagByName.put("ChannelSourceModifiersSequence",TagFromName.ChannelSourceModifiersSequence);
		tagByName.put("SourceWaveformSequence",TagFromName.SourceWaveformSequence);
		tagByName.put("ChannelDerivationDescription",TagFromName.ChannelDerivationDescription);
		tagByName.put("ChannelSensitivity",TagFromName.ChannelSensitivity);
		tagByName.put("ChannelSensitivityUnitsSequence",TagFromName.ChannelSensitivityUnitsSequence);
		tagByName.put("ChannelSensitivityCorrectionFactor",TagFromName.ChannelSensitivityCorrectionFactor);
		tagByName.put("ChannelBaseline",TagFromName.ChannelBaseline);
		tagByName.put("ChannelTimeSkew",TagFromName.ChannelTimeSkew);
		tagByName.put("ChannelSampleSkew",TagFromName.ChannelSampleSkew);
		tagByName.put("ChannelOffset",TagFromName.ChannelOffset);
		tagByName.put("WaveformBitsStored",TagFromName.WaveformBitsStored);
		tagByName.put("FilterLowFrequency",TagFromName.FilterLowFrequency);
		tagByName.put("FilterHighFrequency",TagFromName.FilterHighFrequency);
		tagByName.put("NotchFilterFrequency",TagFromName.NotchFilterFrequency);
		tagByName.put("NotchFilterBandwidth",TagFromName.NotchFilterBandwidth);
		tagByName.put("WaveformDataDisplayScale",TagFromName.WaveformDataDisplayScale);
		tagByName.put("WaveformDisplayBackgroundCIELabValue",TagFromName.WaveformDisplayBackgroundCIELabValue);
		tagByName.put("WaveformPresentationGroupSequence",TagFromName.WaveformPresentationGroupSequence);
		tagByName.put("PresentationGroupNumber",TagFromName.PresentationGroupNumber);
		tagByName.put("ChannelDisplaySequence",TagFromName.ChannelDisplaySequence);
		tagByName.put("ChannelRecommendedDisplayCIELabValue",TagFromName.ChannelRecommendedDisplayCIELabValue);
		tagByName.put("ChannelPosition",TagFromName.ChannelPosition);
		tagByName.put("DisplayShadingFlag",TagFromName.DisplayShadingFlag);
		tagByName.put("FractionalChannelDisplayScale",TagFromName.FractionalChannelDisplayScale);
		tagByName.put("AbsoluteChannelDisplayScale",TagFromName.AbsoluteChannelDisplayScale);
		tagByName.put("MultiplexedAudioChannelsDescriptionCodeSequence",TagFromName.MultiplexedAudioChannelsDescriptionCodeSequence);
		tagByName.put("ChannelIdentificationCode",TagFromName.ChannelIdentificationCode);
		tagByName.put("ChannelMode",TagFromName.ChannelMode);
		tagByName.put("ScheduledStationAETitle",TagFromName.ScheduledStationAETitle);
		tagByName.put("ScheduledProcedureStepStartDate",TagFromName.ScheduledProcedureStepStartDate);
		tagByName.put("ScheduledProcedureStepStartTime",TagFromName.ScheduledProcedureStepStartTime);
		tagByName.put("ScheduledProcedureStepEndDate",TagFromName.ScheduledProcedureStepEndDate);
		tagByName.put("ScheduledProcedureStepEndTime",TagFromName.ScheduledProcedureStepEndTime);
		tagByName.put("ScheduledPerformingPhysicianName",TagFromName.ScheduledPerformingPhysicianName);
		tagByName.put("ScheduledProcedureStepDescription",TagFromName.ScheduledProcedureStepDescription);
		tagByName.put("ScheduledProtocolCodeSequence",TagFromName.ScheduledProtocolCodeSequence);
		tagByName.put("ScheduledProcedureStepID",TagFromName.ScheduledProcedureStepID);
		tagByName.put("StageCodeSequence",TagFromName.StageCodeSequence);
		tagByName.put("ScheduledPerformingPhysicianIdentificationSequence",TagFromName.ScheduledPerformingPhysicianIdentificationSequence);
		tagByName.put("ScheduledStationName",TagFromName.ScheduledStationName);
		tagByName.put("ScheduledProcedureStepLocation",TagFromName.ScheduledProcedureStepLocation);
		tagByName.put("PreMedication",TagFromName.PreMedication);
		tagByName.put("ScheduledProcedureStepStatus",TagFromName.ScheduledProcedureStepStatus);
		tagByName.put("OrderPlacerIdentifierSequence",TagFromName.OrderPlacerIdentifierSequence);
		tagByName.put("OrderFillerIdentifierSequence",TagFromName.OrderFillerIdentifierSequence);
		tagByName.put("LocalNamespaceEntityID",TagFromName.LocalNamespaceEntityID);
		tagByName.put("UniversalEntityID",TagFromName.UniversalEntityID);
		tagByName.put("UniversalEntityIDType",TagFromName.UniversalEntityIDType);
		tagByName.put("IdentifierTypeCode",TagFromName.IdentifierTypeCode);
		tagByName.put("AssigningFacilitySequence",TagFromName.AssigningFacilitySequence);
		tagByName.put("AssigningJurisdictionCodeSequence",TagFromName.AssigningJurisdictionCodeSequence);
		tagByName.put("AssigningAgencyOrDepartmentCodeSequence",TagFromName.AssigningAgencyOrDepartmentCodeSequence);
		tagByName.put("ScheduledProcedureStepSequence",TagFromName.ScheduledProcedureStepSequence);
		tagByName.put("ReferencedNonImageCompositeSOPInstanceSequence",TagFromName.ReferencedNonImageCompositeSOPInstanceSequence);
		tagByName.put("PerformedStationAETitle",TagFromName.PerformedStationAETitle);
		tagByName.put("PerformedStationName",TagFromName.PerformedStationName);
		tagByName.put("PerformedLocation",TagFromName.PerformedLocation);
		tagByName.put("PerformedProcedureStepStartDate",TagFromName.PerformedProcedureStepStartDate);
		tagByName.put("PerformedProcedureStepStartTime",TagFromName.PerformedProcedureStepStartTime);
		tagByName.put("PerformedProcedureStepEndDate",TagFromName.PerformedProcedureStepEndDate);
		tagByName.put("PerformedProcedureStepEndTime",TagFromName.PerformedProcedureStepEndTime);
		tagByName.put("PerformedProcedureStepStatus",TagFromName.PerformedProcedureStepStatus);
		tagByName.put("PerformedProcedureStepID",TagFromName.PerformedProcedureStepID);
		tagByName.put("PerformedProcedureStepDescription",TagFromName.PerformedProcedureStepDescription);
		tagByName.put("PerformedProcedureTypeDescription",TagFromName.PerformedProcedureTypeDescription);
		tagByName.put("PerformedProtocolCodeSequence",TagFromName.PerformedProtocolCodeSequence);
		tagByName.put("PerformedProtocolType",TagFromName.PerformedProtocolType);
		tagByName.put("ScheduledStepAttributesSequence",TagFromName.ScheduledStepAttributesSequence);
		tagByName.put("RequestAttributesSequence",TagFromName.RequestAttributesSequence);
		tagByName.put("CommentsOnThePerformedProcedureStep",TagFromName.CommentsOnThePerformedProcedureStep);
		tagByName.put("PerformedProcedureStepDiscontinuationReasonCodeSequence",TagFromName.PerformedProcedureStepDiscontinuationReasonCodeSequence);
		tagByName.put("QuantitySequence",TagFromName.QuantitySequence);
		tagByName.put("Quantity",TagFromName.Quantity);
		tagByName.put("MeasuringUnitsSequence",TagFromName.MeasuringUnitsSequence);
		tagByName.put("BillingItemSequence",TagFromName.BillingItemSequence);
		tagByName.put("TotalTimeOfFluoroscopy",TagFromName.TotalTimeOfFluoroscopy);
		tagByName.put("TotalNumberOfExposures",TagFromName.TotalNumberOfExposures);
		tagByName.put("EntranceDose",TagFromName.EntranceDose);
		tagByName.put("ExposedArea",TagFromName.ExposedArea);
		tagByName.put("DistanceSourceToEntrance",TagFromName.DistanceSourceToEntrance);
		tagByName.put("DistanceSourceToSupport",TagFromName.DistanceSourceToSupport);
		tagByName.put("ExposureDoseSequence",TagFromName.ExposureDoseSequence);
		tagByName.put("CommentsOnRadiationDose",TagFromName.CommentsOnRadiationDose);
		tagByName.put("XRayOutput",TagFromName.XRayOutput);
		tagByName.put("HalfValueLayer",TagFromName.HalfValueLayer);
		tagByName.put("OrganDose",TagFromName.OrganDose);
		tagByName.put("OrganExposed",TagFromName.OrganExposed);
		tagByName.put("BillingProcedureStepSequence",TagFromName.BillingProcedureStepSequence);
		tagByName.put("FilmConsumptionSequence",TagFromName.FilmConsumptionSequence);
		tagByName.put("BillingSuppliesAndDevicesSequence",TagFromName.BillingSuppliesAndDevicesSequence);
		tagByName.put("ReferencedProcedureStepSequence",TagFromName.ReferencedProcedureStepSequence);
		tagByName.put("PerformedSeriesSequence",TagFromName.PerformedSeriesSequence);
		tagByName.put("CommentsOnTheScheduledProcedureStep",TagFromName.CommentsOnTheScheduledProcedureStep);
		tagByName.put("ProtocolContextSequence",TagFromName.ProtocolContextSequence);
		tagByName.put("ContentItemModifierSequence",TagFromName.ContentItemModifierSequence);
		tagByName.put("ScheduledSpecimenSequence",TagFromName.ScheduledSpecimenSequence);
		tagByName.put("SpecimenAccessionNumber",TagFromName.SpecimenAccessionNumber);
		tagByName.put("ContainerIdentifier",TagFromName.ContainerIdentifier);
		tagByName.put("IssuerOfTheContainerIdentifierSequence",TagFromName.IssuerOfTheContainerIdentifierSequence);
		tagByName.put("AlternateContainerIdentifierSequence",TagFromName.AlternateContainerIdentifierSequence);
		tagByName.put("ContainerTypeCodeSequence",TagFromName.ContainerTypeCodeSequence);
		tagByName.put("ContainerDescription",TagFromName.ContainerDescription);
		tagByName.put("ContainerComponentSequence",TagFromName.ContainerComponentSequence);
		tagByName.put("SpecimenSequence",TagFromName.SpecimenSequence);
		tagByName.put("SpecimenIdentifier",TagFromName.SpecimenIdentifier);
		tagByName.put("SpecimenDescriptionSequenceTrial",TagFromName.SpecimenDescriptionSequenceTrial);
		tagByName.put("SpecimenDescriptionTrial",TagFromName.SpecimenDescriptionTrial);
		tagByName.put("SpecimenUID",TagFromName.SpecimenUID);
		tagByName.put("AcquisitionContextSequence",TagFromName.AcquisitionContextSequence);
		tagByName.put("AcquisitionContextDescription",TagFromName.AcquisitionContextDescription);
		tagByName.put("SpecimenDescriptionSequence",TagFromName.SpecimenDescriptionSequence);
		tagByName.put("IssuerOfTheSpecimenIdentifierSequence",TagFromName.IssuerOfTheSpecimenIdentifierSequence);
		tagByName.put("SpecimenTypeCodeSequence",TagFromName.SpecimenTypeCodeSequence);
		tagByName.put("SpecimenShortDescription",TagFromName.SpecimenShortDescription);
		tagByName.put("SpecimenDetailedDescription",TagFromName.SpecimenDetailedDescription);
		tagByName.put("SpecimenPreparationSequence",TagFromName.SpecimenPreparationSequence);
		tagByName.put("SpecimenPreparationStepContentItemSequence",TagFromName.SpecimenPreparationStepContentItemSequence);
		tagByName.put("SpecimenLocalizationContentItemSequence",TagFromName.SpecimenLocalizationContentItemSequence);
		tagByName.put("SlideIdentifier",TagFromName.SlideIdentifier);
		tagByName.put("WholeSlideMicroscopyImageFrameTypeSequence",TagFromName.WholeSlideMicroscopyImageFrameTypeSequence);
		tagByName.put("ImageCenterPointCoordinatesSequence",TagFromName.ImageCenterPointCoordinatesSequence);
		tagByName.put("XOffsetInSlideCoordinateSystem",TagFromName.XOffsetInSlideCoordinateSystem);
		tagByName.put("YOffsetInSlideCoordinateSystem",TagFromName.YOffsetInSlideCoordinateSystem);
		tagByName.put("ZOffsetInSlideCoordinateSystem",TagFromName.ZOffsetInSlideCoordinateSystem);
		tagByName.put("PixelSpacingSequence",TagFromName.PixelSpacingSequence);
		tagByName.put("CoordinateSystemAxisCodeSequence",TagFromName.CoordinateSystemAxisCodeSequence);
		tagByName.put("MeasurementUnitsCodeSequence",TagFromName.MeasurementUnitsCodeSequence);
		tagByName.put("VitalStainCodeSequenceTrial",TagFromName.VitalStainCodeSequenceTrial);
		tagByName.put("RequestedProcedureID",TagFromName.RequestedProcedureID);
		tagByName.put("ReasonForTheRequestedProcedure",TagFromName.ReasonForTheRequestedProcedure);
		tagByName.put("RequestedProcedurePriority",TagFromName.RequestedProcedurePriority);
		tagByName.put("PatientTransportArrangements",TagFromName.PatientTransportArrangements);
		tagByName.put("RequestedProcedureLocation",TagFromName.RequestedProcedureLocation);
		tagByName.put("PlacerOrderNumberProcedure",TagFromName.PlacerOrderNumberProcedure);
		tagByName.put("FillerOrderNumberProcedure",TagFromName.FillerOrderNumberProcedure);
		tagByName.put("ConfidentialityCode",TagFromName.ConfidentialityCode);
		tagByName.put("ReportingPriority",TagFromName.ReportingPriority);
		tagByName.put("ReasonForRequestedProcedureCodeSequence",TagFromName.ReasonForRequestedProcedureCodeSequence);
		tagByName.put("NamesOfIntendedRecipientsOfResults",TagFromName.NamesOfIntendedRecipientsOfResults);
		tagByName.put("IntendedRecipientsOfResultsIdentificationSequence",TagFromName.IntendedRecipientsOfResultsIdentificationSequence);
		tagByName.put("ReasonForPerformedProcedureCodeSequence",TagFromName.ReasonForPerformedProcedureCodeSequence);
		tagByName.put("RequestedProcedureDescriptionTrial",TagFromName.RequestedProcedureDescriptionTrial);
		tagByName.put("PersonIdentificationCodeSequence",TagFromName.PersonIdentificationCodeSequence);
		tagByName.put("PersonAddress",TagFromName.PersonAddress);
		tagByName.put("PersonTelephoneNumbers",TagFromName.PersonTelephoneNumbers);
		tagByName.put("PersonTelecomInformation",TagFromName.PersonTelecomInformation);
		tagByName.put("RequestedProcedureComments",TagFromName.RequestedProcedureComments);
		tagByName.put("ReasonForTheImagingServiceRequest",TagFromName.ReasonForTheImagingServiceRequest);
		tagByName.put("IssueDateOfImagingServiceRequest",TagFromName.IssueDateOfImagingServiceRequest);
		tagByName.put("IssueTimeOfImagingServiceRequest",TagFromName.IssueTimeOfImagingServiceRequest);
		tagByName.put("PlacerOrderNumberImagingServiceRequestRetired",TagFromName.PlacerOrderNumberImagingServiceRequestRetired);
		tagByName.put("FillerOrderNumberImagingServiceRequestRetired",TagFromName.FillerOrderNumberImagingServiceRequestRetired);
		tagByName.put("OrderEnteredBy",TagFromName.OrderEnteredBy);
		tagByName.put("OrderEntererLocation",TagFromName.OrderEntererLocation);
		tagByName.put("OrderCallbackPhoneNumber",TagFromName.OrderCallbackPhoneNumber);
		tagByName.put("OrderCallbackTelecomInformation",TagFromName.OrderCallbackTelecomInformation);
		tagByName.put("PlacerOrderNumberImagingServiceRequest",TagFromName.PlacerOrderNumberImagingServiceRequest);
		tagByName.put("FillerOrderNumberImagingServiceRequest",TagFromName.FillerOrderNumberImagingServiceRequest);
		tagByName.put("ImagingServiceRequestComments",TagFromName.ImagingServiceRequestComments);
		tagByName.put("ConfidentialityConstraintOnPatientDataDescription",TagFromName.ConfidentialityConstraintOnPatientDataDescription);
		tagByName.put("GeneralPurposeScheduledProcedureStepStatus",TagFromName.GeneralPurposeScheduledProcedureStepStatus);
		tagByName.put("GeneralPurposePerformedProcedureStepStatus",TagFromName.GeneralPurposePerformedProcedureStepStatus);
		tagByName.put("GeneralPurposeScheduledProcedureStepPriority",TagFromName.GeneralPurposeScheduledProcedureStepPriority);
		tagByName.put("ScheduledProcessingApplicationsCodeSequence",TagFromName.ScheduledProcessingApplicationsCodeSequence);
		tagByName.put("ScheduledProcedureStepStartDateTime",TagFromName.ScheduledProcedureStepStartDateTime);
		tagByName.put("MultipleCopiesFlag",TagFromName.MultipleCopiesFlag);
		tagByName.put("PerformedProcessingApplicationsCodeSequence",TagFromName.PerformedProcessingApplicationsCodeSequence);
		tagByName.put("ScheduledProcedureStepExpirationDateTime",TagFromName.ScheduledProcedureStepExpirationDateTime);
		tagByName.put("HumanPerformerCodeSequence",TagFromName.HumanPerformerCodeSequence);
		tagByName.put("ScheduledProcedureStepModificationDateTime",TagFromName.ScheduledProcedureStepModificationDateTime);
		tagByName.put("ExpectedCompletionDateTime",TagFromName.ExpectedCompletionDateTime);
		tagByName.put("ResultingGeneralPurposePerformedProcedureStepsSequence",TagFromName.ResultingGeneralPurposePerformedProcedureStepsSequence);
		tagByName.put("ReferencedGeneralPurposeScheduledProcedureStepSequence",TagFromName.ReferencedGeneralPurposeScheduledProcedureStepSequence);
		tagByName.put("ScheduledWorkitemCodeSequence",TagFromName.ScheduledWorkitemCodeSequence);
		tagByName.put("PerformedWorkitemCodeSequence",TagFromName.PerformedWorkitemCodeSequence);
		tagByName.put("InputAvailabilityFlag",TagFromName.InputAvailabilityFlag);
		tagByName.put("InputInformationSequence",TagFromName.InputInformationSequence);
		tagByName.put("RelevantInformationSequence",TagFromName.RelevantInformationSequence);
		tagByName.put("ReferencedGeneralPurposeScheduledProcedureStepTransactionUID",TagFromName.ReferencedGeneralPurposeScheduledProcedureStepTransactionUID);
		tagByName.put("ScheduledStationNameCodeSequence",TagFromName.ScheduledStationNameCodeSequence);
		tagByName.put("ScheduledStationClassCodeSequence",TagFromName.ScheduledStationClassCodeSequence);
		tagByName.put("ScheduledStationGeographicLocationCodeSequence",TagFromName.ScheduledStationGeographicLocationCodeSequence);
		tagByName.put("PerformedStationNameCodeSequence",TagFromName.PerformedStationNameCodeSequence);
		tagByName.put("PerformedStationClassCodeSequence",TagFromName.PerformedStationClassCodeSequence);
		tagByName.put("PerformedStationGeographicLocationCodeSequence",TagFromName.PerformedStationGeographicLocationCodeSequence);
		tagByName.put("RequestedSubsequentWorkitemCodeSequence",TagFromName.RequestedSubsequentWorkitemCodeSequence);
		tagByName.put("NonDICOMOutputCodeSequence",TagFromName.NonDICOMOutputCodeSequence);
		tagByName.put("OutputInformationSequence",TagFromName.OutputInformationSequence);
		tagByName.put("ScheduledHumanPerformersSequence",TagFromName.ScheduledHumanPerformersSequence);
		tagByName.put("ActualHumanPerformersSequence",TagFromName.ActualHumanPerformersSequence);
		tagByName.put("HumanPerformerOrganization",TagFromName.HumanPerformerOrganization);
		tagByName.put("HumanPerformerName",TagFromName.HumanPerformerName);
		tagByName.put("RawDataHandling",TagFromName.RawDataHandling);
		tagByName.put("InputReadinessState",TagFromName.InputReadinessState);
		tagByName.put("PerformedProcedureStepStartDateTime",TagFromName.PerformedProcedureStepStartDateTime);
		tagByName.put("PerformedProcedureStepEndDateTime",TagFromName.PerformedProcedureStepEndDateTime);
		tagByName.put("ProcedureStepCancellationDateTime",TagFromName.ProcedureStepCancellationDateTime);
		tagByName.put("OutputDestinationSequence",TagFromName.OutputDestinationSequence);
		tagByName.put("DICOMStorageSequence",TagFromName.DICOMStorageSequence);
		tagByName.put("STOWRSStorageSequence",TagFromName.STOWRSStorageSequence);
		tagByName.put("StorageURL",TagFromName.StorageURL);
		tagByName.put("XDSStorageSequence",TagFromName.XDSStorageSequence);
		tagByName.put("EntranceDoseInmGy",TagFromName.EntranceDoseInmGy);
		tagByName.put("EntranceDoseDerivation",TagFromName.EntranceDoseDerivation);
		tagByName.put("ParametricMapFrameTypeSequence",TagFromName.ParametricMapFrameTypeSequence);
		tagByName.put("ReferencedImageRealWorldValueMappingSequence",TagFromName.ReferencedImageRealWorldValueMappingSequence);
		tagByName.put("RealWorldValueMappingSequence",TagFromName.RealWorldValueMappingSequence);
		tagByName.put("PixelValueMappingCodeSequence",TagFromName.PixelValueMappingCodeSequence);
		tagByName.put("LUTLabel",TagFromName.LUTLabel);
		tagByName.put("RealWorldValueLastValueMapped",TagFromName.RealWorldValueLastValueMapped);
		tagByName.put("RealWorldValueLUTData",TagFromName.RealWorldValueLUTData);
		tagByName.put("DoubleFloatRealWorldValueLastValueMapped",TagFromName.DoubleFloatRealWorldValueLastValueMapped);
		tagByName.put("DoubleFloatRealWorldValueFirstValueMapped",TagFromName.DoubleFloatRealWorldValueFirstValueMapped);
		tagByName.put("RealWorldValueFirstValueMapped",TagFromName.RealWorldValueFirstValueMapped);
		tagByName.put("QuantityDefinitionSequence",TagFromName.QuantityDefinitionSequence);
		tagByName.put("RealWorldValueIntercept",TagFromName.RealWorldValueIntercept);
		tagByName.put("RealWorldValueSlope",TagFromName.RealWorldValueSlope);
		tagByName.put("FindingsFlagTrial",TagFromName.FindingsFlagTrial);
		tagByName.put("RelationshipType",TagFromName.RelationshipType);
		tagByName.put("FindingsSequenceTrial",TagFromName.FindingsSequenceTrial);
		tagByName.put("FindingsGroupUIDTrial",TagFromName.FindingsGroupUIDTrial);
		tagByName.put("ReferencedFindingsGroupUIDTrial",TagFromName.ReferencedFindingsGroupUIDTrial);
		tagByName.put("FindingsGroupRecordingDateTrial",TagFromName.FindingsGroupRecordingDateTrial);
		tagByName.put("FindingsGroupRecordingTimeTrial",TagFromName.FindingsGroupRecordingTimeTrial);
		tagByName.put("FindingsSourceCategoryCodeSequenceTrial",TagFromName.FindingsSourceCategoryCodeSequenceTrial);
		tagByName.put("VerifyingOrganization",TagFromName.VerifyingOrganization);
		tagByName.put("DocumentingOrganizationIdentifierCodeSequenceTrial",TagFromName.DocumentingOrganizationIdentifierCodeSequenceTrial);
		tagByName.put("VerificationDateTime",TagFromName.VerificationDateTime);
		tagByName.put("ObservationDateTime",TagFromName.ObservationDateTime);
		tagByName.put("ValueType",TagFromName.ValueType);
		tagByName.put("ConceptNameCodeSequence",TagFromName.ConceptNameCodeSequence);
		tagByName.put("MeasurementPrecisionDescriptionTrial",TagFromName.MeasurementPrecisionDescriptionTrial);
		tagByName.put("ContinuityOfContent",TagFromName.ContinuityOfContent);
		tagByName.put("UrgencyOrPriorityAlertsTrial",TagFromName.UrgencyOrPriorityAlertsTrial);
		tagByName.put("SequencingIndicatorTrial",TagFromName.SequencingIndicatorTrial);
		tagByName.put("DocumentIdentifierCodeSequenceTrial",TagFromName.DocumentIdentifierCodeSequenceTrial);
		tagByName.put("DocumentAuthorTrial",TagFromName.DocumentAuthorTrial);
		tagByName.put("DocumentAuthorIdentifierCodeSequenceTrial",TagFromName.DocumentAuthorIdentifierCodeSequenceTrial);
		tagByName.put("IdentifierCodeSequenceTrial",TagFromName.IdentifierCodeSequenceTrial);
		tagByName.put("VerifyingObserverSequence",TagFromName.VerifyingObserverSequence);
		tagByName.put("ObjectBinaryIdentifierTrial",TagFromName.ObjectBinaryIdentifierTrial);
		tagByName.put("VerifyingObserverName",TagFromName.VerifyingObserverName);
		tagByName.put("DocumentingObserverIdentifierCodeSequenceTrial",TagFromName.DocumentingObserverIdentifierCodeSequenceTrial);
		tagByName.put("AuthorObserverSequence",TagFromName.AuthorObserverSequence);
		tagByName.put("ParticipantSequence",TagFromName.ParticipantSequence);
		tagByName.put("CustodialOrganizationSequence",TagFromName.CustodialOrganizationSequence);
		tagByName.put("ParticipationType",TagFromName.ParticipationType);
		tagByName.put("ParticipationDateTime",TagFromName.ParticipationDateTime);
		tagByName.put("ObserverType",TagFromName.ObserverType);
		tagByName.put("ProcedureIdentifierCodeSequenceTrial",TagFromName.ProcedureIdentifierCodeSequenceTrial);
		tagByName.put("VerifyingObserverIdentificationCodeSequence",TagFromName.VerifyingObserverIdentificationCodeSequence);
		tagByName.put("ObjectDirectoryBinaryIdentifierTrial",TagFromName.ObjectDirectoryBinaryIdentifierTrial);
		tagByName.put("EquivalentCDADocumentSequence",TagFromName.EquivalentCDADocumentSequence);
		tagByName.put("ReferencedWaveformChannels",TagFromName.ReferencedWaveformChannels);
		tagByName.put("DateOfDocumentOrVerbalTransactionTrial",TagFromName.DateOfDocumentOrVerbalTransactionTrial);
		tagByName.put("TimeOfDocumentCreationOrVerbalTransactionTrial",TagFromName.TimeOfDocumentCreationOrVerbalTransactionTrial);
		tagByName.put("DateTime",TagFromName.DateTime);
		tagByName.put("Date",TagFromName.Date);
		tagByName.put("Time",TagFromName.Time);
		tagByName.put("PersonName",TagFromName.PersonName);
		tagByName.put("UID",TagFromName.UID);
		tagByName.put("ReportStatusIDTrial",TagFromName.ReportStatusIDTrial);
		tagByName.put("TemporalRangeType",TagFromName.TemporalRangeType);
		tagByName.put("ReferencedSamplePositions",TagFromName.ReferencedSamplePositions);
		tagByName.put("ReferencedFrameNumbers",TagFromName.ReferencedFrameNumbers);
		tagByName.put("ReferencedTimeOffsets",TagFromName.ReferencedTimeOffsets);
		tagByName.put("ReferencedDateTime",TagFromName.ReferencedDateTime);
		tagByName.put("TextValue",TagFromName.TextValue);
		tagByName.put("FloatingPointValue",TagFromName.FloatingPointValue);
		tagByName.put("RationalNumeratorValue",TagFromName.RationalNumeratorValue);
		tagByName.put("RationalDenominatorValue",TagFromName.RationalDenominatorValue);
		tagByName.put("ObservationCategoryCodeSequenceTrial",TagFromName.ObservationCategoryCodeSequenceTrial);
		tagByName.put("ConceptCodeSequence",TagFromName.ConceptCodeSequence);
		tagByName.put("BibliographicCitationTrial",TagFromName.BibliographicCitationTrial);
		tagByName.put("PurposeOfReferenceCodeSequence",TagFromName.PurposeOfReferenceCodeSequence);
		tagByName.put("ObservationUID",TagFromName.ObservationUID);
		tagByName.put("ReferencedObservationUIDTrial",TagFromName.ReferencedObservationUIDTrial);
		tagByName.put("ReferencedObservationClassTrial",TagFromName.ReferencedObservationClassTrial);
		tagByName.put("ReferencedObjectObservationClassTrial",TagFromName.ReferencedObjectObservationClassTrial);
		tagByName.put("AnnotationGroupNumber",TagFromName.AnnotationGroupNumber);
		tagByName.put("ObservationDateTrial",TagFromName.ObservationDateTrial);
		tagByName.put("ObservationTimeTrial",TagFromName.ObservationTimeTrial);
		tagByName.put("MeasurementAutomationTrial",TagFromName.MeasurementAutomationTrial);
		tagByName.put("ModifierCodeSequence",TagFromName.ModifierCodeSequence);
		tagByName.put("IdentificationDescriptionTrial",TagFromName.IdentificationDescriptionTrial);
		tagByName.put("CoordinatesSetGeometricTypeTrial",TagFromName.CoordinatesSetGeometricTypeTrial);
		tagByName.put("AlgorithmCodeSequenceTrial",TagFromName.AlgorithmCodeSequenceTrial);
		tagByName.put("AlgorithmDescriptionTrial",TagFromName.AlgorithmDescriptionTrial);
		tagByName.put("PixelCoordinatesSetTrial",TagFromName.PixelCoordinatesSetTrial);
		tagByName.put("MeasuredValueSequence",TagFromName.MeasuredValueSequence);
		tagByName.put("NumericValueQualifierCodeSequence",TagFromName.NumericValueQualifierCodeSequence);
		tagByName.put("CurrentObserverTrial",TagFromName.CurrentObserverTrial);
		tagByName.put("NumericValue",TagFromName.NumericValue);
		tagByName.put("ReferencedAccessionSequenceTrial",TagFromName.ReferencedAccessionSequenceTrial);
		tagByName.put("ReportStatusCommentTrial",TagFromName.ReportStatusCommentTrial);
		tagByName.put("ProcedureContextSequenceTrial",TagFromName.ProcedureContextSequenceTrial);
		tagByName.put("VerbalSourceTrial",TagFromName.VerbalSourceTrial);
		tagByName.put("AddressTrial",TagFromName.AddressTrial);
		tagByName.put("TelephoneNumberTrial",TagFromName.TelephoneNumberTrial);
		tagByName.put("VerbalSourceIdentifierCodeSequenceTrial",TagFromName.VerbalSourceIdentifierCodeSequenceTrial);
		tagByName.put("PredecessorDocumentsSequence",TagFromName.PredecessorDocumentsSequence);
		tagByName.put("ReferencedRequestSequence",TagFromName.ReferencedRequestSequence);
		tagByName.put("PerformedProcedureCodeSequence",TagFromName.PerformedProcedureCodeSequence);
		tagByName.put("CurrentRequestedProcedureEvidenceSequence",TagFromName.CurrentRequestedProcedureEvidenceSequence);
		tagByName.put("ReportDetailSequenceTrial",TagFromName.ReportDetailSequenceTrial);
		tagByName.put("PertinentOtherEvidenceSequence",TagFromName.PertinentOtherEvidenceSequence);
		tagByName.put("HL7StructuredDocumentReferenceSequence",TagFromName.HL7StructuredDocumentReferenceSequence);
		tagByName.put("ObservationSubjectUIDTrial",TagFromName.ObservationSubjectUIDTrial);
		tagByName.put("ObservationSubjectClassTrial",TagFromName.ObservationSubjectClassTrial);
		tagByName.put("ObservationSubjectTypeCodeSequenceTrial",TagFromName.ObservationSubjectTypeCodeSequenceTrial);
		tagByName.put("CompletionFlag",TagFromName.CompletionFlag);
		tagByName.put("CompletionFlagDescription",TagFromName.CompletionFlagDescription);
		tagByName.put("VerificationFlag",TagFromName.VerificationFlag);
		tagByName.put("ArchiveRequested",TagFromName.ArchiveRequested);
		tagByName.put("PreliminaryFlag",TagFromName.PreliminaryFlag);
		tagByName.put("ContentTemplateSequence",TagFromName.ContentTemplateSequence);
		tagByName.put("IdenticalDocumentsSequence",TagFromName.IdenticalDocumentsSequence);
		tagByName.put("ObservationSubjectContextFlagTrial",TagFromName.ObservationSubjectContextFlagTrial);
		tagByName.put("ObserverContextFlagTrial",TagFromName.ObserverContextFlagTrial);
		tagByName.put("ProcedureContextFlagTrial",TagFromName.ProcedureContextFlagTrial);
		tagByName.put("ContentSequence",TagFromName.ContentSequence);
		tagByName.put("RelationshipSequenceTrial",TagFromName.RelationshipSequenceTrial);
		tagByName.put("RelationshipTypeCodeSequenceTrial",TagFromName.RelationshipTypeCodeSequenceTrial);
		tagByName.put("LanguageCodeSequenceTrial",TagFromName.LanguageCodeSequenceTrial);
		tagByName.put("UniformResourceLocatorTrial",TagFromName.UniformResourceLocatorTrial);
		tagByName.put("WaveformAnnotationSequence",TagFromName.WaveformAnnotationSequence);
		tagByName.put("TemplateIdentifier",TagFromName.TemplateIdentifier);
		tagByName.put("TemplateVersion",TagFromName.TemplateVersion);
		tagByName.put("TemplateLocalVersion",TagFromName.TemplateLocalVersion);
		tagByName.put("TemplateExtensionFlag",TagFromName.TemplateExtensionFlag);
		tagByName.put("TemplateExtensionOrganizationUID",TagFromName.TemplateExtensionOrganizationUID);
		tagByName.put("TemplateExtensionCreatorUID",TagFromName.TemplateExtensionCreatorUID);
		tagByName.put("ReferencedContentItemIdentifier",TagFromName.ReferencedContentItemIdentifier);
		tagByName.put("HL7InstanceIdentifier",TagFromName.HL7InstanceIdentifier);
		tagByName.put("HL7DocumentEffectiveTime",TagFromName.HL7DocumentEffectiveTime);
		tagByName.put("HL7DocumentTypeCodeSequence",TagFromName.HL7DocumentTypeCodeSequence);
		tagByName.put("DocumentClassCodeSequence",TagFromName.DocumentClassCodeSequence);
		tagByName.put("RetrieveURI",TagFromName.RetrieveURI);
		tagByName.put("RetrieveLocationUID",TagFromName.RetrieveLocationUID);
		tagByName.put("TypeOfInstances",TagFromName.TypeOfInstances);
		tagByName.put("DICOMRetrievalSequence",TagFromName.DICOMRetrievalSequence);
		tagByName.put("DICOMMediaRetrievalSequence",TagFromName.DICOMMediaRetrievalSequence);
		tagByName.put("WADORetrievalSequence",TagFromName.WADORetrievalSequence);
		tagByName.put("XDSRetrievalSequence",TagFromName.XDSRetrievalSequence);
		tagByName.put("WADORSRetrievalSequence",TagFromName.WADORSRetrievalSequence);
		tagByName.put("RepositoryUniqueID",TagFromName.RepositoryUniqueID);
		tagByName.put("HomeCommunityID",TagFromName.HomeCommunityID);
		tagByName.put("DocumentTitle",TagFromName.DocumentTitle);
		tagByName.put("EncapsulatedDocument",TagFromName.EncapsulatedDocument);
		tagByName.put("MIMETypeOfEncapsulatedDocument",TagFromName.MIMETypeOfEncapsulatedDocument);
		tagByName.put("SourceInstanceSequence",TagFromName.SourceInstanceSequence);
		tagByName.put("ListOfMIMETypes",TagFromName.ListOfMIMETypes);
		tagByName.put("ProductPackageIdentifier",TagFromName.ProductPackageIdentifier);
		tagByName.put("SubstanceAdministrationApproval",TagFromName.SubstanceAdministrationApproval);
		tagByName.put("ApprovalStatusFurtherDescription",TagFromName.ApprovalStatusFurtherDescription);
		tagByName.put("ApprovalStatusDateTime",TagFromName.ApprovalStatusDateTime);
		tagByName.put("ProductTypeCodeSequence",TagFromName.ProductTypeCodeSequence);
		tagByName.put("ProductName",TagFromName.ProductName);
		tagByName.put("ProductDescription",TagFromName.ProductDescription);
		tagByName.put("ProductLotIdentifier",TagFromName.ProductLotIdentifier);
		tagByName.put("ProductExpirationDateTime",TagFromName.ProductExpirationDateTime);
		tagByName.put("SubstanceAdministrationDateTime",TagFromName.SubstanceAdministrationDateTime);
		tagByName.put("SubstanceAdministrationNotes",TagFromName.SubstanceAdministrationNotes);
		tagByName.put("SubstanceAdministrationDeviceID",TagFromName.SubstanceAdministrationDeviceID);
		tagByName.put("ProductParameterSequence",TagFromName.ProductParameterSequence);
		tagByName.put("SubstanceAdministrationParameterSequence",TagFromName.SubstanceAdministrationParameterSequence);
		tagByName.put("ApprovalSequence",TagFromName.ApprovalSequence);
		tagByName.put("AssertionCodeSequence",TagFromName.AssertionCodeSequence);
		tagByName.put("AssertionUID",TagFromName.AssertionUID);
		tagByName.put("AsserterIdentificationSequence",TagFromName.AsserterIdentificationSequence);
		tagByName.put("AssertionDateTime",TagFromName.AssertionDateTime);
		tagByName.put("AssertionExpirationDateTime",TagFromName.AssertionExpirationDateTime);
		tagByName.put("AssertionComments",TagFromName.AssertionComments);
		tagByName.put("RelatedAssertionSequence",TagFromName.RelatedAssertionSequence);
		tagByName.put("ReferencedAssertionUID",TagFromName.ReferencedAssertionUID);
		tagByName.put("ApprovalSubjectSequence",TagFromName.ApprovalSubjectSequence);
		tagByName.put("OrganizationalRoleCodeSequence",TagFromName.OrganizationalRoleCodeSequence);
		tagByName.put("LensDescription",TagFromName.LensDescription);
		tagByName.put("RightLensSequence",TagFromName.RightLensSequence);
		tagByName.put("LeftLensSequence",TagFromName.LeftLensSequence);
		tagByName.put("UnspecifiedLateralityLensSequence",TagFromName.UnspecifiedLateralityLensSequence);
		tagByName.put("CylinderSequence",TagFromName.CylinderSequence);
		tagByName.put("PrismSequence",TagFromName.PrismSequence);
		tagByName.put("HorizontalPrismPower",TagFromName.HorizontalPrismPower);
		tagByName.put("HorizontalPrismBase",TagFromName.HorizontalPrismBase);
		tagByName.put("VerticalPrismPower",TagFromName.VerticalPrismPower);
		tagByName.put("VerticalPrismBase",TagFromName.VerticalPrismBase);
		tagByName.put("LensSegmentType",TagFromName.LensSegmentType);
		tagByName.put("OpticalTransmittance",TagFromName.OpticalTransmittance);
		tagByName.put("ChannelWidth",TagFromName.ChannelWidth);
		tagByName.put("PupilSize",TagFromName.PupilSize);
		tagByName.put("CornealSize",TagFromName.CornealSize);
		tagByName.put("AutorefractionRightEyeSequence",TagFromName.AutorefractionRightEyeSequence);
		tagByName.put("AutorefractionLeftEyeSequence",TagFromName.AutorefractionLeftEyeSequence);
		tagByName.put("DistancePupillaryDistance",TagFromName.DistancePupillaryDistance);
		tagByName.put("NearPupillaryDistance",TagFromName.NearPupillaryDistance);
		tagByName.put("IntermediatePupillaryDistance",TagFromName.IntermediatePupillaryDistance);
		tagByName.put("OtherPupillaryDistance",TagFromName.OtherPupillaryDistance);
		tagByName.put("KeratometryRightEyeSequence",TagFromName.KeratometryRightEyeSequence);
		tagByName.put("KeratometryLeftEyeSequence",TagFromName.KeratometryLeftEyeSequence);
		tagByName.put("SteepKeratometricAxisSequence",TagFromName.SteepKeratometricAxisSequence);
		tagByName.put("RadiusOfCurvature",TagFromName.RadiusOfCurvature);
		tagByName.put("KeratometricPower",TagFromName.KeratometricPower);
		tagByName.put("KeratometricAxis",TagFromName.KeratometricAxis);
		tagByName.put("FlatKeratometricAxisSequence",TagFromName.FlatKeratometricAxisSequence);
		tagByName.put("BackgroundColor",TagFromName.BackgroundColor);
		tagByName.put("Optotype",TagFromName.Optotype);
		tagByName.put("OptotypePresentation",TagFromName.OptotypePresentation);
		tagByName.put("SubjectiveRefractionRightEyeSequence",TagFromName.SubjectiveRefractionRightEyeSequence);
		tagByName.put("SubjectiveRefractionLeftEyeSequence",TagFromName.SubjectiveRefractionLeftEyeSequence);
		tagByName.put("AddNearSequence",TagFromName.AddNearSequence);
		tagByName.put("AddIntermediateSequence",TagFromName.AddIntermediateSequence);
		tagByName.put("AddOtherSequence",TagFromName.AddOtherSequence);
		tagByName.put("AddPower",TagFromName.AddPower);
		tagByName.put("ViewingDistance",TagFromName.ViewingDistance);
		tagByName.put("VisualAcuityTypeCodeSequence",TagFromName.VisualAcuityTypeCodeSequence);
		tagByName.put("VisualAcuityRightEyeSequence",TagFromName.VisualAcuityRightEyeSequence);
		tagByName.put("VisualAcuityLeftEyeSequence",TagFromName.VisualAcuityLeftEyeSequence);
		tagByName.put("VisualAcuityBothEyesOpenSequence",TagFromName.VisualAcuityBothEyesOpenSequence);
		tagByName.put("ViewingDistanceType",TagFromName.ViewingDistanceType);
		tagByName.put("VisualAcuityModifiers",TagFromName.VisualAcuityModifiers);
		tagByName.put("DecimalVisualAcuity",TagFromName.DecimalVisualAcuity);
		tagByName.put("OptotypeDetailedDefinition",TagFromName.OptotypeDetailedDefinition);
		tagByName.put("ReferencedRefractiveMeasurementsSequence",TagFromName.ReferencedRefractiveMeasurementsSequence);
		tagByName.put("SpherePower",TagFromName.SpherePower);
		tagByName.put("CylinderPower",TagFromName.CylinderPower);
		tagByName.put("CornealTopographySurface",TagFromName.CornealTopographySurface);
		tagByName.put("CornealVertexLocation",TagFromName.CornealVertexLocation);
		tagByName.put("PupilCentroidXCoordinate",TagFromName.PupilCentroidXCoordinate);
		tagByName.put("PupilCentroidYCoordinate",TagFromName.PupilCentroidYCoordinate);
		tagByName.put("EquivalentPupilRadius",TagFromName.EquivalentPupilRadius);
		tagByName.put("CornealTopographyMapTypeCodeSequence",TagFromName.CornealTopographyMapTypeCodeSequence);
		tagByName.put("VerticesOfTheOutlineOfPupil",TagFromName.VerticesOfTheOutlineOfPupil);
		tagByName.put("CornealTopographyMappingNormalsSequence",TagFromName.CornealTopographyMappingNormalsSequence);
		tagByName.put("MaximumCornealCurvatureSequence",TagFromName.MaximumCornealCurvatureSequence);
		tagByName.put("MaximumCornealCurvature",TagFromName.MaximumCornealCurvature);
		tagByName.put("MaximumCornealCurvatureLocation",TagFromName.MaximumCornealCurvatureLocation);
		tagByName.put("MinimumKeratometricSequence",TagFromName.MinimumKeratometricSequence);
		tagByName.put("SimulatedKeratometricCylinderSequence",TagFromName.SimulatedKeratometricCylinderSequence);
		tagByName.put("AverageCornealPower",TagFromName.AverageCornealPower);
		tagByName.put("CornealISValue",TagFromName.CornealISValue);
		tagByName.put("AnalyzedArea",TagFromName.AnalyzedArea);
		tagByName.put("SurfaceRegularityIndex",TagFromName.SurfaceRegularityIndex);
		tagByName.put("SurfaceAsymmetryIndex",TagFromName.SurfaceAsymmetryIndex);
		tagByName.put("CornealEccentricityIndex",TagFromName.CornealEccentricityIndex);
		tagByName.put("KeratoconusPredictionIndex",TagFromName.KeratoconusPredictionIndex);
		tagByName.put("DecimalPotentialVisualAcuity",TagFromName.DecimalPotentialVisualAcuity);
		tagByName.put("CornealTopographyMapQualityEvaluation",TagFromName.CornealTopographyMapQualityEvaluation);
		tagByName.put("SourceImageCornealProcessedDataSequence",TagFromName.SourceImageCornealProcessedDataSequence);
		tagByName.put("CornealPointLocation",TagFromName.CornealPointLocation);
		tagByName.put("CornealPointEstimated",TagFromName.CornealPointEstimated);
		tagByName.put("AxialPower",TagFromName.AxialPower);
		tagByName.put("TangentialPower",TagFromName.TangentialPower);
		tagByName.put("RefractivePower",TagFromName.RefractivePower);
		tagByName.put("RelativeElevation",TagFromName.RelativeElevation);
		tagByName.put("CornealWavefront",TagFromName.CornealWavefront);
		tagByName.put("ImagedVolumeWidth",TagFromName.ImagedVolumeWidth);
		tagByName.put("ImagedVolumeHeight",TagFromName.ImagedVolumeHeight);
		tagByName.put("ImagedVolumeDepth",TagFromName.ImagedVolumeDepth);
		tagByName.put("TotalPixelMatrixColumns",TagFromName.TotalPixelMatrixColumns);
		tagByName.put("TotalPixelMatrixRows",TagFromName.TotalPixelMatrixRows);
		tagByName.put("TotalPixelMatrixOriginSequence",TagFromName.TotalPixelMatrixOriginSequence);
		tagByName.put("SpecimenLabelInImage",TagFromName.SpecimenLabelInImage);
		tagByName.put("FocusMethod",TagFromName.FocusMethod);
		tagByName.put("ExtendedDepthOfField",TagFromName.ExtendedDepthOfField);
		tagByName.put("NumberOfFocalPlanes",TagFromName.NumberOfFocalPlanes);
		tagByName.put("DistanceBetweenFocalPlanes",TagFromName.DistanceBetweenFocalPlanes);
		tagByName.put("RecommendedAbsentPixelCIELabValue",TagFromName.RecommendedAbsentPixelCIELabValue);
		tagByName.put("IlluminatorTypeCodeSequence",TagFromName.IlluminatorTypeCodeSequence);
		tagByName.put("ImageOrientationSlide",TagFromName.ImageOrientationSlide);
		tagByName.put("OpticalPathSequence",TagFromName.OpticalPathSequence);
		tagByName.put("OpticalPathIdentifier",TagFromName.OpticalPathIdentifier);
		tagByName.put("OpticalPathDescription",TagFromName.OpticalPathDescription);
		tagByName.put("IlluminationColorCodeSequence",TagFromName.IlluminationColorCodeSequence);
		tagByName.put("SpecimenReferenceSequence",TagFromName.SpecimenReferenceSequence);
		tagByName.put("CondenserLensPower",TagFromName.CondenserLensPower);
		tagByName.put("ObjectiveLensPower",TagFromName.ObjectiveLensPower);
		tagByName.put("ObjectiveLensNumericalAperture",TagFromName.ObjectiveLensNumericalAperture);
		tagByName.put("PaletteColorLookupTableSequence",TagFromName.PaletteColorLookupTableSequence);
		tagByName.put("ReferencedImageNavigationSequence",TagFromName.ReferencedImageNavigationSequence);
		tagByName.put("TopLeftHandCornerOfLocalizerArea",TagFromName.TopLeftHandCornerOfLocalizerArea);
		tagByName.put("BottomRightHandCornerOfLocalizerArea",TagFromName.BottomRightHandCornerOfLocalizerArea);
		tagByName.put("OpticalPathIdentificationSequence",TagFromName.OpticalPathIdentificationSequence);
		tagByName.put("PlanePositionSlideSequence",TagFromName.PlanePositionSlideSequence);
		tagByName.put("ColumnPositionInTotalImagePixelMatrix",TagFromName.ColumnPositionInTotalImagePixelMatrix);
		tagByName.put("RowPositionInTotalImagePixelMatrix",TagFromName.RowPositionInTotalImagePixelMatrix);
		tagByName.put("PixelOriginInterpretation",TagFromName.PixelOriginInterpretation);
		tagByName.put("NumberOfOpticalPaths",TagFromName.NumberOfOpticalPaths);
		tagByName.put("TotalPixelMatrixFocalPlanes",TagFromName.TotalPixelMatrixFocalPlanes);
		tagByName.put("CalibrationImage",TagFromName.CalibrationImage);
		tagByName.put("DeviceSequence",TagFromName.DeviceSequence);
		tagByName.put("ContainerComponentTypeCodeSequence",TagFromName.ContainerComponentTypeCodeSequence);
		tagByName.put("ContainerComponentThickness",TagFromName.ContainerComponentThickness);
		tagByName.put("DeviceLength",TagFromName.DeviceLength);
		tagByName.put("ContainerComponentWidth",TagFromName.ContainerComponentWidth);
		tagByName.put("DeviceDiameter",TagFromName.DeviceDiameter);
		tagByName.put("DeviceDiameterUnits",TagFromName.DeviceDiameterUnits);
		tagByName.put("DeviceVolume",TagFromName.DeviceVolume);
		tagByName.put("InterMarkerDistance",TagFromName.InterMarkerDistance);
		tagByName.put("ContainerComponentMaterial",TagFromName.ContainerComponentMaterial);
		tagByName.put("ContainerComponentID",TagFromName.ContainerComponentID);
		tagByName.put("ContainerComponentLength",TagFromName.ContainerComponentLength);
		tagByName.put("ContainerComponentDiameter",TagFromName.ContainerComponentDiameter);
		tagByName.put("ContainerComponentDescription",TagFromName.ContainerComponentDescription);
		tagByName.put("DeviceDescription",TagFromName.DeviceDescription);
		tagByName.put("ContrastBolusIngredientPercentByVolume",TagFromName.ContrastBolusIngredientPercentByVolume);
		tagByName.put("OCTFocalDistance",TagFromName.OCTFocalDistance);
		tagByName.put("BeamSpotSize",TagFromName.BeamSpotSize);
		tagByName.put("EffectiveRefractiveIndex",TagFromName.EffectiveRefractiveIndex);
		tagByName.put("OCTAcquisitionDomain",TagFromName.OCTAcquisitionDomain);
		tagByName.put("OCTOpticalCenterWavelength",TagFromName.OCTOpticalCenterWavelength);
		tagByName.put("AxialResolution",TagFromName.AxialResolution);
		tagByName.put("RangingDepth",TagFromName.RangingDepth);
		tagByName.put("ALineRate",TagFromName.ALineRate);
		tagByName.put("ALinesPerFrame",TagFromName.ALinesPerFrame);
		tagByName.put("CatheterRotationalRate",TagFromName.CatheterRotationalRate);
		tagByName.put("ALinePixelSpacing",TagFromName.ALinePixelSpacing);
		tagByName.put("ModeOfPercutaneousAccessSequence",TagFromName.ModeOfPercutaneousAccessSequence);
		tagByName.put("IntravascularOCTFrameTypeSequence",TagFromName.IntravascularOCTFrameTypeSequence);
		tagByName.put("OCTZOffsetApplied",TagFromName.OCTZOffsetApplied);
		tagByName.put("IntravascularFrameContentSequence",TagFromName.IntravascularFrameContentSequence);
		tagByName.put("IntravascularLongitudinalDistance",TagFromName.IntravascularLongitudinalDistance);
		tagByName.put("IntravascularOCTFrameContentSequence",TagFromName.IntravascularOCTFrameContentSequence);
		tagByName.put("OCTZOffsetCorrection",TagFromName.OCTZOffsetCorrection);
		tagByName.put("CatheterDirectionOfRotation",TagFromName.CatheterDirectionOfRotation);
		tagByName.put("SeamLineLocation",TagFromName.SeamLineLocation);
		tagByName.put("FirstALineLocation",TagFromName.FirstALineLocation);
		tagByName.put("SeamLineIndex",TagFromName.SeamLineIndex);
		tagByName.put("NumberOfPaddedALines",TagFromName.NumberOfPaddedALines);
		tagByName.put("InterpolationType",TagFromName.InterpolationType);
		tagByName.put("RefractiveIndexApplied",TagFromName.RefractiveIndexApplied);
		tagByName.put("EnergyWindowVector",TagFromName.EnergyWindowVector);
		tagByName.put("NumberOfEnergyWindows",TagFromName.NumberOfEnergyWindows);
		tagByName.put("EnergyWindowInformationSequence",TagFromName.EnergyWindowInformationSequence);
		tagByName.put("EnergyWindowRangeSequence",TagFromName.EnergyWindowRangeSequence);
		tagByName.put("EnergyWindowLowerLimit",TagFromName.EnergyWindowLowerLimit);
		tagByName.put("EnergyWindowUpperLimit",TagFromName.EnergyWindowUpperLimit);
		tagByName.put("RadiopharmaceuticalInformationSequence",TagFromName.RadiopharmaceuticalInformationSequence);
		tagByName.put("ResidualSyringeCounts",TagFromName.ResidualSyringeCounts);
		tagByName.put("EnergyWindowName",TagFromName.EnergyWindowName);
		tagByName.put("DetectorVector",TagFromName.DetectorVector);
		tagByName.put("NumberOfDetectors",TagFromName.NumberOfDetectors);
		tagByName.put("DetectorInformationSequence",TagFromName.DetectorInformationSequence);
		tagByName.put("PhaseVector",TagFromName.PhaseVector);
		tagByName.put("NumberOfPhases",TagFromName.NumberOfPhases);
		tagByName.put("PhaseInformationSequence",TagFromName.PhaseInformationSequence);
		tagByName.put("NumberOfFramesInPhase",TagFromName.NumberOfFramesInPhase);
		tagByName.put("PhaseDelay",TagFromName.PhaseDelay);
		tagByName.put("PauseBetweenFrames",TagFromName.PauseBetweenFrames);
		tagByName.put("PhaseDescription",TagFromName.PhaseDescription);
		tagByName.put("RotationVector",TagFromName.RotationVector);
		tagByName.put("NumberOfRotations",TagFromName.NumberOfRotations);
		tagByName.put("RotationInformationSequence",TagFromName.RotationInformationSequence);
		tagByName.put("NumberOfFramesInRotation",TagFromName.NumberOfFramesInRotation);
		tagByName.put("RRIntervalVector",TagFromName.RRIntervalVector);
		tagByName.put("NumberOfRRIntervals",TagFromName.NumberOfRRIntervals);
		tagByName.put("GatedInformationSequence",TagFromName.GatedInformationSequence);
		tagByName.put("DataInformationSequence",TagFromName.DataInformationSequence);
		tagByName.put("TimeSlotVector",TagFromName.TimeSlotVector);
		tagByName.put("NumberOfTimeSlots",TagFromName.NumberOfTimeSlots);
		tagByName.put("TimeSlotInformationSequence",TagFromName.TimeSlotInformationSequence);
		tagByName.put("TimeSlotTime",TagFromName.TimeSlotTime);
		tagByName.put("SliceVector",TagFromName.SliceVector);
		tagByName.put("NumberOfSlices",TagFromName.NumberOfSlices);
		tagByName.put("AngularViewVector",TagFromName.AngularViewVector);
		tagByName.put("TimeSliceVector",TagFromName.TimeSliceVector);
		tagByName.put("NumberOfTimeSlices",TagFromName.NumberOfTimeSlices);
		tagByName.put("StartAngle",TagFromName.StartAngle);
		tagByName.put("TypeOfDetectorMotion",TagFromName.TypeOfDetectorMotion);
		tagByName.put("TriggerVector",TagFromName.TriggerVector);
		tagByName.put("NumberOfTriggersInPhase",TagFromName.NumberOfTriggersInPhase);
		tagByName.put("ViewCodeSequence",TagFromName.ViewCodeSequence);
		tagByName.put("ViewModifierCodeSequence",TagFromName.ViewModifierCodeSequence);
		tagByName.put("RadionuclideCodeSequence",TagFromName.RadionuclideCodeSequence);
		tagByName.put("AdministrationRouteCodeSequence",TagFromName.AdministrationRouteCodeSequence);
		tagByName.put("RadiopharmaceuticalCodeSequence",TagFromName.RadiopharmaceuticalCodeSequence);
		tagByName.put("CalibrationDataSequence",TagFromName.CalibrationDataSequence);
		tagByName.put("EnergyWindowNumber",TagFromName.EnergyWindowNumber);
		tagByName.put("ImageID",TagFromName.ImageID);
		tagByName.put("PatientOrientationCodeSequence",TagFromName.PatientOrientationCodeSequence);
		tagByName.put("PatientOrientationModifierCodeSequence",TagFromName.PatientOrientationModifierCodeSequence);
		tagByName.put("PatientGantryRelationshipCodeSequence",TagFromName.PatientGantryRelationshipCodeSequence);
		tagByName.put("SliceProgressionDirection",TagFromName.SliceProgressionDirection);
		tagByName.put("ScanProgressionDirection",TagFromName.ScanProgressionDirection);
		tagByName.put("SeriesType",TagFromName.SeriesType);
		tagByName.put("Units",TagFromName.Units);
		tagByName.put("CountsSource",TagFromName.CountsSource);
		tagByName.put("ReprojectionMethod",TagFromName.ReprojectionMethod);
		tagByName.put("SUVType",TagFromName.SUVType);
		tagByName.put("RandomsCorrectionMethod",TagFromName.RandomsCorrectionMethod);
		tagByName.put("AttenuationCorrectionMethod",TagFromName.AttenuationCorrectionMethod);
		tagByName.put("DecayCorrection",TagFromName.DecayCorrection);
		tagByName.put("ReconstructionMethod",TagFromName.ReconstructionMethod);
		tagByName.put("DetectorLinesOfResponseUsed",TagFromName.DetectorLinesOfResponseUsed);
		tagByName.put("ScatterCorrectionMethod",TagFromName.ScatterCorrectionMethod);
		tagByName.put("AxialAcceptance",TagFromName.AxialAcceptance);
		tagByName.put("AxialMash",TagFromName.AxialMash);
		tagByName.put("TransverseMash",TagFromName.TransverseMash);
		tagByName.put("DetectorElementSize",TagFromName.DetectorElementSize);
		tagByName.put("CoincidenceWindowWidth",TagFromName.CoincidenceWindowWidth);
		tagByName.put("SecondaryCountsType",TagFromName.SecondaryCountsType);
		tagByName.put("FrameReferenceTime",TagFromName.FrameReferenceTime);
		tagByName.put("PrimaryPromptsCountsAccumulated",TagFromName.PrimaryPromptsCountsAccumulated);
		tagByName.put("SecondaryCountsAccumulated",TagFromName.SecondaryCountsAccumulated);
		tagByName.put("SliceSensitivityFactor",TagFromName.SliceSensitivityFactor);
		tagByName.put("DecayFactor",TagFromName.DecayFactor);
		tagByName.put("DoseCalibrationFactor",TagFromName.DoseCalibrationFactor);
		tagByName.put("ScatterFractionFactor",TagFromName.ScatterFractionFactor);
		tagByName.put("DeadTimeFactor",TagFromName.DeadTimeFactor);
		tagByName.put("ImageIndex",TagFromName.ImageIndex);
		tagByName.put("CountsIncluded",TagFromName.CountsIncluded);
		tagByName.put("DeadTimeCorrectionFlag",TagFromName.DeadTimeCorrectionFlag);
		tagByName.put("HistogramSequence",TagFromName.HistogramSequence);
		tagByName.put("HistogramNumberOfBins",TagFromName.HistogramNumberOfBins);
		tagByName.put("HistogramFirstBinValue",TagFromName.HistogramFirstBinValue);
		tagByName.put("HistogramLastBinValue",TagFromName.HistogramLastBinValue);
		tagByName.put("HistogramBinWidth",TagFromName.HistogramBinWidth);
		tagByName.put("HistogramExplanation",TagFromName.HistogramExplanation);
		tagByName.put("HistogramData",TagFromName.HistogramData);
		tagByName.put("SegmentationType",TagFromName.SegmentationType);
		tagByName.put("SegmentSequence",TagFromName.SegmentSequence);
		tagByName.put("SegmentedPropertyCategoryCodeSequence",TagFromName.SegmentedPropertyCategoryCodeSequence);
		tagByName.put("SegmentNumber",TagFromName.SegmentNumber);
		tagByName.put("SegmentLabel",TagFromName.SegmentLabel);
		tagByName.put("SegmentDescription",TagFromName.SegmentDescription);
		tagByName.put("SegmentationAlgorithmIdentificationSequence",TagFromName.SegmentationAlgorithmIdentificationSequence);
		tagByName.put("SegmentAlgorithmType",TagFromName.SegmentAlgorithmType);
		tagByName.put("SegmentAlgorithmName",TagFromName.SegmentAlgorithmName);
		tagByName.put("SegmentIdentificationSequence",TagFromName.SegmentIdentificationSequence);
		tagByName.put("ReferencedSegmentNumber",TagFromName.ReferencedSegmentNumber);
		tagByName.put("RecommendedDisplayGrayscaleValue",TagFromName.RecommendedDisplayGrayscaleValue);
		tagByName.put("RecommendedDisplayCIELabValue",TagFromName.RecommendedDisplayCIELabValue);
		tagByName.put("MaximumFractionalValue",TagFromName.MaximumFractionalValue);
		tagByName.put("SegmentedPropertyTypeCodeSequence",TagFromName.SegmentedPropertyTypeCodeSequence);
		tagByName.put("SegmentationFractionalType",TagFromName.SegmentationFractionalType);
		tagByName.put("SegmentedPropertyTypeModifierCodeSequence",TagFromName.SegmentedPropertyTypeModifierCodeSequence);
		tagByName.put("UsedSegmentsSequence",TagFromName.UsedSegmentsSequence);
		tagByName.put("TrackingID",TagFromName.TrackingID);
		tagByName.put("TrackingUID",TagFromName.TrackingUID);
		tagByName.put("DeformableRegistrationSequence",TagFromName.DeformableRegistrationSequence);
		tagByName.put("SourceFrameOfReferenceUID",TagFromName.SourceFrameOfReferenceUID);
		tagByName.put("DeformableRegistrationGridSequence",TagFromName.DeformableRegistrationGridSequence);
		tagByName.put("GridDimensions",TagFromName.GridDimensions);
		tagByName.put("GridResolution",TagFromName.GridResolution);
		tagByName.put("VectorGridData",TagFromName.VectorGridData);
		tagByName.put("PreDeformationMatrixRegistrationSequence",TagFromName.PreDeformationMatrixRegistrationSequence);
		tagByName.put("PostDeformationMatrixRegistrationSequence",TagFromName.PostDeformationMatrixRegistrationSequence);
		tagByName.put("NumberOfSurfaces",TagFromName.NumberOfSurfaces);
		tagByName.put("SurfaceSequence",TagFromName.SurfaceSequence);
		tagByName.put("SurfaceNumber",TagFromName.SurfaceNumber);
		tagByName.put("SurfaceComments",TagFromName.SurfaceComments);
		tagByName.put("SurfaceProcessing",TagFromName.SurfaceProcessing);
		tagByName.put("SurfaceProcessingRatio",TagFromName.SurfaceProcessingRatio);
		tagByName.put("SurfaceProcessingDescription",TagFromName.SurfaceProcessingDescription);
		tagByName.put("RecommendedPresentationOpacity",TagFromName.RecommendedPresentationOpacity);
		tagByName.put("RecommendedPresentationType",TagFromName.RecommendedPresentationType);
		tagByName.put("FiniteVolume",TagFromName.FiniteVolume);
		tagByName.put("Manifold",TagFromName.Manifold);
		tagByName.put("SurfacePointsSequence",TagFromName.SurfacePointsSequence);
		tagByName.put("SurfacePointsNormalsSequence",TagFromName.SurfacePointsNormalsSequence);
		tagByName.put("SurfaceMeshPrimitivesSequence",TagFromName.SurfaceMeshPrimitivesSequence);
		tagByName.put("NumberOfSurfacePoints",TagFromName.NumberOfSurfacePoints);
		tagByName.put("PointCoordinatesData",TagFromName.PointCoordinatesData);
		tagByName.put("PointPositionAccuracy",TagFromName.PointPositionAccuracy);
		tagByName.put("MeanPointDistance",TagFromName.MeanPointDistance);
		tagByName.put("MaximumPointDistance",TagFromName.MaximumPointDistance);
		tagByName.put("PointsBoundingBoxCoordinates",TagFromName.PointsBoundingBoxCoordinates);
		tagByName.put("AxisOfRotation",TagFromName.AxisOfRotation);
		tagByName.put("CenterOfRotation",TagFromName.CenterOfRotation);
		tagByName.put("NumberOfVectors",TagFromName.NumberOfVectors);
		tagByName.put("VectorDimensionality",TagFromName.VectorDimensionality);
		tagByName.put("VectorAccuracy",TagFromName.VectorAccuracy);
		tagByName.put("VectorCoordinateData",TagFromName.VectorCoordinateData);
		tagByName.put("TrianglePointIndexList",TagFromName.TrianglePointIndexList);
		tagByName.put("EdgePointIndexList",TagFromName.EdgePointIndexList);
		tagByName.put("VertexPointIndexList",TagFromName.VertexPointIndexList);
		tagByName.put("TriangleStripSequence",TagFromName.TriangleStripSequence);
		tagByName.put("TriangleFanSequence",TagFromName.TriangleFanSequence);
		tagByName.put("LineSequence",TagFromName.LineSequence);
		tagByName.put("PrimitivePointIndexList",TagFromName.PrimitivePointIndexList);
		tagByName.put("SurfaceCount",TagFromName.SurfaceCount);
		tagByName.put("ReferencedSurfaceSequence",TagFromName.ReferencedSurfaceSequence);
		tagByName.put("ReferencedSurfaceNumber",TagFromName.ReferencedSurfaceNumber);
		tagByName.put("SegmentSurfaceGenerationAlgorithmIdentificationSequence",TagFromName.SegmentSurfaceGenerationAlgorithmIdentificationSequence);
		tagByName.put("SegmentSurfaceSourceInstanceSequence",TagFromName.SegmentSurfaceSourceInstanceSequence);
		tagByName.put("AlgorithmFamilyCodeSequence",TagFromName.AlgorithmFamilyCodeSequence);
		tagByName.put("AlgorithmNameCodeSequence",TagFromName.AlgorithmNameCodeSequence);
		tagByName.put("AlgorithmVersion",TagFromName.AlgorithmVersion);
		tagByName.put("AlgorithmParameters",TagFromName.AlgorithmParameters);
		tagByName.put("FacetSequence",TagFromName.FacetSequence);
		tagByName.put("SurfaceProcessingAlgorithmIdentificationSequence",TagFromName.SurfaceProcessingAlgorithmIdentificationSequence);
		tagByName.put("AlgorithmName",TagFromName.AlgorithmName);
		tagByName.put("RecommendedPointRadius",TagFromName.RecommendedPointRadius);
		tagByName.put("RecommendedLineThickness",TagFromName.RecommendedLineThickness);
		tagByName.put("LongPrimitivePointIndexList",TagFromName.LongPrimitivePointIndexList);
		tagByName.put("LongTrianglePointIndexList",TagFromName.LongTrianglePointIndexList);
		tagByName.put("LongEdgePointIndexList",TagFromName.LongEdgePointIndexList);
		tagByName.put("LongVertexPointIndexList",TagFromName.LongVertexPointIndexList);
		tagByName.put("TrackSetSequence",TagFromName.TrackSetSequence);
		tagByName.put("TrackSequence",TagFromName.TrackSequence);
		tagByName.put("RecommendedDisplayCIELabValueList",TagFromName.RecommendedDisplayCIELabValueList);
		tagByName.put("TrackingAlgorithmIdentificationSequence",TagFromName.TrackingAlgorithmIdentificationSequence);
		tagByName.put("TrackSetNumber",TagFromName.TrackSetNumber);
		tagByName.put("TrackSetLabel",TagFromName.TrackSetLabel);
		tagByName.put("TrackSetDescription",TagFromName.TrackSetDescription);
		tagByName.put("TrackSetAnatomicalTypeCodeSequence",TagFromName.TrackSetAnatomicalTypeCodeSequence);
		tagByName.put("MeasurementsSequence",TagFromName.MeasurementsSequence);
		tagByName.put("TrackSetStatisticsSequence",TagFromName.TrackSetStatisticsSequence);
		tagByName.put("FloatingPointValues",TagFromName.FloatingPointValues);
		tagByName.put("TrackPointIndexList",TagFromName.TrackPointIndexList);
		tagByName.put("TrackStatisticsSequence",TagFromName.TrackStatisticsSequence);
		tagByName.put("MeasurementValuesSequence",TagFromName.MeasurementValuesSequence);
		tagByName.put("DiffusionAcquisitionCodeSequence",TagFromName.DiffusionAcquisitionCodeSequence);
		tagByName.put("DiffusionModelCodeSequence",TagFromName.DiffusionModelCodeSequence);
		tagByName.put("ImplantSize",TagFromName.ImplantSize);
		tagByName.put("ImplantTemplateVersion",TagFromName.ImplantTemplateVersion);
		tagByName.put("ReplacedImplantTemplateSequence",TagFromName.ReplacedImplantTemplateSequence);
		tagByName.put("ImplantType",TagFromName.ImplantType);
		tagByName.put("DerivationImplantTemplateSequence",TagFromName.DerivationImplantTemplateSequence);
		tagByName.put("OriginalImplantTemplateSequence",TagFromName.OriginalImplantTemplateSequence);
		tagByName.put("EffectiveDateTime",TagFromName.EffectiveDateTime);
		tagByName.put("ImplantTargetAnatomySequence",TagFromName.ImplantTargetAnatomySequence);
		tagByName.put("InformationFromManufacturerSequence",TagFromName.InformationFromManufacturerSequence);
		tagByName.put("NotificationFromManufacturerSequence",TagFromName.NotificationFromManufacturerSequence);
		tagByName.put("InformationIssueDateTime",TagFromName.InformationIssueDateTime);
		tagByName.put("InformationSummary",TagFromName.InformationSummary);
		tagByName.put("ImplantRegulatoryDisapprovalCodeSequence",TagFromName.ImplantRegulatoryDisapprovalCodeSequence);
		tagByName.put("OverallTemplateSpatialTolerance",TagFromName.OverallTemplateSpatialTolerance);
		tagByName.put("HPGLDocumentSequence",TagFromName.HPGLDocumentSequence);
		tagByName.put("HPGLDocumentID",TagFromName.HPGLDocumentID);
		tagByName.put("HPGLDocumentLabel",TagFromName.HPGLDocumentLabel);
		tagByName.put("ViewOrientationCodeSequence",TagFromName.ViewOrientationCodeSequence);
		tagByName.put("ViewOrientationModifierCodeSequence",TagFromName.ViewOrientationModifierCodeSequence);
		tagByName.put("HPGLDocumentScaling",TagFromName.HPGLDocumentScaling);
		tagByName.put("HPGLDocument",TagFromName.HPGLDocument);
		tagByName.put("HPGLContourPenNumber",TagFromName.HPGLContourPenNumber);
		tagByName.put("HPGLPenSequence",TagFromName.HPGLPenSequence);
		tagByName.put("HPGLPenNumber",TagFromName.HPGLPenNumber);
		tagByName.put("HPGLPenLabel",TagFromName.HPGLPenLabel);
		tagByName.put("HPGLPenDescription",TagFromName.HPGLPenDescription);
		tagByName.put("RecommendedRotationPoint",TagFromName.RecommendedRotationPoint);
		tagByName.put("BoundingRectangle",TagFromName.BoundingRectangle);
		tagByName.put("ImplantTemplate3DModelSurfaceNumber",TagFromName.ImplantTemplate3DModelSurfaceNumber);
		tagByName.put("SurfaceModelDescriptionSequence",TagFromName.SurfaceModelDescriptionSequence);
		tagByName.put("SurfaceModelLabel",TagFromName.SurfaceModelLabel);
		tagByName.put("SurfaceModelScalingFactor",TagFromName.SurfaceModelScalingFactor);
		tagByName.put("MaterialsCodeSequence",TagFromName.MaterialsCodeSequence);
		tagByName.put("CoatingMaterialsCodeSequence",TagFromName.CoatingMaterialsCodeSequence);
		tagByName.put("ImplantTypeCodeSequence",TagFromName.ImplantTypeCodeSequence);
		tagByName.put("FixationMethodCodeSequence",TagFromName.FixationMethodCodeSequence);
		tagByName.put("MatingFeatureSetsSequence",TagFromName.MatingFeatureSetsSequence);
		tagByName.put("MatingFeatureSetID",TagFromName.MatingFeatureSetID);
		tagByName.put("MatingFeatureSetLabel",TagFromName.MatingFeatureSetLabel);
		tagByName.put("MatingFeatureSequence",TagFromName.MatingFeatureSequence);
		tagByName.put("MatingFeatureID",TagFromName.MatingFeatureID);
		tagByName.put("MatingFeatureDegreeOfFreedomSequence",TagFromName.MatingFeatureDegreeOfFreedomSequence);
		tagByName.put("DegreeOfFreedomID",TagFromName.DegreeOfFreedomID);
		tagByName.put("DegreeOfFreedomType",TagFromName.DegreeOfFreedomType);
		tagByName.put("TwoDMatingFeatureCoordinatesSequence",TagFromName.TwoDMatingFeatureCoordinatesSequence);
		tagByName.put("ReferencedHPGLDocumentID",TagFromName.ReferencedHPGLDocumentID);
		tagByName.put("TwoDMatingPoint",TagFromName.TwoDMatingPoint);
		tagByName.put("TwoDMatingAxes",TagFromName.TwoDMatingAxes);
		tagByName.put("TwoDDegreeOfFreedomSequence",TagFromName.TwoDDegreeOfFreedomSequence);
		tagByName.put("ThreeDDegreeOfFreedomAxis",TagFromName.ThreeDDegreeOfFreedomAxis);
		tagByName.put("RangeOfFreedom",TagFromName.RangeOfFreedom);
		tagByName.put("ThreeDMatingPoint",TagFromName.ThreeDMatingPoint);
		tagByName.put("ThreeDMatingAxes",TagFromName.ThreeDMatingAxes);
		tagByName.put("TwoDDegreeOfFreedomAxis",TagFromName.TwoDDegreeOfFreedomAxis);
		tagByName.put("PlanningLandmarkPointSequence",TagFromName.PlanningLandmarkPointSequence);
		tagByName.put("PlanningLandmarkLineSequence",TagFromName.PlanningLandmarkLineSequence);
		tagByName.put("PlanningLandmarkPlaneSequence",TagFromName.PlanningLandmarkPlaneSequence);
		tagByName.put("PlanningLandmarkID",TagFromName.PlanningLandmarkID);
		tagByName.put("PlanningLandmarkDescription",TagFromName.PlanningLandmarkDescription);
		tagByName.put("PlanningLandmarkIdentificationCodeSequence",TagFromName.PlanningLandmarkIdentificationCodeSequence);
		tagByName.put("TwoDPointCoordinatesSequence",TagFromName.TwoDPointCoordinatesSequence);
		tagByName.put("TwoDPointCoordinates",TagFromName.TwoDPointCoordinates);
		tagByName.put("ThreeDPointCoordinates",TagFromName.ThreeDPointCoordinates);
		tagByName.put("TwoDLineCoordinatesSequence",TagFromName.TwoDLineCoordinatesSequence);
		tagByName.put("TwoDLineCoordinates",TagFromName.TwoDLineCoordinates);
		tagByName.put("ThreeDLineCoordinates",TagFromName.ThreeDLineCoordinates);
		tagByName.put("TwoDPlaneCoordinatesSequence",TagFromName.TwoDPlaneCoordinatesSequence);
		tagByName.put("TwoDPlaneIntersection",TagFromName.TwoDPlaneIntersection);
		tagByName.put("ThreeDPlaneOrigin",TagFromName.ThreeDPlaneOrigin);
		tagByName.put("ThreeDPlaneNormal",TagFromName.ThreeDPlaneNormal);
		tagByName.put("ModelModification",TagFromName.ModelModification);
		tagByName.put("ModelMirroring",TagFromName.ModelMirroring);
		tagByName.put("ModelUsageCodeSequence",TagFromName.ModelUsageCodeSequence);
		tagByName.put("GraphicAnnotationSequence",TagFromName.GraphicAnnotationSequence);
		tagByName.put("GraphicLayer",TagFromName.GraphicLayer);
		tagByName.put("BoundingBoxAnnotationUnits",TagFromName.BoundingBoxAnnotationUnits);
		tagByName.put("AnchorPointAnnotationUnits",TagFromName.AnchorPointAnnotationUnits);
		tagByName.put("GraphicAnnotationUnits",TagFromName.GraphicAnnotationUnits);
		tagByName.put("UnformattedTextValue",TagFromName.UnformattedTextValue);
		tagByName.put("TextObjectSequence",TagFromName.TextObjectSequence);
		tagByName.put("GraphicObjectSequence",TagFromName.GraphicObjectSequence);
		tagByName.put("BoundingBoxTopLeftHandCorner",TagFromName.BoundingBoxTopLeftHandCorner);
		tagByName.put("BoundingBoxBottomRightHandCorner",TagFromName.BoundingBoxBottomRightHandCorner);
		tagByName.put("BoundingBoxTextHorizontalJustification",TagFromName.BoundingBoxTextHorizontalJustification);
		tagByName.put("AnchorPoint",TagFromName.AnchorPoint);
		tagByName.put("AnchorPointVisibility",TagFromName.AnchorPointVisibility);
		tagByName.put("GraphicDimensions",TagFromName.GraphicDimensions);
		tagByName.put("NumberOfGraphicPoints",TagFromName.NumberOfGraphicPoints);
		tagByName.put("GraphicData",TagFromName.GraphicData);
		tagByName.put("GraphicType",TagFromName.GraphicType);
		tagByName.put("GraphicFilled",TagFromName.GraphicFilled);
		tagByName.put("ImageRotationRetired",TagFromName.ImageRotationRetired);
		tagByName.put("ImageHorizontalFlip",TagFromName.ImageHorizontalFlip);
		tagByName.put("ImageRotation",TagFromName.ImageRotation);
		tagByName.put("DisplayedAreaTopLeftHandCornerTrial",TagFromName.DisplayedAreaTopLeftHandCornerTrial);
		tagByName.put("DisplayedAreaBottomRightHandCornerTrial",TagFromName.DisplayedAreaBottomRightHandCornerTrial);
		tagByName.put("DisplayedAreaTopLeftHandCorner",TagFromName.DisplayedAreaTopLeftHandCorner);
		tagByName.put("DisplayedAreaBottomRightHandCorner",TagFromName.DisplayedAreaBottomRightHandCorner);
		tagByName.put("DisplayedAreaSelectionSequence",TagFromName.DisplayedAreaSelectionSequence);
		tagByName.put("GraphicLayerSequence",TagFromName.GraphicLayerSequence);
		tagByName.put("GraphicLayerOrder",TagFromName.GraphicLayerOrder);
		tagByName.put("GraphicLayerRecommendedDisplayGrayscaleValue",TagFromName.GraphicLayerRecommendedDisplayGrayscaleValue);
		tagByName.put("GraphicLayerRecommendedDisplayRGBValue",TagFromName.GraphicLayerRecommendedDisplayRGBValue);
		tagByName.put("GraphicLayerDescription",TagFromName.GraphicLayerDescription);
		tagByName.put("ContentLabel",TagFromName.ContentLabel);
		tagByName.put("ContentDescription",TagFromName.ContentDescription);
		tagByName.put("PresentationCreationDate",TagFromName.PresentationCreationDate);
		tagByName.put("PresentationCreationTime",TagFromName.PresentationCreationTime);
		tagByName.put("ContentCreatorName",TagFromName.ContentCreatorName);
		tagByName.put("ContentCreatorIdentificationCodeSequence",TagFromName.ContentCreatorIdentificationCodeSequence);
		tagByName.put("AlternateContentDescriptionSequence",TagFromName.AlternateContentDescriptionSequence);
		tagByName.put("PresentationSizeMode",TagFromName.PresentationSizeMode);
		tagByName.put("PresentationPixelSpacing",TagFromName.PresentationPixelSpacing);
		tagByName.put("PresentationPixelAspectRatio",TagFromName.PresentationPixelAspectRatio);
		tagByName.put("PresentationPixelMagnificationRatio",TagFromName.PresentationPixelMagnificationRatio);
		tagByName.put("GraphicGroupLabel",TagFromName.GraphicGroupLabel);
		tagByName.put("GraphicGroupDescription",TagFromName.GraphicGroupDescription);
		tagByName.put("CompoundGraphicSequence",TagFromName.CompoundGraphicSequence);
		tagByName.put("CompoundGraphicInstanceID",TagFromName.CompoundGraphicInstanceID);
		tagByName.put("FontName",TagFromName.FontName);
		tagByName.put("FontNameType",TagFromName.FontNameType);
		tagByName.put("CSSFontName",TagFromName.CSSFontName);
		tagByName.put("RotationAngle",TagFromName.RotationAngle);
		tagByName.put("TextStyleSequence",TagFromName.TextStyleSequence);
		tagByName.put("LineStyleSequence",TagFromName.LineStyleSequence);
		tagByName.put("FillStyleSequence",TagFromName.FillStyleSequence);
		tagByName.put("GraphicGroupSequence",TagFromName.GraphicGroupSequence);
		tagByName.put("TextColorCIELabValue",TagFromName.TextColorCIELabValue);
		tagByName.put("HorizontalAlignment",TagFromName.HorizontalAlignment);
		tagByName.put("VerticalAlignment",TagFromName.VerticalAlignment);
		tagByName.put("ShadowStyle",TagFromName.ShadowStyle);
		tagByName.put("ShadowOffsetX",TagFromName.ShadowOffsetX);
		tagByName.put("ShadowOffsetY",TagFromName.ShadowOffsetY);
		tagByName.put("ShadowColorCIELabValue",TagFromName.ShadowColorCIELabValue);
		tagByName.put("Underlined",TagFromName.Underlined);
		tagByName.put("Bold",TagFromName.Bold);
		tagByName.put("Italic",TagFromName.Italic);
		tagByName.put("PatternOnColorCIELabValue",TagFromName.PatternOnColorCIELabValue);
		tagByName.put("PatternOffColorCIELabValue",TagFromName.PatternOffColorCIELabValue);
		tagByName.put("LineThickness",TagFromName.LineThickness);
		tagByName.put("LineDashingStyle",TagFromName.LineDashingStyle);
		tagByName.put("LinePattern",TagFromName.LinePattern);
		tagByName.put("FillPattern",TagFromName.FillPattern);
		tagByName.put("FillMode",TagFromName.FillMode);
		tagByName.put("ShadowOpacity",TagFromName.ShadowOpacity);
		tagByName.put("GapLength",TagFromName.GapLength);
		tagByName.put("DiameterOfVisibility",TagFromName.DiameterOfVisibility);
		tagByName.put("RotationPoint",TagFromName.RotationPoint);
		tagByName.put("TickAlignment",TagFromName.TickAlignment);
		tagByName.put("ShowTickLabel",TagFromName.ShowTickLabel);
		tagByName.put("TickLabelAlignment",TagFromName.TickLabelAlignment);
		tagByName.put("CompoundGraphicUnits",TagFromName.CompoundGraphicUnits);
		tagByName.put("PatternOnOpacity",TagFromName.PatternOnOpacity);
		tagByName.put("PatternOffOpacity",TagFromName.PatternOffOpacity);
		tagByName.put("MajorTicksSequence",TagFromName.MajorTicksSequence);
		tagByName.put("TickPosition",TagFromName.TickPosition);
		tagByName.put("TickLabel",TagFromName.TickLabel);
		tagByName.put("CompoundGraphicType",TagFromName.CompoundGraphicType);
		tagByName.put("GraphicGroupID",TagFromName.GraphicGroupID);
		tagByName.put("ShapeType",TagFromName.ShapeType);
		tagByName.put("RegistrationSequence",TagFromName.RegistrationSequence);
		tagByName.put("MatrixRegistrationSequence",TagFromName.MatrixRegistrationSequence);
		tagByName.put("MatrixSequence",TagFromName.MatrixSequence);
		tagByName.put("FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix",TagFromName.FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix);
		tagByName.put("FrameOfReferenceTransformationMatrixType",TagFromName.FrameOfReferenceTransformationMatrixType);
		tagByName.put("RegistrationTypeCodeSequence",TagFromName.RegistrationTypeCodeSequence);
		tagByName.put("FiducialDescription",TagFromName.FiducialDescription);
		tagByName.put("FiducialIdentifier",TagFromName.FiducialIdentifier);
		tagByName.put("FiducialIdentifierCodeSequence",TagFromName.FiducialIdentifierCodeSequence);
		tagByName.put("ContourUncertaintyRadius",TagFromName.ContourUncertaintyRadius);
		tagByName.put("UsedFiducialsSequence",TagFromName.UsedFiducialsSequence);
		tagByName.put("GraphicCoordinatesDataSequence",TagFromName.GraphicCoordinatesDataSequence);
		tagByName.put("FiducialUID",TagFromName.FiducialUID);
		tagByName.put("ReferencedFiducialUID",TagFromName.ReferencedFiducialUID);
		tagByName.put("FiducialSetSequence",TagFromName.FiducialSetSequence);
		tagByName.put("FiducialSequence",TagFromName.FiducialSequence);
		tagByName.put("FiducialsPropertyCategoryCodeSequence",TagFromName.FiducialsPropertyCategoryCodeSequence);
		tagByName.put("GraphicLayerRecommendedDisplayCIELabValue",TagFromName.GraphicLayerRecommendedDisplayCIELabValue);
		tagByName.put("BlendingSequence",TagFromName.BlendingSequence);
		tagByName.put("RelativeOpacity",TagFromName.RelativeOpacity);
		tagByName.put("ReferencedSpatialRegistrationSequence",TagFromName.ReferencedSpatialRegistrationSequence);
		tagByName.put("BlendingPosition",TagFromName.BlendingPosition);
		tagByName.put("PresentationDisplayCollectionUID",TagFromName.PresentationDisplayCollectionUID);
		tagByName.put("PresentationSequenceCollectionUID",TagFromName.PresentationSequenceCollectionUID);
		tagByName.put("PresentationSequencePositionIndex",TagFromName.PresentationSequencePositionIndex);
		tagByName.put("RenderedImageReferenceSequence",TagFromName.RenderedImageReferenceSequence);
		tagByName.put("VolumetricPresentationStateInputSequence",TagFromName.VolumetricPresentationStateInputSequence);
		tagByName.put("PresentationInputType",TagFromName.PresentationInputType);
		tagByName.put("InputSequencePositionIndex",TagFromName.InputSequencePositionIndex);
		tagByName.put("Crop",TagFromName.Crop);
		tagByName.put("CroppingSpecificationIndex",TagFromName.CroppingSpecificationIndex);
		tagByName.put("CompositingMethod",TagFromName.CompositingMethod);
		tagByName.put("VolumetricPresentationInputNumber",TagFromName.VolumetricPresentationInputNumber);
		tagByName.put("ImageVolumeGeometry",TagFromName.ImageVolumeGeometry);
		tagByName.put("VolumetricPresentationInputSetUID",TagFromName.VolumetricPresentationInputSetUID);
		tagByName.put("VolumetricPresentationInputSetSequence",TagFromName.VolumetricPresentationInputSetSequence);
		tagByName.put("GlobalCrop",TagFromName.GlobalCrop);
		tagByName.put("GlobalCroppingSpecificationIndex",TagFromName.GlobalCroppingSpecificationIndex);
		tagByName.put("RenderingMethod",TagFromName.RenderingMethod);
		tagByName.put("VolumeCroppingSequence",TagFromName.VolumeCroppingSequence);
		tagByName.put("VolumeCroppingMethod",TagFromName.VolumeCroppingMethod);
		tagByName.put("BoundingBoxCrop",TagFromName.BoundingBoxCrop);
		tagByName.put("ObliqueCroppingPlaneSequence",TagFromName.ObliqueCroppingPlaneSequence);
		tagByName.put("Plane",TagFromName.Plane);
		tagByName.put("PlaneNormal",TagFromName.PlaneNormal);
		tagByName.put("CroppingSpecificationNumber",TagFromName.CroppingSpecificationNumber);
		tagByName.put("MultiPlanarReconstructionStyle",TagFromName.MultiPlanarReconstructionStyle);
		tagByName.put("MPRThicknessType",TagFromName.MPRThicknessType);
		tagByName.put("MPRSlabThickness",TagFromName.MPRSlabThickness);
		tagByName.put("MPRTopLeftHandCorner",TagFromName.MPRTopLeftHandCorner);
		tagByName.put("MPRViewWidthDirection",TagFromName.MPRViewWidthDirection);
		tagByName.put("MPRViewWidth",TagFromName.MPRViewWidth);
		tagByName.put("NumberOfVolumetricCurvePoints",TagFromName.NumberOfVolumetricCurvePoints);
		tagByName.put("VolumetricCurvePoints",TagFromName.VolumetricCurvePoints);
		tagByName.put("MPRViewHeightDirection",TagFromName.MPRViewHeightDirection);
		tagByName.put("MPRViewHeight",TagFromName.MPRViewHeight);
		tagByName.put("RenderProjection",TagFromName.RenderProjection);
		tagByName.put("ViewpointPosition",TagFromName.ViewpointPosition);
		tagByName.put("ViewpointLookAtPoint",TagFromName.ViewpointLookAtPoint);
		tagByName.put("ViewpointUpDirection",TagFromName.ViewpointUpDirection);
		tagByName.put("RenderFieldOfView",TagFromName.RenderFieldOfView);
		tagByName.put("SamplingStepSize",TagFromName.SamplingStepSize);
		tagByName.put("ShadingStyle",TagFromName.ShadingStyle);
		tagByName.put("AmbientReflectionIntensity",TagFromName.AmbientReflectionIntensity);
		tagByName.put("LightDirection",TagFromName.LightDirection);
		tagByName.put("DiffuseReflectionIntensity",TagFromName.DiffuseReflectionIntensity);
		tagByName.put("SpecularReflectionIntensity",TagFromName.SpecularReflectionIntensity);
		tagByName.put("Shininess",TagFromName.Shininess);
		tagByName.put("PresentationStateClassificationComponentSequence",TagFromName.PresentationStateClassificationComponentSequence);
		tagByName.put("ComponentType",TagFromName.ComponentType);
		tagByName.put("ComponentInputSequence",TagFromName.ComponentInputSequence);
		tagByName.put("VolumetricPresentationInputIndex",TagFromName.VolumetricPresentationInputIndex);
		tagByName.put("PresentationStateCompositorComponentSequence",TagFromName.PresentationStateCompositorComponentSequence);
		tagByName.put("WeightingTransferFunctionSequence",TagFromName.WeightingTransferFunctionSequence);
		tagByName.put("WeightingLookupTableDescriptor",TagFromName.WeightingLookupTableDescriptor);
		tagByName.put("WeightingLookupTableData",TagFromName.WeightingLookupTableData);
		tagByName.put("VolumetricAnnotationSequence",TagFromName.VolumetricAnnotationSequence);
		tagByName.put("ReferencedStructuredContextSequence",TagFromName.ReferencedStructuredContextSequence);
		tagByName.put("ReferencedContentItem",TagFromName.ReferencedContentItem);
		tagByName.put("VolumetricPresentationInputAnnotationSequence",TagFromName.VolumetricPresentationInputAnnotationSequence);
		tagByName.put("AnnotationClipping",TagFromName.AnnotationClipping);
		tagByName.put("PresentationAnimationStyle",TagFromName.PresentationAnimationStyle);
		tagByName.put("RecommendedAnimationRate",TagFromName.RecommendedAnimationRate);
		tagByName.put("AnimationCurveSequence",TagFromName.AnimationCurveSequence);
		tagByName.put("AnimationStepSize",TagFromName.AnimationStepSize);
		tagByName.put("SwivelRange",TagFromName.SwivelRange);
		tagByName.put("VolumetricCurveUpDirections",TagFromName.VolumetricCurveUpDirections);
		tagByName.put("VolumeStreamSequence",TagFromName.VolumeStreamSequence);
		tagByName.put("RGBATransferFunctionDescription",TagFromName.RGBATransferFunctionDescription);
		tagByName.put("AdvancedBlendingSequence",TagFromName.AdvancedBlendingSequence);
		tagByName.put("BlendingInputNumber",TagFromName.BlendingInputNumber);
		tagByName.put("BlendingDisplayInputSequence",TagFromName.BlendingDisplayInputSequence);
		tagByName.put("BlendingDisplaySequence",TagFromName.BlendingDisplaySequence);
		tagByName.put("BlendingMode",TagFromName.BlendingMode);
		tagByName.put("TimeSeriesBlending",TagFromName.TimeSeriesBlending);
		tagByName.put("GeometryForDisplay",TagFromName.GeometryForDisplay);
		tagByName.put("ThresholdSequence",TagFromName.ThresholdSequence);
		tagByName.put("ThresholdValueSequence",TagFromName.ThresholdValueSequence);
		tagByName.put("ThresholdType",TagFromName.ThresholdType);
		tagByName.put("ThresholdValue",TagFromName.ThresholdValue);
		tagByName.put("HangingProtocolName",TagFromName.HangingProtocolName);
		tagByName.put("HangingProtocolDescription",TagFromName.HangingProtocolDescription);
		tagByName.put("HangingProtocolLevel",TagFromName.HangingProtocolLevel);
		tagByName.put("HangingProtocolCreator",TagFromName.HangingProtocolCreator);
		tagByName.put("HangingProtocolCreationDateTime",TagFromName.HangingProtocolCreationDateTime);
		tagByName.put("HangingProtocolDefinitionSequence",TagFromName.HangingProtocolDefinitionSequence);
		tagByName.put("HangingProtocolUserIdentificationCodeSequence",TagFromName.HangingProtocolUserIdentificationCodeSequence);
		tagByName.put("HangingProtocolUserGroupName",TagFromName.HangingProtocolUserGroupName);
		tagByName.put("SourceHangingProtocolSequence",TagFromName.SourceHangingProtocolSequence);
		tagByName.put("NumberOfPriorsReferenced",TagFromName.NumberOfPriorsReferenced);
		tagByName.put("ImageSetsSequence",TagFromName.ImageSetsSequence);
		tagByName.put("ImageSetSelectorSequence",TagFromName.ImageSetSelectorSequence);
		tagByName.put("ImageSetSelectorUsageFlag",TagFromName.ImageSetSelectorUsageFlag);
		tagByName.put("SelectorAttribute",TagFromName.SelectorAttribute);
		tagByName.put("SelectorValueNumber",TagFromName.SelectorValueNumber);
		tagByName.put("TimeBasedImageSetsSequence",TagFromName.TimeBasedImageSetsSequence);
		tagByName.put("ImageSetNumber",TagFromName.ImageSetNumber);
		tagByName.put("ImageSetSelectorCategory",TagFromName.ImageSetSelectorCategory);
		tagByName.put("RelativeTime",TagFromName.RelativeTime);
		tagByName.put("RelativeTimeUnits",TagFromName.RelativeTimeUnits);
		tagByName.put("AbstractPriorValue",TagFromName.AbstractPriorValue);
		tagByName.put("AbstractPriorCodeSequence",TagFromName.AbstractPriorCodeSequence);
		tagByName.put("ImageSetLabel",TagFromName.ImageSetLabel);
		tagByName.put("SelectorAttributeVR",TagFromName.SelectorAttributeVR);
		tagByName.put("SelectorSequencePointer",TagFromName.SelectorSequencePointer);
		tagByName.put("SelectorSequencePointerPrivateCreator",TagFromName.SelectorSequencePointerPrivateCreator);
		tagByName.put("SelectorAttributePrivateCreator",TagFromName.SelectorAttributePrivateCreator);
		tagByName.put("SelectorAEValue",TagFromName.SelectorAEValue);
		tagByName.put("SelectorASValue",TagFromName.SelectorASValue);
		tagByName.put("SelectorATValue",TagFromName.SelectorATValue);
		tagByName.put("SelectorDAValue",TagFromName.SelectorDAValue);
		tagByName.put("SelectorCSValue",TagFromName.SelectorCSValue);
		tagByName.put("SelectorDTValue",TagFromName.SelectorDTValue);
		tagByName.put("SelectorISValue",TagFromName.SelectorISValue);
		tagByName.put("SelectorOBValue",TagFromName.SelectorOBValue);
		tagByName.put("SelectorLOValue",TagFromName.SelectorLOValue);
		tagByName.put("SelectorOFValue",TagFromName.SelectorOFValue);
		tagByName.put("SelectorLTValue",TagFromName.SelectorLTValue);
		tagByName.put("SelectorOWValue",TagFromName.SelectorOWValue);
		tagByName.put("SelectorPNValue",TagFromName.SelectorPNValue);
		tagByName.put("SelectorTMValue",TagFromName.SelectorTMValue);
		tagByName.put("SelectorSHValue",TagFromName.SelectorSHValue);
		tagByName.put("SelectorUNValue",TagFromName.SelectorUNValue);
		tagByName.put("SelectorSTValue",TagFromName.SelectorSTValue);
		tagByName.put("SelectorUCValue",TagFromName.SelectorUCValue);
		tagByName.put("SelectorUTValue",TagFromName.SelectorUTValue);
		tagByName.put("SelectorURValue",TagFromName.SelectorURValue);
		tagByName.put("SelectorDSValue",TagFromName.SelectorDSValue);
		tagByName.put("SelectorODValue",TagFromName.SelectorODValue);
		tagByName.put("SelectorFDValue",TagFromName.SelectorFDValue);
		tagByName.put("SelectorOLValue",TagFromName.SelectorOLValue);
		tagByName.put("SelectorFLValue",TagFromName.SelectorFLValue);
		tagByName.put("SelectorULValue",TagFromName.SelectorULValue);
		tagByName.put("SelectorUSValue",TagFromName.SelectorUSValue);
		tagByName.put("SelectorSLValue",TagFromName.SelectorSLValue);
		tagByName.put("SelectorSSValue",TagFromName.SelectorSSValue);
		tagByName.put("SelectorUIValue",TagFromName.SelectorUIValue);
		tagByName.put("SelectorCodeSequenceValue",TagFromName.SelectorCodeSequenceValue);
		tagByName.put("NumberOfScreens",TagFromName.NumberOfScreens);
		tagByName.put("NominalScreenDefinitionSequence",TagFromName.NominalScreenDefinitionSequence);
		tagByName.put("NumberOfVerticalPixels",TagFromName.NumberOfVerticalPixels);
		tagByName.put("NumberOfHorizontalPixels",TagFromName.NumberOfHorizontalPixels);
		tagByName.put("DisplayEnvironmentSpatialPosition",TagFromName.DisplayEnvironmentSpatialPosition);
		tagByName.put("ScreenMinimumGrayscaleBitDepth",TagFromName.ScreenMinimumGrayscaleBitDepth);
		tagByName.put("ScreenMinimumColorBitDepth",TagFromName.ScreenMinimumColorBitDepth);
		tagByName.put("ApplicationMaximumRepaintTime",TagFromName.ApplicationMaximumRepaintTime);
		tagByName.put("DisplaySetsSequence",TagFromName.DisplaySetsSequence);
		tagByName.put("DisplaySetNumber",TagFromName.DisplaySetNumber);
		tagByName.put("DisplaySetLabel",TagFromName.DisplaySetLabel);
		tagByName.put("DisplaySetPresentationGroup",TagFromName.DisplaySetPresentationGroup);
		tagByName.put("DisplaySetPresentationGroupDescription",TagFromName.DisplaySetPresentationGroupDescription);
		tagByName.put("PartialDataDisplayHandling",TagFromName.PartialDataDisplayHandling);
		tagByName.put("SynchronizedScrollingSequence",TagFromName.SynchronizedScrollingSequence);
		tagByName.put("DisplaySetScrollingGroup",TagFromName.DisplaySetScrollingGroup);
		tagByName.put("NavigationIndicatorSequence",TagFromName.NavigationIndicatorSequence);
		tagByName.put("NavigationDisplaySet",TagFromName.NavigationDisplaySet);
		tagByName.put("ReferenceDisplaySets",TagFromName.ReferenceDisplaySets);
		tagByName.put("ImageBoxesSequence",TagFromName.ImageBoxesSequence);
		tagByName.put("ImageBoxNumber",TagFromName.ImageBoxNumber);
		tagByName.put("ImageBoxLayoutType",TagFromName.ImageBoxLayoutType);
		tagByName.put("ImageBoxTileHorizontalDimension",TagFromName.ImageBoxTileHorizontalDimension);
		tagByName.put("ImageBoxTileVerticalDimension",TagFromName.ImageBoxTileVerticalDimension);
		tagByName.put("ImageBoxScrollDirection",TagFromName.ImageBoxScrollDirection);
		tagByName.put("ImageBoxSmallScrollType",TagFromName.ImageBoxSmallScrollType);
		tagByName.put("ImageBoxSmallScrollAmount",TagFromName.ImageBoxSmallScrollAmount);
		tagByName.put("ImageBoxLargeScrollType",TagFromName.ImageBoxLargeScrollType);
		tagByName.put("ImageBoxLargeScrollAmount",TagFromName.ImageBoxLargeScrollAmount);
		tagByName.put("ImageBoxOverlapPriority",TagFromName.ImageBoxOverlapPriority);
		tagByName.put("CineRelativeToRealTime",TagFromName.CineRelativeToRealTime);
		tagByName.put("FilterOperationsSequence",TagFromName.FilterOperationsSequence);
		tagByName.put("FilterByCategory",TagFromName.FilterByCategory);
		tagByName.put("FilterByAttributePresence",TagFromName.FilterByAttributePresence);
		tagByName.put("FilterByOperator",TagFromName.FilterByOperator);
		tagByName.put("StructuredDisplayBackgroundCIELabValue",TagFromName.StructuredDisplayBackgroundCIELabValue);
		tagByName.put("EmptyImageBoxCIELabValue",TagFromName.EmptyImageBoxCIELabValue);
		tagByName.put("StructuredDisplayImageBoxSequence",TagFromName.StructuredDisplayImageBoxSequence);
		tagByName.put("StructuredDisplayTextBoxSequence",TagFromName.StructuredDisplayTextBoxSequence);
		tagByName.put("ReferencedFirstFrameSequence",TagFromName.ReferencedFirstFrameSequence);
		tagByName.put("ImageBoxSynchronizationSequence",TagFromName.ImageBoxSynchronizationSequence);
		tagByName.put("SynchronizedImageBoxList",TagFromName.SynchronizedImageBoxList);
		tagByName.put("TypeOfSynchronization",TagFromName.TypeOfSynchronization);
		tagByName.put("BlendingOperationType",TagFromName.BlendingOperationType);
		tagByName.put("ReformattingOperationType",TagFromName.ReformattingOperationType);
		tagByName.put("ReformattingThickness",TagFromName.ReformattingThickness);
		tagByName.put("ReformattingInterval",TagFromName.ReformattingInterval);
		tagByName.put("ReformattingOperationInitialViewDirection",TagFromName.ReformattingOperationInitialViewDirection);
		tagByName.put("ThreeDRenderingType",TagFromName.ThreeDRenderingType);
		tagByName.put("SortingOperationsSequence",TagFromName.SortingOperationsSequence);
		tagByName.put("SortByCategory",TagFromName.SortByCategory);
		tagByName.put("SortingDirection",TagFromName.SortingDirection);
		tagByName.put("DisplaySetPatientOrientation",TagFromName.DisplaySetPatientOrientation);
		tagByName.put("VOIType",TagFromName.VOIType);
		tagByName.put("PseudoColorType",TagFromName.PseudoColorType);
		tagByName.put("PseudoColorPaletteInstanceReferenceSequence",TagFromName.PseudoColorPaletteInstanceReferenceSequence);
		tagByName.put("ShowGrayscaleInverted",TagFromName.ShowGrayscaleInverted);
		tagByName.put("ShowImageTrueSizeFlag",TagFromName.ShowImageTrueSizeFlag);
		tagByName.put("ShowGraphicAnnotationFlag",TagFromName.ShowGraphicAnnotationFlag);
		tagByName.put("ShowPatientDemographicsFlag",TagFromName.ShowPatientDemographicsFlag);
		tagByName.put("ShowAcquisitionTechniquesFlag",TagFromName.ShowAcquisitionTechniquesFlag);
		tagByName.put("DisplaySetHorizontalJustification",TagFromName.DisplaySetHorizontalJustification);
		tagByName.put("DisplaySetVerticalJustification",TagFromName.DisplaySetVerticalJustification);
		tagByName.put("ContinuationStartMeterset",TagFromName.ContinuationStartMeterset);
		tagByName.put("ContinuationEndMeterset",TagFromName.ContinuationEndMeterset);
		tagByName.put("ProcedureStepState",TagFromName.ProcedureStepState);
		tagByName.put("ProcedureStepProgressInformationSequence",TagFromName.ProcedureStepProgressInformationSequence);
		tagByName.put("ProcedureStepProgress",TagFromName.ProcedureStepProgress);
		tagByName.put("ProcedureStepProgressDescription",TagFromName.ProcedureStepProgressDescription);
		tagByName.put("ProcedureStepProgressParametersSequence",TagFromName.ProcedureStepProgressParametersSequence);
		tagByName.put("ProcedureStepCommunicationsURISequence",TagFromName.ProcedureStepCommunicationsURISequence);
		tagByName.put("ContactURI",TagFromName.ContactURI);
		tagByName.put("ContactDisplayName",TagFromName.ContactDisplayName);
		tagByName.put("ProcedureStepDiscontinuationReasonCodeSequence",TagFromName.ProcedureStepDiscontinuationReasonCodeSequence);
		tagByName.put("BeamTaskSequence",TagFromName.BeamTaskSequence);
		tagByName.put("BeamTaskType",TagFromName.BeamTaskType);
		tagByName.put("BeamOrderIndexTrial",TagFromName.BeamOrderIndexTrial);
		tagByName.put("AutosequenceFlag",TagFromName.AutosequenceFlag);
		tagByName.put("TableTopVerticalAdjustedPosition",TagFromName.TableTopVerticalAdjustedPosition);
		tagByName.put("TableTopLongitudinalAdjustedPosition",TagFromName.TableTopLongitudinalAdjustedPosition);
		tagByName.put("TableTopLateralAdjustedPosition",TagFromName.TableTopLateralAdjustedPosition);
		tagByName.put("PatientSupportAdjustedAngle",TagFromName.PatientSupportAdjustedAngle);
		tagByName.put("TableTopEccentricAdjustedAngle",TagFromName.TableTopEccentricAdjustedAngle);
		tagByName.put("TableTopPitchAdjustedAngle",TagFromName.TableTopPitchAdjustedAngle);
		tagByName.put("TableTopRollAdjustedAngle",TagFromName.TableTopRollAdjustedAngle);
		tagByName.put("DeliveryVerificationImageSequence",TagFromName.DeliveryVerificationImageSequence);
		tagByName.put("VerificationImageTiming",TagFromName.VerificationImageTiming);
		tagByName.put("DoubleExposureFlag",TagFromName.DoubleExposureFlag);
		tagByName.put("DoubleExposureOrdering",TagFromName.DoubleExposureOrdering);
		tagByName.put("DoubleExposureMetersetTrial",TagFromName.DoubleExposureMetersetTrial);
		tagByName.put("DoubleExposureFieldDeltaTrial",TagFromName.DoubleExposureFieldDeltaTrial);
		tagByName.put("RelatedReferenceRTImageSequence",TagFromName.RelatedReferenceRTImageSequence);
		tagByName.put("GeneralMachineVerificationSequence",TagFromName.GeneralMachineVerificationSequence);
		tagByName.put("ConventionalMachineVerificationSequence",TagFromName.ConventionalMachineVerificationSequence);
		tagByName.put("IonMachineVerificationSequence",TagFromName.IonMachineVerificationSequence);
		tagByName.put("FailedAttributesSequence",TagFromName.FailedAttributesSequence);
		tagByName.put("OverriddenAttributesSequence",TagFromName.OverriddenAttributesSequence);
		tagByName.put("ConventionalControlPointVerificationSequence",TagFromName.ConventionalControlPointVerificationSequence);
		tagByName.put("IonControlPointVerificationSequence",TagFromName.IonControlPointVerificationSequence);
		tagByName.put("AttributeOccurrenceSequence",TagFromName.AttributeOccurrenceSequence);
		tagByName.put("AttributeOccurrencePointer",TagFromName.AttributeOccurrencePointer);
		tagByName.put("AttributeItemSelector",TagFromName.AttributeItemSelector);
		tagByName.put("AttributeOccurrencePrivateCreator",TagFromName.AttributeOccurrencePrivateCreator);
		tagByName.put("SelectorSequencePointerItems",TagFromName.SelectorSequencePointerItems);
		tagByName.put("ScheduledProcedureStepPriority",TagFromName.ScheduledProcedureStepPriority);
		tagByName.put("WorklistLabel",TagFromName.WorklistLabel);
		tagByName.put("ProcedureStepLabel",TagFromName.ProcedureStepLabel);
		tagByName.put("ScheduledProcessingParametersSequence",TagFromName.ScheduledProcessingParametersSequence);
		tagByName.put("PerformedProcessingParametersSequence",TagFromName.PerformedProcessingParametersSequence);
		tagByName.put("UnifiedProcedureStepPerformedProcedureSequence",TagFromName.UnifiedProcedureStepPerformedProcedureSequence);
		tagByName.put("RelatedProcedureStepSequence",TagFromName.RelatedProcedureStepSequence);
		tagByName.put("ProcedureStepRelationshipType",TagFromName.ProcedureStepRelationshipType);
		tagByName.put("ReplacedProcedureStepSequence",TagFromName.ReplacedProcedureStepSequence);
		tagByName.put("DeletionLock",TagFromName.DeletionLock);
		tagByName.put("ReceivingAE",TagFromName.ReceivingAE);
		tagByName.put("RequestingAE",TagFromName.RequestingAE);
		tagByName.put("ReasonForCancellation",TagFromName.ReasonForCancellation);
		tagByName.put("SCPStatus",TagFromName.SCPStatus);
		tagByName.put("SubscriptionListStatus",TagFromName.SubscriptionListStatus);
		tagByName.put("UnifiedProcedureStepListStatus",TagFromName.UnifiedProcedureStepListStatus);
		tagByName.put("BeamOrderIndex",TagFromName.BeamOrderIndex);
		tagByName.put("DoubleExposureMeterset",TagFromName.DoubleExposureMeterset);
		tagByName.put("DoubleExposureFieldDelta",TagFromName.DoubleExposureFieldDelta);
		tagByName.put("BrachyTaskSequence",TagFromName.BrachyTaskSequence);
		tagByName.put("ContinuationStartTotalReferenceAirKerma",TagFromName.ContinuationStartTotalReferenceAirKerma);
		tagByName.put("ContinuationEndTotalReferenceAirKerma",TagFromName.ContinuationEndTotalReferenceAirKerma);
		tagByName.put("ContinuationPulseNumber",TagFromName.ContinuationPulseNumber);
		tagByName.put("ChannelDeliveryOrderSequence",TagFromName.ChannelDeliveryOrderSequence);
		tagByName.put("ReferencedChannelNumber",TagFromName.ReferencedChannelNumber);
		tagByName.put("StartCumulativeTimeWeight",TagFromName.StartCumulativeTimeWeight);
		tagByName.put("EndCumulativeTimeWeight",TagFromName.EndCumulativeTimeWeight);
		tagByName.put("OmittedChannelSequence",TagFromName.OmittedChannelSequence);
		tagByName.put("ReasonForChannelOmission",TagFromName.ReasonForChannelOmission);
		tagByName.put("ReasonForChannelOmissionDescription",TagFromName.ReasonForChannelOmissionDescription);
		tagByName.put("ChannelDeliveryOrderIndex",TagFromName.ChannelDeliveryOrderIndex);
		tagByName.put("ChannelDeliveryContinuationSequence",TagFromName.ChannelDeliveryContinuationSequence);
		tagByName.put("OmittedApplicationSetupSequence",TagFromName.OmittedApplicationSetupSequence);
		tagByName.put("ImplantAssemblyTemplateName",TagFromName.ImplantAssemblyTemplateName);
		tagByName.put("ImplantAssemblyTemplateIssuer",TagFromName.ImplantAssemblyTemplateIssuer);
		tagByName.put("ImplantAssemblyTemplateVersion",TagFromName.ImplantAssemblyTemplateVersion);
		tagByName.put("ReplacedImplantAssemblyTemplateSequence",TagFromName.ReplacedImplantAssemblyTemplateSequence);
		tagByName.put("ImplantAssemblyTemplateType",TagFromName.ImplantAssemblyTemplateType);
		tagByName.put("OriginalImplantAssemblyTemplateSequence",TagFromName.OriginalImplantAssemblyTemplateSequence);
		tagByName.put("DerivationImplantAssemblyTemplateSequence",TagFromName.DerivationImplantAssemblyTemplateSequence);
		tagByName.put("ImplantAssemblyTemplateTargetAnatomySequence",TagFromName.ImplantAssemblyTemplateTargetAnatomySequence);
		tagByName.put("ProcedureTypeCodeSequence",TagFromName.ProcedureTypeCodeSequence);
		tagByName.put("SurgicalTechnique",TagFromName.SurgicalTechnique);
		tagByName.put("ComponentTypesSequence",TagFromName.ComponentTypesSequence);
		tagByName.put("ComponentTypeCodeSequence",TagFromName.ComponentTypeCodeSequence);
		tagByName.put("ExclusiveComponentType",TagFromName.ExclusiveComponentType);
		tagByName.put("MandatoryComponentType",TagFromName.MandatoryComponentType);
		tagByName.put("ComponentSequence",TagFromName.ComponentSequence);
		tagByName.put("ComponentID",TagFromName.ComponentID);
		tagByName.put("ComponentAssemblySequence",TagFromName.ComponentAssemblySequence);
		tagByName.put("Component1ReferencedID",TagFromName.Component1ReferencedID);
		tagByName.put("Component1ReferencedMatingFeatureSetID",TagFromName.Component1ReferencedMatingFeatureSetID);
		tagByName.put("Component1ReferencedMatingFeatureID",TagFromName.Component1ReferencedMatingFeatureID);
		tagByName.put("Component2ReferencedID",TagFromName.Component2ReferencedID);
		tagByName.put("Component2ReferencedMatingFeatureSetID",TagFromName.Component2ReferencedMatingFeatureSetID);
		tagByName.put("Component2ReferencedMatingFeatureID",TagFromName.Component2ReferencedMatingFeatureID);
		tagByName.put("ImplantTemplateGroupName",TagFromName.ImplantTemplateGroupName);
		tagByName.put("ImplantTemplateGroupDescription",TagFromName.ImplantTemplateGroupDescription);
		tagByName.put("ImplantTemplateGroupIssuer",TagFromName.ImplantTemplateGroupIssuer);
		tagByName.put("ImplantTemplateGroupVersion",TagFromName.ImplantTemplateGroupVersion);
		tagByName.put("ReplacedImplantTemplateGroupSequence",TagFromName.ReplacedImplantTemplateGroupSequence);
		tagByName.put("ImplantTemplateGroupTargetAnatomySequence",TagFromName.ImplantTemplateGroupTargetAnatomySequence);
		tagByName.put("ImplantTemplateGroupMembersSequence",TagFromName.ImplantTemplateGroupMembersSequence);
		tagByName.put("ImplantTemplateGroupMemberID",TagFromName.ImplantTemplateGroupMemberID);
		tagByName.put("ThreeDImplantTemplateGroupMemberMatchingPoint",TagFromName.ThreeDImplantTemplateGroupMemberMatchingPoint);
		tagByName.put("ThreeDImplantTemplateGroupMemberMatchingAxes",TagFromName.ThreeDImplantTemplateGroupMemberMatchingAxes);
		tagByName.put("ImplantTemplateGroupMemberMatching2DCoordinatesSequence",TagFromName.ImplantTemplateGroupMemberMatching2DCoordinatesSequence);
		tagByName.put("TwoDImplantTemplateGroupMemberMatchingPoint",TagFromName.TwoDImplantTemplateGroupMemberMatchingPoint);
		tagByName.put("TwoDImplantTemplateGroupMemberMatchingAxes",TagFromName.TwoDImplantTemplateGroupMemberMatchingAxes);
		tagByName.put("ImplantTemplateGroupVariationDimensionSequence",TagFromName.ImplantTemplateGroupVariationDimensionSequence);
		tagByName.put("ImplantTemplateGroupVariationDimensionName",TagFromName.ImplantTemplateGroupVariationDimensionName);
		tagByName.put("ImplantTemplateGroupVariationDimensionRankSequence",TagFromName.ImplantTemplateGroupVariationDimensionRankSequence);
		tagByName.put("ReferencedImplantTemplateGroupMemberID",TagFromName.ReferencedImplantTemplateGroupMemberID);
		tagByName.put("ImplantTemplateGroupVariationDimensionRank",TagFromName.ImplantTemplateGroupVariationDimensionRank);
		tagByName.put("SurfaceScanAcquisitionTypeCodeSequence",TagFromName.SurfaceScanAcquisitionTypeCodeSequence);
		tagByName.put("SurfaceScanModeCodeSequence",TagFromName.SurfaceScanModeCodeSequence);
		tagByName.put("RegistrationMethodCodeSequence",TagFromName.RegistrationMethodCodeSequence);
		tagByName.put("ShotDurationTime",TagFromName.ShotDurationTime);
		tagByName.put("ShotOffsetTime",TagFromName.ShotOffsetTime);
		tagByName.put("SurfacePointPresentationValueData",TagFromName.SurfacePointPresentationValueData);
		tagByName.put("SurfacePointColorCIELabValueData",TagFromName.SurfacePointColorCIELabValueData);
		tagByName.put("UVMappingSequence",TagFromName.UVMappingSequence);
		tagByName.put("TextureLabel",TagFromName.TextureLabel);
		tagByName.put("UValueData",TagFromName.UValueData);
		tagByName.put("VValueData",TagFromName.VValueData);
		tagByName.put("ReferencedTextureSequence",TagFromName.ReferencedTextureSequence);
		tagByName.put("ReferencedSurfaceDataSequence",TagFromName.ReferencedSurfaceDataSequence);
		tagByName.put("AssessmentSummary",TagFromName.AssessmentSummary);
		tagByName.put("AssessmentSummaryDescription",TagFromName.AssessmentSummaryDescription);
		tagByName.put("AssessedSOPInstanceSequence",TagFromName.AssessedSOPInstanceSequence);
		tagByName.put("ReferencedComparisonSOPInstanceSequence",TagFromName.ReferencedComparisonSOPInstanceSequence);
		tagByName.put("NumberOfAssessmentObservations",TagFromName.NumberOfAssessmentObservations);
		tagByName.put("AssessmentObservationsSequence",TagFromName.AssessmentObservationsSequence);
		tagByName.put("ObservationSignificance",TagFromName.ObservationSignificance);
		tagByName.put("ObservationDescription",TagFromName.ObservationDescription);
		tagByName.put("StructuredContraintObservationSequence",TagFromName.StructuredContraintObservationSequence);
		tagByName.put("AssessedAttributeValueSequence",TagFromName.AssessedAttributeValueSequence);
		tagByName.put("AssessmentSetID",TagFromName.AssessmentSetID);
		tagByName.put("AssessmentRequesterSequence",TagFromName.AssessmentRequesterSequence);
		tagByName.put("SelectorAttributeName",TagFromName.SelectorAttributeName);
		tagByName.put("SelectorAttributeKeyword",TagFromName.SelectorAttributeKeyword);
		tagByName.put("AssessmentTypeCodeSequence",TagFromName.AssessmentTypeCodeSequence);
		tagByName.put("ObservationBasisCodeSequence",TagFromName.ObservationBasisCodeSequence);
		tagByName.put("AssessmentLabel",TagFromName.AssessmentLabel);
		tagByName.put("ConstraintType",TagFromName.ConstraintType);
		tagByName.put("SpecificationSelectionGuidance",TagFromName.SpecificationSelectionGuidance);
		tagByName.put("ConstraintValueSequence",TagFromName.ConstraintValueSequence);
		tagByName.put("RecommendedDefaultValueSequence",TagFromName.RecommendedDefaultValueSequence);
		tagByName.put("ConstraintViolationSignificance",TagFromName.ConstraintViolationSignificance);
		tagByName.put("ConstraintViolationCondition",TagFromName.ConstraintViolationCondition);
		tagByName.put("ModifiableConstraintFlag",TagFromName.ModifiableConstraintFlag);
		tagByName.put("StorageMediaFileSetID",TagFromName.StorageMediaFileSetID);
		tagByName.put("StorageMediaFileSetUID",TagFromName.StorageMediaFileSetUID);
		tagByName.put("IconImageSequence",TagFromName.IconImageSequence);
		tagByName.put("TopicTitle",TagFromName.TopicTitle);
		tagByName.put("TopicSubject",TagFromName.TopicSubject);
		tagByName.put("TopicAuthor",TagFromName.TopicAuthor);
		tagByName.put("TopicKeywords",TagFromName.TopicKeywords);
		tagByName.put("SOPInstanceStatus",TagFromName.SOPInstanceStatus);
		tagByName.put("SOPAuthorizationDateTime",TagFromName.SOPAuthorizationDateTime);
		tagByName.put("SOPAuthorizationComment",TagFromName.SOPAuthorizationComment);
		tagByName.put("AuthorizationEquipmentCertificationNumber",TagFromName.AuthorizationEquipmentCertificationNumber);
		tagByName.put("MACIDNumber",TagFromName.MACIDNumber);
		tagByName.put("MACCalculationTransferSyntaxUID",TagFromName.MACCalculationTransferSyntaxUID);
		tagByName.put("MACAlgorithm",TagFromName.MACAlgorithm);
		tagByName.put("DataElementsSigned",TagFromName.DataElementsSigned);
		tagByName.put("DigitalSignatureUID",TagFromName.DigitalSignatureUID);
		tagByName.put("DigitalSignatureDateTime",TagFromName.DigitalSignatureDateTime);
		tagByName.put("CertificateType",TagFromName.CertificateType);
		tagByName.put("CertificateOfSigner",TagFromName.CertificateOfSigner);
		tagByName.put("Signature",TagFromName.Signature);
		tagByName.put("CertifiedTimestampType",TagFromName.CertifiedTimestampType);
		tagByName.put("CertifiedTimestamp",TagFromName.CertifiedTimestamp);
		tagByName.put("DigitalSignaturePurposeCodeSequence",TagFromName.DigitalSignaturePurposeCodeSequence);
		tagByName.put("ReferencedDigitalSignatureSequence",TagFromName.ReferencedDigitalSignatureSequence);
		tagByName.put("ReferencedSOPInstanceMACSequence",TagFromName.ReferencedSOPInstanceMACSequence);
		tagByName.put("MAC",TagFromName.MAC);
		tagByName.put("EncryptedAttributesSequence",TagFromName.EncryptedAttributesSequence);
		tagByName.put("EncryptedContentTransferSyntaxUID",TagFromName.EncryptedContentTransferSyntaxUID);
		tagByName.put("EncryptedContent",TagFromName.EncryptedContent);
		tagByName.put("ModifiedAttributesSequence",TagFromName.ModifiedAttributesSequence);
		tagByName.put("OriginalAttributesSequence",TagFromName.OriginalAttributesSequence);
		tagByName.put("AttributeModificationDateTime",TagFromName.AttributeModificationDateTime);
		tagByName.put("ModifyingSystem",TagFromName.ModifyingSystem);
		tagByName.put("SourceOfPreviousValues",TagFromName.SourceOfPreviousValues);
		tagByName.put("ReasonForTheAttributeModification",TagFromName.ReasonForTheAttributeModification);
		tagByName.put("InstanceOriginStatus",TagFromName.InstanceOriginStatus);
		tagByName.put("ZonalMap",TagFromName.ZonalMap);
		tagByName.put("NumberOfCopies",TagFromName.NumberOfCopies);
		tagByName.put("PrinterConfigurationSequence",TagFromName.PrinterConfigurationSequence);
		tagByName.put("PrintPriority",TagFromName.PrintPriority);
		tagByName.put("MediumType",TagFromName.MediumType);
		tagByName.put("FilmDestination",TagFromName.FilmDestination);
		tagByName.put("FilmSessionLabel",TagFromName.FilmSessionLabel);
		tagByName.put("MemoryAllocation",TagFromName.MemoryAllocation);
		tagByName.put("MaximumMemoryAllocation",TagFromName.MaximumMemoryAllocation);
		tagByName.put("ColorImagePrintingFlag",TagFromName.ColorImagePrintingFlag);
		tagByName.put("CollationFlag",TagFromName.CollationFlag);
		tagByName.put("AnnotationFlag",TagFromName.AnnotationFlag);
		tagByName.put("ImageOverlayFlag",TagFromName.ImageOverlayFlag);
		tagByName.put("PresentationLUTFlag",TagFromName.PresentationLUTFlag);
		tagByName.put("ImageBoxPresentationLUTFlag",TagFromName.ImageBoxPresentationLUTFlag);
		tagByName.put("MemoryBitDepth",TagFromName.MemoryBitDepth);
		tagByName.put("PrintingBitDepth",TagFromName.PrintingBitDepth);
		tagByName.put("MediaInstalledSequence",TagFromName.MediaInstalledSequence);
		tagByName.put("OtherMediaAvailableSequence",TagFromName.OtherMediaAvailableSequence);
		tagByName.put("SupportedImageDisplayFormatsSequence",TagFromName.SupportedImageDisplayFormatsSequence);
		tagByName.put("ReferencedFilmBoxSequence",TagFromName.ReferencedFilmBoxSequence);
		tagByName.put("ReferencedStoredPrintSequence",TagFromName.ReferencedStoredPrintSequence);
		tagByName.put("ImageDisplayFormat",TagFromName.ImageDisplayFormat);
		tagByName.put("AnnotationDisplayFormatID",TagFromName.AnnotationDisplayFormatID);
		tagByName.put("FilmOrientation",TagFromName.FilmOrientation);
		tagByName.put("FilmSizeID",TagFromName.FilmSizeID);
		tagByName.put("PrinterResolutionID",TagFromName.PrinterResolutionID);
		tagByName.put("DefaultPrinterResolutionID",TagFromName.DefaultPrinterResolutionID);
		tagByName.put("MagnificationType",TagFromName.MagnificationType);
		tagByName.put("SmoothingType",TagFromName.SmoothingType);
		tagByName.put("DefaultMagnificationType",TagFromName.DefaultMagnificationType);
		tagByName.put("OtherMagnificationTypesAvailable",TagFromName.OtherMagnificationTypesAvailable);
		tagByName.put("DefaultSmoothingType",TagFromName.DefaultSmoothingType);
		tagByName.put("OtherSmoothingTypesAvailable",TagFromName.OtherSmoothingTypesAvailable);
		tagByName.put("BorderDensity",TagFromName.BorderDensity);
		tagByName.put("EmptyImageDensity",TagFromName.EmptyImageDensity);
		tagByName.put("MinDensity",TagFromName.MinDensity);
		tagByName.put("MaxDensity",TagFromName.MaxDensity);
		tagByName.put("Trim",TagFromName.Trim);
		tagByName.put("ConfigurationInformation",TagFromName.ConfigurationInformation);
		tagByName.put("ConfigurationInformationDescription",TagFromName.ConfigurationInformationDescription);
		tagByName.put("MaximumCollatedFilms",TagFromName.MaximumCollatedFilms);
		tagByName.put("Illumination",TagFromName.Illumination);
		tagByName.put("ReflectedAmbientLight",TagFromName.ReflectedAmbientLight);
		tagByName.put("PrinterPixelSpacing",TagFromName.PrinterPixelSpacing);
		tagByName.put("ReferencedFilmSessionSequence",TagFromName.ReferencedFilmSessionSequence);
		tagByName.put("ReferencedImageBoxSequence",TagFromName.ReferencedImageBoxSequence);
		tagByName.put("ReferencedBasicAnnotationBoxSequence",TagFromName.ReferencedBasicAnnotationBoxSequence);
		tagByName.put("ImageBoxPosition",TagFromName.ImageBoxPosition);
		tagByName.put("Polarity",TagFromName.Polarity);
		tagByName.put("RequestedImageSize",TagFromName.RequestedImageSize);
		tagByName.put("RequestedDecimateCropBehavior",TagFromName.RequestedDecimateCropBehavior);
		tagByName.put("RequestedResolutionID",TagFromName.RequestedResolutionID);
		tagByName.put("RequestedImageSizeFlag",TagFromName.RequestedImageSizeFlag);
		tagByName.put("DecimateCropResult",TagFromName.DecimateCropResult);
		tagByName.put("BasicGrayscaleImageSequence",TagFromName.BasicGrayscaleImageSequence);
		tagByName.put("BasicColorImageSequence",TagFromName.BasicColorImageSequence);
		tagByName.put("ReferencedImageOverlayBoxSequence",TagFromName.ReferencedImageOverlayBoxSequence);
		tagByName.put("ReferencedVOILUTBoxSequence",TagFromName.ReferencedVOILUTBoxSequence);
		tagByName.put("AnnotationPosition",TagFromName.AnnotationPosition);
		tagByName.put("TextString",TagFromName.TextString);
		tagByName.put("ReferencedOverlayPlaneSequence",TagFromName.ReferencedOverlayPlaneSequence);
		tagByName.put("ReferencedOverlayPlaneGroups",TagFromName.ReferencedOverlayPlaneGroups);
		tagByName.put("OverlayPixelDataSequence",TagFromName.OverlayPixelDataSequence);
		tagByName.put("OverlayMagnificationType",TagFromName.OverlayMagnificationType);
		tagByName.put("OverlaySmoothingType",TagFromName.OverlaySmoothingType);
		tagByName.put("OverlayOrImageMagnification",TagFromName.OverlayOrImageMagnification);
		tagByName.put("MagnifyToNumberOfColumns",TagFromName.MagnifyToNumberOfColumns);
		tagByName.put("OverlayForegroundDensity",TagFromName.OverlayForegroundDensity);
		tagByName.put("OverlayBackgroundDensity",TagFromName.OverlayBackgroundDensity);
		tagByName.put("OverlayMode",TagFromName.OverlayMode);
		tagByName.put("ThresholdDensity",TagFromName.ThresholdDensity);
		tagByName.put("ReferencedImageBoxSequenceRetired",TagFromName.ReferencedImageBoxSequenceRetired);
		tagByName.put("PresentationLUTSequence",TagFromName.PresentationLUTSequence);
		tagByName.put("PresentationLUTShape",TagFromName.PresentationLUTShape);
		tagByName.put("ReferencedPresentationLUTSequence",TagFromName.ReferencedPresentationLUTSequence);
		tagByName.put("PrintJobID",TagFromName.PrintJobID);
		tagByName.put("ExecutionStatus",TagFromName.ExecutionStatus);
		tagByName.put("ExecutionStatusInfo",TagFromName.ExecutionStatusInfo);
		tagByName.put("CreationDate",TagFromName.CreationDate);
		tagByName.put("CreationTime",TagFromName.CreationTime);
		tagByName.put("Originator",TagFromName.Originator);
		tagByName.put("DestinationAE",TagFromName.DestinationAE);
		tagByName.put("OwnerID",TagFromName.OwnerID);
		tagByName.put("NumberOfFilms",TagFromName.NumberOfFilms);
		tagByName.put("ReferencedPrintJobSequencePullStoredPrint",TagFromName.ReferencedPrintJobSequencePullStoredPrint);
		tagByName.put("PrinterStatus",TagFromName.PrinterStatus);
		tagByName.put("PrinterStatusInfo",TagFromName.PrinterStatusInfo);
		tagByName.put("PrinterName",TagFromName.PrinterName);
		tagByName.put("PrintQueueID",TagFromName.PrintQueueID);
		tagByName.put("QueueStatus",TagFromName.QueueStatus);
		tagByName.put("PrintJobDescriptionSequence",TagFromName.PrintJobDescriptionSequence);
		tagByName.put("ReferencedPrintJobSequence",TagFromName.ReferencedPrintJobSequence);
		tagByName.put("PrintManagementCapabilitiesSequence",TagFromName.PrintManagementCapabilitiesSequence);
		tagByName.put("PrinterCharacteristicsSequence",TagFromName.PrinterCharacteristicsSequence);
		tagByName.put("FilmBoxContentSequence",TagFromName.FilmBoxContentSequence);
		tagByName.put("ImageBoxContentSequence",TagFromName.ImageBoxContentSequence);
		tagByName.put("AnnotationContentSequence",TagFromName.AnnotationContentSequence);
		tagByName.put("ImageOverlayBoxContentSequence",TagFromName.ImageOverlayBoxContentSequence);
		tagByName.put("PresentationLUTContentSequence",TagFromName.PresentationLUTContentSequence);
		tagByName.put("ProposedStudySequence",TagFromName.ProposedStudySequence);
		tagByName.put("OriginalImageSequence",TagFromName.OriginalImageSequence);
		tagByName.put("LabelUsingInformationExtractedFromInstances",TagFromName.LabelUsingInformationExtractedFromInstances);
		tagByName.put("LabelText",TagFromName.LabelText);
		tagByName.put("LabelStyleSelection",TagFromName.LabelStyleSelection);
		tagByName.put("MediaDisposition",TagFromName.MediaDisposition);
		tagByName.put("BarcodeValue",TagFromName.BarcodeValue);
		tagByName.put("BarcodeSymbology",TagFromName.BarcodeSymbology);
		tagByName.put("AllowMediaSplitting",TagFromName.AllowMediaSplitting);
		tagByName.put("IncludeNonDICOMObjects",TagFromName.IncludeNonDICOMObjects);
		tagByName.put("IncludeDisplayApplication",TagFromName.IncludeDisplayApplication);
		tagByName.put("PreserveCompositeInstancesAfterMediaCreation",TagFromName.PreserveCompositeInstancesAfterMediaCreation);
		tagByName.put("TotalNumberOfPiecesOfMediaCreated",TagFromName.TotalNumberOfPiecesOfMediaCreated);
		tagByName.put("RequestedMediaApplicationProfile",TagFromName.RequestedMediaApplicationProfile);
		tagByName.put("ReferencedStorageMediaSequence",TagFromName.ReferencedStorageMediaSequence);
		tagByName.put("FailureAttributes",TagFromName.FailureAttributes);
		tagByName.put("AllowLossyCompression",TagFromName.AllowLossyCompression);
		tagByName.put("RequestPriority",TagFromName.RequestPriority);
		tagByName.put("RTImageLabel",TagFromName.RTImageLabel);
		tagByName.put("RTImageName",TagFromName.RTImageName);
		tagByName.put("RTImageDescription",TagFromName.RTImageDescription);
		tagByName.put("ReportedValuesOrigin",TagFromName.ReportedValuesOrigin);
		tagByName.put("RTImagePlane",TagFromName.RTImagePlane);
		tagByName.put("XRayImageReceptorTranslation",TagFromName.XRayImageReceptorTranslation);
		tagByName.put("XRayImageReceptorAngle",TagFromName.XRayImageReceptorAngle);
		tagByName.put("RTImageOrientation",TagFromName.RTImageOrientation);
		tagByName.put("ImagePlanePixelSpacing",TagFromName.ImagePlanePixelSpacing);
		tagByName.put("RTImagePosition",TagFromName.RTImagePosition);
		tagByName.put("RadiationMachineName",TagFromName.RadiationMachineName);
		tagByName.put("RadiationMachineSAD",TagFromName.RadiationMachineSAD);
		tagByName.put("RadiationMachineSSD",TagFromName.RadiationMachineSSD);
		tagByName.put("RTImageSID",TagFromName.RTImageSID);
		tagByName.put("SourceToReferenceObjectDistance",TagFromName.SourceToReferenceObjectDistance);
		tagByName.put("FractionNumber",TagFromName.FractionNumber);
		tagByName.put("ExposureSequence",TagFromName.ExposureSequence);
		tagByName.put("MetersetExposure",TagFromName.MetersetExposure);
		tagByName.put("DiaphragmPosition",TagFromName.DiaphragmPosition);
		tagByName.put("FluenceMapSequence",TagFromName.FluenceMapSequence);
		tagByName.put("FluenceDataSource",TagFromName.FluenceDataSource);
		tagByName.put("FluenceDataScale",TagFromName.FluenceDataScale);
		tagByName.put("PrimaryFluenceModeSequence",TagFromName.PrimaryFluenceModeSequence);
		tagByName.put("FluenceMode",TagFromName.FluenceMode);
		tagByName.put("FluenceModeID",TagFromName.FluenceModeID);
		tagByName.put("DVHType",TagFromName.DVHType);
		tagByName.put("DoseUnits",TagFromName.DoseUnits);
		tagByName.put("DoseType",TagFromName.DoseType);
		tagByName.put("SpatialTransformOfDose",TagFromName.SpatialTransformOfDose);
		tagByName.put("DoseComment",TagFromName.DoseComment);
		tagByName.put("NormalizationPoint",TagFromName.NormalizationPoint);
		tagByName.put("DoseSummationType",TagFromName.DoseSummationType);
		tagByName.put("GridFrameOffsetVector",TagFromName.GridFrameOffsetVector);
		tagByName.put("DoseGridScaling",TagFromName.DoseGridScaling);
		tagByName.put("RTDoseROISequence",TagFromName.RTDoseROISequence);
		tagByName.put("DoseValue",TagFromName.DoseValue);
		tagByName.put("TissueHeterogeneityCorrection",TagFromName.TissueHeterogeneityCorrection);
		tagByName.put("DVHNormalizationPoint",TagFromName.DVHNormalizationPoint);
		tagByName.put("DVHNormalizationDoseValue",TagFromName.DVHNormalizationDoseValue);
		tagByName.put("DVHSequence",TagFromName.DVHSequence);
		tagByName.put("DVHDoseScaling",TagFromName.DVHDoseScaling);
		tagByName.put("DVHVolumeUnits",TagFromName.DVHVolumeUnits);
		tagByName.put("DVHNumberOfBins",TagFromName.DVHNumberOfBins);
		tagByName.put("DVHData",TagFromName.DVHData);
		tagByName.put("DVHReferencedROISequence",TagFromName.DVHReferencedROISequence);
		tagByName.put("DVHROIContributionType",TagFromName.DVHROIContributionType);
		tagByName.put("DVHMinimumDose",TagFromName.DVHMinimumDose);
		tagByName.put("DVHMaximumDose",TagFromName.DVHMaximumDose);
		tagByName.put("DVHMeanDose",TagFromName.DVHMeanDose);
		tagByName.put("StructureSetLabel",TagFromName.StructureSetLabel);
		tagByName.put("StructureSetName",TagFromName.StructureSetName);
		tagByName.put("StructureSetDescription",TagFromName.StructureSetDescription);
		tagByName.put("StructureSetDate",TagFromName.StructureSetDate);
		tagByName.put("StructureSetTime",TagFromName.StructureSetTime);
		tagByName.put("ReferencedFrameOfReferenceSequence",TagFromName.ReferencedFrameOfReferenceSequence);
		tagByName.put("RTReferencedStudySequence",TagFromName.RTReferencedStudySequence);
		tagByName.put("RTReferencedSeriesSequence",TagFromName.RTReferencedSeriesSequence);
		tagByName.put("ContourImageSequence",TagFromName.ContourImageSequence);
		tagByName.put("PredecessorStructureSetSequence",TagFromName.PredecessorStructureSetSequence);
		tagByName.put("StructureSetROISequence",TagFromName.StructureSetROISequence);
		tagByName.put("ROINumber",TagFromName.ROINumber);
		tagByName.put("ReferencedFrameOfReferenceUID",TagFromName.ReferencedFrameOfReferenceUID);
		tagByName.put("ROIName",TagFromName.ROIName);
		tagByName.put("ROIDescription",TagFromName.ROIDescription);
		tagByName.put("ROIDisplayColor",TagFromName.ROIDisplayColor);
		tagByName.put("ROIVolume",TagFromName.ROIVolume);
		tagByName.put("RTRelatedROISequence",TagFromName.RTRelatedROISequence);
		tagByName.put("RTROIRelationship",TagFromName.RTROIRelationship);
		tagByName.put("ROIGenerationAlgorithm",TagFromName.ROIGenerationAlgorithm);
		tagByName.put("ROIGenerationDescription",TagFromName.ROIGenerationDescription);
		tagByName.put("ROIContourSequence",TagFromName.ROIContourSequence);
		tagByName.put("ContourSequence",TagFromName.ContourSequence);
		tagByName.put("ContourGeometricType",TagFromName.ContourGeometricType);
		tagByName.put("ContourSlabThickness",TagFromName.ContourSlabThickness);
		tagByName.put("ContourOffsetVector",TagFromName.ContourOffsetVector);
		tagByName.put("NumberOfContourPoints",TagFromName.NumberOfContourPoints);
		tagByName.put("ContourNumber",TagFromName.ContourNumber);
		tagByName.put("AttachedContours",TagFromName.AttachedContours);
		tagByName.put("ContourData",TagFromName.ContourData);
		tagByName.put("RTROIObservationsSequence",TagFromName.RTROIObservationsSequence);
		tagByName.put("ObservationNumber",TagFromName.ObservationNumber);
		tagByName.put("ReferencedROINumber",TagFromName.ReferencedROINumber);
		tagByName.put("ROIObservationLabel",TagFromName.ROIObservationLabel);
		tagByName.put("RTROIIdentificationCodeSequence",TagFromName.RTROIIdentificationCodeSequence);
		tagByName.put("ROIObservationDescription",TagFromName.ROIObservationDescription);
		tagByName.put("RelatedRTROIObservationsSequence",TagFromName.RelatedRTROIObservationsSequence);
		tagByName.put("RTROIInterpretedType",TagFromName.RTROIInterpretedType);
		tagByName.put("ROIInterpreter",TagFromName.ROIInterpreter);
		tagByName.put("ROIPhysicalPropertiesSequence",TagFromName.ROIPhysicalPropertiesSequence);
		tagByName.put("ROIPhysicalProperty",TagFromName.ROIPhysicalProperty);
		tagByName.put("ROIPhysicalPropertyValue",TagFromName.ROIPhysicalPropertyValue);
		tagByName.put("ROIElementalCompositionSequence",TagFromName.ROIElementalCompositionSequence);
		tagByName.put("ROIElementalCompositionAtomicNumber",TagFromName.ROIElementalCompositionAtomicNumber);
		tagByName.put("ROIElementalCompositionAtomicMassFraction",TagFromName.ROIElementalCompositionAtomicMassFraction);
		tagByName.put("AdditionalRTROIClassificationCodeSequence",TagFromName.AdditionalRTROIClassificationCodeSequence);
		tagByName.put("FrameOfReferenceRelationshipSequence",TagFromName.FrameOfReferenceRelationshipSequence);
		tagByName.put("RelatedFrameOfReferenceUID",TagFromName.RelatedFrameOfReferenceUID);
		tagByName.put("FrameOfReferenceTransformationType",TagFromName.FrameOfReferenceTransformationType);
		tagByName.put("FrameOfReferenceTransformationMatrix",TagFromName.FrameOfReferenceTransformationMatrix);
		tagByName.put("FrameOfReferenceTransformationComment",TagFromName.FrameOfReferenceTransformationComment);
		tagByName.put("MeasuredDoseReferenceSequence",TagFromName.MeasuredDoseReferenceSequence);
		tagByName.put("MeasuredDoseDescription",TagFromName.MeasuredDoseDescription);
		tagByName.put("MeasuredDoseType",TagFromName.MeasuredDoseType);
		tagByName.put("MeasuredDoseValue",TagFromName.MeasuredDoseValue);
		tagByName.put("TreatmentSessionBeamSequence",TagFromName.TreatmentSessionBeamSequence);
		tagByName.put("TreatmentSessionIonBeamSequence",TagFromName.TreatmentSessionIonBeamSequence);
		tagByName.put("CurrentFractionNumber",TagFromName.CurrentFractionNumber);
		tagByName.put("TreatmentControlPointDate",TagFromName.TreatmentControlPointDate);
		tagByName.put("TreatmentControlPointTime",TagFromName.TreatmentControlPointTime);
		tagByName.put("TreatmentTerminationStatus",TagFromName.TreatmentTerminationStatus);
		tagByName.put("TreatmentTerminationCode",TagFromName.TreatmentTerminationCode);
		tagByName.put("TreatmentVerificationStatus",TagFromName.TreatmentVerificationStatus);
		tagByName.put("ReferencedTreatmentRecordSequence",TagFromName.ReferencedTreatmentRecordSequence);
		tagByName.put("SpecifiedPrimaryMeterset",TagFromName.SpecifiedPrimaryMeterset);
		tagByName.put("SpecifiedSecondaryMeterset",TagFromName.SpecifiedSecondaryMeterset);
		tagByName.put("DeliveredPrimaryMeterset",TagFromName.DeliveredPrimaryMeterset);
		tagByName.put("DeliveredSecondaryMeterset",TagFromName.DeliveredSecondaryMeterset);
		tagByName.put("SpecifiedTreatmentTime",TagFromName.SpecifiedTreatmentTime);
		tagByName.put("DeliveredTreatmentTime",TagFromName.DeliveredTreatmentTime);
		tagByName.put("ControlPointDeliverySequence",TagFromName.ControlPointDeliverySequence);
		tagByName.put("IonControlPointDeliverySequence",TagFromName.IonControlPointDeliverySequence);
		tagByName.put("SpecifiedMeterset",TagFromName.SpecifiedMeterset);
		tagByName.put("DeliveredMeterset",TagFromName.DeliveredMeterset);
		tagByName.put("MetersetRateSet",TagFromName.MetersetRateSet);
		tagByName.put("MetersetRateDelivered",TagFromName.MetersetRateDelivered);
		tagByName.put("ScanSpotMetersetsDelivered",TagFromName.ScanSpotMetersetsDelivered);
		tagByName.put("DoseRateDelivered",TagFromName.DoseRateDelivered);
		tagByName.put("TreatmentSummaryCalculatedDoseReferenceSequence",TagFromName.TreatmentSummaryCalculatedDoseReferenceSequence);
		tagByName.put("CumulativeDoseToDoseReference",TagFromName.CumulativeDoseToDoseReference);
		tagByName.put("FirstTreatmentDate",TagFromName.FirstTreatmentDate);
		tagByName.put("MostRecentTreatmentDate",TagFromName.MostRecentTreatmentDate);
		tagByName.put("NumberOfFractionsDelivered",TagFromName.NumberOfFractionsDelivered);
		tagByName.put("OverrideSequence",TagFromName.OverrideSequence);
		tagByName.put("ParameterSequencePointer",TagFromName.ParameterSequencePointer);
		tagByName.put("OverrideParameterPointer",TagFromName.OverrideParameterPointer);
		tagByName.put("ParameterItemIndex",TagFromName.ParameterItemIndex);
		tagByName.put("MeasuredDoseReferenceNumber",TagFromName.MeasuredDoseReferenceNumber);
		tagByName.put("ParameterPointer",TagFromName.ParameterPointer);
		tagByName.put("OverrideReason",TagFromName.OverrideReason);
		tagByName.put("ParameterValueNumber",TagFromName.ParameterValueNumber);
		tagByName.put("CorrectedParameterSequence",TagFromName.CorrectedParameterSequence);
		tagByName.put("CorrectionValue",TagFromName.CorrectionValue);
		tagByName.put("CalculatedDoseReferenceSequence",TagFromName.CalculatedDoseReferenceSequence);
		tagByName.put("CalculatedDoseReferenceNumber",TagFromName.CalculatedDoseReferenceNumber);
		tagByName.put("CalculatedDoseReferenceDescription",TagFromName.CalculatedDoseReferenceDescription);
		tagByName.put("CalculatedDoseReferenceDoseValue",TagFromName.CalculatedDoseReferenceDoseValue);
		tagByName.put("StartMeterset",TagFromName.StartMeterset);
		tagByName.put("EndMeterset",TagFromName.EndMeterset);
		tagByName.put("ReferencedMeasuredDoseReferenceSequence",TagFromName.ReferencedMeasuredDoseReferenceSequence);
		tagByName.put("ReferencedMeasuredDoseReferenceNumber",TagFromName.ReferencedMeasuredDoseReferenceNumber);
		tagByName.put("ReferencedCalculatedDoseReferenceSequence",TagFromName.ReferencedCalculatedDoseReferenceSequence);
		tagByName.put("ReferencedCalculatedDoseReferenceNumber",TagFromName.ReferencedCalculatedDoseReferenceNumber);
		tagByName.put("BeamLimitingDeviceLeafPairsSequence",TagFromName.BeamLimitingDeviceLeafPairsSequence);
		tagByName.put("RecordedWedgeSequence",TagFromName.RecordedWedgeSequence);
		tagByName.put("RecordedCompensatorSequence",TagFromName.RecordedCompensatorSequence);
		tagByName.put("RecordedBlockSequence",TagFromName.RecordedBlockSequence);
		tagByName.put("TreatmentSummaryMeasuredDoseReferenceSequence",TagFromName.TreatmentSummaryMeasuredDoseReferenceSequence);
		tagByName.put("RecordedSnoutSequence",TagFromName.RecordedSnoutSequence);
		tagByName.put("RecordedRangeShifterSequence",TagFromName.RecordedRangeShifterSequence);
		tagByName.put("RecordedLateralSpreadingDeviceSequence",TagFromName.RecordedLateralSpreadingDeviceSequence);
		tagByName.put("RecordedRangeModulatorSequence",TagFromName.RecordedRangeModulatorSequence);
		tagByName.put("RecordedSourceSequence",TagFromName.RecordedSourceSequence);
		tagByName.put("SourceSerialNumber",TagFromName.SourceSerialNumber);
		tagByName.put("TreatmentSessionApplicationSetupSequence",TagFromName.TreatmentSessionApplicationSetupSequence);
		tagByName.put("ApplicationSetupCheck",TagFromName.ApplicationSetupCheck);
		tagByName.put("RecordedBrachyAccessoryDeviceSequence",TagFromName.RecordedBrachyAccessoryDeviceSequence);
		tagByName.put("ReferencedBrachyAccessoryDeviceNumber",TagFromName.ReferencedBrachyAccessoryDeviceNumber);
		tagByName.put("RecordedChannelSequence",TagFromName.RecordedChannelSequence);
		tagByName.put("SpecifiedChannelTotalTime",TagFromName.SpecifiedChannelTotalTime);
		tagByName.put("DeliveredChannelTotalTime",TagFromName.DeliveredChannelTotalTime);
		tagByName.put("SpecifiedNumberOfPulses",TagFromName.SpecifiedNumberOfPulses);
		tagByName.put("DeliveredNumberOfPulses",TagFromName.DeliveredNumberOfPulses);
		tagByName.put("SpecifiedPulseRepetitionInterval",TagFromName.SpecifiedPulseRepetitionInterval);
		tagByName.put("DeliveredPulseRepetitionInterval",TagFromName.DeliveredPulseRepetitionInterval);
		tagByName.put("RecordedSourceApplicatorSequence",TagFromName.RecordedSourceApplicatorSequence);
		tagByName.put("ReferencedSourceApplicatorNumber",TagFromName.ReferencedSourceApplicatorNumber);
		tagByName.put("RecordedChannelShieldSequence",TagFromName.RecordedChannelShieldSequence);
		tagByName.put("ReferencedChannelShieldNumber",TagFromName.ReferencedChannelShieldNumber);
		tagByName.put("BrachyControlPointDeliveredSequence",TagFromName.BrachyControlPointDeliveredSequence);
		tagByName.put("SafePositionExitDate",TagFromName.SafePositionExitDate);
		tagByName.put("SafePositionExitTime",TagFromName.SafePositionExitTime);
		tagByName.put("SafePositionReturnDate",TagFromName.SafePositionReturnDate);
		tagByName.put("SafePositionReturnTime",TagFromName.SafePositionReturnTime);
		tagByName.put("PulseSpecificBrachyControlPointDeliveredSequence",TagFromName.PulseSpecificBrachyControlPointDeliveredSequence);
		tagByName.put("PulseNumber",TagFromName.PulseNumber);
		tagByName.put("BrachyPulseControlPointDeliveredSequence",TagFromName.BrachyPulseControlPointDeliveredSequence);
		tagByName.put("CurrentTreatmentStatus",TagFromName.CurrentTreatmentStatus);
		tagByName.put("TreatmentStatusComment",TagFromName.TreatmentStatusComment);
		tagByName.put("FractionGroupSummarySequence",TagFromName.FractionGroupSummarySequence);
		tagByName.put("ReferencedFractionNumber",TagFromName.ReferencedFractionNumber);
		tagByName.put("FractionGroupType",TagFromName.FractionGroupType);
		tagByName.put("BeamStopperPosition",TagFromName.BeamStopperPosition);
		tagByName.put("FractionStatusSummarySequence",TagFromName.FractionStatusSummarySequence);
		tagByName.put("TreatmentDate",TagFromName.TreatmentDate);
		tagByName.put("TreatmentTime",TagFromName.TreatmentTime);
		tagByName.put("RTPlanLabel",TagFromName.RTPlanLabel);
		tagByName.put("RTPlanName",TagFromName.RTPlanName);
		tagByName.put("RTPlanDescription",TagFromName.RTPlanDescription);
		tagByName.put("RTPlanDate",TagFromName.RTPlanDate);
		tagByName.put("RTPlanTime",TagFromName.RTPlanTime);
		tagByName.put("TreatmentProtocols",TagFromName.TreatmentProtocols);
		tagByName.put("PlanIntent",TagFromName.PlanIntent);
		tagByName.put("TreatmentSites",TagFromName.TreatmentSites);
		tagByName.put("RTPlanGeometry",TagFromName.RTPlanGeometry);
		tagByName.put("PrescriptionDescription",TagFromName.PrescriptionDescription);
		tagByName.put("DoseReferenceSequence",TagFromName.DoseReferenceSequence);
		tagByName.put("DoseReferenceNumber",TagFromName.DoseReferenceNumber);
		tagByName.put("DoseReferenceUID",TagFromName.DoseReferenceUID);
		tagByName.put("DoseReferenceStructureType",TagFromName.DoseReferenceStructureType);
		tagByName.put("NominalBeamEnergyUnit",TagFromName.NominalBeamEnergyUnit);
		tagByName.put("DoseReferenceDescription",TagFromName.DoseReferenceDescription);
		tagByName.put("DoseReferencePointCoordinates",TagFromName.DoseReferencePointCoordinates);
		tagByName.put("NominalPriorDose",TagFromName.NominalPriorDose);
		tagByName.put("DoseReferenceType",TagFromName.DoseReferenceType);
		tagByName.put("ConstraintWeight",TagFromName.ConstraintWeight);
		tagByName.put("DeliveryWarningDose",TagFromName.DeliveryWarningDose);
		tagByName.put("DeliveryMaximumDose",TagFromName.DeliveryMaximumDose);
		tagByName.put("TargetMinimumDose",TagFromName.TargetMinimumDose);
		tagByName.put("TargetPrescriptionDose",TagFromName.TargetPrescriptionDose);
		tagByName.put("TargetMaximumDose",TagFromName.TargetMaximumDose);
		tagByName.put("TargetUnderdoseVolumeFraction",TagFromName.TargetUnderdoseVolumeFraction);
		tagByName.put("OrganAtRiskFullVolumeDose",TagFromName.OrganAtRiskFullVolumeDose);
		tagByName.put("OrganAtRiskLimitDose",TagFromName.OrganAtRiskLimitDose);
		tagByName.put("OrganAtRiskMaximumDose",TagFromName.OrganAtRiskMaximumDose);
		tagByName.put("OrganAtRiskOverdoseVolumeFraction",TagFromName.OrganAtRiskOverdoseVolumeFraction);
		tagByName.put("ToleranceTableSequence",TagFromName.ToleranceTableSequence);
		tagByName.put("ToleranceTableNumber",TagFromName.ToleranceTableNumber);
		tagByName.put("ToleranceTableLabel",TagFromName.ToleranceTableLabel);
		tagByName.put("GantryAngleTolerance",TagFromName.GantryAngleTolerance);
		tagByName.put("BeamLimitingDeviceAngleTolerance",TagFromName.BeamLimitingDeviceAngleTolerance);
		tagByName.put("BeamLimitingDeviceToleranceSequence",TagFromName.BeamLimitingDeviceToleranceSequence);
		tagByName.put("BeamLimitingDevicePositionTolerance",TagFromName.BeamLimitingDevicePositionTolerance);
		tagByName.put("SnoutPositionTolerance",TagFromName.SnoutPositionTolerance);
		tagByName.put("PatientSupportAngleTolerance",TagFromName.PatientSupportAngleTolerance);
		tagByName.put("TableTopEccentricAngleTolerance",TagFromName.TableTopEccentricAngleTolerance);
		tagByName.put("TableTopPitchAngleTolerance",TagFromName.TableTopPitchAngleTolerance);
		tagByName.put("TableTopRollAngleTolerance",TagFromName.TableTopRollAngleTolerance);
		tagByName.put("TableTopVerticalPositionTolerance",TagFromName.TableTopVerticalPositionTolerance);
		tagByName.put("TableTopLongitudinalPositionTolerance",TagFromName.TableTopLongitudinalPositionTolerance);
		tagByName.put("TableTopLateralPositionTolerance",TagFromName.TableTopLateralPositionTolerance);
		tagByName.put("RTPlanRelationship",TagFromName.RTPlanRelationship);
		tagByName.put("FractionGroupSequence",TagFromName.FractionGroupSequence);
		tagByName.put("FractionGroupNumber",TagFromName.FractionGroupNumber);
		tagByName.put("FractionGroupDescription",TagFromName.FractionGroupDescription);
		tagByName.put("NumberOfFractionsPlanned",TagFromName.NumberOfFractionsPlanned);
		tagByName.put("NumberOfFractionPatternDigitsPerDay",TagFromName.NumberOfFractionPatternDigitsPerDay);
		tagByName.put("RepeatFractionCycleLength",TagFromName.RepeatFractionCycleLength);
		tagByName.put("FractionPattern",TagFromName.FractionPattern);
		tagByName.put("NumberOfBeams",TagFromName.NumberOfBeams);
		tagByName.put("BeamDoseSpecificationPoint",TagFromName.BeamDoseSpecificationPoint);
		tagByName.put("ReferencedDoseReferenceUID",TagFromName.ReferencedDoseReferenceUID);
		tagByName.put("BeamDose",TagFromName.BeamDose);
		tagByName.put("BeamMeterset",TagFromName.BeamMeterset);
		tagByName.put("BeamDosePointDepth",TagFromName.BeamDosePointDepth);
		tagByName.put("BeamDosePointEquivalentDepth",TagFromName.BeamDosePointEquivalentDepth);
		tagByName.put("BeamDosePointSSD",TagFromName.BeamDosePointSSD);
		tagByName.put("BeamDoseMeaning",TagFromName.BeamDoseMeaning);
		tagByName.put("BeamDoseVerificationControlPointSequence",TagFromName.BeamDoseVerificationControlPointSequence);
		tagByName.put("AverageBeamDosePointDepth",TagFromName.AverageBeamDosePointDepth);
		tagByName.put("AverageBeamDosePointEquivalentDepth",TagFromName.AverageBeamDosePointEquivalentDepth);
		tagByName.put("AverageBeamDosePointSSD",TagFromName.AverageBeamDosePointSSD);
		tagByName.put("BeamDoseType",TagFromName.BeamDoseType);
		tagByName.put("AlternateBeamDose",TagFromName.AlternateBeamDose);
		tagByName.put("AlternateBeamDoseType",TagFromName.AlternateBeamDoseType);
		tagByName.put("DepthValueAveragingFlag",TagFromName.DepthValueAveragingFlag);
		tagByName.put("BeamDosePointSourceToExternalContourDistance",TagFromName.BeamDosePointSourceToExternalContourDistance);
		tagByName.put("NumberOfBrachyApplicationSetups",TagFromName.NumberOfBrachyApplicationSetups);
		tagByName.put("BrachyApplicationSetupDoseSpecificationPoint",TagFromName.BrachyApplicationSetupDoseSpecificationPoint);
		tagByName.put("BrachyApplicationSetupDose",TagFromName.BrachyApplicationSetupDose);
		tagByName.put("BeamSequence",TagFromName.BeamSequence);
		tagByName.put("TreatmentMachineName",TagFromName.TreatmentMachineName);
		tagByName.put("PrimaryDosimeterUnit",TagFromName.PrimaryDosimeterUnit);
		tagByName.put("SourceAxisDistance",TagFromName.SourceAxisDistance);
		tagByName.put("BeamLimitingDeviceSequence",TagFromName.BeamLimitingDeviceSequence);
		tagByName.put("RTBeamLimitingDeviceType",TagFromName.RTBeamLimitingDeviceType);
		tagByName.put("SourceToBeamLimitingDeviceDistance",TagFromName.SourceToBeamLimitingDeviceDistance);
		tagByName.put("IsocenterToBeamLimitingDeviceDistance",TagFromName.IsocenterToBeamLimitingDeviceDistance);
		tagByName.put("NumberOfLeafJawPairs",TagFromName.NumberOfLeafJawPairs);
		tagByName.put("LeafPositionBoundaries",TagFromName.LeafPositionBoundaries);
		tagByName.put("BeamNumber",TagFromName.BeamNumber);
		tagByName.put("BeamName",TagFromName.BeamName);
		tagByName.put("BeamDescription",TagFromName.BeamDescription);
		tagByName.put("BeamType",TagFromName.BeamType);
		tagByName.put("BeamDeliveryDurationLimit",TagFromName.BeamDeliveryDurationLimit);
		tagByName.put("RadiationType",TagFromName.RadiationType);
		tagByName.put("HighDoseTechniqueType",TagFromName.HighDoseTechniqueType);
		tagByName.put("ReferenceImageNumber",TagFromName.ReferenceImageNumber);
		tagByName.put("PlannedVerificationImageSequence",TagFromName.PlannedVerificationImageSequence);
		tagByName.put("ImagingDeviceSpecificAcquisitionParameters",TagFromName.ImagingDeviceSpecificAcquisitionParameters);
		tagByName.put("TreatmentDeliveryType",TagFromName.TreatmentDeliveryType);
		tagByName.put("NumberOfWedges",TagFromName.NumberOfWedges);
		tagByName.put("WedgeSequence",TagFromName.WedgeSequence);
		tagByName.put("WedgeNumber",TagFromName.WedgeNumber);
		tagByName.put("WedgeType",TagFromName.WedgeType);
		tagByName.put("WedgeID",TagFromName.WedgeID);
		tagByName.put("WedgeAngle",TagFromName.WedgeAngle);
		tagByName.put("WedgeFactor",TagFromName.WedgeFactor);
		tagByName.put("TotalWedgeTrayWaterEquivalentThickness",TagFromName.TotalWedgeTrayWaterEquivalentThickness);
		tagByName.put("WedgeOrientation",TagFromName.WedgeOrientation);
		tagByName.put("IsocenterToWedgeTrayDistance",TagFromName.IsocenterToWedgeTrayDistance);
		tagByName.put("SourceToWedgeTrayDistance",TagFromName.SourceToWedgeTrayDistance);
		tagByName.put("WedgeThinEdgePosition",TagFromName.WedgeThinEdgePosition);
		tagByName.put("BolusID",TagFromName.BolusID);
		tagByName.put("BolusDescription",TagFromName.BolusDescription);
		tagByName.put("EffectiveWedgeAngle",TagFromName.EffectiveWedgeAngle);
		tagByName.put("NumberOfCompensators",TagFromName.NumberOfCompensators);
		tagByName.put("MaterialID",TagFromName.MaterialID);
		tagByName.put("TotalCompensatorTrayFactor",TagFromName.TotalCompensatorTrayFactor);
		tagByName.put("CompensatorSequence",TagFromName.CompensatorSequence);
		tagByName.put("CompensatorNumber",TagFromName.CompensatorNumber);
		tagByName.put("CompensatorID",TagFromName.CompensatorID);
		tagByName.put("SourceToCompensatorTrayDistance",TagFromName.SourceToCompensatorTrayDistance);
		tagByName.put("CompensatorRows",TagFromName.CompensatorRows);
		tagByName.put("CompensatorColumns",TagFromName.CompensatorColumns);
		tagByName.put("CompensatorPixelSpacing",TagFromName.CompensatorPixelSpacing);
		tagByName.put("CompensatorPosition",TagFromName.CompensatorPosition);
		tagByName.put("CompensatorTransmissionData",TagFromName.CompensatorTransmissionData);
		tagByName.put("CompensatorThicknessData",TagFromName.CompensatorThicknessData);
		tagByName.put("NumberOfBoli",TagFromName.NumberOfBoli);
		tagByName.put("CompensatorType",TagFromName.CompensatorType);
		tagByName.put("CompensatorTrayID",TagFromName.CompensatorTrayID);
		tagByName.put("NumberOfBlocks",TagFromName.NumberOfBlocks);
		tagByName.put("TotalBlockTrayFactor",TagFromName.TotalBlockTrayFactor);
		tagByName.put("TotalBlockTrayWaterEquivalentThickness",TagFromName.TotalBlockTrayWaterEquivalentThickness);
		tagByName.put("BlockSequence",TagFromName.BlockSequence);
		tagByName.put("BlockTrayID",TagFromName.BlockTrayID);
		tagByName.put("SourceToBlockTrayDistance",TagFromName.SourceToBlockTrayDistance);
		tagByName.put("IsocenterToBlockTrayDistance",TagFromName.IsocenterToBlockTrayDistance);
		tagByName.put("BlockType",TagFromName.BlockType);
		tagByName.put("AccessoryCode",TagFromName.AccessoryCode);
		tagByName.put("BlockDivergence",TagFromName.BlockDivergence);
		tagByName.put("BlockMountingPosition",TagFromName.BlockMountingPosition);
		tagByName.put("BlockNumber",TagFromName.BlockNumber);
		tagByName.put("BlockName",TagFromName.BlockName);
		tagByName.put("BlockThickness",TagFromName.BlockThickness);
		tagByName.put("BlockTransmission",TagFromName.BlockTransmission);
		tagByName.put("BlockNumberOfPoints",TagFromName.BlockNumberOfPoints);
		tagByName.put("BlockData",TagFromName.BlockData);
		tagByName.put("ApplicatorSequence",TagFromName.ApplicatorSequence);
		tagByName.put("ApplicatorID",TagFromName.ApplicatorID);
		tagByName.put("ApplicatorType",TagFromName.ApplicatorType);
		tagByName.put("ApplicatorDescription",TagFromName.ApplicatorDescription);
		tagByName.put("CumulativeDoseReferenceCoefficient",TagFromName.CumulativeDoseReferenceCoefficient);
		tagByName.put("FinalCumulativeMetersetWeight",TagFromName.FinalCumulativeMetersetWeight);
		tagByName.put("NumberOfControlPoints",TagFromName.NumberOfControlPoints);
		tagByName.put("ControlPointSequence",TagFromName.ControlPointSequence);
		tagByName.put("ControlPointIndex",TagFromName.ControlPointIndex);
		tagByName.put("NominalBeamEnergy",TagFromName.NominalBeamEnergy);
		tagByName.put("DoseRateSet",TagFromName.DoseRateSet);
		tagByName.put("WedgePositionSequence",TagFromName.WedgePositionSequence);
		tagByName.put("WedgePosition",TagFromName.WedgePosition);
		tagByName.put("BeamLimitingDevicePositionSequence",TagFromName.BeamLimitingDevicePositionSequence);
		tagByName.put("LeafJawPositions",TagFromName.LeafJawPositions);
		tagByName.put("GantryAngle",TagFromName.GantryAngle);
		tagByName.put("GantryRotationDirection",TagFromName.GantryRotationDirection);
		tagByName.put("BeamLimitingDeviceAngle",TagFromName.BeamLimitingDeviceAngle);
		tagByName.put("BeamLimitingDeviceRotationDirection",TagFromName.BeamLimitingDeviceRotationDirection);
		tagByName.put("PatientSupportAngle",TagFromName.PatientSupportAngle);
		tagByName.put("PatientSupportRotationDirection",TagFromName.PatientSupportRotationDirection);
		tagByName.put("TableTopEccentricAxisDistance",TagFromName.TableTopEccentricAxisDistance);
		tagByName.put("TableTopEccentricAngle",TagFromName.TableTopEccentricAngle);
		tagByName.put("TableTopEccentricRotationDirection",TagFromName.TableTopEccentricRotationDirection);
		tagByName.put("TableTopVerticalPosition",TagFromName.TableTopVerticalPosition);
		tagByName.put("TableTopLongitudinalPosition",TagFromName.TableTopLongitudinalPosition);
		tagByName.put("TableTopLateralPosition",TagFromName.TableTopLateralPosition);
		tagByName.put("IsocenterPosition",TagFromName.IsocenterPosition);
		tagByName.put("SurfaceEntryPoint",TagFromName.SurfaceEntryPoint);
		tagByName.put("SourceToSurfaceDistance",TagFromName.SourceToSurfaceDistance);
		tagByName.put("AverageBeamDosePointSourceToExternalContourDistance",TagFromName.AverageBeamDosePointSourceToExternalContourDistance);
		tagByName.put("SourceToExternalContourDistance",TagFromName.SourceToExternalContourDistance);
		tagByName.put("ExternalContourEntryPoint",TagFromName.ExternalContourEntryPoint);
		tagByName.put("CumulativeMetersetWeight",TagFromName.CumulativeMetersetWeight);
		tagByName.put("TableTopPitchAngle",TagFromName.TableTopPitchAngle);
		tagByName.put("TableTopPitchRotationDirection",TagFromName.TableTopPitchRotationDirection);
		tagByName.put("TableTopRollAngle",TagFromName.TableTopRollAngle);
		tagByName.put("TableTopRollRotationDirection",TagFromName.TableTopRollRotationDirection);
		tagByName.put("HeadFixationAngle",TagFromName.HeadFixationAngle);
		tagByName.put("GantryPitchAngle",TagFromName.GantryPitchAngle);
		tagByName.put("GantryPitchRotationDirection",TagFromName.GantryPitchRotationDirection);
		tagByName.put("GantryPitchAngleTolerance",TagFromName.GantryPitchAngleTolerance);
		tagByName.put("PatientSetupSequence",TagFromName.PatientSetupSequence);
		tagByName.put("PatientSetupNumber",TagFromName.PatientSetupNumber);
		tagByName.put("PatientSetupLabel",TagFromName.PatientSetupLabel);
		tagByName.put("PatientAdditionalPosition",TagFromName.PatientAdditionalPosition);
		tagByName.put("FixationDeviceSequence",TagFromName.FixationDeviceSequence);
		tagByName.put("FixationDeviceType",TagFromName.FixationDeviceType);
		tagByName.put("FixationDeviceLabel",TagFromName.FixationDeviceLabel);
		tagByName.put("FixationDeviceDescription",TagFromName.FixationDeviceDescription);
		tagByName.put("FixationDevicePosition",TagFromName.FixationDevicePosition);
		tagByName.put("FixationDevicePitchAngle",TagFromName.FixationDevicePitchAngle);
		tagByName.put("FixationDeviceRollAngle",TagFromName.FixationDeviceRollAngle);
		tagByName.put("ShieldingDeviceSequence",TagFromName.ShieldingDeviceSequence);
		tagByName.put("ShieldingDeviceType",TagFromName.ShieldingDeviceType);
		tagByName.put("ShieldingDeviceLabel",TagFromName.ShieldingDeviceLabel);
		tagByName.put("ShieldingDeviceDescription",TagFromName.ShieldingDeviceDescription);
		tagByName.put("ShieldingDevicePosition",TagFromName.ShieldingDevicePosition);
		tagByName.put("SetupTechnique",TagFromName.SetupTechnique);
		tagByName.put("SetupTechniqueDescription",TagFromName.SetupTechniqueDescription);
		tagByName.put("SetupDeviceSequence",TagFromName.SetupDeviceSequence);
		tagByName.put("SetupDeviceType",TagFromName.SetupDeviceType);
		tagByName.put("SetupDeviceLabel",TagFromName.SetupDeviceLabel);
		tagByName.put("SetupDeviceDescription",TagFromName.SetupDeviceDescription);
		tagByName.put("SetupDeviceParameter",TagFromName.SetupDeviceParameter);
		tagByName.put("SetupReferenceDescription",TagFromName.SetupReferenceDescription);
		tagByName.put("TableTopVerticalSetupDisplacement",TagFromName.TableTopVerticalSetupDisplacement);
		tagByName.put("TableTopLongitudinalSetupDisplacement",TagFromName.TableTopLongitudinalSetupDisplacement);
		tagByName.put("TableTopLateralSetupDisplacement",TagFromName.TableTopLateralSetupDisplacement);
		tagByName.put("BrachyTreatmentTechnique",TagFromName.BrachyTreatmentTechnique);
		tagByName.put("BrachyTreatmentType",TagFromName.BrachyTreatmentType);
		tagByName.put("TreatmentMachineSequence",TagFromName.TreatmentMachineSequence);
		tagByName.put("SourceSequence",TagFromName.SourceSequence);
		tagByName.put("SourceNumber",TagFromName.SourceNumber);
		tagByName.put("SourceType",TagFromName.SourceType);
		tagByName.put("SourceManufacturer",TagFromName.SourceManufacturer);
		tagByName.put("ActiveSourceDiameter",TagFromName.ActiveSourceDiameter);
		tagByName.put("ActiveSourceLength",TagFromName.ActiveSourceLength);
		tagByName.put("SourceModelID",TagFromName.SourceModelID);
		tagByName.put("SourceDescription",TagFromName.SourceDescription);
		tagByName.put("SourceEncapsulationNominalThickness",TagFromName.SourceEncapsulationNominalThickness);
		tagByName.put("SourceEncapsulationNominalTransmission",TagFromName.SourceEncapsulationNominalTransmission);
		tagByName.put("SourceIsotopeName",TagFromName.SourceIsotopeName);
		tagByName.put("SourceIsotopeHalfLife",TagFromName.SourceIsotopeHalfLife);
		tagByName.put("SourceStrengthUnits",TagFromName.SourceStrengthUnits);
		tagByName.put("ReferenceAirKermaRate",TagFromName.ReferenceAirKermaRate);
		tagByName.put("SourceStrength",TagFromName.SourceStrength);
		tagByName.put("SourceStrengthReferenceDate",TagFromName.SourceStrengthReferenceDate);
		tagByName.put("SourceStrengthReferenceTime",TagFromName.SourceStrengthReferenceTime);
		tagByName.put("ApplicationSetupSequence",TagFromName.ApplicationSetupSequence);
		tagByName.put("ApplicationSetupType",TagFromName.ApplicationSetupType);
		tagByName.put("ApplicationSetupNumber",TagFromName.ApplicationSetupNumber);
		tagByName.put("ApplicationSetupName",TagFromName.ApplicationSetupName);
		tagByName.put("ApplicationSetupManufacturer",TagFromName.ApplicationSetupManufacturer);
		tagByName.put("TemplateNumber",TagFromName.TemplateNumber);
		tagByName.put("TemplateType",TagFromName.TemplateType);
		tagByName.put("TemplateName",TagFromName.TemplateName);
		tagByName.put("TotalReferenceAirKerma",TagFromName.TotalReferenceAirKerma);
		tagByName.put("BrachyAccessoryDeviceSequence",TagFromName.BrachyAccessoryDeviceSequence);
		tagByName.put("BrachyAccessoryDeviceNumber",TagFromName.BrachyAccessoryDeviceNumber);
		tagByName.put("BrachyAccessoryDeviceID",TagFromName.BrachyAccessoryDeviceID);
		tagByName.put("BrachyAccessoryDeviceType",TagFromName.BrachyAccessoryDeviceType);
		tagByName.put("BrachyAccessoryDeviceName",TagFromName.BrachyAccessoryDeviceName);
		tagByName.put("BrachyAccessoryDeviceNominalThickness",TagFromName.BrachyAccessoryDeviceNominalThickness);
		tagByName.put("BrachyAccessoryDeviceNominalTransmission",TagFromName.BrachyAccessoryDeviceNominalTransmission);
		tagByName.put("ChannelEffectiveLength",TagFromName.ChannelEffectiveLength);
		tagByName.put("ChannelInnerLength",TagFromName.ChannelInnerLength);
		tagByName.put("AfterloaderChannelID",TagFromName.AfterloaderChannelID);
		tagByName.put("SourceApplicatorTipLength",TagFromName.SourceApplicatorTipLength);
		tagByName.put("ChannelSequence",TagFromName.ChannelSequence);
		tagByName.put("ChannelNumber",TagFromName.ChannelNumber);
		tagByName.put("ChannelLength",TagFromName.ChannelLength);
		tagByName.put("ChannelTotalTime",TagFromName.ChannelTotalTime);
		tagByName.put("SourceMovementType",TagFromName.SourceMovementType);
		tagByName.put("NumberOfPulses",TagFromName.NumberOfPulses);
		tagByName.put("PulseRepetitionInterval",TagFromName.PulseRepetitionInterval);
		tagByName.put("SourceApplicatorNumber",TagFromName.SourceApplicatorNumber);
		tagByName.put("SourceApplicatorID",TagFromName.SourceApplicatorID);
		tagByName.put("SourceApplicatorType",TagFromName.SourceApplicatorType);
		tagByName.put("SourceApplicatorName",TagFromName.SourceApplicatorName);
		tagByName.put("SourceApplicatorLength",TagFromName.SourceApplicatorLength);
		tagByName.put("SourceApplicatorManufacturer",TagFromName.SourceApplicatorManufacturer);
		tagByName.put("SourceApplicatorWallNominalThickness",TagFromName.SourceApplicatorWallNominalThickness);
		tagByName.put("SourceApplicatorWallNominalTransmission",TagFromName.SourceApplicatorWallNominalTransmission);
		tagByName.put("SourceApplicatorStepSize",TagFromName.SourceApplicatorStepSize);
		tagByName.put("TransferTubeNumber",TagFromName.TransferTubeNumber);
		tagByName.put("TransferTubeLength",TagFromName.TransferTubeLength);
		tagByName.put("ChannelShieldSequence",TagFromName.ChannelShieldSequence);
		tagByName.put("ChannelShieldNumber",TagFromName.ChannelShieldNumber);
		tagByName.put("ChannelShieldID",TagFromName.ChannelShieldID);
		tagByName.put("ChannelShieldName",TagFromName.ChannelShieldName);
		tagByName.put("ChannelShieldNominalThickness",TagFromName.ChannelShieldNominalThickness);
		tagByName.put("ChannelShieldNominalTransmission",TagFromName.ChannelShieldNominalTransmission);
		tagByName.put("FinalCumulativeTimeWeight",TagFromName.FinalCumulativeTimeWeight);
		tagByName.put("BrachyControlPointSequence",TagFromName.BrachyControlPointSequence);
		tagByName.put("ControlPointRelativePosition",TagFromName.ControlPointRelativePosition);
		tagByName.put("ControlPoint3DPosition",TagFromName.ControlPoint3DPosition);
		tagByName.put("CumulativeTimeWeight",TagFromName.CumulativeTimeWeight);
		tagByName.put("CompensatorDivergence",TagFromName.CompensatorDivergence);
		tagByName.put("CompensatorMountingPosition",TagFromName.CompensatorMountingPosition);
		tagByName.put("SourceToCompensatorDistance",TagFromName.SourceToCompensatorDistance);
		tagByName.put("TotalCompensatorTrayWaterEquivalentThickness",TagFromName.TotalCompensatorTrayWaterEquivalentThickness);
		tagByName.put("IsocenterToCompensatorTrayDistance",TagFromName.IsocenterToCompensatorTrayDistance);
		tagByName.put("CompensatorColumnOffset",TagFromName.CompensatorColumnOffset);
		tagByName.put("IsocenterToCompensatorDistances",TagFromName.IsocenterToCompensatorDistances);
		tagByName.put("CompensatorRelativeStoppingPowerRatio",TagFromName.CompensatorRelativeStoppingPowerRatio);
		tagByName.put("CompensatorMillingToolDiameter",TagFromName.CompensatorMillingToolDiameter);
		tagByName.put("IonRangeCompensatorSequence",TagFromName.IonRangeCompensatorSequence);
		tagByName.put("CompensatorDescription",TagFromName.CompensatorDescription);
		tagByName.put("RadiationMassNumber",TagFromName.RadiationMassNumber);
		tagByName.put("RadiationAtomicNumber",TagFromName.RadiationAtomicNumber);
		tagByName.put("RadiationChargeState",TagFromName.RadiationChargeState);
		tagByName.put("ScanMode",TagFromName.ScanMode);
		tagByName.put("ModulatedScanModeType",TagFromName.ModulatedScanModeType);
		tagByName.put("VirtualSourceAxisDistances",TagFromName.VirtualSourceAxisDistances);
		tagByName.put("SnoutSequence",TagFromName.SnoutSequence);
		tagByName.put("SnoutPosition",TagFromName.SnoutPosition);
		tagByName.put("SnoutID",TagFromName.SnoutID);
		tagByName.put("NumberOfRangeShifters",TagFromName.NumberOfRangeShifters);
		tagByName.put("RangeShifterSequence",TagFromName.RangeShifterSequence);
		tagByName.put("RangeShifterNumber",TagFromName.RangeShifterNumber);
		tagByName.put("RangeShifterID",TagFromName.RangeShifterID);
		tagByName.put("RangeShifterType",TagFromName.RangeShifterType);
		tagByName.put("RangeShifterDescription",TagFromName.RangeShifterDescription);
		tagByName.put("NumberOfLateralSpreadingDevices",TagFromName.NumberOfLateralSpreadingDevices);
		tagByName.put("LateralSpreadingDeviceSequence",TagFromName.LateralSpreadingDeviceSequence);
		tagByName.put("LateralSpreadingDeviceNumber",TagFromName.LateralSpreadingDeviceNumber);
		tagByName.put("LateralSpreadingDeviceID",TagFromName.LateralSpreadingDeviceID);
		tagByName.put("LateralSpreadingDeviceType",TagFromName.LateralSpreadingDeviceType);
		tagByName.put("LateralSpreadingDeviceDescription",TagFromName.LateralSpreadingDeviceDescription);
		tagByName.put("LateralSpreadingDeviceWaterEquivalentThickness",TagFromName.LateralSpreadingDeviceWaterEquivalentThickness);
		tagByName.put("NumberOfRangeModulators",TagFromName.NumberOfRangeModulators);
		tagByName.put("RangeModulatorSequence",TagFromName.RangeModulatorSequence);
		tagByName.put("RangeModulatorNumber",TagFromName.RangeModulatorNumber);
		tagByName.put("RangeModulatorID",TagFromName.RangeModulatorID);
		tagByName.put("RangeModulatorType",TagFromName.RangeModulatorType);
		tagByName.put("RangeModulatorDescription",TagFromName.RangeModulatorDescription);
		tagByName.put("BeamCurrentModulationID",TagFromName.BeamCurrentModulationID);
		tagByName.put("PatientSupportType",TagFromName.PatientSupportType);
		tagByName.put("PatientSupportID",TagFromName.PatientSupportID);
		tagByName.put("PatientSupportAccessoryCode",TagFromName.PatientSupportAccessoryCode);
		tagByName.put("TrayAccessoryCode",TagFromName.TrayAccessoryCode);
		tagByName.put("FixationLightAzimuthalAngle",TagFromName.FixationLightAzimuthalAngle);
		tagByName.put("FixationLightPolarAngle",TagFromName.FixationLightPolarAngle);
		tagByName.put("MetersetRate",TagFromName.MetersetRate);
		tagByName.put("RangeShifterSettingsSequence",TagFromName.RangeShifterSettingsSequence);
		tagByName.put("RangeShifterSetting",TagFromName.RangeShifterSetting);
		tagByName.put("IsocenterToRangeShifterDistance",TagFromName.IsocenterToRangeShifterDistance);
		tagByName.put("RangeShifterWaterEquivalentThickness",TagFromName.RangeShifterWaterEquivalentThickness);
		tagByName.put("LateralSpreadingDeviceSettingsSequence",TagFromName.LateralSpreadingDeviceSettingsSequence);
		tagByName.put("LateralSpreadingDeviceSetting",TagFromName.LateralSpreadingDeviceSetting);
		tagByName.put("IsocenterToLateralSpreadingDeviceDistance",TagFromName.IsocenterToLateralSpreadingDeviceDistance);
		tagByName.put("RangeModulatorSettingsSequence",TagFromName.RangeModulatorSettingsSequence);
		tagByName.put("RangeModulatorGatingStartValue",TagFromName.RangeModulatorGatingStartValue);
		tagByName.put("RangeModulatorGatingStopValue",TagFromName.RangeModulatorGatingStopValue);
		tagByName.put("RangeModulatorGatingStartWaterEquivalentThickness",TagFromName.RangeModulatorGatingStartWaterEquivalentThickness);
		tagByName.put("RangeModulatorGatingStopWaterEquivalentThickness",TagFromName.RangeModulatorGatingStopWaterEquivalentThickness);
		tagByName.put("IsocenterToRangeModulatorDistance",TagFromName.IsocenterToRangeModulatorDistance);
		tagByName.put("ScanSpotTimeOffset",TagFromName.ScanSpotTimeOffset);
		tagByName.put("ScanSpotTuneID",TagFromName.ScanSpotTuneID);
		tagByName.put("ScanSpotPrescribedIndices",TagFromName.ScanSpotPrescribedIndices);
		tagByName.put("NumberOfScanSpotPositions",TagFromName.NumberOfScanSpotPositions);
		tagByName.put("ScanSpotReordered",TagFromName.ScanSpotReordered);
		tagByName.put("ScanSpotPositionMap",TagFromName.ScanSpotPositionMap);
		tagByName.put("ScanSpotReorderingAllowed",TagFromName.ScanSpotReorderingAllowed);
		tagByName.put("ScanSpotMetersetWeights",TagFromName.ScanSpotMetersetWeights);
		tagByName.put("ScanningSpotSize",TagFromName.ScanningSpotSize);
		tagByName.put("NumberOfPaintings",TagFromName.NumberOfPaintings);
		tagByName.put("IonToleranceTableSequence",TagFromName.IonToleranceTableSequence);
		tagByName.put("IonBeamSequence",TagFromName.IonBeamSequence);
		tagByName.put("IonBeamLimitingDeviceSequence",TagFromName.IonBeamLimitingDeviceSequence);
		tagByName.put("IonBlockSequence",TagFromName.IonBlockSequence);
		tagByName.put("IonControlPointSequence",TagFromName.IonControlPointSequence);
		tagByName.put("IonWedgeSequence",TagFromName.IonWedgeSequence);
		tagByName.put("IonWedgePositionSequence",TagFromName.IonWedgePositionSequence);
		tagByName.put("ReferencedSetupImageSequence",TagFromName.ReferencedSetupImageSequence);
		tagByName.put("SetupImageComment",TagFromName.SetupImageComment);
		tagByName.put("MotionSynchronizationSequence",TagFromName.MotionSynchronizationSequence);
		tagByName.put("ControlPointOrientation",TagFromName.ControlPointOrientation);
		tagByName.put("GeneralAccessorySequence",TagFromName.GeneralAccessorySequence);
		tagByName.put("GeneralAccessoryID",TagFromName.GeneralAccessoryID);
		tagByName.put("GeneralAccessoryDescription",TagFromName.GeneralAccessoryDescription);
		tagByName.put("GeneralAccessoryType",TagFromName.GeneralAccessoryType);
		tagByName.put("GeneralAccessoryNumber",TagFromName.GeneralAccessoryNumber);
		tagByName.put("SourceToGeneralAccessoryDistance",TagFromName.SourceToGeneralAccessoryDistance);
		tagByName.put("ApplicatorGeometrySequence",TagFromName.ApplicatorGeometrySequence);
		tagByName.put("ApplicatorApertureShape",TagFromName.ApplicatorApertureShape);
		tagByName.put("ApplicatorOpening",TagFromName.ApplicatorOpening);
		tagByName.put("ApplicatorOpeningX",TagFromName.ApplicatorOpeningX);
		tagByName.put("ApplicatorOpeningY",TagFromName.ApplicatorOpeningY);
		tagByName.put("SourceToApplicatorMountingPositionDistance",TagFromName.SourceToApplicatorMountingPositionDistance);
		tagByName.put("NumberOfBlockSlabItems",TagFromName.NumberOfBlockSlabItems);
		tagByName.put("BlockSlabSequence",TagFromName.BlockSlabSequence);
		tagByName.put("BlockSlabThickness",TagFromName.BlockSlabThickness);
		tagByName.put("BlockSlabNumber",TagFromName.BlockSlabNumber);
		tagByName.put("DeviceMotionControlSequence",TagFromName.DeviceMotionControlSequence);
		tagByName.put("DeviceMotionExecutionMode",TagFromName.DeviceMotionExecutionMode);
		tagByName.put("DeviceMotionObservationMode",TagFromName.DeviceMotionObservationMode);
		tagByName.put("DeviceMotionParameterCodeSequence",TagFromName.DeviceMotionParameterCodeSequence);
		tagByName.put("DistalDepthFraction",TagFromName.DistalDepthFraction);
		tagByName.put("DistalDepth",TagFromName.DistalDepth);
		tagByName.put("NominalRangeModulatioFractions",TagFromName.NominalRangeModulatioFractions);
		tagByName.put("NominalRangeModulatedRegionDepths",TagFromName.NominalRangeModulatedRegionDepths);
		tagByName.put("DepthDoseParametersSequence",TagFromName.DepthDoseParametersSequence);
		tagByName.put("DeliveredDepthDoseParametersSequence",TagFromName.DeliveredDepthDoseParametersSequence);
		tagByName.put("DeliveredDistalDepthFraction",TagFromName.DeliveredDistalDepthFraction);
		tagByName.put("DeliveredDistalDepth",TagFromName.DeliveredDistalDepth);
		tagByName.put("DeliveredNominalRangeModulationFractions",TagFromName.DeliveredNominalRangeModulationFractions);
		tagByName.put("DeliveredNominalRangeModulatedRegionDepths",TagFromName.DeliveredNominalRangeModulatedRegionDepths);
		tagByName.put("DeliveredReferenceDoseDefinition",TagFromName.DeliveredReferenceDoseDefinition);
		tagByName.put("ReferenceDoseDefinition",TagFromName.ReferenceDoseDefinition);
		tagByName.put("ReferencedRTPlanSequence",TagFromName.ReferencedRTPlanSequence);
		tagByName.put("ReferencedBeamSequence",TagFromName.ReferencedBeamSequence);
		tagByName.put("ReferencedBeamNumber",TagFromName.ReferencedBeamNumber);
		tagByName.put("ReferencedReferenceImageNumber",TagFromName.ReferencedReferenceImageNumber);
		tagByName.put("StartCumulativeMetersetWeight",TagFromName.StartCumulativeMetersetWeight);
		tagByName.put("EndCumulativeMetersetWeight",TagFromName.EndCumulativeMetersetWeight);
		tagByName.put("ReferencedBrachyApplicationSetupSequence",TagFromName.ReferencedBrachyApplicationSetupSequence);
		tagByName.put("ReferencedBrachyApplicationSetupNumber",TagFromName.ReferencedBrachyApplicationSetupNumber);
		tagByName.put("ReferencedSourceNumber",TagFromName.ReferencedSourceNumber);
		tagByName.put("ReferencedFractionGroupSequence",TagFromName.ReferencedFractionGroupSequence);
		tagByName.put("ReferencedFractionGroupNumber",TagFromName.ReferencedFractionGroupNumber);
		tagByName.put("ReferencedVerificationImageSequence",TagFromName.ReferencedVerificationImageSequence);
		tagByName.put("ReferencedReferenceImageSequence",TagFromName.ReferencedReferenceImageSequence);
		tagByName.put("ReferencedDoseReferenceSequence",TagFromName.ReferencedDoseReferenceSequence);
		tagByName.put("ReferencedDoseReferenceNumber",TagFromName.ReferencedDoseReferenceNumber);
		tagByName.put("BrachyReferencedDoseReferenceSequence",TagFromName.BrachyReferencedDoseReferenceSequence);
		tagByName.put("ReferencedStructureSetSequence",TagFromName.ReferencedStructureSetSequence);
		tagByName.put("ReferencedPatientSetupNumber",TagFromName.ReferencedPatientSetupNumber);
		tagByName.put("ReferencedDoseSequence",TagFromName.ReferencedDoseSequence);
		tagByName.put("ReferencedToleranceTableNumber",TagFromName.ReferencedToleranceTableNumber);
		tagByName.put("ReferencedBolusSequence",TagFromName.ReferencedBolusSequence);
		tagByName.put("ReferencedWedgeNumber",TagFromName.ReferencedWedgeNumber);
		tagByName.put("ReferencedCompensatorNumber",TagFromName.ReferencedCompensatorNumber);
		tagByName.put("ReferencedBlockNumber",TagFromName.ReferencedBlockNumber);
		tagByName.put("ReferencedControlPointIndex",TagFromName.ReferencedControlPointIndex);
		tagByName.put("ReferencedControlPointSequence",TagFromName.ReferencedControlPointSequence);
		tagByName.put("ReferencedStartControlPointIndex",TagFromName.ReferencedStartControlPointIndex);
		tagByName.put("ReferencedStopControlPointIndex",TagFromName.ReferencedStopControlPointIndex);
		tagByName.put("ReferencedRangeShifterNumber",TagFromName.ReferencedRangeShifterNumber);
		tagByName.put("ReferencedLateralSpreadingDeviceNumber",TagFromName.ReferencedLateralSpreadingDeviceNumber);
		tagByName.put("ReferencedRangeModulatorNumber",TagFromName.ReferencedRangeModulatorNumber);
		tagByName.put("OmittedBeamTaskSequence",TagFromName.OmittedBeamTaskSequence);
		tagByName.put("ReasonForOmission",TagFromName.ReasonForOmission);
		tagByName.put("ReasonForOmissionDescription",TagFromName.ReasonForOmissionDescription);
		tagByName.put("ApprovalStatus",TagFromName.ApprovalStatus);
		tagByName.put("ReviewDate",TagFromName.ReviewDate);
		tagByName.put("ReviewTime",TagFromName.ReviewTime);
		tagByName.put("ReviewerName",TagFromName.ReviewerName);
		tagByName.put("Arbitrary",TagFromName.Arbitrary);
		tagByName.put("TextComments",TagFromName.TextComments);
		tagByName.put("ResultsID",TagFromName.ResultsID);
		tagByName.put("ResultsIDIssuer",TagFromName.ResultsIDIssuer);
		tagByName.put("ReferencedInterpretationSequence",TagFromName.ReferencedInterpretationSequence);
		tagByName.put("ReportProductionStatusTrial",TagFromName.ReportProductionStatusTrial);
		tagByName.put("InterpretationRecordedDate",TagFromName.InterpretationRecordedDate);
		tagByName.put("InterpretationRecordedTime",TagFromName.InterpretationRecordedTime);
		tagByName.put("InterpretationRecorder",TagFromName.InterpretationRecorder);
		tagByName.put("ReferenceToRecordedSound",TagFromName.ReferenceToRecordedSound);
		tagByName.put("InterpretationTranscriptionDate",TagFromName.InterpretationTranscriptionDate);
		tagByName.put("InterpretationTranscriptionTime",TagFromName.InterpretationTranscriptionTime);
		tagByName.put("InterpretationTranscriber",TagFromName.InterpretationTranscriber);
		tagByName.put("InterpretationText",TagFromName.InterpretationText);
		tagByName.put("InterpretationAuthor",TagFromName.InterpretationAuthor);
		tagByName.put("InterpretationApproverSequence",TagFromName.InterpretationApproverSequence);
		tagByName.put("InterpretationApprovalDate",TagFromName.InterpretationApprovalDate);
		tagByName.put("InterpretationApprovalTime",TagFromName.InterpretationApprovalTime);
		tagByName.put("PhysicianApprovingInterpretation",TagFromName.PhysicianApprovingInterpretation);
		tagByName.put("InterpretationDiagnosisDescription",TagFromName.InterpretationDiagnosisDescription);
		tagByName.put("InterpretationDiagnosisCodeSequence",TagFromName.InterpretationDiagnosisCodeSequence);
		tagByName.put("ResultsDistributionListSequence",TagFromName.ResultsDistributionListSequence);
		tagByName.put("DistributionName",TagFromName.DistributionName);
		tagByName.put("DistributionAddress",TagFromName.DistributionAddress);
		tagByName.put("InterpretationID",TagFromName.InterpretationID);
		tagByName.put("InterpretationIDIssuer",TagFromName.InterpretationIDIssuer);
		tagByName.put("InterpretationTypeID",TagFromName.InterpretationTypeID);
		tagByName.put("InterpretationStatusID",TagFromName.InterpretationStatusID);
		tagByName.put("Impressions",TagFromName.Impressions);
		tagByName.put("ResultsComments",TagFromName.ResultsComments);
		tagByName.put("LowEnergyDetectors",TagFromName.LowEnergyDetectors);
		tagByName.put("HighEnergyDetectors",TagFromName.HighEnergyDetectors);
		tagByName.put("DetectorGeometrySequence",TagFromName.DetectorGeometrySequence);
		tagByName.put("ThreatROIVoxelSequence",TagFromName.ThreatROIVoxelSequence);
		tagByName.put("ThreatROIBase",TagFromName.ThreatROIBase);
		tagByName.put("ThreatROIExtents",TagFromName.ThreatROIExtents);
		tagByName.put("ThreatROIBitmap",TagFromName.ThreatROIBitmap);
		tagByName.put("RouteSegmentID",TagFromName.RouteSegmentID);
		tagByName.put("GantryType",TagFromName.GantryType);
		tagByName.put("OOIOwnerType",TagFromName.OOIOwnerType);
		tagByName.put("RouteSegmentSequence",TagFromName.RouteSegmentSequence);
		tagByName.put("PotentialThreatObjectID",TagFromName.PotentialThreatObjectID);
		tagByName.put("ThreatSequence",TagFromName.ThreatSequence);
		tagByName.put("ThreatCategory",TagFromName.ThreatCategory);
		tagByName.put("ThreatCategoryDescription",TagFromName.ThreatCategoryDescription);
		tagByName.put("ATDAbilityAssessment",TagFromName.ATDAbilityAssessment);
		tagByName.put("ATDAssessmentFlag",TagFromName.ATDAssessmentFlag);
		tagByName.put("ATDAssessmentProbability",TagFromName.ATDAssessmentProbability);
		tagByName.put("Mass",TagFromName.Mass);
		tagByName.put("Density",TagFromName.Density);
		tagByName.put("ZEffective",TagFromName.ZEffective);
		tagByName.put("BoardingPassID",TagFromName.BoardingPassID);
		tagByName.put("CenterOfMass",TagFromName.CenterOfMass);
		tagByName.put("CenterOfPTO",TagFromName.CenterOfPTO);
		tagByName.put("BoundingPolygon",TagFromName.BoundingPolygon);
		tagByName.put("RouteSegmentStartLocationID",TagFromName.RouteSegmentStartLocationID);
		tagByName.put("RouteSegmentEndLocationID",TagFromName.RouteSegmentEndLocationID);
		tagByName.put("RouteSegmentLocationIDType",TagFromName.RouteSegmentLocationIDType);
		tagByName.put("AbortReason",TagFromName.AbortReason);
		tagByName.put("VolumeOfPTO",TagFromName.VolumeOfPTO);
		tagByName.put("AbortFlag",TagFromName.AbortFlag);
		tagByName.put("RouteSegmentStartTime",TagFromName.RouteSegmentStartTime);
		tagByName.put("RouteSegmentEndTime",TagFromName.RouteSegmentEndTime);
		tagByName.put("TDRType",TagFromName.TDRType);
		tagByName.put("InternationalRouteSegment",TagFromName.InternationalRouteSegment);
		tagByName.put("ThreatDetectionAlgorithmAndVersion",TagFromName.ThreatDetectionAlgorithmAndVersion);
		tagByName.put("AssignedLocation",TagFromName.AssignedLocation);
		tagByName.put("AlarmDecisionTime",TagFromName.AlarmDecisionTime);
		tagByName.put("AlarmDecision",TagFromName.AlarmDecision);
		tagByName.put("NumberOfTotalObjects",TagFromName.NumberOfTotalObjects);
		tagByName.put("NumberOfAlarmObjects",TagFromName.NumberOfAlarmObjects);
		tagByName.put("PTORepresentationSequence",TagFromName.PTORepresentationSequence);
		tagByName.put("ATDAssessmentSequence",TagFromName.ATDAssessmentSequence);
		tagByName.put("TIPType",TagFromName.TIPType);
		tagByName.put("DICOSVersion",TagFromName.DICOSVersion);
		tagByName.put("OOIOwnerCreationTime",TagFromName.OOIOwnerCreationTime);
		tagByName.put("OOIType",TagFromName.OOIType);
		tagByName.put("OOISize",TagFromName.OOISize);
		tagByName.put("AcquisitionStatus",TagFromName.AcquisitionStatus);
		tagByName.put("BasisMaterialsCodeSequence",TagFromName.BasisMaterialsCodeSequence);
		tagByName.put("PhantomType",TagFromName.PhantomType);
		tagByName.put("OOIOwnerSequence",TagFromName.OOIOwnerSequence);
		tagByName.put("ScanType",TagFromName.ScanType);
		tagByName.put("ItineraryID",TagFromName.ItineraryID);
		tagByName.put("ItineraryIDType",TagFromName.ItineraryIDType);
		tagByName.put("ItineraryIDAssigningAuthority",TagFromName.ItineraryIDAssigningAuthority);
		tagByName.put("RouteID",TagFromName.RouteID);
		tagByName.put("RouteIDAssigningAuthority",TagFromName.RouteIDAssigningAuthority);
		tagByName.put("InboundArrivalType",TagFromName.InboundArrivalType);
		tagByName.put("CarrierID",TagFromName.CarrierID);
		tagByName.put("CarrierIDAssigningAuthority",TagFromName.CarrierIDAssigningAuthority);
		tagByName.put("SourceOrientation",TagFromName.SourceOrientation);
		tagByName.put("SourcePosition",TagFromName.SourcePosition);
		tagByName.put("BeltHeight",TagFromName.BeltHeight);
		tagByName.put("AlgorithmRoutingCodeSequence",TagFromName.AlgorithmRoutingCodeSequence);
		tagByName.put("TransportClassification",TagFromName.TransportClassification);
		tagByName.put("OOITypeDescriptor",TagFromName.OOITypeDescriptor);
		tagByName.put("TotalProcessingTime",TagFromName.TotalProcessingTime);
		tagByName.put("DetectorCalibrationData",TagFromName.DetectorCalibrationData);
		tagByName.put("AdditionalScreeningPerformed",TagFromName.AdditionalScreeningPerformed);
		tagByName.put("AdditionalInspectionSelectionCriteria",TagFromName.AdditionalInspectionSelectionCriteria);
		tagByName.put("AdditionalInspectionMethodSequence",TagFromName.AdditionalInspectionMethodSequence);
		tagByName.put("AITDeviceType",TagFromName.AITDeviceType);
		tagByName.put("QRMeasurementsSequence",TagFromName.QRMeasurementsSequence);
		tagByName.put("TargetMaterialSequence",TagFromName.TargetMaterialSequence);
		tagByName.put("SNRThreshold",TagFromName.SNRThreshold);
		tagByName.put("ImageScaleRepresentation",TagFromName.ImageScaleRepresentation);
		tagByName.put("ReferencedPTOSequence",TagFromName.ReferencedPTOSequence);
		tagByName.put("ReferencedTDRInstanceSequence",TagFromName.ReferencedTDRInstanceSequence);
		tagByName.put("PTOLocationDescription",TagFromName.PTOLocationDescription);
		tagByName.put("AnomalyLocatorIndicatorSequence",TagFromName.AnomalyLocatorIndicatorSequence);
		tagByName.put("AnomalyLocatorIndicator",TagFromName.AnomalyLocatorIndicator);
		tagByName.put("PTORegionSequence",TagFromName.PTORegionSequence);
		tagByName.put("InspectionSelectionCriteria",TagFromName.InspectionSelectionCriteria);
		tagByName.put("SecondaryInspectionMethodSequence",TagFromName.SecondaryInspectionMethodSequence);
		tagByName.put("PRCSToRCSOrientation",TagFromName.PRCSToRCSOrientation);
		tagByName.put("MACParametersSequence",TagFromName.MACParametersSequence);
		tagByName.put("CurveDimensions",TagFromName.CurveDimensions);
		tagByName.put("NumberOfPoints",TagFromName.NumberOfPoints);
		tagByName.put("TypeOfData",TagFromName.TypeOfData);
		tagByName.put("CurveDescription",TagFromName.CurveDescription);
		tagByName.put("AxisUnits",TagFromName.AxisUnits);
		tagByName.put("AxisLabels",TagFromName.AxisLabels);
		tagByName.put("DataValueRepresentation",TagFromName.DataValueRepresentation);
		tagByName.put("MinimumCoordinateValue",TagFromName.MinimumCoordinateValue);
		tagByName.put("MaximumCoordinateValue",TagFromName.MaximumCoordinateValue);
		tagByName.put("CurveRange",TagFromName.CurveRange);
		tagByName.put("CurveDataDescriptor",TagFromName.CurveDataDescriptor);
		tagByName.put("CoordinateStartValue",TagFromName.CoordinateStartValue);
		tagByName.put("CoordinateStepValue",TagFromName.CoordinateStepValue);
		tagByName.put("CurveActivationLayer",TagFromName.CurveActivationLayer);
		tagByName.put("AudioType",TagFromName.AudioType);
		tagByName.put("AudioSampleFormat",TagFromName.AudioSampleFormat);
		tagByName.put("NumberOfChannels",TagFromName.NumberOfChannels);
		tagByName.put("NumberOfSamples",TagFromName.NumberOfSamples);
		tagByName.put("SampleRate",TagFromName.SampleRate);
		tagByName.put("TotalTime",TagFromName.TotalTime);
		tagByName.put("AudioSampleData",TagFromName.AudioSampleData);
		tagByName.put("AudioComments",TagFromName.AudioComments);
		tagByName.put("CurveLabel",TagFromName.CurveLabel);
		tagByName.put("CurveReferencedOverlaySequence",TagFromName.CurveReferencedOverlaySequence);
		tagByName.put("CurveReferencedOverlayGroup",TagFromName.CurveReferencedOverlayGroup);
		tagByName.put("CurveData",TagFromName.CurveData);
		tagByName.put("SharedFunctionalGroupsSequence",TagFromName.SharedFunctionalGroupsSequence);
		tagByName.put("PerFrameFunctionalGroupsSequence",TagFromName.PerFrameFunctionalGroupsSequence);
		tagByName.put("WaveformSequence",TagFromName.WaveformSequence);
		tagByName.put("ChannelMinimumValue",TagFromName.ChannelMinimumValue);
		tagByName.put("ChannelMaximumValue",TagFromName.ChannelMaximumValue);
		tagByName.put("WaveformBitsAllocated",TagFromName.WaveformBitsAllocated);
		tagByName.put("WaveformSampleInterpretation",TagFromName.WaveformSampleInterpretation);
		tagByName.put("WaveformPaddingValue",TagFromName.WaveformPaddingValue);
		tagByName.put("WaveformData",TagFromName.WaveformData);
		tagByName.put("FirstOrderPhaseCorrectionAngle",TagFromName.FirstOrderPhaseCorrectionAngle);
		tagByName.put("SpectroscopyData",TagFromName.SpectroscopyData);
		tagByName.put("OverlayRows",TagFromName.OverlayRows);
		tagByName.put("OverlayColumns",TagFromName.OverlayColumns);
		tagByName.put("OverlayPlanes",TagFromName.OverlayPlanes);
		tagByName.put("NumberOfFramesInOverlay",TagFromName.NumberOfFramesInOverlay);
		tagByName.put("OverlayDescription",TagFromName.OverlayDescription);
		tagByName.put("OverlayType",TagFromName.OverlayType);
		tagByName.put("OverlaySubtype",TagFromName.OverlaySubtype);
		tagByName.put("OverlayOrigin",TagFromName.OverlayOrigin);
		tagByName.put("ImageFrameOrigin",TagFromName.ImageFrameOrigin);
		tagByName.put("OverlayPlaneOrigin",TagFromName.OverlayPlaneOrigin);
		tagByName.put("OverlayCompressionCode",TagFromName.OverlayCompressionCode);
		tagByName.put("OverlayCompressionOriginator",TagFromName.OverlayCompressionOriginator);
		tagByName.put("OverlayCompressionLabel",TagFromName.OverlayCompressionLabel);
		tagByName.put("OverlayCompressionDescription",TagFromName.OverlayCompressionDescription);
		tagByName.put("OverlayCompressionStepPointers",TagFromName.OverlayCompressionStepPointers);
		tagByName.put("OverlayRepeatInterval",TagFromName.OverlayRepeatInterval);
		tagByName.put("OverlayBitsGrouped",TagFromName.OverlayBitsGrouped);
		tagByName.put("OverlayBitsAllocated",TagFromName.OverlayBitsAllocated);
		tagByName.put("OverlayBitPosition",TagFromName.OverlayBitPosition);
		tagByName.put("OverlayFormat",TagFromName.OverlayFormat);
		tagByName.put("OverlayLocation",TagFromName.OverlayLocation);
		tagByName.put("OverlayCodeLabel",TagFromName.OverlayCodeLabel);
		tagByName.put("OverlayNumberOfTables",TagFromName.OverlayNumberOfTables);
		tagByName.put("OverlayCodeTableLocation",TagFromName.OverlayCodeTableLocation);
		tagByName.put("OverlayBitsForCodeWord",TagFromName.OverlayBitsForCodeWord);
		tagByName.put("OverlayActivationLayer",TagFromName.OverlayActivationLayer);
		tagByName.put("OverlayDescriptorGray",TagFromName.OverlayDescriptorGray);
		tagByName.put("OverlayDescriptorRed",TagFromName.OverlayDescriptorRed);
		tagByName.put("OverlayDescriptorGreen",TagFromName.OverlayDescriptorGreen);
		tagByName.put("OverlayDescriptorBlue",TagFromName.OverlayDescriptorBlue);
		tagByName.put("OverlayGray",TagFromName.OverlayGray);
		tagByName.put("OverlayRed",TagFromName.OverlayRed);
		tagByName.put("OverlayGreen",TagFromName.OverlayGreen);
		tagByName.put("OverlayBlue",TagFromName.OverlayBlue);
		tagByName.put("ROIArea",TagFromName.ROIArea);
		tagByName.put("ROIMean",TagFromName.ROIMean);
		tagByName.put("ROIStandardDeviation",TagFromName.ROIStandardDeviation);
		tagByName.put("OverlayLabel",TagFromName.OverlayLabel);
		tagByName.put("OverlayData",TagFromName.OverlayData);
		tagByName.put("OverlayComments",TagFromName.OverlayComments);
		tagByName.put("FloatPixelData",TagFromName.FloatPixelData);
		tagByName.put("DoubleFloatPixelData",TagFromName.DoubleFloatPixelData);
		tagByName.put("PixelData",TagFromName.PixelData);
		tagByName.put("CoefficientsSDVN",TagFromName.CoefficientsSDVN);
		tagByName.put("CoefficientsSDHN",TagFromName.CoefficientsSDHN);
		tagByName.put("CoefficientsSDDN",TagFromName.CoefficientsSDDN);
		tagByName.put("VariablePixelData",TagFromName.VariablePixelData);
		tagByName.put("VariableNextDataGroup",TagFromName.VariableNextDataGroup);
		tagByName.put("VariableCoefficientsSDVN",TagFromName.VariableCoefficientsSDVN);
		tagByName.put("VariableCoefficientsSDHN",TagFromName.VariableCoefficientsSDHN);
		tagByName.put("VariableCoefficientsSDDN",TagFromName.VariableCoefficientsSDDN);
		tagByName.put("DigitalSignaturesSequence",TagFromName.DigitalSignaturesSequence);
		tagByName.put("DataSetTrailingPadding",TagFromName.DataSetTrailingPadding);
		
		// include old toolkit keywords prior to CP 850 establishment of official keywords, in case old code uses them ...
		
		tagByName.put("FileSetCharacterSet",TagFromName.SpecificCharacterSetOfFileSetDescriptorFile);
		tagByName.put("RootDirectoryFirstRecord",TagFromName.OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity);
		tagByName.put("RootDirectoryLastRecord",TagFromName.OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity);
		tagByName.put("NextDirectoryRecordOffset",TagFromName.OffsetOfTheNextDirectoryRecord);
		tagByName.put("LowerLevelDirectoryOffset",TagFromName.OffsetOfReferencedLowerLevelDirectoryEntity);
		tagByName.put("ReferringPhysicianTelephoneNumber",TagFromName.ReferringPhysicianTelephoneNumbers);
		tagByName.put("PhysicianOfRecord",TagFromName.PhysiciansOfRecord);
		tagByName.put("PhysicianOfRecordIdentificationSequence",TagFromName.PhysiciansOfRecordIdentificationSequence);
		tagByName.put("PhysicianReadingStudy",TagFromName.NameOfPhysiciansReadingStudy);
		tagByName.put("PhysicianReadingStudyIdentificationSequence",TagFromName.PhysiciansReadingStudyIdentificationSequence);
		tagByName.put("OperatorName",TagFromName.OperatorsName);
		tagByName.put("OldLossyImageCompression",TagFromName.LossyImageCompressionRetired);
		tagByName.put("EventElapsedTime",TagFromName.EventElapsedTimes);
		tagByName.put("EventTimerName",TagFromName.EventTimerNames);
		tagByName.put("OtherPatientID",TagFromName.OtherPatientIDs);
		tagByName.put("OtherPatientName",TagFromName.OtherPatientNames);
		tagByName.put("OtherPatientIDSequence",TagFromName.OtherPatientIDsSequence);
		tagByName.put("PatientTelephoneNumber",TagFromName.PatientTelephoneNumbers);
		tagByName.put("EchoNumber",TagFromName.EchoNumbers);
		tagByName.put("SecondaryCaptureDeviceSoftwareVersion",TagFromName.SecondaryCaptureDeviceSoftwareVersions);
		tagByName.put("SoftwareVersion",TagFromName.SoftwareVersions);
		tagByName.put("FocalSpot",TagFromName.FocalSpots);
		tagByName.put("VerticesOfPolygonalShutter",TagFromName.VerticesOfThePolygonalShutter);
		tagByName.put("VerticesOfPolygonalCollimator",TagFromName.VerticesOfThePolygonalCollimator);
		tagByName.put("MultiplanarExcitation",TagFromName.MultiPlanarExcitation);
		tagByName.put("MetaboliteCodeSequence",TagFromName.MetaboliteMapCodeSequence);
		tagByName.put("ChemicalShiftMinimumIntegrationLimitInPPM",TagFromName.ChemicalShiftMinimumIntegrationLimitInppm);
		tagByName.put("ChemicalShiftMaximumIntegrationLimitInPPM",TagFromName.ChemicalShiftMaximumIntegrationLimitInppm);
		tagByName.put("VerticesOfPolygonalExposureControlSensingRegion",TagFromName.VerticesOfThePolygonalExposureControlSensingRegion);
		tagByName.put("DiffusionBMatrixValueXX",TagFromName.DiffusionBValueXX);
		tagByName.put("DiffusionBMatrixValueXY",TagFromName.DiffusionBValueXY);
		tagByName.put("DiffusionBMatrixValueXZ",TagFromName.DiffusionBValueXZ);
		tagByName.put("DiffusionBMatrixValueYY",TagFromName.DiffusionBValueYY);
		tagByName.put("DiffusionBMatrixValueYZ",TagFromName.DiffusionBValueYZ);
		tagByName.put("DiffusionBMatrixValueZZ",TagFromName.DiffusionBValueZZ);
		tagByName.put("ReportNumberTrial",TagFromName.ReportNumber);
		tagByName.put("PatientFrameofReferenceSource",TagFromName.PatientFrameOfReferenceSource);
		tagByName.put("PatientEyeMovementCommandedCodeSequence",TagFromName.PatientEyeMovementCommandCodeSequence);
		tagByName.put("AxialLengthOfEye",TagFromName.AxialLengthOfTheEye);
		tagByName.put("SmallestPixelValueInPlane",TagFromName.SmallestImagePixelValueInPlane);
		tagByName.put("LargestPixelValueInPlane",TagFromName.LargestImagePixelValueInPlane);
		tagByName.put("BiplaneAcquisitionSequence",TagFromName.BiPlaneAcquisitionSequence);
		tagByName.put("MaskPointer",TagFromName.MaskPointers);
		tagByName.put("MultiframePresentationSequence",TagFromName.MultiFramePresentationSequence);
		tagByName.put("CommentsOnPerformedProcedureStep",TagFromName.CommentsOnThePerformedProcedureStep);
		tagByName.put("CommentsOnScheduledProcedureStep",TagFromName.CommentsOnTheScheduledProcedureStep);
		tagByName.put("ReasonForRequestedProcedure",TagFromName.ReasonForTheRequestedProcedure);
		tagByName.put("PlacerOrderNumberOfProcedure",TagFromName.PlacerOrderNumberProcedure);
		tagByName.put("FillerOrderNumberOfProcedure",TagFromName.FillerOrderNumberProcedure);
		tagByName.put("ReasonForImagingServiceRequest",TagFromName.ReasonForTheImagingServiceRequest);
		tagByName.put("PlacerOrderNumberOfImagingServiceRequestRetired",TagFromName.PlacerOrderNumberImagingServiceRequestRetired);
		tagByName.put("FillerOrderNumberOfImagingServiceRequestRetired",TagFromName.FillerOrderNumberImagingServiceRequestRetired);
		tagByName.put("PlacerOrderNumberOfImagingServiceRequest",TagFromName.PlacerOrderNumberImagingServiceRequest);
		tagByName.put("FillerOrderNumberOfImagingServiceRequest",TagFromName.FillerOrderNumberImagingServiceRequest);
		tagByName.put("ScheduledProcedureStepStartDateAndTime",TagFromName.ScheduledProcedureStepStartDateTime);
		tagByName.put("ScheduledProcedureStepModificationDateAndTime",TagFromName.ScheduledProcedureStepModificationDateTime);
		tagByName.put("ExpectedCompletionDateAndTime",TagFromName.ExpectedCompletionDateTime);
		tagByName.put("HumanPerformersOrganization",TagFromName.HumanPerformerOrganization);
		tagByName.put("HumanPerformersName",TagFromName.HumanPerformerName);
		tagByName.put("ImageRotationTrial",TagFromName.ImageRotationRetired);
		tagByName.put("ContentCreatorsName",TagFromName.ContentCreatorName);
		tagByName.put("ContentCreatorsIdentificationCodeSequence",TagFromName.ContentCreatorIdentificationCodeSequence);
		tagByName.put("PseudocolorType",TagFromName.PseudoColorType);
		tagByName.put("TopicKeyWords",TagFromName.TopicKeywords);
		tagByName.put("SOPAuthorizationDateAndTime",TagFromName.SOPAuthorizationDateTime);
		tagByName.put("ReferencedPrintJobSequencePull",TagFromName.ReferencedPrintJobSequencePullStoredPrint);
		tagByName.put("ReferencedPrintJobSequenceQueue",TagFromName.ReferencedPrintJobSequence);
		
	}

	protected void createNameByTag() {

		nameByTag = new HashMap(100);

		nameByTag.put(TagFromName.CommandGroupLength,"CommandGroupLength");
		nameByTag.put(TagFromName.CommandLengthToEnd,"CommandLengthToEnd");
		nameByTag.put(TagFromName.AffectedSOPClassUID,"AffectedSOPClassUID");
		nameByTag.put(TagFromName.RequestedSOPClassUID,"RequestedSOPClassUID");
		nameByTag.put(TagFromName.CommandRecognitionCode,"CommandRecognitionCode");
		nameByTag.put(TagFromName.CommandField,"CommandField");
		nameByTag.put(TagFromName.MessageID,"MessageID");
		nameByTag.put(TagFromName.MessageIDBeingRespondedTo,"MessageIDBeingRespondedTo");
		nameByTag.put(TagFromName.Initiator,"Initiator");
		nameByTag.put(TagFromName.Receiver,"Receiver");
		nameByTag.put(TagFromName.FindLocation,"FindLocation");
		nameByTag.put(TagFromName.MoveDestination,"MoveDestination");
		nameByTag.put(TagFromName.Priority,"Priority");
		nameByTag.put(TagFromName.CommandDataSetType,"CommandDataSetType");
		nameByTag.put(TagFromName.NumberOfMatches,"NumberOfMatches");
		nameByTag.put(TagFromName.ResponseSequenceNumber,"ResponseSequenceNumber");
		nameByTag.put(TagFromName.Status,"Status");
		nameByTag.put(TagFromName.OffendingElement,"OffendingElement");
		nameByTag.put(TagFromName.ErrorComment,"ErrorComment");
		nameByTag.put(TagFromName.ErrorID,"ErrorID");
		nameByTag.put(TagFromName.AffectedSOPInstanceUID,"AffectedSOPInstanceUID");
		nameByTag.put(TagFromName.RequestedSOPInstanceUID,"RequestedSOPInstanceUID");
		nameByTag.put(TagFromName.EventTypeID,"EventTypeID");
		nameByTag.put(TagFromName.AttributeIdentifierList,"AttributeIdentifierList");
		nameByTag.put(TagFromName.ActionTypeID,"ActionTypeID");
		nameByTag.put(TagFromName.NumberOfRemainingSuboperations,"NumberOfRemainingSuboperations");
		nameByTag.put(TagFromName.NumberOfCompletedSuboperations,"NumberOfCompletedSuboperations");
		nameByTag.put(TagFromName.NumberOfFailedSuboperations,"NumberOfFailedSuboperations");
		nameByTag.put(TagFromName.NumberOfWarningSuboperations,"NumberOfWarningSuboperations");
		nameByTag.put(TagFromName.MoveOriginatorApplicationEntityTitle,"MoveOriginatorApplicationEntityTitle");
		nameByTag.put(TagFromName.MoveOriginatorMessageID,"MoveOriginatorMessageID");
		nameByTag.put(TagFromName.DialogReceiver,"DialogReceiver");
		nameByTag.put(TagFromName.TerminalType,"TerminalType");
		nameByTag.put(TagFromName.MessageSetID,"MessageSetID");
		nameByTag.put(TagFromName.EndMessageID,"EndMessageID");
		nameByTag.put(TagFromName.DisplayFormat,"DisplayFormat");
		nameByTag.put(TagFromName.PagePositionID,"PagePositionID");
		nameByTag.put(TagFromName.TextFormatID,"TextFormatID");
		nameByTag.put(TagFromName.NormalReverse,"NormalReverse");
		nameByTag.put(TagFromName.AddGrayScale,"AddGrayScale");
		nameByTag.put(TagFromName.Borders,"Borders");
		nameByTag.put(TagFromName.Copies,"Copies");
		nameByTag.put(TagFromName.CommandMagnificationType,"CommandMagnificationType");
		nameByTag.put(TagFromName.Erase,"Erase");
		nameByTag.put(TagFromName.Print,"Print");
		nameByTag.put(TagFromName.Overlays,"Overlays");
		nameByTag.put(TagFromName.FileMetaInformationGroupLength,"FileMetaInformationGroupLength");
		nameByTag.put(TagFromName.FileMetaInformationVersion,"FileMetaInformationVersion");
		nameByTag.put(TagFromName.MediaStorageSOPClassUID,"MediaStorageSOPClassUID");
		nameByTag.put(TagFromName.MediaStorageSOPInstanceUID,"MediaStorageSOPInstanceUID");
		nameByTag.put(TagFromName.TransferSyntaxUID,"TransferSyntaxUID");
		nameByTag.put(TagFromName.ImplementationClassUID,"ImplementationClassUID");
		nameByTag.put(TagFromName.ImplementationVersionName,"ImplementationVersionName");
		nameByTag.put(TagFromName.SourceApplicationEntityTitle,"SourceApplicationEntityTitle");
		nameByTag.put(TagFromName.SendingApplicationEntityTitle,"SendingApplicationEntityTitle");
		nameByTag.put(TagFromName.ReceivingApplicationEntityTitle,"ReceivingApplicationEntityTitle");
		nameByTag.put(TagFromName.PrivateInformationCreatorUID,"PrivateInformationCreatorUID");
		nameByTag.put(TagFromName.PrivateInformation,"PrivateInformation");
		nameByTag.put(TagFromName.FileSetID,"FileSetID");
		nameByTag.put(TagFromName.FileSetDescriptorFileID,"FileSetDescriptorFileID");
		nameByTag.put(TagFromName.SpecificCharacterSetOfFileSetDescriptorFile,"SpecificCharacterSetOfFileSetDescriptorFile");
		nameByTag.put(TagFromName.OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity,"OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity");
		nameByTag.put(TagFromName.OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity,"OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity");
		nameByTag.put(TagFromName.FileSetConsistencyFlag,"FileSetConsistencyFlag");
		nameByTag.put(TagFromName.DirectoryRecordSequence,"DirectoryRecordSequence");
		nameByTag.put(TagFromName.OffsetOfTheNextDirectoryRecord,"OffsetOfTheNextDirectoryRecord");
		nameByTag.put(TagFromName.RecordInUseFlag,"RecordInUseFlag");
		nameByTag.put(TagFromName.OffsetOfReferencedLowerLevelDirectoryEntity,"OffsetOfReferencedLowerLevelDirectoryEntity");
		nameByTag.put(TagFromName.DirectoryRecordType,"DirectoryRecordType");
		nameByTag.put(TagFromName.PrivateRecordUID,"PrivateRecordUID");
		nameByTag.put(TagFromName.ReferencedFileID,"ReferencedFileID");
		nameByTag.put(TagFromName.MRDRDirectoryRecordOffset,"MRDRDirectoryRecordOffset");
		nameByTag.put(TagFromName.ReferencedSOPClassUIDInFile,"ReferencedSOPClassUIDInFile");
		nameByTag.put(TagFromName.ReferencedSOPInstanceUIDInFile,"ReferencedSOPInstanceUIDInFile");
		nameByTag.put(TagFromName.ReferencedTransferSyntaxUIDInFile,"ReferencedTransferSyntaxUIDInFile");
		nameByTag.put(TagFromName.ReferencedRelatedGeneralSOPClassUIDInFile,"ReferencedRelatedGeneralSOPClassUIDInFile");
		nameByTag.put(TagFromName.NumberOfReferences,"NumberOfReferences");
		nameByTag.put(TagFromName.LengthToEnd,"LengthToEnd");
		nameByTag.put(TagFromName.SpecificCharacterSet,"SpecificCharacterSet");
		nameByTag.put(TagFromName.LanguageCodeSequence,"LanguageCodeSequence");
		nameByTag.put(TagFromName.ImageType,"ImageType");
		nameByTag.put(TagFromName.RecognitionCode,"RecognitionCode");
		nameByTag.put(TagFromName.InstanceCreationDate,"InstanceCreationDate");
		nameByTag.put(TagFromName.InstanceCreationTime,"InstanceCreationTime");
		nameByTag.put(TagFromName.InstanceCreatorUID,"InstanceCreatorUID");
		nameByTag.put(TagFromName.InstanceCoercionDateTime,"InstanceCoercionDateTime");
		nameByTag.put(TagFromName.SOPClassUID,"SOPClassUID");
		nameByTag.put(TagFromName.SOPInstanceUID,"SOPInstanceUID");
		nameByTag.put(TagFromName.RelatedGeneralSOPClassUID,"RelatedGeneralSOPClassUID");
		nameByTag.put(TagFromName.OriginalSpecializedSOPClassUID,"OriginalSpecializedSOPClassUID");
		nameByTag.put(TagFromName.StudyDate,"StudyDate");
		nameByTag.put(TagFromName.SeriesDate,"SeriesDate");
		nameByTag.put(TagFromName.AcquisitionDate,"AcquisitionDate");
		nameByTag.put(TagFromName.ContentDate,"ContentDate");
		nameByTag.put(TagFromName.OverlayDate,"OverlayDate");
		nameByTag.put(TagFromName.CurveDate,"CurveDate");
		nameByTag.put(TagFromName.AcquisitionDateTime,"AcquisitionDateTime");
		nameByTag.put(TagFromName.StudyTime,"StudyTime");
		nameByTag.put(TagFromName.SeriesTime,"SeriesTime");
		nameByTag.put(TagFromName.AcquisitionTime,"AcquisitionTime");
		nameByTag.put(TagFromName.ContentTime,"ContentTime");
		nameByTag.put(TagFromName.OverlayTime,"OverlayTime");
		nameByTag.put(TagFromName.CurveTime,"CurveTime");
		nameByTag.put(TagFromName.DataSetType,"DataSetType");
		nameByTag.put(TagFromName.DataSetSubtype,"DataSetSubtype");
		nameByTag.put(TagFromName.NuclearMedicineSeriesType,"NuclearMedicineSeriesType");
		nameByTag.put(TagFromName.AccessionNumber,"AccessionNumber");
		nameByTag.put(TagFromName.IssuerOfAccessionNumberSequence,"IssuerOfAccessionNumberSequence");
		nameByTag.put(TagFromName.QueryRetrieveLevel,"QueryRetrieveLevel");
		nameByTag.put(TagFromName.QueryRetrieveView,"QueryRetrieveView");
		nameByTag.put(TagFromName.RetrieveAETitle,"RetrieveAETitle");
		nameByTag.put(TagFromName.StationAETitle,"StationAETitle");
		nameByTag.put(TagFromName.InstanceAvailability,"InstanceAvailability");
		nameByTag.put(TagFromName.FailedSOPInstanceUIDList,"FailedSOPInstanceUIDList");
		nameByTag.put(TagFromName.Modality,"Modality");
		nameByTag.put(TagFromName.ModalitiesInStudy,"ModalitiesInStudy");
		nameByTag.put(TagFromName.SOPClassesInStudy,"SOPClassesInStudy");
		nameByTag.put(TagFromName.AnatomicRegionsInStudyCodeSequence,"AnatomicRegionsInStudyCodeSequence");
		nameByTag.put(TagFromName.ConversionType,"ConversionType");
		nameByTag.put(TagFromName.PresentationIntentType,"PresentationIntentType");
		nameByTag.put(TagFromName.Manufacturer,"Manufacturer");
		nameByTag.put(TagFromName.InstitutionName,"InstitutionName");
		nameByTag.put(TagFromName.InstitutionAddress,"InstitutionAddress");
		nameByTag.put(TagFromName.InstitutionCodeSequence,"InstitutionCodeSequence");
		nameByTag.put(TagFromName.ReferringPhysicianName,"ReferringPhysicianName");
		nameByTag.put(TagFromName.ReferringPhysicianAddress,"ReferringPhysicianAddress");
		nameByTag.put(TagFromName.ReferringPhysicianTelephoneNumbers,"ReferringPhysicianTelephoneNumbers");
		nameByTag.put(TagFromName.ReferringPhysicianIdentificationSequence,"ReferringPhysicianIdentificationSequence");
		nameByTag.put(TagFromName.ConsultingPhysicianName,"ConsultingPhysicianName");
		nameByTag.put(TagFromName.ConsultingPhysicianIdentificationSequence,"ConsultingPhysicianIdentificationSequence");
		nameByTag.put(TagFromName.CodeValue,"CodeValue");
		nameByTag.put(TagFromName.ExtendedCodeValue,"ExtendedCodeValue");
		nameByTag.put(TagFromName.CodingSchemeDesignator,"CodingSchemeDesignator");
		nameByTag.put(TagFromName.CodingSchemeVersion,"CodingSchemeVersion");
		nameByTag.put(TagFromName.CodeMeaning,"CodeMeaning");
		nameByTag.put(TagFromName.MappingResource,"MappingResource");
		nameByTag.put(TagFromName.ContextGroupVersion,"ContextGroupVersion");
		nameByTag.put(TagFromName.ContextGroupLocalVersion,"ContextGroupLocalVersion");
		nameByTag.put(TagFromName.ExtendedCodeMeaning,"ExtendedCodeMeaning");
		nameByTag.put(TagFromName.CodingSchemeResourcesSequence,"CodingSchemeResourcesSequence");
		nameByTag.put(TagFromName.CodingSchemeURLType,"CodingSchemeURLType");
		nameByTag.put(TagFromName.ContextGroupExtensionFlag,"ContextGroupExtensionFlag");
		nameByTag.put(TagFromName.CodingSchemeUID,"CodingSchemeUID");
		nameByTag.put(TagFromName.ContextGroupExtensionCreatorUID,"ContextGroupExtensionCreatorUID");
		nameByTag.put(TagFromName.CodingSchemeURL,"CodingSchemeURL");
		nameByTag.put(TagFromName.ContextIdentifier,"ContextIdentifier");
		nameByTag.put(TagFromName.CodingSchemeIdentificationSequence,"CodingSchemeIdentificationSequence");
		nameByTag.put(TagFromName.CodingSchemeRegistry,"CodingSchemeRegistry");
		nameByTag.put(TagFromName.CodingSchemeExternalID,"CodingSchemeExternalID");
		nameByTag.put(TagFromName.CodingSchemeName,"CodingSchemeName");
		nameByTag.put(TagFromName.CodingSchemeResponsibleOrganization,"CodingSchemeResponsibleOrganization");
		nameByTag.put(TagFromName.ContextUID,"ContextUID");
		nameByTag.put(TagFromName.MappingResourceUID,"MappingResourceUID");
		nameByTag.put(TagFromName.LongCodeValue,"LongCodeValue");
		nameByTag.put(TagFromName.URNCodeValue,"URNCodeValue");
		nameByTag.put(TagFromName.EquivalentCodeSequence,"EquivalentCodeSequence");
		nameByTag.put(TagFromName.MappingResourceName,"MappingResourceName");
		nameByTag.put(TagFromName.ContextGroupIdentificationSequence,"ContextGroupIdentificationSequence");
		nameByTag.put(TagFromName.MappingResourceIdentificationSequence,"MappingResourceIdentificationSequence");
		nameByTag.put(TagFromName.TimezoneOffsetFromUTC,"TimezoneOffsetFromUTC");
		nameByTag.put(TagFromName.ResponsibleGroupCodeSequence,"ResponsibleGroupCodeSequence");
		nameByTag.put(TagFromName.EquipmentModality,"EquipmentModality");
		nameByTag.put(TagFromName.ManufacturerRelatedModelGroup,"ManufacturerRelatedModelGroup");
		nameByTag.put(TagFromName.PrivateDataElementCharacteristicsSequence,"PrivateDataElementCharacteristicsSequence");
		nameByTag.put(TagFromName.PrivateGroupReference,"PrivateGroupReference");
		nameByTag.put(TagFromName.PrivateCreatorReference,"PrivateCreatorReference");
		nameByTag.put(TagFromName.BlockIdentifyingInformationStatus,"BlockIdentifyingInformationStatus");
		nameByTag.put(TagFromName.NonidentifyingPrivateElements,"NonidentifyingPrivateElements");
		nameByTag.put(TagFromName.DeidentificationActionSequence,"DeidentificationActionSequence");
		nameByTag.put(TagFromName.IdentifyingPrivateElements,"IdentifyingPrivateElements");
		nameByTag.put(TagFromName.DeidentificationAction,"DeidentificationAction");
		nameByTag.put(TagFromName.PrivateDataElement,"PrivateDataElement");
		nameByTag.put(TagFromName.PrivateDataElementValueMultiplicity,"PrivateDataElementValueMultiplicity");
		nameByTag.put(TagFromName.PrivateDataElementValueRepresentation,"PrivateDataElementValueRepresentation");
		nameByTag.put(TagFromName.PrivateDataElementNumberOfItems,"PrivateDataElementNumberOfItems");
		nameByTag.put(TagFromName.PrivateDataElementName,"PrivateDataElementName");
		nameByTag.put(TagFromName.PrivateDataElementKeyword,"PrivateDataElementKeyword");
		nameByTag.put(TagFromName.PrivateDataElementDescription,"PrivateDataElementDescription");
		nameByTag.put(TagFromName.PrivateDataElementEncoding,"PrivateDataElementEncoding");
		nameByTag.put(TagFromName.PrivateDataElementDefinitionSequence,"PrivateDataElementDefinitionSequence");
		nameByTag.put(TagFromName.NetworkID,"NetworkID");
		nameByTag.put(TagFromName.StationName,"StationName");
		nameByTag.put(TagFromName.StudyDescription,"StudyDescription");
		nameByTag.put(TagFromName.ProcedureCodeSequence,"ProcedureCodeSequence");
		nameByTag.put(TagFromName.SeriesDescription,"SeriesDescription");
		nameByTag.put(TagFromName.SeriesDescriptionCodeSequence,"SeriesDescriptionCodeSequence");
		nameByTag.put(TagFromName.InstitutionalDepartmentName,"InstitutionalDepartmentName");
		nameByTag.put(TagFromName.PhysiciansOfRecord,"PhysiciansOfRecord");
		nameByTag.put(TagFromName.PhysiciansOfRecordIdentificationSequence,"PhysiciansOfRecordIdentificationSequence");
		nameByTag.put(TagFromName.PerformingPhysicianName,"PerformingPhysicianName");
		nameByTag.put(TagFromName.PerformingPhysicianIdentificationSequence,"PerformingPhysicianIdentificationSequence");
		nameByTag.put(TagFromName.NameOfPhysiciansReadingStudy,"NameOfPhysiciansReadingStudy");
		nameByTag.put(TagFromName.PhysiciansReadingStudyIdentificationSequence,"PhysiciansReadingStudyIdentificationSequence");
		nameByTag.put(TagFromName.OperatorsName,"OperatorsName");
		nameByTag.put(TagFromName.OperatorIdentificationSequence,"OperatorIdentificationSequence");
		nameByTag.put(TagFromName.AdmittingDiagnosesDescription,"AdmittingDiagnosesDescription");
		nameByTag.put(TagFromName.AdmittingDiagnosesCodeSequence,"AdmittingDiagnosesCodeSequence");
		nameByTag.put(TagFromName.ManufacturerModelName,"ManufacturerModelName");
		nameByTag.put(TagFromName.ReferencedResultsSequence,"ReferencedResultsSequence");
		nameByTag.put(TagFromName.ReferencedStudySequence,"ReferencedStudySequence");
		nameByTag.put(TagFromName.ReferencedPerformedProcedureStepSequence,"ReferencedPerformedProcedureStepSequence");
		nameByTag.put(TagFromName.ReferencedSeriesSequence,"ReferencedSeriesSequence");
		nameByTag.put(TagFromName.ReferencedPatientSequence,"ReferencedPatientSequence");
		nameByTag.put(TagFromName.ReferencedVisitSequence,"ReferencedVisitSequence");
		nameByTag.put(TagFromName.ReferencedOverlaySequence,"ReferencedOverlaySequence");
		nameByTag.put(TagFromName.ReferencedStereometricInstanceSequence,"ReferencedStereometricInstanceSequence");
		nameByTag.put(TagFromName.ReferencedWaveformSequence,"ReferencedWaveformSequence");
		nameByTag.put(TagFromName.ReferencedImageSequence,"ReferencedImageSequence");
		nameByTag.put(TagFromName.ReferencedCurveSequence,"ReferencedCurveSequence");
		nameByTag.put(TagFromName.ReferencedInstanceSequence,"ReferencedInstanceSequence");
		nameByTag.put(TagFromName.ReferencedRealWorldValueMappingInstanceSequence,"ReferencedRealWorldValueMappingInstanceSequence");
		nameByTag.put(TagFromName.ReferencedSOPClassUID,"ReferencedSOPClassUID");
		nameByTag.put(TagFromName.ReferencedSOPInstanceUID,"ReferencedSOPInstanceUID");
		nameByTag.put(TagFromName.DefinitionSourceSequence,"DefinitionSourceSequence");
		nameByTag.put(TagFromName.SOPClassesSupported,"SOPClassesSupported");
		nameByTag.put(TagFromName.ReferencedFrameNumber,"ReferencedFrameNumber");
		nameByTag.put(TagFromName.SimpleFrameList,"SimpleFrameList");
		nameByTag.put(TagFromName.CalculatedFrameList,"CalculatedFrameList");
		nameByTag.put(TagFromName.TimeRange,"TimeRange");
		nameByTag.put(TagFromName.FrameExtractionSequence,"FrameExtractionSequence");
		nameByTag.put(TagFromName.MultiFrameSourceSOPInstanceUID,"MultiFrameSourceSOPInstanceUID");
		nameByTag.put(TagFromName.RetrieveURL,"RetrieveURL");
		nameByTag.put(TagFromName.TransactionUID,"TransactionUID");
		nameByTag.put(TagFromName.WarningReason,"WarningReason");
		nameByTag.put(TagFromName.FailureReason,"FailureReason");
		nameByTag.put(TagFromName.FailedSOPSequence,"FailedSOPSequence");
		nameByTag.put(TagFromName.ReferencedSOPSequence,"ReferencedSOPSequence");
		nameByTag.put(TagFromName.OtherFailuresSequence,"OtherFailuresSequence");
		nameByTag.put(TagFromName.StudiesContainingOtherReferencedInstancesSequence,"StudiesContainingOtherReferencedInstancesSequence");
		nameByTag.put(TagFromName.RelatedSeriesSequence,"RelatedSeriesSequence");
		nameByTag.put(TagFromName.LossyImageCompressionRetired,"LossyImageCompressionRetired");
		nameByTag.put(TagFromName.DerivationDescription,"DerivationDescription");
		nameByTag.put(TagFromName.SourceImageSequence,"SourceImageSequence");
		nameByTag.put(TagFromName.StageName,"StageName");
		nameByTag.put(TagFromName.StageNumber,"StageNumber");
		nameByTag.put(TagFromName.NumberOfStages,"NumberOfStages");
		nameByTag.put(TagFromName.ViewName,"ViewName");
		nameByTag.put(TagFromName.ViewNumber,"ViewNumber");
		nameByTag.put(TagFromName.NumberOfEventTimers,"NumberOfEventTimers");
		nameByTag.put(TagFromName.NumberOfViewsInStage,"NumberOfViewsInStage");
		nameByTag.put(TagFromName.EventElapsedTimes,"EventElapsedTimes");
		nameByTag.put(TagFromName.EventTimerNames,"EventTimerNames");
		nameByTag.put(TagFromName.EventTimerSequence,"EventTimerSequence");
		nameByTag.put(TagFromName.EventTimeOffset,"EventTimeOffset");
		nameByTag.put(TagFromName.EventCodeSequence,"EventCodeSequence");
		nameByTag.put(TagFromName.StartTrim,"StartTrim");
		nameByTag.put(TagFromName.StopTrim,"StopTrim");
		nameByTag.put(TagFromName.RecommendedDisplayFrameRate,"RecommendedDisplayFrameRate");
		nameByTag.put(TagFromName.TransducerPosition,"TransducerPosition");
		nameByTag.put(TagFromName.TransducerOrientation,"TransducerOrientation");
		nameByTag.put(TagFromName.AnatomicStructure,"AnatomicStructure");
		nameByTag.put(TagFromName.AnatomicRegionSequence,"AnatomicRegionSequence");
		nameByTag.put(TagFromName.AnatomicRegionModifierSequence,"AnatomicRegionModifierSequence");
		nameByTag.put(TagFromName.PrimaryAnatomicStructureSequence,"PrimaryAnatomicStructureSequence");
		nameByTag.put(TagFromName.AnatomicStructureSpaceOrRegionSequence,"AnatomicStructureSpaceOrRegionSequence");
		nameByTag.put(TagFromName.PrimaryAnatomicStructureModifierSequence,"PrimaryAnatomicStructureModifierSequence");
		nameByTag.put(TagFromName.TransducerPositionSequence,"TransducerPositionSequence");
		nameByTag.put(TagFromName.TransducerPositionModifierSequence,"TransducerPositionModifierSequence");
		nameByTag.put(TagFromName.TransducerOrientationSequence,"TransducerOrientationSequence");
		nameByTag.put(TagFromName.TransducerOrientationModifierSequence,"TransducerOrientationModifierSequence");
		nameByTag.put(TagFromName.AnatomicStructureSpaceOrRegionCodeSequenceTrial,"AnatomicStructureSpaceOrRegionCodeSequenceTrial");
		nameByTag.put(TagFromName.AnatomicPortalOfEntranceCodeSequenceTrial,"AnatomicPortalOfEntranceCodeSequenceTrial");
		nameByTag.put(TagFromName.AnatomicApproachDirectionCodeSequenceTrial,"AnatomicApproachDirectionCodeSequenceTrial");
		nameByTag.put(TagFromName.AnatomicPerspectiveDescriptionTrial,"AnatomicPerspectiveDescriptionTrial");
		nameByTag.put(TagFromName.AnatomicPerspectiveCodeSequenceTrial,"AnatomicPerspectiveCodeSequenceTrial");
		nameByTag.put(TagFromName.AnatomicLocationOfExaminingInstrumentDescriptionTrial,"AnatomicLocationOfExaminingInstrumentDescriptionTrial");
		nameByTag.put(TagFromName.AnatomicLocationOfExaminingInstrumentCodeSequenceTrial,"AnatomicLocationOfExaminingInstrumentCodeSequenceTrial");
		nameByTag.put(TagFromName.AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial,"AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial");
		nameByTag.put(TagFromName.OnAxisBackgroundAnatomicStructureCodeSequenceTrial,"OnAxisBackgroundAnatomicStructureCodeSequenceTrial");
		nameByTag.put(TagFromName.AlternateRepresentationSequence,"AlternateRepresentationSequence");
		nameByTag.put(TagFromName.IrradiationEventUID,"IrradiationEventUID");
		nameByTag.put(TagFromName.SourceIrradiationEventSequence,"SourceIrradiationEventSequence");
		nameByTag.put(TagFromName.RadiopharmaceuticalAdministrationEventUID,"RadiopharmaceuticalAdministrationEventUID");
		nameByTag.put(TagFromName.IdentifyingComments,"IdentifyingComments");
		nameByTag.put(TagFromName.FrameType,"FrameType");
		nameByTag.put(TagFromName.ReferencedImageEvidenceSequence,"ReferencedImageEvidenceSequence");
		nameByTag.put(TagFromName.ReferencedRawDataSequence,"ReferencedRawDataSequence");
		nameByTag.put(TagFromName.CreatorVersionUID,"CreatorVersionUID");
		nameByTag.put(TagFromName.DerivationImageSequence,"DerivationImageSequence");
		nameByTag.put(TagFromName.SourceImageEvidenceSequence,"SourceImageEvidenceSequence");
		nameByTag.put(TagFromName.PixelPresentation,"PixelPresentation");
		nameByTag.put(TagFromName.VolumetricProperties,"VolumetricProperties");
		nameByTag.put(TagFromName.VolumeBasedCalculationTechnique,"VolumeBasedCalculationTechnique");
		nameByTag.put(TagFromName.ComplexImageComponent,"ComplexImageComponent");
		nameByTag.put(TagFromName.AcquisitionContrast,"AcquisitionContrast");
		nameByTag.put(TagFromName.DerivationCodeSequence,"DerivationCodeSequence");
		nameByTag.put(TagFromName.ReferencedPresentationStateSequence,"ReferencedPresentationStateSequence");
		nameByTag.put(TagFromName.ReferencedOtherPlaneSequence,"ReferencedOtherPlaneSequence");
		nameByTag.put(TagFromName.FrameDisplaySequence,"FrameDisplaySequence");
		nameByTag.put(TagFromName.RecommendedDisplayFrameRateInFloat,"RecommendedDisplayFrameRateInFloat");
		nameByTag.put(TagFromName.SkipFrameRangeFlag,"SkipFrameRangeFlag");
		nameByTag.put(TagFromName.PatientName,"PatientName");
		nameByTag.put(TagFromName.PatientID,"PatientID");
		nameByTag.put(TagFromName.IssuerOfPatientID,"IssuerOfPatientID");
		nameByTag.put(TagFromName.TypeOfPatientID,"TypeOfPatientID");
		nameByTag.put(TagFromName.IssuerOfPatientIDQualifiersSequence,"IssuerOfPatientIDQualifiersSequence");
		nameByTag.put(TagFromName.SourcePatientGroupIdentificationSequence,"SourcePatientGroupIdentificationSequence");
		nameByTag.put(TagFromName.GroupOfPatientsIdentificationSequence,"GroupOfPatientsIdentificationSequence");
		nameByTag.put(TagFromName.SubjectRelativePositionInImage,"SubjectRelativePositionInImage");
		nameByTag.put(TagFromName.PatientBirthDate,"PatientBirthDate");
		nameByTag.put(TagFromName.PatientBirthTime,"PatientBirthTime");
		nameByTag.put(TagFromName.PatientSex,"PatientSex");
		nameByTag.put(TagFromName.PatientInsurancePlanCodeSequence,"PatientInsurancePlanCodeSequence");
		nameByTag.put(TagFromName.PatientPrimaryLanguageCodeSequence,"PatientPrimaryLanguageCodeSequence");
		nameByTag.put(TagFromName.PatientPrimaryLanguageModifierCodeSequence,"PatientPrimaryLanguageModifierCodeSequence");
		nameByTag.put(TagFromName.QualityControlSubject,"QualityControlSubject");
		nameByTag.put(TagFromName.QualityControlSubjectTypeCodeSequence,"QualityControlSubjectTypeCodeSequence");
		nameByTag.put(TagFromName.StrainDescription,"StrainDescription");
		nameByTag.put(TagFromName.StrainNomenclature,"StrainNomenclature");
		nameByTag.put(TagFromName.StrainStockNumber,"StrainStockNumber");
		nameByTag.put(TagFromName.StrainSourceRegistryCodeSequence,"StrainSourceRegistryCodeSequence");
		nameByTag.put(TagFromName.StrainStockSequence,"StrainStockSequence");
		nameByTag.put(TagFromName.StrainSource,"StrainSource");
		nameByTag.put(TagFromName.StrainAdditionalInformation,"StrainAdditionalInformation");
		nameByTag.put(TagFromName.StrainCodeSequence,"StrainCodeSequence");
		nameByTag.put(TagFromName.GeneticModificationsSequence,"GeneticModificationsSequence");
		nameByTag.put(TagFromName.GeneticModificationsDescription,"GeneticModificationsDescription");
		nameByTag.put(TagFromName.GeneticModificationsNomenclature,"GeneticModificationsNomenclature");
		nameByTag.put(TagFromName.GeneticModificationsCodeSequence,"GeneticModificationsCodeSequence");
		nameByTag.put(TagFromName.OtherPatientIDs,"OtherPatientIDs");
		nameByTag.put(TagFromName.OtherPatientNames,"OtherPatientNames");
		nameByTag.put(TagFromName.OtherPatientIDsSequence,"OtherPatientIDsSequence");
		nameByTag.put(TagFromName.PatientBirthName,"PatientBirthName");
		nameByTag.put(TagFromName.PatientAge,"PatientAge");
		nameByTag.put(TagFromName.PatientSize,"PatientSize");
		nameByTag.put(TagFromName.PatientSizeCodeSequence,"PatientSizeCodeSequence");
		nameByTag.put(TagFromName.PatientBodyMassIndex,"PatientBodyMassIndex");
		nameByTag.put(TagFromName.MeasuredAPDimension,"MeasuredAPDimension");
		nameByTag.put(TagFromName.MeasuredLateralDimension,"MeasuredLateralDimension");
		nameByTag.put(TagFromName.PatientWeight,"PatientWeight");
		nameByTag.put(TagFromName.PatientAddress,"PatientAddress");
		nameByTag.put(TagFromName.InsurancePlanIdentification,"InsurancePlanIdentification");
		nameByTag.put(TagFromName.PatientMotherBirthName,"PatientMotherBirthName");
		nameByTag.put(TagFromName.MilitaryRank,"MilitaryRank");
		nameByTag.put(TagFromName.BranchOfService,"BranchOfService");
		nameByTag.put(TagFromName.MedicalRecordLocator,"MedicalRecordLocator");
		nameByTag.put(TagFromName.ReferencedPatientPhotoSequence,"ReferencedPatientPhotoSequence");
		nameByTag.put(TagFromName.MedicalAlerts,"MedicalAlerts");
		nameByTag.put(TagFromName.Allergies,"Allergies");
		nameByTag.put(TagFromName.CountryOfResidence,"CountryOfResidence");
		nameByTag.put(TagFromName.RegionOfResidence,"RegionOfResidence");
		nameByTag.put(TagFromName.PatientTelephoneNumbers,"PatientTelephoneNumbers");
		nameByTag.put(TagFromName.PatientTelecomInformation,"PatientTelecomInformation");
		nameByTag.put(TagFromName.EthnicGroup,"EthnicGroup");
		nameByTag.put(TagFromName.Occupation,"Occupation");
		nameByTag.put(TagFromName.SmokingStatus,"SmokingStatus");
		nameByTag.put(TagFromName.AdditionalPatientHistory,"AdditionalPatientHistory");
		nameByTag.put(TagFromName.PregnancyStatus,"PregnancyStatus");
		nameByTag.put(TagFromName.LastMenstrualDate,"LastMenstrualDate");
		nameByTag.put(TagFromName.PatientReligiousPreference,"PatientReligiousPreference");
		nameByTag.put(TagFromName.PatientSpeciesDescription,"PatientSpeciesDescription");
		nameByTag.put(TagFromName.PatientSpeciesCodeSequence,"PatientSpeciesCodeSequence");
		nameByTag.put(TagFromName.PatientSexNeutered,"PatientSexNeutered");
		nameByTag.put(TagFromName.AnatomicalOrientationType,"AnatomicalOrientationType");
		nameByTag.put(TagFromName.PatientBreedDescription,"PatientBreedDescription");
		nameByTag.put(TagFromName.PatientBreedCodeSequence,"PatientBreedCodeSequence");
		nameByTag.put(TagFromName.BreedRegistrationSequence,"BreedRegistrationSequence");
		nameByTag.put(TagFromName.BreedRegistrationNumber,"BreedRegistrationNumber");
		nameByTag.put(TagFromName.BreedRegistryCodeSequence,"BreedRegistryCodeSequence");
		nameByTag.put(TagFromName.ResponsiblePerson,"ResponsiblePerson");
		nameByTag.put(TagFromName.ResponsiblePersonRole,"ResponsiblePersonRole");
		nameByTag.put(TagFromName.ResponsibleOrganization,"ResponsibleOrganization");
		nameByTag.put(TagFromName.PatientComments,"PatientComments");
		nameByTag.put(TagFromName.ExaminedBodyThickness,"ExaminedBodyThickness");
		nameByTag.put(TagFromName.ClinicalTrialSponsorName,"ClinicalTrialSponsorName");
		nameByTag.put(TagFromName.ClinicalTrialProtocolID,"ClinicalTrialProtocolID");
		nameByTag.put(TagFromName.ClinicalTrialProtocolName,"ClinicalTrialProtocolName");
		nameByTag.put(TagFromName.ClinicalTrialSiteID,"ClinicalTrialSiteID");
		nameByTag.put(TagFromName.ClinicalTrialSiteName,"ClinicalTrialSiteName");
		nameByTag.put(TagFromName.ClinicalTrialSubjectID,"ClinicalTrialSubjectID");
		nameByTag.put(TagFromName.ClinicalTrialSubjectReadingID,"ClinicalTrialSubjectReadingID");
		nameByTag.put(TagFromName.ClinicalTrialTimePointID,"ClinicalTrialTimePointID");
		nameByTag.put(TagFromName.ClinicalTrialTimePointDescription,"ClinicalTrialTimePointDescription");
		nameByTag.put(TagFromName.LongitudinalTemporalOffsetFromEvent,"LongitudinalTemporalOffsetFromEvent");
		nameByTag.put(TagFromName.LongitudinalTemporalEventType,"LongitudinalTemporalEventType");
		nameByTag.put(TagFromName.ClinicalTrialCoordinatingCenterName,"ClinicalTrialCoordinatingCenterName");
		nameByTag.put(TagFromName.PatientIdentityRemoved,"PatientIdentityRemoved");
		nameByTag.put(TagFromName.DeidentificationMethod,"DeidentificationMethod");
		nameByTag.put(TagFromName.DeidentificationMethodCodeSequence,"DeidentificationMethodCodeSequence");
		nameByTag.put(TagFromName.ClinicalTrialSeriesID,"ClinicalTrialSeriesID");
		nameByTag.put(TagFromName.ClinicalTrialSeriesDescription,"ClinicalTrialSeriesDescription");
		nameByTag.put(TagFromName.ClinicalTrialProtocolEthicsCommitteeName,"ClinicalTrialProtocolEthicsCommitteeName");
		nameByTag.put(TagFromName.ClinicalTrialProtocolEthicsCommitteeApprovalNumber,"ClinicalTrialProtocolEthicsCommitteeApprovalNumber");
		nameByTag.put(TagFromName.ConsentForClinicalTrialUseSequence,"ConsentForClinicalTrialUseSequence");
		nameByTag.put(TagFromName.DistributionType,"DistributionType");
		nameByTag.put(TagFromName.ConsentForDistributionFlag,"ConsentForDistributionFlag");
		nameByTag.put(TagFromName.EthicsCommitteeApprovalEffectivenessStartDate,"EthicsCommitteeApprovalEffectivenessStartDate");
		nameByTag.put(TagFromName.EthicsCommitteeApprovalEffectivenessEndDate,"EthicsCommitteeApprovalEffectivenessEndDate");
		nameByTag.put(TagFromName.CADFileFormatRetired,"CADFileFormatRetired");
		nameByTag.put(TagFromName.ComponentReferenceSystemRetired,"ComponentReferenceSystemRetired");
		nameByTag.put(TagFromName.ComponentManufacturingProcedure,"ComponentManufacturingProcedure");
		nameByTag.put(TagFromName.ComponentManufacturer,"ComponentManufacturer");
		nameByTag.put(TagFromName.MaterialThickness,"MaterialThickness");
		nameByTag.put(TagFromName.MaterialPipeDiameter,"MaterialPipeDiameter");
		nameByTag.put(TagFromName.MaterialIsolationDiameter,"MaterialIsolationDiameter");
		nameByTag.put(TagFromName.MaterialGrade,"MaterialGrade");
		nameByTag.put(TagFromName.MaterialPropertiesDescription,"MaterialPropertiesDescription");
		nameByTag.put(TagFromName.MaterialPropertiesFileFormatRetired,"MaterialPropertiesFileFormatRetired");
		nameByTag.put(TagFromName.MaterialNotes,"MaterialNotes");
		nameByTag.put(TagFromName.ComponentShape,"ComponentShape");
		nameByTag.put(TagFromName.CurvatureType,"CurvatureType");
		nameByTag.put(TagFromName.OuterDiameter,"OuterDiameter");
		nameByTag.put(TagFromName.InnerDiameter,"InnerDiameter");
		nameByTag.put(TagFromName.ComponentWelderIDs,"ComponentWelderIDs");
		nameByTag.put(TagFromName.SecondaryApprovalStatus,"SecondaryApprovalStatus");
		nameByTag.put(TagFromName.SecondaryReviewDate,"SecondaryReviewDate");
		nameByTag.put(TagFromName.SecondaryReviewTime,"SecondaryReviewTime");
		nameByTag.put(TagFromName.SecondaryReviewerName,"SecondaryReviewerName");
		nameByTag.put(TagFromName.RepairID,"RepairID");
		nameByTag.put(TagFromName.MultipleComponentApprovalSequence,"MultipleComponentApprovalSequence");
		nameByTag.put(TagFromName.OtherApprovalStatus,"OtherApprovalStatus");
		nameByTag.put(TagFromName.OtherSecondaryApprovalStatus,"OtherSecondaryApprovalStatus");
		nameByTag.put(TagFromName.ActualEnvironmentalConditions,"ActualEnvironmentalConditions");
		nameByTag.put(TagFromName.ExpiryDate,"ExpiryDate");
		nameByTag.put(TagFromName.EnvironmentalConditions,"EnvironmentalConditions");
		nameByTag.put(TagFromName.EvaluatorSequence,"EvaluatorSequence");
		nameByTag.put(TagFromName.EvaluatorNumber,"EvaluatorNumber");
		nameByTag.put(TagFromName.EvaluatorName,"EvaluatorName");
		nameByTag.put(TagFromName.EvaluationAttempt,"EvaluationAttempt");
		nameByTag.put(TagFromName.IndicationSequence,"IndicationSequence");
		nameByTag.put(TagFromName.IndicationNumber,"IndicationNumber");
		nameByTag.put(TagFromName.IndicationLabel,"IndicationLabel");
		nameByTag.put(TagFromName.IndicationDescription,"IndicationDescription");
		nameByTag.put(TagFromName.IndicationType,"IndicationType");
		nameByTag.put(TagFromName.IndicationDisposition,"IndicationDisposition");
		nameByTag.put(TagFromName.IndicationROISequence,"IndicationROISequence");
		nameByTag.put(TagFromName.IndicationPhysicalPropertySequence,"IndicationPhysicalPropertySequence");
		nameByTag.put(TagFromName.PropertyLabel,"PropertyLabel");
		nameByTag.put(TagFromName.CoordinateSystemNumberOfAxes,"CoordinateSystemNumberOfAxes");
		nameByTag.put(TagFromName.CoordinateSystemAxesSequence,"CoordinateSystemAxesSequence");
		nameByTag.put(TagFromName.CoordinateSystemAxisDescription,"CoordinateSystemAxisDescription");
		nameByTag.put(TagFromName.CoordinateSystemDataSetMapping,"CoordinateSystemDataSetMapping");
		nameByTag.put(TagFromName.CoordinateSystemAxisNumber,"CoordinateSystemAxisNumber");
		nameByTag.put(TagFromName.CoordinateSystemAxisType,"CoordinateSystemAxisType");
		nameByTag.put(TagFromName.CoordinateSystemAxisUnits,"CoordinateSystemAxisUnits");
		nameByTag.put(TagFromName.CoordinateSystemAxisValues,"CoordinateSystemAxisValues");
		nameByTag.put(TagFromName.CoordinateSystemTransformSequence,"CoordinateSystemTransformSequence");
		nameByTag.put(TagFromName.TransformDescription,"TransformDescription");
		nameByTag.put(TagFromName.TransformNumberOfAxes,"TransformNumberOfAxes");
		nameByTag.put(TagFromName.TransformOrderOfAxes,"TransformOrderOfAxes");
		nameByTag.put(TagFromName.TransformedAxisUnits,"TransformedAxisUnits");
		nameByTag.put(TagFromName.CoordinateSystemTransformRotationAndScaleMatrix,"CoordinateSystemTransformRotationAndScaleMatrix");
		nameByTag.put(TagFromName.CoordinateSystemTransformTranslationMatrix,"CoordinateSystemTransformTranslationMatrix");
		nameByTag.put(TagFromName.InternalDetectorFrameTime,"InternalDetectorFrameTime");
		nameByTag.put(TagFromName.NumberOfFramesIntegrated,"NumberOfFramesIntegrated");
		nameByTag.put(TagFromName.DetectorTemperatureSequence,"DetectorTemperatureSequence");
		nameByTag.put(TagFromName.SensorName,"SensorName");
		nameByTag.put(TagFromName.HorizontalOffsetOfSensor,"HorizontalOffsetOfSensor");
		nameByTag.put(TagFromName.VerticalOffsetOfSensor,"VerticalOffsetOfSensor");
		nameByTag.put(TagFromName.SensorTemperature,"SensorTemperature");
		nameByTag.put(TagFromName.DarkCurrentSequence,"DarkCurrentSequence");
		nameByTag.put(TagFromName.DarkCurrentCounts,"DarkCurrentCounts");
		nameByTag.put(TagFromName.GainCorrectionReferenceSequence,"GainCorrectionReferenceSequence");
		nameByTag.put(TagFromName.AirCounts,"AirCounts");
		nameByTag.put(TagFromName.KVUsedInGainCalibration,"KVUsedInGainCalibration");
		nameByTag.put(TagFromName.MAUsedInGainCalibration,"MAUsedInGainCalibration");
		nameByTag.put(TagFromName.NumberOfFramesUsedForIntegration,"NumberOfFramesUsedForIntegration");
		nameByTag.put(TagFromName.FilterMaterialUsedInGainCalibration,"FilterMaterialUsedInGainCalibration");
		nameByTag.put(TagFromName.FilterThicknessUsedInGainCalibration,"FilterThicknessUsedInGainCalibration");
		nameByTag.put(TagFromName.DateOfGainCalibration,"DateOfGainCalibration");
		nameByTag.put(TagFromName.TimeOfGainCalibration,"TimeOfGainCalibration");
		nameByTag.put(TagFromName.BadPixelImage,"BadPixelImage");
		nameByTag.put(TagFromName.CalibrationNotes,"CalibrationNotes");
		nameByTag.put(TagFromName.PulserEquipmentSequence,"PulserEquipmentSequence");
		nameByTag.put(TagFromName.PulserType,"PulserType");
		nameByTag.put(TagFromName.PulserNotes,"PulserNotes");
		nameByTag.put(TagFromName.ReceiverEquipmentSequence,"ReceiverEquipmentSequence");
		nameByTag.put(TagFromName.AmplifierType,"AmplifierType");
		nameByTag.put(TagFromName.ReceiverNotes,"ReceiverNotes");
		nameByTag.put(TagFromName.PreAmplifierEquipmentSequence,"PreAmplifierEquipmentSequence");
		nameByTag.put(TagFromName.PreAmplifierNotes,"PreAmplifierNotes");
		nameByTag.put(TagFromName.TransmitTransducerSequence,"TransmitTransducerSequence");
		nameByTag.put(TagFromName.ReceiveTransducerSequence,"ReceiveTransducerSequence");
		nameByTag.put(TagFromName.NumberOfElements,"NumberOfElements");
		nameByTag.put(TagFromName.ElementShape,"ElementShape");
		nameByTag.put(TagFromName.ElementDimensionA,"ElementDimensionA");
		nameByTag.put(TagFromName.ElementDimensionB,"ElementDimensionB");
		nameByTag.put(TagFromName.ElementPitchA,"ElementPitchA");
		nameByTag.put(TagFromName.MeasuredBeamDimensionA,"MeasuredBeamDimensionA");
		nameByTag.put(TagFromName.MeasuredBeamDimensionB,"MeasuredBeamDimensionB");
		nameByTag.put(TagFromName.LocationOfMeasuredBeamDiameter,"LocationOfMeasuredBeamDiameter");
		nameByTag.put(TagFromName.NominalFrequency,"NominalFrequency");
		nameByTag.put(TagFromName.MeasuredCenterFrequency,"MeasuredCenterFrequency");
		nameByTag.put(TagFromName.MeasuredBandwidth,"MeasuredBandwidth");
		nameByTag.put(TagFromName.ElementPitchB,"ElementPitchB");
		nameByTag.put(TagFromName.PulserSettingsSequence,"PulserSettingsSequence");
		nameByTag.put(TagFromName.PulseWidth,"PulseWidth");
		nameByTag.put(TagFromName.ExcitationFrequency,"ExcitationFrequency");
		nameByTag.put(TagFromName.ModulationType,"ModulationType");
		nameByTag.put(TagFromName.Damping,"Damping");
		nameByTag.put(TagFromName.ReceiverSettingsSequence,"ReceiverSettingsSequence");
		nameByTag.put(TagFromName.AcquiredSoundpathLength,"AcquiredSoundpathLength");
		nameByTag.put(TagFromName.AcquisitionCompressionType,"AcquisitionCompressionType");
		nameByTag.put(TagFromName.AcquisitionSampleSize,"AcquisitionSampleSize");
		nameByTag.put(TagFromName.RectifierSmoothing,"RectifierSmoothing");
		nameByTag.put(TagFromName.DACSequence,"DACSequence");
		nameByTag.put(TagFromName.DACType,"DACType");
		nameByTag.put(TagFromName.DACGainPoints,"DACGainPoints");
		nameByTag.put(TagFromName.DACTimePoints,"DACTimePoints");
		nameByTag.put(TagFromName.DACAmplitude,"DACAmplitude");
		nameByTag.put(TagFromName.PreAmplifierSettingsSequence,"PreAmplifierSettingsSequence");
		nameByTag.put(TagFromName.TransmitTransducerSettingsSequence,"TransmitTransducerSettingsSequence");
		nameByTag.put(TagFromName.ReceiveTransducerSettingsSequence,"ReceiveTransducerSettingsSequence");
		nameByTag.put(TagFromName.IncidentAngle,"IncidentAngle");
		nameByTag.put(TagFromName.CouplingTechnique,"CouplingTechnique");
		nameByTag.put(TagFromName.CouplingMedium,"CouplingMedium");
		nameByTag.put(TagFromName.CouplingVelocity,"CouplingVelocity");
		nameByTag.put(TagFromName.ProbeCenterLocationX,"ProbeCenterLocationX");
		nameByTag.put(TagFromName.ProbeCenterLocationZ,"ProbeCenterLocationZ");
		nameByTag.put(TagFromName.SoundPathLength,"SoundPathLength");
		nameByTag.put(TagFromName.DelayLawIdentifier,"DelayLawIdentifier");
		nameByTag.put(TagFromName.GateSettingsSequence,"GateSettingsSequence");
		nameByTag.put(TagFromName.GateThreshold,"GateThreshold");
		nameByTag.put(TagFromName.VelocityOfSound,"VelocityOfSound");
		nameByTag.put(TagFromName.CalibrationSettingsSequence,"CalibrationSettingsSequence");
		nameByTag.put(TagFromName.CalibrationProcedure,"CalibrationProcedure");
		nameByTag.put(TagFromName.ProcedureVersion,"ProcedureVersion");
		nameByTag.put(TagFromName.ProcedureCreationDate,"ProcedureCreationDate");
		nameByTag.put(TagFromName.ProcedureExpirationDate,"ProcedureExpirationDate");
		nameByTag.put(TagFromName.ProcedureLastModifiedDate,"ProcedureLastModifiedDate");
		nameByTag.put(TagFromName.CalibrationTime,"CalibrationTime");
		nameByTag.put(TagFromName.CalibrationDate,"CalibrationDate");
		nameByTag.put(TagFromName.ProbeDriveEquipmentSequence,"ProbeDriveEquipmentSequence");
		nameByTag.put(TagFromName.DriveType,"DriveType");
		nameByTag.put(TagFromName.ProbeDriveNotes,"ProbeDriveNotes");
		nameByTag.put(TagFromName.DriveProbeSequence,"DriveProbeSequence");
		nameByTag.put(TagFromName.ProbeInductance,"ProbeInductance");
		nameByTag.put(TagFromName.ProbeResistance,"ProbeResistance");
		nameByTag.put(TagFromName.ReceiveProbeSequence,"ReceiveProbeSequence");
		nameByTag.put(TagFromName.ProbeDriveSettingsSequence,"ProbeDriveSettingsSequence");
		nameByTag.put(TagFromName.BridgeResistors,"BridgeResistors");
		nameByTag.put(TagFromName.ProbeOrientationAngle,"ProbeOrientationAngle");
		nameByTag.put(TagFromName.UserSelectedGainY,"UserSelectedGainY");
		nameByTag.put(TagFromName.UserSelectedPhase,"UserSelectedPhase");
		nameByTag.put(TagFromName.UserSelectedOffsetX,"UserSelectedOffsetX");
		nameByTag.put(TagFromName.UserSelectedOffsetY,"UserSelectedOffsetY");
		nameByTag.put(TagFromName.ChannelSettingsSequence,"ChannelSettingsSequence");
		nameByTag.put(TagFromName.ChannelThreshold,"ChannelThreshold");
		nameByTag.put(TagFromName.ScannerSettingsSequence,"ScannerSettingsSequence");
		nameByTag.put(TagFromName.ScanProcedure,"ScanProcedure");
		nameByTag.put(TagFromName.TranslationRateX,"TranslationRateX");
		nameByTag.put(TagFromName.TranslationRateY,"TranslationRateY");
		nameByTag.put(TagFromName.ChannelOverlap,"ChannelOverlap");
		nameByTag.put(TagFromName.ImageQualityIndicatorType,"ImageQualityIndicatorType");
		nameByTag.put(TagFromName.ImageQualityIndicatorMaterial,"ImageQualityIndicatorMaterial");
		nameByTag.put(TagFromName.ImageQualityIndicatorSize,"ImageQualityIndicatorSize");
		nameByTag.put(TagFromName.LINACEnergy,"LINACEnergy");
		nameByTag.put(TagFromName.LINACOutput,"LINACOutput");
		nameByTag.put(TagFromName.ActiveAperture,"ActiveAperture");
		nameByTag.put(TagFromName.TotalAperture,"TotalAperture");
		nameByTag.put(TagFromName.ApertureElevation,"ApertureElevation");
		nameByTag.put(TagFromName.MainLobeAngle,"MainLobeAngle");
		nameByTag.put(TagFromName.MainRoofAngle,"MainRoofAngle");
		nameByTag.put(TagFromName.ConnectorType,"ConnectorType");
		nameByTag.put(TagFromName.WedgeModelNumber,"WedgeModelNumber");
		nameByTag.put(TagFromName.WedgeAngleFloat,"WedgeAngleFloat");
		nameByTag.put(TagFromName.WedgeRoofAngle,"WedgeRoofAngle");
		nameByTag.put(TagFromName.WedgeElement1Position,"WedgeElement1Position");
		nameByTag.put(TagFromName.WedgeMaterialVelocity,"WedgeMaterialVelocity");
		nameByTag.put(TagFromName.WedgeMaterial,"WedgeMaterial");
		nameByTag.put(TagFromName.WedgeOffsetZ,"WedgeOffsetZ");
		nameByTag.put(TagFromName.WedgeOriginOffsetX,"WedgeOriginOffsetX");
		nameByTag.put(TagFromName.WedgeTimeDelay,"WedgeTimeDelay");
		nameByTag.put(TagFromName.WedgeName,"WedgeName");
		nameByTag.put(TagFromName.WedgeManufacturerName,"WedgeManufacturerName");
		nameByTag.put(TagFromName.WedgeDescription,"WedgeDescription");
		nameByTag.put(TagFromName.NominalBeamAngle,"NominalBeamAngle");
		nameByTag.put(TagFromName.WedgeOffsetX,"WedgeOffsetX");
		nameByTag.put(TagFromName.WedgeOffsetY,"WedgeOffsetY");
		nameByTag.put(TagFromName.WedgeTotalLength,"WedgeTotalLength");
		nameByTag.put(TagFromName.WedgeInContactLength,"WedgeInContactLength");
		nameByTag.put(TagFromName.WedgeFrontGap,"WedgeFrontGap");
		nameByTag.put(TagFromName.WedgeTotalHeight,"WedgeTotalHeight");
		nameByTag.put(TagFromName.WedgeFrontHeight,"WedgeFrontHeight");
		nameByTag.put(TagFromName.WedgeRearHeight,"WedgeRearHeight");
		nameByTag.put(TagFromName.WedgeTotalWidth,"WedgeTotalWidth");
		nameByTag.put(TagFromName.WedgeInContactWidth,"WedgeInContactWidth");
		nameByTag.put(TagFromName.WedgeChamferHeight,"WedgeChamferHeight");
		nameByTag.put(TagFromName.WedgeCurve,"WedgeCurve");
		nameByTag.put(TagFromName.RadiusAlongWedge,"RadiusAlongWedge");
		nameByTag.put(TagFromName.ContrastBolusAgent,"ContrastBolusAgent");
		nameByTag.put(TagFromName.ContrastBolusAgentSequence,"ContrastBolusAgentSequence");
		nameByTag.put(TagFromName.ContrastBolusT1Relaxivity,"ContrastBolusT1Relaxivity");
		nameByTag.put(TagFromName.ContrastBolusAdministrationRouteSequence,"ContrastBolusAdministrationRouteSequence");
		nameByTag.put(TagFromName.BodyPartExamined,"BodyPartExamined");
		nameByTag.put(TagFromName.ScanningSequence,"ScanningSequence");
		nameByTag.put(TagFromName.SequenceVariant,"SequenceVariant");
		nameByTag.put(TagFromName.ScanOptions,"ScanOptions");
		nameByTag.put(TagFromName.MRAcquisitionType,"MRAcquisitionType");
		nameByTag.put(TagFromName.SequenceName,"SequenceName");
		nameByTag.put(TagFromName.AngioFlag,"AngioFlag");
		nameByTag.put(TagFromName.InterventionDrugInformationSequence,"InterventionDrugInformationSequence");
		nameByTag.put(TagFromName.InterventionDrugStopTime,"InterventionDrugStopTime");
		nameByTag.put(TagFromName.InterventionDrugDose,"InterventionDrugDose");
		nameByTag.put(TagFromName.InterventionDrugCodeSequence,"InterventionDrugCodeSequence");
		nameByTag.put(TagFromName.AdditionalDrugSequence,"AdditionalDrugSequence");
		nameByTag.put(TagFromName.Radionuclide,"Radionuclide");
		nameByTag.put(TagFromName.Radiopharmaceutical,"Radiopharmaceutical");
		nameByTag.put(TagFromName.EnergyWindowCenterline,"EnergyWindowCenterline");
		nameByTag.put(TagFromName.EnergyWindowTotalWidth,"EnergyWindowTotalWidth");
		nameByTag.put(TagFromName.InterventionDrugName,"InterventionDrugName");
		nameByTag.put(TagFromName.InterventionDrugStartTime,"InterventionDrugStartTime");
		nameByTag.put(TagFromName.InterventionSequence,"InterventionSequence");
		nameByTag.put(TagFromName.TherapyType,"TherapyType");
		nameByTag.put(TagFromName.InterventionStatus,"InterventionStatus");
		nameByTag.put(TagFromName.TherapyDescription,"TherapyDescription");
		nameByTag.put(TagFromName.InterventionDescription,"InterventionDescription");
		nameByTag.put(TagFromName.CineRate,"CineRate");
		nameByTag.put(TagFromName.InitialCineRunState,"InitialCineRunState");
		nameByTag.put(TagFromName.SliceThickness,"SliceThickness");
		nameByTag.put(TagFromName.KVP,"KVP");
		nameByTag.put(TagFromName.CountsAccumulated,"CountsAccumulated");
		nameByTag.put(TagFromName.AcquisitionTerminationCondition,"AcquisitionTerminationCondition");
		nameByTag.put(TagFromName.EffectiveDuration,"EffectiveDuration");
		nameByTag.put(TagFromName.AcquisitionStartCondition,"AcquisitionStartCondition");
		nameByTag.put(TagFromName.AcquisitionStartConditionData,"AcquisitionStartConditionData");
		nameByTag.put(TagFromName.AcquisitionTerminationConditionData,"AcquisitionTerminationConditionData");
		nameByTag.put(TagFromName.RepetitionTime,"RepetitionTime");
		nameByTag.put(TagFromName.EchoTime,"EchoTime");
		nameByTag.put(TagFromName.InversionTime,"InversionTime");
		nameByTag.put(TagFromName.NumberOfAverages,"NumberOfAverages");
		nameByTag.put(TagFromName.ImagingFrequency,"ImagingFrequency");
		nameByTag.put(TagFromName.ImagedNucleus,"ImagedNucleus");
		nameByTag.put(TagFromName.EchoNumbers,"EchoNumbers");
		nameByTag.put(TagFromName.MagneticFieldStrength,"MagneticFieldStrength");
		nameByTag.put(TagFromName.SpacingBetweenSlices,"SpacingBetweenSlices");
		nameByTag.put(TagFromName.NumberOfPhaseEncodingSteps,"NumberOfPhaseEncodingSteps");
		nameByTag.put(TagFromName.DataCollectionDiameter,"DataCollectionDiameter");
		nameByTag.put(TagFromName.EchoTrainLength,"EchoTrainLength");
		nameByTag.put(TagFromName.PercentSampling,"PercentSampling");
		nameByTag.put(TagFromName.PercentPhaseFieldOfView,"PercentPhaseFieldOfView");
		nameByTag.put(TagFromName.PixelBandwidth,"PixelBandwidth");
		nameByTag.put(TagFromName.DeviceSerialNumber,"DeviceSerialNumber");
		nameByTag.put(TagFromName.DeviceUID,"DeviceUID");
		nameByTag.put(TagFromName.DeviceID,"DeviceID");
		nameByTag.put(TagFromName.PlateID,"PlateID");
		nameByTag.put(TagFromName.GeneratorID,"GeneratorID");
		nameByTag.put(TagFromName.GridID,"GridID");
		nameByTag.put(TagFromName.CassetteID,"CassetteID");
		nameByTag.put(TagFromName.GantryID,"GantryID");
		nameByTag.put(TagFromName.UniqueDeviceIdentifier,"UniqueDeviceIdentifier");
		nameByTag.put(TagFromName.UDISequence,"UDISequence");
		nameByTag.put(TagFromName.SecondaryCaptureDeviceID,"SecondaryCaptureDeviceID");
		nameByTag.put(TagFromName.HardcopyCreationDeviceID,"HardcopyCreationDeviceID");
		nameByTag.put(TagFromName.DateOfSecondaryCapture,"DateOfSecondaryCapture");
		nameByTag.put(TagFromName.TimeOfSecondaryCapture,"TimeOfSecondaryCapture");
		nameByTag.put(TagFromName.SecondaryCaptureDeviceManufacturer,"SecondaryCaptureDeviceManufacturer");
		nameByTag.put(TagFromName.HardcopyDeviceManufacturer,"HardcopyDeviceManufacturer");
		nameByTag.put(TagFromName.SecondaryCaptureDeviceManufacturerModelName,"SecondaryCaptureDeviceManufacturerModelName");
		nameByTag.put(TagFromName.SecondaryCaptureDeviceSoftwareVersions,"SecondaryCaptureDeviceSoftwareVersions");
		nameByTag.put(TagFromName.HardcopyDeviceSoftwareVersion,"HardcopyDeviceSoftwareVersion");
		nameByTag.put(TagFromName.HardcopyDeviceManufacturerModelName,"HardcopyDeviceManufacturerModelName");
		nameByTag.put(TagFromName.SoftwareVersions,"SoftwareVersions");
		nameByTag.put(TagFromName.VideoImageFormatAcquired,"VideoImageFormatAcquired");
		nameByTag.put(TagFromName.DigitalImageFormatAcquired,"DigitalImageFormatAcquired");
		nameByTag.put(TagFromName.ProtocolName,"ProtocolName");
		nameByTag.put(TagFromName.ContrastBolusRoute,"ContrastBolusRoute");
		nameByTag.put(TagFromName.ContrastBolusVolume,"ContrastBolusVolume");
		nameByTag.put(TagFromName.ContrastBolusStartTime,"ContrastBolusStartTime");
		nameByTag.put(TagFromName.ContrastBolusStopTime,"ContrastBolusStopTime");
		nameByTag.put(TagFromName.ContrastBolusTotalDose,"ContrastBolusTotalDose");
		nameByTag.put(TagFromName.SyringeCounts,"SyringeCounts");
		nameByTag.put(TagFromName.ContrastFlowRate,"ContrastFlowRate");
		nameByTag.put(TagFromName.ContrastFlowDuration,"ContrastFlowDuration");
		nameByTag.put(TagFromName.ContrastBolusIngredient,"ContrastBolusIngredient");
		nameByTag.put(TagFromName.ContrastBolusIngredientConcentration,"ContrastBolusIngredientConcentration");
		nameByTag.put(TagFromName.SpatialResolution,"SpatialResolution");
		nameByTag.put(TagFromName.TriggerTime,"TriggerTime");
		nameByTag.put(TagFromName.TriggerSourceOrType,"TriggerSourceOrType");
		nameByTag.put(TagFromName.NominalInterval,"NominalInterval");
		nameByTag.put(TagFromName.FrameTime,"FrameTime");
		nameByTag.put(TagFromName.CardiacFramingType,"CardiacFramingType");
		nameByTag.put(TagFromName.FrameTimeVector,"FrameTimeVector");
		nameByTag.put(TagFromName.FrameDelay,"FrameDelay");
		nameByTag.put(TagFromName.ImageTriggerDelay,"ImageTriggerDelay");
		nameByTag.put(TagFromName.MultiplexGroupTimeOffset,"MultiplexGroupTimeOffset");
		nameByTag.put(TagFromName.TriggerTimeOffset,"TriggerTimeOffset");
		nameByTag.put(TagFromName.SynchronizationTrigger,"SynchronizationTrigger");
		nameByTag.put(TagFromName.SynchronizationChannel,"SynchronizationChannel");
		nameByTag.put(TagFromName.TriggerSamplePosition,"TriggerSamplePosition");
		nameByTag.put(TagFromName.RadiopharmaceuticalRoute,"RadiopharmaceuticalRoute");
		nameByTag.put(TagFromName.RadiopharmaceuticalVolume,"RadiopharmaceuticalVolume");
		nameByTag.put(TagFromName.RadiopharmaceuticalStartTime,"RadiopharmaceuticalStartTime");
		nameByTag.put(TagFromName.RadiopharmaceuticalStopTime,"RadiopharmaceuticalStopTime");
		nameByTag.put(TagFromName.RadionuclideTotalDose,"RadionuclideTotalDose");
		nameByTag.put(TagFromName.RadionuclideHalfLife,"RadionuclideHalfLife");
		nameByTag.put(TagFromName.RadionuclidePositronFraction,"RadionuclidePositronFraction");
		nameByTag.put(TagFromName.RadiopharmaceuticalSpecificActivity,"RadiopharmaceuticalSpecificActivity");
		nameByTag.put(TagFromName.RadiopharmaceuticalStartDateTime,"RadiopharmaceuticalStartDateTime");
		nameByTag.put(TagFromName.RadiopharmaceuticalStopDateTime,"RadiopharmaceuticalStopDateTime");
		nameByTag.put(TagFromName.BeatRejectionFlag,"BeatRejectionFlag");
		nameByTag.put(TagFromName.LowRRValue,"LowRRValue");
		nameByTag.put(TagFromName.HighRRValue,"HighRRValue");
		nameByTag.put(TagFromName.IntervalsAcquired,"IntervalsAcquired");
		nameByTag.put(TagFromName.IntervalsRejected,"IntervalsRejected");
		nameByTag.put(TagFromName.PVCRejection,"PVCRejection");
		nameByTag.put(TagFromName.SkipBeats,"SkipBeats");
		nameByTag.put(TagFromName.HeartRate,"HeartRate");
		nameByTag.put(TagFromName.CardiacNumberOfImages,"CardiacNumberOfImages");
		nameByTag.put(TagFromName.TriggerWindow,"TriggerWindow");
		nameByTag.put(TagFromName.ReconstructionDiameter,"ReconstructionDiameter");
		nameByTag.put(TagFromName.DistanceSourceToDetector,"DistanceSourceToDetector");
		nameByTag.put(TagFromName.DistanceSourceToPatient,"DistanceSourceToPatient");
		nameByTag.put(TagFromName.EstimatedRadiographicMagnificationFactor,"EstimatedRadiographicMagnificationFactor");
		nameByTag.put(TagFromName.GantryDetectorTilt,"GantryDetectorTilt");
		nameByTag.put(TagFromName.GantryDetectorSlew,"GantryDetectorSlew");
		nameByTag.put(TagFromName.TableHeight,"TableHeight");
		nameByTag.put(TagFromName.TableTraverse,"TableTraverse");
		nameByTag.put(TagFromName.TableMotion,"TableMotion");
		nameByTag.put(TagFromName.TableVerticalIncrement,"TableVerticalIncrement");
		nameByTag.put(TagFromName.TableLateralIncrement,"TableLateralIncrement");
		nameByTag.put(TagFromName.TableLongitudinalIncrement,"TableLongitudinalIncrement");
		nameByTag.put(TagFromName.TableAngle,"TableAngle");
		nameByTag.put(TagFromName.TableType,"TableType");
		nameByTag.put(TagFromName.RotationDirection,"RotationDirection");
		nameByTag.put(TagFromName.AngularPosition,"AngularPosition");
		nameByTag.put(TagFromName.RadialPosition,"RadialPosition");
		nameByTag.put(TagFromName.ScanArc,"ScanArc");
		nameByTag.put(TagFromName.AngularStep,"AngularStep");
		nameByTag.put(TagFromName.CenterOfRotationOffset,"CenterOfRotationOffset");
		nameByTag.put(TagFromName.RotationOffset,"RotationOffset");
		nameByTag.put(TagFromName.FieldOfViewShape,"FieldOfViewShape");
		nameByTag.put(TagFromName.FieldOfViewDimensions,"FieldOfViewDimensions");
		nameByTag.put(TagFromName.ExposureTime,"ExposureTime");
		nameByTag.put(TagFromName.XRayTubeCurrent,"XRayTubeCurrent");
		nameByTag.put(TagFromName.Exposure,"Exposure");
		nameByTag.put(TagFromName.ExposureInuAs,"ExposureInuAs");
		nameByTag.put(TagFromName.AveragePulseWidth,"AveragePulseWidth");
		nameByTag.put(TagFromName.RadiationSetting,"RadiationSetting");
		nameByTag.put(TagFromName.RectificationType,"RectificationType");
		nameByTag.put(TagFromName.RadiationMode,"RadiationMode");
		nameByTag.put(TagFromName.ImageAndFluoroscopyAreaDoseProduct,"ImageAndFluoroscopyAreaDoseProduct");
		nameByTag.put(TagFromName.FilterType,"FilterType");
		nameByTag.put(TagFromName.TypeOfFilters,"TypeOfFilters");
		nameByTag.put(TagFromName.IntensifierSize,"IntensifierSize");
		nameByTag.put(TagFromName.ImagerPixelSpacing,"ImagerPixelSpacing");
		nameByTag.put(TagFromName.Grid,"Grid");
		nameByTag.put(TagFromName.GeneratorPower,"GeneratorPower");
		nameByTag.put(TagFromName.CollimatorGridName,"CollimatorGridName");
		nameByTag.put(TagFromName.CollimatorType,"CollimatorType");
		nameByTag.put(TagFromName.FocalDistance,"FocalDistance");
		nameByTag.put(TagFromName.XFocusCenter,"XFocusCenter");
		nameByTag.put(TagFromName.YFocusCenter,"YFocusCenter");
		nameByTag.put(TagFromName.FocalSpots,"FocalSpots");
		nameByTag.put(TagFromName.AnodeTargetMaterial,"AnodeTargetMaterial");
		nameByTag.put(TagFromName.BodyPartThickness,"BodyPartThickness");
		nameByTag.put(TagFromName.CompressionForce,"CompressionForce");
		nameByTag.put(TagFromName.CompressionPressure,"CompressionPressure");
		nameByTag.put(TagFromName.PaddleDescription,"PaddleDescription");
		nameByTag.put(TagFromName.CompressionContactArea,"CompressionContactArea");
		nameByTag.put(TagFromName.DateOfLastCalibration,"DateOfLastCalibration");
		nameByTag.put(TagFromName.TimeOfLastCalibration,"TimeOfLastCalibration");
		nameByTag.put(TagFromName.DateTimeOfLastCalibration,"DateTimeOfLastCalibration");
		nameByTag.put(TagFromName.ConvolutionKernel,"ConvolutionKernel");
		nameByTag.put(TagFromName.UpperLowerPixelValues,"UpperLowerPixelValues");
		nameByTag.put(TagFromName.ActualFrameDuration,"ActualFrameDuration");
		nameByTag.put(TagFromName.CountRate,"CountRate");
		nameByTag.put(TagFromName.PreferredPlaybackSequencing,"PreferredPlaybackSequencing");
		nameByTag.put(TagFromName.ReceiveCoilName,"ReceiveCoilName");
		nameByTag.put(TagFromName.TransmitCoilName,"TransmitCoilName");
		nameByTag.put(TagFromName.PlateType,"PlateType");
		nameByTag.put(TagFromName.PhosphorType,"PhosphorType");
		nameByTag.put(TagFromName.WaterEquivalentDiameter,"WaterEquivalentDiameter");
		nameByTag.put(TagFromName.WaterEquivalentDiameterCalculationMethodCodeSequence,"WaterEquivalentDiameterCalculationMethodCodeSequence");
		nameByTag.put(TagFromName.ScanVelocity,"ScanVelocity");
		nameByTag.put(TagFromName.WholeBodyTechnique,"WholeBodyTechnique");
		nameByTag.put(TagFromName.ScanLength,"ScanLength");
		nameByTag.put(TagFromName.AcquisitionMatrix,"AcquisitionMatrix");
		nameByTag.put(TagFromName.InPlanePhaseEncodingDirection,"InPlanePhaseEncodingDirection");
		nameByTag.put(TagFromName.FlipAngle,"FlipAngle");
		nameByTag.put(TagFromName.VariableFlipAngleFlag,"VariableFlipAngleFlag");
		nameByTag.put(TagFromName.SAR,"SAR");
		nameByTag.put(TagFromName.dBdt,"dBdt");
		nameByTag.put(TagFromName.B1rms,"B1rms");
		nameByTag.put(TagFromName.AcquisitionDeviceProcessingDescription,"AcquisitionDeviceProcessingDescription");
		nameByTag.put(TagFromName.AcquisitionDeviceProcessingCode,"AcquisitionDeviceProcessingCode");
		nameByTag.put(TagFromName.CassetteOrientation,"CassetteOrientation");
		nameByTag.put(TagFromName.CassetteSize,"CassetteSize");
		nameByTag.put(TagFromName.ExposuresOnPlate,"ExposuresOnPlate");
		nameByTag.put(TagFromName.RelativeXRayExposure,"RelativeXRayExposure");
		nameByTag.put(TagFromName.ExposureIndex,"ExposureIndex");
		nameByTag.put(TagFromName.TargetExposureIndex,"TargetExposureIndex");
		nameByTag.put(TagFromName.DeviationIndex,"DeviationIndex");
		nameByTag.put(TagFromName.ColumnAngulation,"ColumnAngulation");
		nameByTag.put(TagFromName.TomoLayerHeight,"TomoLayerHeight");
		nameByTag.put(TagFromName.TomoAngle,"TomoAngle");
		nameByTag.put(TagFromName.TomoTime,"TomoTime");
		nameByTag.put(TagFromName.TomoType,"TomoType");
		nameByTag.put(TagFromName.TomoClass,"TomoClass");
		nameByTag.put(TagFromName.NumberOfTomosynthesisSourceImages,"NumberOfTomosynthesisSourceImages");
		nameByTag.put(TagFromName.PositionerMotion,"PositionerMotion");
		nameByTag.put(TagFromName.PositionerType,"PositionerType");
		nameByTag.put(TagFromName.PositionerPrimaryAngle,"PositionerPrimaryAngle");
		nameByTag.put(TagFromName.PositionerSecondaryAngle,"PositionerSecondaryAngle");
		nameByTag.put(TagFromName.PositionerPrimaryAngleIncrement,"PositionerPrimaryAngleIncrement");
		nameByTag.put(TagFromName.PositionerSecondaryAngleIncrement,"PositionerSecondaryAngleIncrement");
		nameByTag.put(TagFromName.DetectorPrimaryAngle,"DetectorPrimaryAngle");
		nameByTag.put(TagFromName.DetectorSecondaryAngle,"DetectorSecondaryAngle");
		nameByTag.put(TagFromName.ShutterShape,"ShutterShape");
		nameByTag.put(TagFromName.ShutterLeftVerticalEdge,"ShutterLeftVerticalEdge");
		nameByTag.put(TagFromName.ShutterRightVerticalEdge,"ShutterRightVerticalEdge");
		nameByTag.put(TagFromName.ShutterUpperHorizontalEdge,"ShutterUpperHorizontalEdge");
		nameByTag.put(TagFromName.ShutterLowerHorizontalEdge,"ShutterLowerHorizontalEdge");
		nameByTag.put(TagFromName.CenterOfCircularShutter,"CenterOfCircularShutter");
		nameByTag.put(TagFromName.RadiusOfCircularShutter,"RadiusOfCircularShutter");
		nameByTag.put(TagFromName.VerticesOfThePolygonalShutter,"VerticesOfThePolygonalShutter");
		nameByTag.put(TagFromName.ShutterPresentationValue,"ShutterPresentationValue");
		nameByTag.put(TagFromName.ShutterOverlayGroup,"ShutterOverlayGroup");
		nameByTag.put(TagFromName.ShutterPresentationColorCIELabValue,"ShutterPresentationColorCIELabValue");
		nameByTag.put(TagFromName.CollimatorShape,"CollimatorShape");
		nameByTag.put(TagFromName.CollimatorLeftVerticalEdge,"CollimatorLeftVerticalEdge");
		nameByTag.put(TagFromName.CollimatorRightVerticalEdge,"CollimatorRightVerticalEdge");
		nameByTag.put(TagFromName.CollimatorUpperHorizontalEdge,"CollimatorUpperHorizontalEdge");
		nameByTag.put(TagFromName.CollimatorLowerHorizontalEdge,"CollimatorLowerHorizontalEdge");
		nameByTag.put(TagFromName.CenterOfCircularCollimator,"CenterOfCircularCollimator");
		nameByTag.put(TagFromName.RadiusOfCircularCollimator,"RadiusOfCircularCollimator");
		nameByTag.put(TagFromName.VerticesOfThePolygonalCollimator,"VerticesOfThePolygonalCollimator");
		nameByTag.put(TagFromName.AcquisitionTimeSynchronized,"AcquisitionTimeSynchronized");
		nameByTag.put(TagFromName.TimeSource,"TimeSource");
		nameByTag.put(TagFromName.TimeDistributionProtocol,"TimeDistributionProtocol");
		nameByTag.put(TagFromName.NTPSourceAddress,"NTPSourceAddress");
		nameByTag.put(TagFromName.PageNumberVector,"PageNumberVector");
		nameByTag.put(TagFromName.FrameLabelVector,"FrameLabelVector");
		nameByTag.put(TagFromName.FramePrimaryAngleVector,"FramePrimaryAngleVector");
		nameByTag.put(TagFromName.FrameSecondaryAngleVector,"FrameSecondaryAngleVector");
		nameByTag.put(TagFromName.SliceLocationVector,"SliceLocationVector");
		nameByTag.put(TagFromName.DisplayWindowLabelVector,"DisplayWindowLabelVector");
		nameByTag.put(TagFromName.NominalScannedPixelSpacing,"NominalScannedPixelSpacing");
		nameByTag.put(TagFromName.DigitizingDeviceTransportDirection,"DigitizingDeviceTransportDirection");
		nameByTag.put(TagFromName.RotationOfScannedFilm,"RotationOfScannedFilm");
		nameByTag.put(TagFromName.BiopsyTargetSequence,"BiopsyTargetSequence");
		nameByTag.put(TagFromName.TargetUID,"TargetUID");
		nameByTag.put(TagFromName.LocalizingCursorPosition,"LocalizingCursorPosition");
		nameByTag.put(TagFromName.CalculatedTargetPosition,"CalculatedTargetPosition");
		nameByTag.put(TagFromName.TargetLabel,"TargetLabel");
		nameByTag.put(TagFromName.DisplayedZValue,"DisplayedZValue");
		nameByTag.put(TagFromName.IVUSAcquisition,"IVUSAcquisition");
		nameByTag.put(TagFromName.IVUSPullbackRate,"IVUSPullbackRate");
		nameByTag.put(TagFromName.IVUSGatedRate,"IVUSGatedRate");
		nameByTag.put(TagFromName.IVUSPullbackStartFrameNumber,"IVUSPullbackStartFrameNumber");
		nameByTag.put(TagFromName.IVUSPullbackStopFrameNumber,"IVUSPullbackStopFrameNumber");
		nameByTag.put(TagFromName.LesionNumber,"LesionNumber");
		nameByTag.put(TagFromName.AcquisitionComments,"AcquisitionComments");
		nameByTag.put(TagFromName.OutputPower,"OutputPower");
		nameByTag.put(TagFromName.TransducerData,"TransducerData");
		nameByTag.put(TagFromName.FocusDepth,"FocusDepth");
		nameByTag.put(TagFromName.ProcessingFunction,"ProcessingFunction");
		nameByTag.put(TagFromName.PostprocessingFunction,"PostprocessingFunction");
		nameByTag.put(TagFromName.MechanicalIndex,"MechanicalIndex");
		nameByTag.put(TagFromName.BoneThermalIndex,"BoneThermalIndex");
		nameByTag.put(TagFromName.CranialThermalIndex,"CranialThermalIndex");
		nameByTag.put(TagFromName.SoftTissueThermalIndex,"SoftTissueThermalIndex");
		nameByTag.put(TagFromName.SoftTissueFocusThermalIndex,"SoftTissueFocusThermalIndex");
		nameByTag.put(TagFromName.SoftTissueSurfaceThermalIndex,"SoftTissueSurfaceThermalIndex");
		nameByTag.put(TagFromName.DynamicRange,"DynamicRange");
		nameByTag.put(TagFromName.TotalGain,"TotalGain");
		nameByTag.put(TagFromName.DepthOfScanField,"DepthOfScanField");
		nameByTag.put(TagFromName.PatientPosition,"PatientPosition");
		nameByTag.put(TagFromName.ViewPosition,"ViewPosition");
		nameByTag.put(TagFromName.ProjectionEponymousNameCodeSequence,"ProjectionEponymousNameCodeSequence");
		nameByTag.put(TagFromName.ImageTransformationMatrix,"ImageTransformationMatrix");
		nameByTag.put(TagFromName.ImageTranslationVector,"ImageTranslationVector");
		nameByTag.put(TagFromName.Sensitivity,"Sensitivity");
		nameByTag.put(TagFromName.SequenceOfUltrasoundRegions,"SequenceOfUltrasoundRegions");
		nameByTag.put(TagFromName.RegionSpatialFormat,"RegionSpatialFormat");
		nameByTag.put(TagFromName.RegionDataType,"RegionDataType");
		nameByTag.put(TagFromName.RegionFlags,"RegionFlags");
		nameByTag.put(TagFromName.RegionLocationMinX0,"RegionLocationMinX0");
		nameByTag.put(TagFromName.RegionLocationMinY0,"RegionLocationMinY0");
		nameByTag.put(TagFromName.RegionLocationMaxX1,"RegionLocationMaxX1");
		nameByTag.put(TagFromName.RegionLocationMaxY1,"RegionLocationMaxY1");
		nameByTag.put(TagFromName.ReferencePixelX0,"ReferencePixelX0");
		nameByTag.put(TagFromName.ReferencePixelY0,"ReferencePixelY0");
		nameByTag.put(TagFromName.PhysicalUnitsXDirection,"PhysicalUnitsXDirection");
		nameByTag.put(TagFromName.PhysicalUnitsYDirection,"PhysicalUnitsYDirection");
		nameByTag.put(TagFromName.ReferencePixelPhysicalValueX,"ReferencePixelPhysicalValueX");
		nameByTag.put(TagFromName.ReferencePixelPhysicalValueY,"ReferencePixelPhysicalValueY");
		nameByTag.put(TagFromName.PhysicalDeltaX,"PhysicalDeltaX");
		nameByTag.put(TagFromName.PhysicalDeltaY,"PhysicalDeltaY");
		nameByTag.put(TagFromName.TransducerFrequency,"TransducerFrequency");
		nameByTag.put(TagFromName.TransducerType,"TransducerType");
		nameByTag.put(TagFromName.PulseRepetitionFrequency,"PulseRepetitionFrequency");
		nameByTag.put(TagFromName.DopplerCorrectionAngle,"DopplerCorrectionAngle");
		nameByTag.put(TagFromName.SteeringAngle,"SteeringAngle");
		nameByTag.put(TagFromName.DopplerSampleVolumeXPositionRetired,"DopplerSampleVolumeXPositionRetired");
		nameByTag.put(TagFromName.DopplerSampleVolumeXPosition,"DopplerSampleVolumeXPosition");
		nameByTag.put(TagFromName.DopplerSampleVolumeYPositionRetired,"DopplerSampleVolumeYPositionRetired");
		nameByTag.put(TagFromName.DopplerSampleVolumeYPosition,"DopplerSampleVolumeYPosition");
		nameByTag.put(TagFromName.TMLinePositionX0Retired,"TMLinePositionX0Retired");
		nameByTag.put(TagFromName.TMLinePositionX0,"TMLinePositionX0");
		nameByTag.put(TagFromName.TMLinePositionY0Retired,"TMLinePositionY0Retired");
		nameByTag.put(TagFromName.TMLinePositionY0,"TMLinePositionY0");
		nameByTag.put(TagFromName.TMLinePositionX1Retired,"TMLinePositionX1Retired");
		nameByTag.put(TagFromName.TMLinePositionX1,"TMLinePositionX1");
		nameByTag.put(TagFromName.TMLinePositionY1Retired,"TMLinePositionY1Retired");
		nameByTag.put(TagFromName.TMLinePositionY1,"TMLinePositionY1");
		nameByTag.put(TagFromName.PixelComponentOrganization,"PixelComponentOrganization");
		nameByTag.put(TagFromName.PixelComponentMask,"PixelComponentMask");
		nameByTag.put(TagFromName.PixelComponentRangeStart,"PixelComponentRangeStart");
		nameByTag.put(TagFromName.PixelComponentRangeStop,"PixelComponentRangeStop");
		nameByTag.put(TagFromName.PixelComponentPhysicalUnits,"PixelComponentPhysicalUnits");
		nameByTag.put(TagFromName.PixelComponentDataType,"PixelComponentDataType");
		nameByTag.put(TagFromName.NumberOfTableBreakPoints,"NumberOfTableBreakPoints");
		nameByTag.put(TagFromName.TableOfXBreakPoints,"TableOfXBreakPoints");
		nameByTag.put(TagFromName.TableOfYBreakPoints,"TableOfYBreakPoints");
		nameByTag.put(TagFromName.NumberOfTableEntries,"NumberOfTableEntries");
		nameByTag.put(TagFromName.TableOfPixelValues,"TableOfPixelValues");
		nameByTag.put(TagFromName.TableOfParameterValues,"TableOfParameterValues");
		nameByTag.put(TagFromName.RWaveTimeVector,"RWaveTimeVector");
		nameByTag.put(TagFromName.DetectorConditionsNominalFlag,"DetectorConditionsNominalFlag");
		nameByTag.put(TagFromName.DetectorTemperature,"DetectorTemperature");
		nameByTag.put(TagFromName.DetectorType,"DetectorType");
		nameByTag.put(TagFromName.DetectorConfiguration,"DetectorConfiguration");
		nameByTag.put(TagFromName.DetectorDescription,"DetectorDescription");
		nameByTag.put(TagFromName.DetectorMode,"DetectorMode");
		nameByTag.put(TagFromName.DetectorID,"DetectorID");
		nameByTag.put(TagFromName.DateOfLastDetectorCalibration,"DateOfLastDetectorCalibration");
		nameByTag.put(TagFromName.TimeOfLastDetectorCalibration,"TimeOfLastDetectorCalibration");
		nameByTag.put(TagFromName.ExposuresOnDetectorSinceLastCalibration,"ExposuresOnDetectorSinceLastCalibration");
		nameByTag.put(TagFromName.ExposuresOnDetectorSinceManufactured,"ExposuresOnDetectorSinceManufactured");
		nameByTag.put(TagFromName.DetectorTimeSinceLastExposure,"DetectorTimeSinceLastExposure");
		nameByTag.put(TagFromName.DetectorActiveTime,"DetectorActiveTime");
		nameByTag.put(TagFromName.DetectorActivationOffsetFromExposure,"DetectorActivationOffsetFromExposure");
		nameByTag.put(TagFromName.DetectorBinning,"DetectorBinning");
		nameByTag.put(TagFromName.DetectorElementPhysicalSize,"DetectorElementPhysicalSize");
		nameByTag.put(TagFromName.DetectorElementSpacing,"DetectorElementSpacing");
		nameByTag.put(TagFromName.DetectorActiveShape,"DetectorActiveShape");
		nameByTag.put(TagFromName.DetectorActiveDimensions,"DetectorActiveDimensions");
		nameByTag.put(TagFromName.DetectorActiveOrigin,"DetectorActiveOrigin");
		nameByTag.put(TagFromName.DetectorManufacturerName,"DetectorManufacturerName");
		nameByTag.put(TagFromName.DetectorManufacturerModelName,"DetectorManufacturerModelName");
		nameByTag.put(TagFromName.FieldOfViewOrigin,"FieldOfViewOrigin");
		nameByTag.put(TagFromName.FieldOfViewRotation,"FieldOfViewRotation");
		nameByTag.put(TagFromName.FieldOfViewHorizontalFlip,"FieldOfViewHorizontalFlip");
		nameByTag.put(TagFromName.PixelDataAreaOriginRelativeToFOV,"PixelDataAreaOriginRelativeToFOV");
		nameByTag.put(TagFromName.PixelDataAreaRotationAngleRelativeToFOV,"PixelDataAreaRotationAngleRelativeToFOV");
		nameByTag.put(TagFromName.GridAbsorbingMaterial,"GridAbsorbingMaterial");
		nameByTag.put(TagFromName.GridSpacingMaterial,"GridSpacingMaterial");
		nameByTag.put(TagFromName.GridThickness,"GridThickness");
		nameByTag.put(TagFromName.GridPitch,"GridPitch");
		nameByTag.put(TagFromName.GridAspectRatio,"GridAspectRatio");
		nameByTag.put(TagFromName.GridPeriod,"GridPeriod");
		nameByTag.put(TagFromName.GridFocalDistance,"GridFocalDistance");
		nameByTag.put(TagFromName.FilterMaterial,"FilterMaterial");
		nameByTag.put(TagFromName.FilterThicknessMinimum,"FilterThicknessMinimum");
		nameByTag.put(TagFromName.FilterThicknessMaximum,"FilterThicknessMaximum");
		nameByTag.put(TagFromName.FilterBeamPathLengthMinimum,"FilterBeamPathLengthMinimum");
		nameByTag.put(TagFromName.FilterBeamPathLengthMaximum,"FilterBeamPathLengthMaximum");
		nameByTag.put(TagFromName.ExposureControlMode,"ExposureControlMode");
		nameByTag.put(TagFromName.ExposureControlModeDescription,"ExposureControlModeDescription");
		nameByTag.put(TagFromName.ExposureStatus,"ExposureStatus");
		nameByTag.put(TagFromName.PhototimerSetting,"PhototimerSetting");
		nameByTag.put(TagFromName.ExposureTimeInuS,"ExposureTimeInuS");
		nameByTag.put(TagFromName.XRayTubeCurrentInuA,"XRayTubeCurrentInuA");
		nameByTag.put(TagFromName.ContentQualification,"ContentQualification");
		nameByTag.put(TagFromName.PulseSequenceName,"PulseSequenceName");
		nameByTag.put(TagFromName.MRImagingModifierSequence,"MRImagingModifierSequence");
		nameByTag.put(TagFromName.EchoPulseSequence,"EchoPulseSequence");
		nameByTag.put(TagFromName.InversionRecovery,"InversionRecovery");
		nameByTag.put(TagFromName.FlowCompensation,"FlowCompensation");
		nameByTag.put(TagFromName.MultipleSpinEcho,"MultipleSpinEcho");
		nameByTag.put(TagFromName.MultiPlanarExcitation,"MultiPlanarExcitation");
		nameByTag.put(TagFromName.PhaseContrast,"PhaseContrast");
		nameByTag.put(TagFromName.TimeOfFlightContrast,"TimeOfFlightContrast");
		nameByTag.put(TagFromName.Spoiling,"Spoiling");
		nameByTag.put(TagFromName.SteadyStatePulseSequence,"SteadyStatePulseSequence");
		nameByTag.put(TagFromName.EchoPlanarPulseSequence,"EchoPlanarPulseSequence");
		nameByTag.put(TagFromName.TagAngleFirstAxis,"TagAngleFirstAxis");
		nameByTag.put(TagFromName.MagnetizationTransfer,"MagnetizationTransfer");
		nameByTag.put(TagFromName.T2Preparation,"T2Preparation");
		nameByTag.put(TagFromName.BloodSignalNulling,"BloodSignalNulling");
		nameByTag.put(TagFromName.SaturationRecovery,"SaturationRecovery");
		nameByTag.put(TagFromName.SpectrallySelectedSuppression,"SpectrallySelectedSuppression");
		nameByTag.put(TagFromName.SpectrallySelectedExcitation,"SpectrallySelectedExcitation");
		nameByTag.put(TagFromName.SpatialPresaturation,"SpatialPresaturation");
		nameByTag.put(TagFromName.Tagging,"Tagging");
		nameByTag.put(TagFromName.OversamplingPhase,"OversamplingPhase");
		nameByTag.put(TagFromName.TagSpacingFirstDimension,"TagSpacingFirstDimension");
		nameByTag.put(TagFromName.GeometryOfKSpaceTraversal,"GeometryOfKSpaceTraversal");
		nameByTag.put(TagFromName.SegmentedKSpaceTraversal,"SegmentedKSpaceTraversal");
		nameByTag.put(TagFromName.RectilinearPhaseEncodeReordering,"RectilinearPhaseEncodeReordering");
		nameByTag.put(TagFromName.TagThickness,"TagThickness");
		nameByTag.put(TagFromName.PartialFourierDirection,"PartialFourierDirection");
		nameByTag.put(TagFromName.CardiacSynchronizationTechnique,"CardiacSynchronizationTechnique");
		nameByTag.put(TagFromName.ReceiveCoilManufacturerName,"ReceiveCoilManufacturerName");
		nameByTag.put(TagFromName.MRReceiveCoilSequence,"MRReceiveCoilSequence");
		nameByTag.put(TagFromName.ReceiveCoilType,"ReceiveCoilType");
		nameByTag.put(TagFromName.QuadratureReceiveCoil,"QuadratureReceiveCoil");
		nameByTag.put(TagFromName.MultiCoilDefinitionSequence,"MultiCoilDefinitionSequence");
		nameByTag.put(TagFromName.MultiCoilConfiguration,"MultiCoilConfiguration");
		nameByTag.put(TagFromName.MultiCoilElementName,"MultiCoilElementName");
		nameByTag.put(TagFromName.MultiCoilElementUsed,"MultiCoilElementUsed");
		nameByTag.put(TagFromName.MRTransmitCoilSequence,"MRTransmitCoilSequence");
		nameByTag.put(TagFromName.TransmitCoilManufacturerName,"TransmitCoilManufacturerName");
		nameByTag.put(TagFromName.TransmitCoilType,"TransmitCoilType");
		nameByTag.put(TagFromName.SpectralWidth,"SpectralWidth");
		nameByTag.put(TagFromName.ChemicalShiftReference,"ChemicalShiftReference");
		nameByTag.put(TagFromName.VolumeLocalizationTechnique,"VolumeLocalizationTechnique");
		nameByTag.put(TagFromName.MRAcquisitionFrequencyEncodingSteps,"MRAcquisitionFrequencyEncodingSteps");
		nameByTag.put(TagFromName.Decoupling,"Decoupling");
		nameByTag.put(TagFromName.DecoupledNucleus,"DecoupledNucleus");
		nameByTag.put(TagFromName.DecouplingFrequency,"DecouplingFrequency");
		nameByTag.put(TagFromName.DecouplingMethod,"DecouplingMethod");
		nameByTag.put(TagFromName.DecouplingChemicalShiftReference,"DecouplingChemicalShiftReference");
		nameByTag.put(TagFromName.KSpaceFiltering,"KSpaceFiltering");
		nameByTag.put(TagFromName.TimeDomainFiltering,"TimeDomainFiltering");
		nameByTag.put(TagFromName.NumberOfZeroFills,"NumberOfZeroFills");
		nameByTag.put(TagFromName.BaselineCorrection,"BaselineCorrection");
		nameByTag.put(TagFromName.ParallelReductionFactorInPlane,"ParallelReductionFactorInPlane");
		nameByTag.put(TagFromName.CardiacRRIntervalSpecified,"CardiacRRIntervalSpecified");
		nameByTag.put(TagFromName.AcquisitionDuration,"AcquisitionDuration");
		nameByTag.put(TagFromName.FrameAcquisitionDateTime,"FrameAcquisitionDateTime");
		nameByTag.put(TagFromName.DiffusionDirectionality,"DiffusionDirectionality");
		nameByTag.put(TagFromName.DiffusionGradientDirectionSequence,"DiffusionGradientDirectionSequence");
		nameByTag.put(TagFromName.ParallelAcquisition,"ParallelAcquisition");
		nameByTag.put(TagFromName.ParallelAcquisitionTechnique,"ParallelAcquisitionTechnique");
		nameByTag.put(TagFromName.InversionTimes,"InversionTimes");
		nameByTag.put(TagFromName.MetaboliteMapDescription,"MetaboliteMapDescription");
		nameByTag.put(TagFromName.PartialFourier,"PartialFourier");
		nameByTag.put(TagFromName.EffectiveEchoTime,"EffectiveEchoTime");
		nameByTag.put(TagFromName.MetaboliteMapCodeSequence,"MetaboliteMapCodeSequence");
		nameByTag.put(TagFromName.ChemicalShiftSequence,"ChemicalShiftSequence");
		nameByTag.put(TagFromName.CardiacSignalSource,"CardiacSignalSource");
		nameByTag.put(TagFromName.DiffusionBValue,"DiffusionBValue");
		nameByTag.put(TagFromName.DiffusionGradientOrientation,"DiffusionGradientOrientation");
		nameByTag.put(TagFromName.VelocityEncodingDirection,"VelocityEncodingDirection");
		nameByTag.put(TagFromName.VelocityEncodingMinimumValue,"VelocityEncodingMinimumValue");
		nameByTag.put(TagFromName.VelocityEncodingAcquisitionSequence,"VelocityEncodingAcquisitionSequence");
		nameByTag.put(TagFromName.NumberOfKSpaceTrajectories,"NumberOfKSpaceTrajectories");
		nameByTag.put(TagFromName.CoverageOfKSpace,"CoverageOfKSpace");
		nameByTag.put(TagFromName.SpectroscopyAcquisitionPhaseRows,"SpectroscopyAcquisitionPhaseRows");
		nameByTag.put(TagFromName.ParallelReductionFactorInPlaneRetired,"ParallelReductionFactorInPlaneRetired");
		nameByTag.put(TagFromName.TransmitterFrequency,"TransmitterFrequency");
		nameByTag.put(TagFromName.ResonantNucleus,"ResonantNucleus");
		nameByTag.put(TagFromName.FrequencyCorrection,"FrequencyCorrection");
		nameByTag.put(TagFromName.MRSpectroscopyFOVGeometrySequence,"MRSpectroscopyFOVGeometrySequence");
		nameByTag.put(TagFromName.SlabThickness,"SlabThickness");
		nameByTag.put(TagFromName.SlabOrientation,"SlabOrientation");
		nameByTag.put(TagFromName.MidSlabPosition,"MidSlabPosition");
		nameByTag.put(TagFromName.MRSpatialSaturationSequence,"MRSpatialSaturationSequence");
		nameByTag.put(TagFromName.MRTimingAndRelatedParametersSequence,"MRTimingAndRelatedParametersSequence");
		nameByTag.put(TagFromName.MREchoSequence,"MREchoSequence");
		nameByTag.put(TagFromName.MRModifierSequence,"MRModifierSequence");
		nameByTag.put(TagFromName.MRDiffusionSequence,"MRDiffusionSequence");
		nameByTag.put(TagFromName.CardiacSynchronizationSequence,"CardiacSynchronizationSequence");
		nameByTag.put(TagFromName.MRAveragesSequence,"MRAveragesSequence");
		nameByTag.put(TagFromName.MRFOVGeometrySequence,"MRFOVGeometrySequence");
		nameByTag.put(TagFromName.VolumeLocalizationSequence,"VolumeLocalizationSequence");
		nameByTag.put(TagFromName.SpectroscopyAcquisitionDataColumns,"SpectroscopyAcquisitionDataColumns");
		nameByTag.put(TagFromName.DiffusionAnisotropyType,"DiffusionAnisotropyType");
		nameByTag.put(TagFromName.FrameReferenceDateTime,"FrameReferenceDateTime");
		nameByTag.put(TagFromName.MRMetaboliteMapSequence,"MRMetaboliteMapSequence");
		nameByTag.put(TagFromName.ParallelReductionFactorOutOfPlane,"ParallelReductionFactorOutOfPlane");
		nameByTag.put(TagFromName.SpectroscopyAcquisitionOutOfPlanePhaseSteps,"SpectroscopyAcquisitionOutOfPlanePhaseSteps");
		nameByTag.put(TagFromName.BulkMotionStatus,"BulkMotionStatus");
		nameByTag.put(TagFromName.ParallelReductionFactorSecondInPlane,"ParallelReductionFactorSecondInPlane");
		nameByTag.put(TagFromName.CardiacBeatRejectionTechnique,"CardiacBeatRejectionTechnique");
		nameByTag.put(TagFromName.RespiratoryMotionCompensationTechnique,"RespiratoryMotionCompensationTechnique");
		nameByTag.put(TagFromName.RespiratorySignalSource,"RespiratorySignalSource");
		nameByTag.put(TagFromName.BulkMotionCompensationTechnique,"BulkMotionCompensationTechnique");
		nameByTag.put(TagFromName.BulkMotionSignalSource,"BulkMotionSignalSource");
		nameByTag.put(TagFromName.ApplicableSafetyStandardAgency,"ApplicableSafetyStandardAgency");
		nameByTag.put(TagFromName.ApplicableSafetyStandardDescription,"ApplicableSafetyStandardDescription");
		nameByTag.put(TagFromName.OperatingModeSequence,"OperatingModeSequence");
		nameByTag.put(TagFromName.OperatingModeType,"OperatingModeType");
		nameByTag.put(TagFromName.OperatingMode,"OperatingMode");
		nameByTag.put(TagFromName.SpecificAbsorptionRateDefinition,"SpecificAbsorptionRateDefinition");
		nameByTag.put(TagFromName.GradientOutputType,"GradientOutputType");
		nameByTag.put(TagFromName.SpecificAbsorptionRateValue,"SpecificAbsorptionRateValue");
		nameByTag.put(TagFromName.GradientOutput,"GradientOutput");
		nameByTag.put(TagFromName.FlowCompensationDirection,"FlowCompensationDirection");
		nameByTag.put(TagFromName.TaggingDelay,"TaggingDelay");
		nameByTag.put(TagFromName.RespiratoryMotionCompensationTechniqueDescription,"RespiratoryMotionCompensationTechniqueDescription");
		nameByTag.put(TagFromName.RespiratorySignalSourceID,"RespiratorySignalSourceID");
		nameByTag.put(TagFromName.ChemicalShiftMinimumIntegrationLimitInHz,"ChemicalShiftMinimumIntegrationLimitInHz");
		nameByTag.put(TagFromName.ChemicalShiftMaximumIntegrationLimitInHz,"ChemicalShiftMaximumIntegrationLimitInHz");
		nameByTag.put(TagFromName.MRVelocityEncodingSequence,"MRVelocityEncodingSequence");
		nameByTag.put(TagFromName.FirstOrderPhaseCorrection,"FirstOrderPhaseCorrection");
		nameByTag.put(TagFromName.WaterReferencedPhaseCorrection,"WaterReferencedPhaseCorrection");
		nameByTag.put(TagFromName.MRSpectroscopyAcquisitionType,"MRSpectroscopyAcquisitionType");
		nameByTag.put(TagFromName.RespiratoryCyclePosition,"RespiratoryCyclePosition");
		nameByTag.put(TagFromName.VelocityEncodingMaximumValue,"VelocityEncodingMaximumValue");
		nameByTag.put(TagFromName.TagSpacingSecondDimension,"TagSpacingSecondDimension");
		nameByTag.put(TagFromName.TagAngleSecondAxis,"TagAngleSecondAxis");
		nameByTag.put(TagFromName.FrameAcquisitionDuration,"FrameAcquisitionDuration");
		nameByTag.put(TagFromName.MRImageFrameTypeSequence,"MRImageFrameTypeSequence");
		nameByTag.put(TagFromName.MRSpectroscopyFrameTypeSequence,"MRSpectroscopyFrameTypeSequence");
		nameByTag.put(TagFromName.MRAcquisitionPhaseEncodingStepsInPlane,"MRAcquisitionPhaseEncodingStepsInPlane");
		nameByTag.put(TagFromName.MRAcquisitionPhaseEncodingStepsOutOfPlane,"MRAcquisitionPhaseEncodingStepsOutOfPlane");
		nameByTag.put(TagFromName.SpectroscopyAcquisitionPhaseColumns,"SpectroscopyAcquisitionPhaseColumns");
		nameByTag.put(TagFromName.CardiacCyclePosition,"CardiacCyclePosition");
		nameByTag.put(TagFromName.SpecificAbsorptionRateSequence,"SpecificAbsorptionRateSequence");
		nameByTag.put(TagFromName.RFEchoTrainLength,"RFEchoTrainLength");
		nameByTag.put(TagFromName.GradientEchoTrainLength,"GradientEchoTrainLength");
		nameByTag.put(TagFromName.ArterialSpinLabelingContrast,"ArterialSpinLabelingContrast");
		nameByTag.put(TagFromName.MRArterialSpinLabelingSequence,"MRArterialSpinLabelingSequence");
		nameByTag.put(TagFromName.ASLTechniqueDescription,"ASLTechniqueDescription");
		nameByTag.put(TagFromName.ASLSlabNumber,"ASLSlabNumber");
		nameByTag.put(TagFromName.ASLSlabThickness,"ASLSlabThickness");
		nameByTag.put(TagFromName.ASLSlabOrientation,"ASLSlabOrientation");
		nameByTag.put(TagFromName.ASLMidSlabPosition,"ASLMidSlabPosition");
		nameByTag.put(TagFromName.ASLContext,"ASLContext");
		nameByTag.put(TagFromName.ASLPulseTrainDuration,"ASLPulseTrainDuration");
		nameByTag.put(TagFromName.ASLCrusherFlag,"ASLCrusherFlag");
		nameByTag.put(TagFromName.ASLCrusherFlowLimit,"ASLCrusherFlowLimit");
		nameByTag.put(TagFromName.ASLCrusherDescription,"ASLCrusherDescription");
		nameByTag.put(TagFromName.ASLBolusCutoffFlag,"ASLBolusCutoffFlag");
		nameByTag.put(TagFromName.ASLBolusCutoffTimingSequence,"ASLBolusCutoffTimingSequence");
		nameByTag.put(TagFromName.ASLBolusCutoffTechnique,"ASLBolusCutoffTechnique");
		nameByTag.put(TagFromName.ASLBolusCutoffDelayTime,"ASLBolusCutoffDelayTime");
		nameByTag.put(TagFromName.ASLSlabSequence,"ASLSlabSequence");
		nameByTag.put(TagFromName.ChemicalShiftMinimumIntegrationLimitInppm,"ChemicalShiftMinimumIntegrationLimitInppm");
		nameByTag.put(TagFromName.ChemicalShiftMaximumIntegrationLimitInppm,"ChemicalShiftMaximumIntegrationLimitInppm");
		nameByTag.put(TagFromName.WaterReferenceAcquisition,"WaterReferenceAcquisition");
		nameByTag.put(TagFromName.EchoPeakPosition,"EchoPeakPosition");
		nameByTag.put(TagFromName.CTAcquisitionTypeSequence,"CTAcquisitionTypeSequence");
		nameByTag.put(TagFromName.AcquisitionType,"AcquisitionType");
		nameByTag.put(TagFromName.TubeAngle,"TubeAngle");
		nameByTag.put(TagFromName.CTAcquisitionDetailsSequence,"CTAcquisitionDetailsSequence");
		nameByTag.put(TagFromName.RevolutionTime,"RevolutionTime");
		nameByTag.put(TagFromName.SingleCollimationWidth,"SingleCollimationWidth");
		nameByTag.put(TagFromName.TotalCollimationWidth,"TotalCollimationWidth");
		nameByTag.put(TagFromName.CTTableDynamicsSequence,"CTTableDynamicsSequence");
		nameByTag.put(TagFromName.TableSpeed,"TableSpeed");
		nameByTag.put(TagFromName.TableFeedPerRotation,"TableFeedPerRotation");
		nameByTag.put(TagFromName.SpiralPitchFactor,"SpiralPitchFactor");
		nameByTag.put(TagFromName.CTGeometrySequence,"CTGeometrySequence");
		nameByTag.put(TagFromName.DataCollectionCenterPatient,"DataCollectionCenterPatient");
		nameByTag.put(TagFromName.CTReconstructionSequence,"CTReconstructionSequence");
		nameByTag.put(TagFromName.ReconstructionAlgorithm,"ReconstructionAlgorithm");
		nameByTag.put(TagFromName.ConvolutionKernelGroup,"ConvolutionKernelGroup");
		nameByTag.put(TagFromName.ReconstructionFieldOfView,"ReconstructionFieldOfView");
		nameByTag.put(TagFromName.ReconstructionTargetCenterPatient,"ReconstructionTargetCenterPatient");
		nameByTag.put(TagFromName.ReconstructionAngle,"ReconstructionAngle");
		nameByTag.put(TagFromName.ImageFilter,"ImageFilter");
		nameByTag.put(TagFromName.CTExposureSequence,"CTExposureSequence");
		nameByTag.put(TagFromName.ReconstructionPixelSpacing,"ReconstructionPixelSpacing");
		nameByTag.put(TagFromName.ExposureModulationType,"ExposureModulationType");
		nameByTag.put(TagFromName.EstimatedDoseSaving,"EstimatedDoseSaving");
		nameByTag.put(TagFromName.CTXRayDetailsSequence,"CTXRayDetailsSequence");
		nameByTag.put(TagFromName.CTPositionSequence,"CTPositionSequence");
		nameByTag.put(TagFromName.TablePosition,"TablePosition");
		nameByTag.put(TagFromName.ExposureTimeInms,"ExposureTimeInms");
		nameByTag.put(TagFromName.CTImageFrameTypeSequence,"CTImageFrameTypeSequence");
		nameByTag.put(TagFromName.XRayTubeCurrentInmA,"XRayTubeCurrentInmA");
		nameByTag.put(TagFromName.ExposureInmAs,"ExposureInmAs");
		nameByTag.put(TagFromName.ConstantVolumeFlag,"ConstantVolumeFlag");
		nameByTag.put(TagFromName.FluoroscopyFlag,"FluoroscopyFlag");
		nameByTag.put(TagFromName.DistanceSourceToDataCollectionCenter,"DistanceSourceToDataCollectionCenter");
		nameByTag.put(TagFromName.ContrastBolusAgentNumber,"ContrastBolusAgentNumber");
		nameByTag.put(TagFromName.ContrastBolusIngredientCodeSequence,"ContrastBolusIngredientCodeSequence");
		nameByTag.put(TagFromName.ContrastAdministrationProfileSequence,"ContrastAdministrationProfileSequence");
		nameByTag.put(TagFromName.ContrastBolusUsageSequence,"ContrastBolusUsageSequence");
		nameByTag.put(TagFromName.ContrastBolusAgentAdministered,"ContrastBolusAgentAdministered");
		nameByTag.put(TagFromName.ContrastBolusAgentDetected,"ContrastBolusAgentDetected");
		nameByTag.put(TagFromName.ContrastBolusAgentPhase,"ContrastBolusAgentPhase");
		nameByTag.put(TagFromName.CTDIvol,"CTDIvol");
		nameByTag.put(TagFromName.CTDIPhantomTypeCodeSequence,"CTDIPhantomTypeCodeSequence");
		nameByTag.put(TagFromName.CalciumScoringMassFactorPatient,"CalciumScoringMassFactorPatient");
		nameByTag.put(TagFromName.CalciumScoringMassFactorDevice,"CalciumScoringMassFactorDevice");
		nameByTag.put(TagFromName.EnergyWeightingFactor,"EnergyWeightingFactor");
		nameByTag.put(TagFromName.CTAdditionalXRaySourceSequence,"CTAdditionalXRaySourceSequence");
		nameByTag.put(TagFromName.ProjectionPixelCalibrationSequence,"ProjectionPixelCalibrationSequence");
		nameByTag.put(TagFromName.DistanceSourceToIsocenter,"DistanceSourceToIsocenter");
		nameByTag.put(TagFromName.DistanceObjectToTableTop,"DistanceObjectToTableTop");
		nameByTag.put(TagFromName.ObjectPixelSpacingInCenterOfBeam,"ObjectPixelSpacingInCenterOfBeam");
		nameByTag.put(TagFromName.PositionerPositionSequence,"PositionerPositionSequence");
		nameByTag.put(TagFromName.TablePositionSequence,"TablePositionSequence");
		nameByTag.put(TagFromName.CollimatorShapeSequence,"CollimatorShapeSequence");
		nameByTag.put(TagFromName.PlanesInAcquisition,"PlanesInAcquisition");
		nameByTag.put(TagFromName.XAXRFFrameCharacteristicsSequence,"XAXRFFrameCharacteristicsSequence");
		nameByTag.put(TagFromName.FrameAcquisitionSequence,"FrameAcquisitionSequence");
		nameByTag.put(TagFromName.XRayReceptorType,"XRayReceptorType");
		nameByTag.put(TagFromName.AcquisitionProtocolName,"AcquisitionProtocolName");
		nameByTag.put(TagFromName.AcquisitionProtocolDescription,"AcquisitionProtocolDescription");
		nameByTag.put(TagFromName.ContrastBolusIngredientOpaque,"ContrastBolusIngredientOpaque");
		nameByTag.put(TagFromName.DistanceReceptorPlaneToDetectorHousing,"DistanceReceptorPlaneToDetectorHousing");
		nameByTag.put(TagFromName.IntensifierActiveShape,"IntensifierActiveShape");
		nameByTag.put(TagFromName.IntensifierActiveDimensions,"IntensifierActiveDimensions");
		nameByTag.put(TagFromName.PhysicalDetectorSize,"PhysicalDetectorSize");
		nameByTag.put(TagFromName.PositionOfIsocenterProjection,"PositionOfIsocenterProjection");
		nameByTag.put(TagFromName.FieldOfViewSequence,"FieldOfViewSequence");
		nameByTag.put(TagFromName.FieldOfViewDescription,"FieldOfViewDescription");
		nameByTag.put(TagFromName.ExposureControlSensingRegionsSequence,"ExposureControlSensingRegionsSequence");
		nameByTag.put(TagFromName.ExposureControlSensingRegionShape,"ExposureControlSensingRegionShape");
		nameByTag.put(TagFromName.ExposureControlSensingRegionLeftVerticalEdge,"ExposureControlSensingRegionLeftVerticalEdge");
		nameByTag.put(TagFromName.ExposureControlSensingRegionRightVerticalEdge,"ExposureControlSensingRegionRightVerticalEdge");
		nameByTag.put(TagFromName.ExposureControlSensingRegionUpperHorizontalEdge,"ExposureControlSensingRegionUpperHorizontalEdge");
		nameByTag.put(TagFromName.ExposureControlSensingRegionLowerHorizontalEdge,"ExposureControlSensingRegionLowerHorizontalEdge");
		nameByTag.put(TagFromName.CenterOfCircularExposureControlSensingRegion,"CenterOfCircularExposureControlSensingRegion");
		nameByTag.put(TagFromName.RadiusOfCircularExposureControlSensingRegion,"RadiusOfCircularExposureControlSensingRegion");
		nameByTag.put(TagFromName.VerticesOfThePolygonalExposureControlSensingRegion,"VerticesOfThePolygonalExposureControlSensingRegion");
		nameByTag.put(TagFromName.ColumnAngulationPatient,"ColumnAngulationPatient");
		nameByTag.put(TagFromName.BeamAngle,"BeamAngle");
		nameByTag.put(TagFromName.FrameDetectorParametersSequence,"FrameDetectorParametersSequence");
		nameByTag.put(TagFromName.CalculatedAnatomyThickness,"CalculatedAnatomyThickness");
		nameByTag.put(TagFromName.CalibrationSequence,"CalibrationSequence");
		nameByTag.put(TagFromName.ObjectThicknessSequence,"ObjectThicknessSequence");
		nameByTag.put(TagFromName.PlaneIdentification,"PlaneIdentification");
		nameByTag.put(TagFromName.FieldOfViewDimensionsInFloat,"FieldOfViewDimensionsInFloat");
		nameByTag.put(TagFromName.IsocenterReferenceSystemSequence,"IsocenterReferenceSystemSequence");
		nameByTag.put(TagFromName.PositionerIsocenterPrimaryAngle,"PositionerIsocenterPrimaryAngle");
		nameByTag.put(TagFromName.PositionerIsocenterSecondaryAngle,"PositionerIsocenterSecondaryAngle");
		nameByTag.put(TagFromName.PositionerIsocenterDetectorRotationAngle,"PositionerIsocenterDetectorRotationAngle");
		nameByTag.put(TagFromName.TableXPositionToIsocenter,"TableXPositionToIsocenter");
		nameByTag.put(TagFromName.TableYPositionToIsocenter,"TableYPositionToIsocenter");
		nameByTag.put(TagFromName.TableZPositionToIsocenter,"TableZPositionToIsocenter");
		nameByTag.put(TagFromName.TableHorizontalRotationAngle,"TableHorizontalRotationAngle");
		nameByTag.put(TagFromName.TableHeadTiltAngle,"TableHeadTiltAngle");
		nameByTag.put(TagFromName.TableCradleTiltAngle,"TableCradleTiltAngle");
		nameByTag.put(TagFromName.FrameDisplayShutterSequence,"FrameDisplayShutterSequence");
		nameByTag.put(TagFromName.AcquiredImageAreaDoseProduct,"AcquiredImageAreaDoseProduct");
		nameByTag.put(TagFromName.CArmPositionerTabletopRelationship,"CArmPositionerTabletopRelationship");
		nameByTag.put(TagFromName.XRayGeometrySequence,"XRayGeometrySequence");
		nameByTag.put(TagFromName.IrradiationEventIdentificationSequence,"IrradiationEventIdentificationSequence");
		nameByTag.put(TagFromName.XRay3DFrameTypeSequence,"XRay3DFrameTypeSequence");
		nameByTag.put(TagFromName.ContributingSourcesSequence,"ContributingSourcesSequence");
		nameByTag.put(TagFromName.XRay3DAcquisitionSequence,"XRay3DAcquisitionSequence");
		nameByTag.put(TagFromName.PrimaryPositionerScanArc,"PrimaryPositionerScanArc");
		nameByTag.put(TagFromName.SecondaryPositionerScanArc,"SecondaryPositionerScanArc");
		nameByTag.put(TagFromName.PrimaryPositionerScanStartAngle,"PrimaryPositionerScanStartAngle");
		nameByTag.put(TagFromName.SecondaryPositionerScanStartAngle,"SecondaryPositionerScanStartAngle");
		nameByTag.put(TagFromName.PrimaryPositionerIncrement,"PrimaryPositionerIncrement");
		nameByTag.put(TagFromName.SecondaryPositionerIncrement,"SecondaryPositionerIncrement");
		nameByTag.put(TagFromName.StartAcquisitionDateTime,"StartAcquisitionDateTime");
		nameByTag.put(TagFromName.EndAcquisitionDateTime,"EndAcquisitionDateTime");
		nameByTag.put(TagFromName.PrimaryPositionerIncrementSign,"PrimaryPositionerIncrementSign");
		nameByTag.put(TagFromName.SecondaryPositionerIncrementSign,"SecondaryPositionerIncrementSign");
		nameByTag.put(TagFromName.ApplicationName,"ApplicationName");
		nameByTag.put(TagFromName.ApplicationVersion,"ApplicationVersion");
		nameByTag.put(TagFromName.ApplicationManufacturer,"ApplicationManufacturer");
		nameByTag.put(TagFromName.AlgorithmType,"AlgorithmType");
		nameByTag.put(TagFromName.AlgorithmDescription,"AlgorithmDescription");
		nameByTag.put(TagFromName.XRay3DReconstructionSequence,"XRay3DReconstructionSequence");
		nameByTag.put(TagFromName.ReconstructionDescription,"ReconstructionDescription");
		nameByTag.put(TagFromName.PerProjectionAcquisitionSequence,"PerProjectionAcquisitionSequence");
		nameByTag.put(TagFromName.DetectorPositionSequence,"DetectorPositionSequence");
		nameByTag.put(TagFromName.XRayAcquisitionDoseSequence,"XRayAcquisitionDoseSequence");
		nameByTag.put(TagFromName.XRaySourceIsocenterPrimaryAngle,"XRaySourceIsocenterPrimaryAngle");
		nameByTag.put(TagFromName.XRaySourceIsocenterSecondaryAngle,"XRaySourceIsocenterSecondaryAngle");
		nameByTag.put(TagFromName.BreastSupportIsocenterPrimaryAngle,"BreastSupportIsocenterPrimaryAngle");
		nameByTag.put(TagFromName.BreastSupportIsocenterSecondaryAngle,"BreastSupportIsocenterSecondaryAngle");
		nameByTag.put(TagFromName.BreastSupportXPositionToIsocenter,"BreastSupportXPositionToIsocenter");
		nameByTag.put(TagFromName.BreastSupportYPositionToIsocenter,"BreastSupportYPositionToIsocenter");
		nameByTag.put(TagFromName.BreastSupportZPositionToIsocenter,"BreastSupportZPositionToIsocenter");
		nameByTag.put(TagFromName.DetectorIsocenterPrimaryAngle,"DetectorIsocenterPrimaryAngle");
		nameByTag.put(TagFromName.DetectorIsocenterSecondaryAngle,"DetectorIsocenterSecondaryAngle");
		nameByTag.put(TagFromName.DetectorXPositionToIsocenter,"DetectorXPositionToIsocenter");
		nameByTag.put(TagFromName.DetectorYPositionToIsocenter,"DetectorYPositionToIsocenter");
		nameByTag.put(TagFromName.DetectorZPositionToIsocenter,"DetectorZPositionToIsocenter");
		nameByTag.put(TagFromName.XRayGridSequence,"XRayGridSequence");
		nameByTag.put(TagFromName.XRayFilterSequence,"XRayFilterSequence");
		nameByTag.put(TagFromName.DetectorActiveAreaTLHCPosition,"DetectorActiveAreaTLHCPosition");
		nameByTag.put(TagFromName.DetectorActiveAreaOrientation,"DetectorActiveAreaOrientation");
		nameByTag.put(TagFromName.PositionerPrimaryAngleDirection,"PositionerPrimaryAngleDirection");
		nameByTag.put(TagFromName.DiffusionBMatrixSequence,"DiffusionBMatrixSequence");
		nameByTag.put(TagFromName.DiffusionBValueXX,"DiffusionBValueXX");
		nameByTag.put(TagFromName.DiffusionBValueXY,"DiffusionBValueXY");
		nameByTag.put(TagFromName.DiffusionBValueXZ,"DiffusionBValueXZ");
		nameByTag.put(TagFromName.DiffusionBValueYY,"DiffusionBValueYY");
		nameByTag.put(TagFromName.DiffusionBValueYZ,"DiffusionBValueYZ");
		nameByTag.put(TagFromName.DiffusionBValueZZ,"DiffusionBValueZZ");
		nameByTag.put(TagFromName.FunctionalMRSequence,"FunctionalMRSequence");
		nameByTag.put(TagFromName.FunctionalSettlingPhaseFramesPresent,"FunctionalSettlingPhaseFramesPresent");
		nameByTag.put(TagFromName.FunctionalSyncPulse,"FunctionalSyncPulse");
		nameByTag.put(TagFromName.SettlingPhaseFrame,"SettlingPhaseFrame");
		nameByTag.put(TagFromName.DecayCorrectionDateTime,"DecayCorrectionDateTime");
		nameByTag.put(TagFromName.StartDensityThreshold,"StartDensityThreshold");
		nameByTag.put(TagFromName.StartRelativeDensityDifferenceThreshold,"StartRelativeDensityDifferenceThreshold");
		nameByTag.put(TagFromName.StartCardiacTriggerCountThreshold,"StartCardiacTriggerCountThreshold");
		nameByTag.put(TagFromName.StartRespiratoryTriggerCountThreshold,"StartRespiratoryTriggerCountThreshold");
		nameByTag.put(TagFromName.TerminationCountsThreshold,"TerminationCountsThreshold");
		nameByTag.put(TagFromName.TerminationDensityThreshold,"TerminationDensityThreshold");
		nameByTag.put(TagFromName.TerminationRelativeDensityThreshold,"TerminationRelativeDensityThreshold");
		nameByTag.put(TagFromName.TerminationTimeThreshold,"TerminationTimeThreshold");
		nameByTag.put(TagFromName.TerminationCardiacTriggerCountThreshold,"TerminationCardiacTriggerCountThreshold");
		nameByTag.put(TagFromName.TerminationRespiratoryTriggerCountThreshold,"TerminationRespiratoryTriggerCountThreshold");
		nameByTag.put(TagFromName.DetectorGeometry,"DetectorGeometry");
		nameByTag.put(TagFromName.TransverseDetectorSeparation,"TransverseDetectorSeparation");
		nameByTag.put(TagFromName.AxialDetectorDimension,"AxialDetectorDimension");
		nameByTag.put(TagFromName.RadiopharmaceuticalAgentNumber,"RadiopharmaceuticalAgentNumber");
		nameByTag.put(TagFromName.PETFrameAcquisitionSequence,"PETFrameAcquisitionSequence");
		nameByTag.put(TagFromName.PETDetectorMotionDetailsSequence,"PETDetectorMotionDetailsSequence");
		nameByTag.put(TagFromName.PETTableDynamicsSequence,"PETTableDynamicsSequence");
		nameByTag.put(TagFromName.PETPositionSequence,"PETPositionSequence");
		nameByTag.put(TagFromName.PETFrameCorrectionFactorsSequence,"PETFrameCorrectionFactorsSequence");
		nameByTag.put(TagFromName.RadiopharmaceuticalUsageSequence,"RadiopharmaceuticalUsageSequence");
		nameByTag.put(TagFromName.AttenuationCorrectionSource,"AttenuationCorrectionSource");
		nameByTag.put(TagFromName.NumberOfIterations,"NumberOfIterations");
		nameByTag.put(TagFromName.NumberOfSubsets,"NumberOfSubsets");
		nameByTag.put(TagFromName.PETReconstructionSequence,"PETReconstructionSequence");
		nameByTag.put(TagFromName.PETFrameTypeSequence,"PETFrameTypeSequence");
		nameByTag.put(TagFromName.TimeOfFlightInformationUsed,"TimeOfFlightInformationUsed");
		nameByTag.put(TagFromName.ReconstructionType,"ReconstructionType");
		nameByTag.put(TagFromName.DecayCorrected,"DecayCorrected");
		nameByTag.put(TagFromName.AttenuationCorrected,"AttenuationCorrected");
		nameByTag.put(TagFromName.ScatterCorrected,"ScatterCorrected");
		nameByTag.put(TagFromName.DeadTimeCorrected,"DeadTimeCorrected");
		nameByTag.put(TagFromName.GantryMotionCorrected,"GantryMotionCorrected");
		nameByTag.put(TagFromName.PatientMotionCorrected,"PatientMotionCorrected");
		nameByTag.put(TagFromName.CountLossNormalizationCorrected,"CountLossNormalizationCorrected");
		nameByTag.put(TagFromName.RandomsCorrected,"RandomsCorrected");
		nameByTag.put(TagFromName.NonUniformRadialSamplingCorrected,"NonUniformRadialSamplingCorrected");
		nameByTag.put(TagFromName.SensitivityCalibrated,"SensitivityCalibrated");
		nameByTag.put(TagFromName.DetectorNormalizationCorrection,"DetectorNormalizationCorrection");
		nameByTag.put(TagFromName.IterativeReconstructionMethod,"IterativeReconstructionMethod");
		nameByTag.put(TagFromName.AttenuationCorrectionTemporalRelationship,"AttenuationCorrectionTemporalRelationship");
		nameByTag.put(TagFromName.PatientPhysiologicalStateSequence,"PatientPhysiologicalStateSequence");
		nameByTag.put(TagFromName.PatientPhysiologicalStateCodeSequence,"PatientPhysiologicalStateCodeSequence");
		nameByTag.put(TagFromName.DepthsOfFocus,"DepthsOfFocus");
		nameByTag.put(TagFromName.ExcludedIntervalsSequence,"ExcludedIntervalsSequence");
		nameByTag.put(TagFromName.ExclusionStartDateTime,"ExclusionStartDateTime");
		nameByTag.put(TagFromName.ExclusionDuration,"ExclusionDuration");
		nameByTag.put(TagFromName.USImageDescriptionSequence,"USImageDescriptionSequence");
		nameByTag.put(TagFromName.ImageDataTypeSequence,"ImageDataTypeSequence");
		nameByTag.put(TagFromName.DataType,"DataType");
		nameByTag.put(TagFromName.TransducerScanPatternCodeSequence,"TransducerScanPatternCodeSequence");
		nameByTag.put(TagFromName.AliasedDataType,"AliasedDataType");
		nameByTag.put(TagFromName.PositionMeasuringDeviceUsed,"PositionMeasuringDeviceUsed");
		nameByTag.put(TagFromName.TransducerGeometryCodeSequence,"TransducerGeometryCodeSequence");
		nameByTag.put(TagFromName.TransducerBeamSteeringCodeSequence,"TransducerBeamSteeringCodeSequence");
		nameByTag.put(TagFromName.TransducerApplicationCodeSequence,"TransducerApplicationCodeSequence");
		nameByTag.put(TagFromName.ZeroVelocityPixelValue,"ZeroVelocityPixelValue");
		nameByTag.put(TagFromName.ReferenceLocationLabel,"ReferenceLocationLabel");
		nameByTag.put(TagFromName.ReferenceLocationDescription,"ReferenceLocationDescription");
		nameByTag.put(TagFromName.ReferenceBasisCodeSequence,"ReferenceBasisCodeSequence");
		nameByTag.put(TagFromName.ReferenceGeometryCodeSequence,"ReferenceGeometryCodeSequence");
		nameByTag.put(TagFromName.OffsetDistance,"OffsetDistance");
		nameByTag.put(TagFromName.OffsetDirection,"OffsetDirection");
		nameByTag.put(TagFromName.PotentialScheduledProtocolCodeSequence,"PotentialScheduledProtocolCodeSequence");
		nameByTag.put(TagFromName.PotentialRequestedProcedureCodeSequence,"PotentialRequestedProcedureCodeSequence");
		nameByTag.put(TagFromName.PotentialReasonsForProcedure,"PotentialReasonsForProcedure");
		nameByTag.put(TagFromName.PotentialReasonsForProcedureCodeSequence,"PotentialReasonsForProcedureCodeSequence");
		nameByTag.put(TagFromName.PotentialDiagnosticTasks,"PotentialDiagnosticTasks");
		nameByTag.put(TagFromName.ContraindicationsCodeSequence,"ContraindicationsCodeSequence");
		nameByTag.put(TagFromName.ReferencedDefinedProtocolSequence,"ReferencedDefinedProtocolSequence");
		nameByTag.put(TagFromName.ReferencedPerformedProtocolSequence,"ReferencedPerformedProtocolSequence");
		nameByTag.put(TagFromName.PredecessorProtocolSequence,"PredecessorProtocolSequence");
		nameByTag.put(TagFromName.ProtocolPlanningInformation,"ProtocolPlanningInformation");
		nameByTag.put(TagFromName.ProtocolDesignRationale,"ProtocolDesignRationale");
		nameByTag.put(TagFromName.PatientSpecificationSequence,"PatientSpecificationSequence");
		nameByTag.put(TagFromName.ModelSpecificationSequence,"ModelSpecificationSequence");
		nameByTag.put(TagFromName.ParametersSpecificationSequence,"ParametersSpecificationSequence");
		nameByTag.put(TagFromName.InstructionSequence,"InstructionSequence");
		nameByTag.put(TagFromName.InstructionIndex,"InstructionIndex");
		nameByTag.put(TagFromName.InstructionText,"InstructionText");
		nameByTag.put(TagFromName.InstructionDescription,"InstructionDescription");
		nameByTag.put(TagFromName.InstructionPerformedFlag,"InstructionPerformedFlag");
		nameByTag.put(TagFromName.InstructionPerformedDateTime,"InstructionPerformedDateTime");
		nameByTag.put(TagFromName.InstructionPerformanceComment,"InstructionPerformanceComment");
		nameByTag.put(TagFromName.PatientPositioningInstructionSequence,"PatientPositioningInstructionSequence");
		nameByTag.put(TagFromName.PositioningMethodCodeSequence,"PositioningMethodCodeSequence");
		nameByTag.put(TagFromName.PositioningLandmarkSequence,"PositioningLandmarkSequence");
		nameByTag.put(TagFromName.TargetFrameOfReferenceUID,"TargetFrameOfReferenceUID");
		nameByTag.put(TagFromName.AcquisitionProtocolElementSpecificationSequence,"AcquisitionProtocolElementSpecificationSequence");
		nameByTag.put(TagFromName.AcquisitionProtocolElementSequence,"AcquisitionProtocolElementSequence");
		nameByTag.put(TagFromName.ProtocolElementNumber,"ProtocolElementNumber");
		nameByTag.put(TagFromName.ProtocolElementName,"ProtocolElementName");
		nameByTag.put(TagFromName.ProtocolElementCharacteristicsSummary,"ProtocolElementCharacteristicsSummary");
		nameByTag.put(TagFromName.ProtocolElementPurpose,"ProtocolElementPurpose");
		nameByTag.put(TagFromName.AcquisitionMotion,"AcquisitionMotion");
		nameByTag.put(TagFromName.AcquisitionStartLocationSequence,"AcquisitionStartLocationSequence");
		nameByTag.put(TagFromName.AcquisitionEndLocationSequence,"AcquisitionEndLocationSequence");
		nameByTag.put(TagFromName.ReconstructionProtocolElementSpecificationSequence,"ReconstructionProtocolElementSpecificationSequence");
		nameByTag.put(TagFromName.ReconstructionProtocolElementSequence,"ReconstructionProtocolElementSequence");
		nameByTag.put(TagFromName.StorageProtocolElementSpecificationSequence,"StorageProtocolElementSpecificationSequence");
		nameByTag.put(TagFromName.StorageProtocolElementSequence,"StorageProtocolElementSequence");
		nameByTag.put(TagFromName.RequestedSeriesDescription,"RequestedSeriesDescription");
		nameByTag.put(TagFromName.SourceAcquisitionProtocolElementNumber,"SourceAcquisitionProtocolElementNumber");
		nameByTag.put(TagFromName.SourceAcquisitionBeamNumber,"SourceAcquisitionBeamNumber");
		nameByTag.put(TagFromName.SourceReconstructionProtocolElementNumber,"SourceReconstructionProtocolElementNumber");
		nameByTag.put(TagFromName.ReconstructionStartLocationSequence,"ReconstructionStartLocationSequence");
		nameByTag.put(TagFromName.ReconstructionEndLocationSequence,"ReconstructionEndLocationSequence");
		nameByTag.put(TagFromName.ReconstructionAlgorithmSequence,"ReconstructionAlgorithmSequence");
		nameByTag.put(TagFromName.ReconstructionTargetCenterLocationSequence,"ReconstructionTargetCenterLocationSequence");
		nameByTag.put(TagFromName.ImageFilterDescription,"ImageFilterDescription");
		nameByTag.put(TagFromName.CTDIvolNotificationTrigger,"CTDIvolNotificationTrigger");
		nameByTag.put(TagFromName.DLPNotificationTrigger,"DLPNotificationTrigger");
		nameByTag.put(TagFromName.AutoKVPSelectionType,"AutoKVPSelectionType");
		nameByTag.put(TagFromName.AutoKVPUpperBound,"AutoKVPUpperBound");
		nameByTag.put(TagFromName.AutoKVPLowerBound,"AutoKVPLowerBound");
		nameByTag.put(TagFromName.ProtocolDefinedPatientPosition,"ProtocolDefinedPatientPosition");
		nameByTag.put(TagFromName.ContributingEquipmentSequence,"ContributingEquipmentSequence");
		nameByTag.put(TagFromName.ContributionDateTime,"ContributionDateTime");
		nameByTag.put(TagFromName.ContributionDescription,"ContributionDescription");
		nameByTag.put(TagFromName.StudyInstanceUID,"StudyInstanceUID");
		nameByTag.put(TagFromName.SeriesInstanceUID,"SeriesInstanceUID");
		nameByTag.put(TagFromName.StudyID,"StudyID");
		nameByTag.put(TagFromName.SeriesNumber,"SeriesNumber");
		nameByTag.put(TagFromName.AcquisitionNumber,"AcquisitionNumber");
		nameByTag.put(TagFromName.InstanceNumber,"InstanceNumber");
		nameByTag.put(TagFromName.IsotopeNumber,"IsotopeNumber");
		nameByTag.put(TagFromName.PhaseNumber,"PhaseNumber");
		nameByTag.put(TagFromName.IntervalNumber,"IntervalNumber");
		nameByTag.put(TagFromName.TimeSlotNumber,"TimeSlotNumber");
		nameByTag.put(TagFromName.AngleNumber,"AngleNumber");
		nameByTag.put(TagFromName.ItemNumber,"ItemNumber");
		nameByTag.put(TagFromName.PatientOrientation,"PatientOrientation");
		nameByTag.put(TagFromName.OverlayNumber,"OverlayNumber");
		nameByTag.put(TagFromName.CurveNumber,"CurveNumber");
		nameByTag.put(TagFromName.LUTNumber,"LUTNumber");
		nameByTag.put(TagFromName.ImagePosition,"ImagePosition");
		nameByTag.put(TagFromName.ImagePositionPatient,"ImagePositionPatient");
		nameByTag.put(TagFromName.ImageOrientation,"ImageOrientation");
		nameByTag.put(TagFromName.ImageOrientationPatient,"ImageOrientationPatient");
		nameByTag.put(TagFromName.Location,"Location");
		nameByTag.put(TagFromName.FrameOfReferenceUID,"FrameOfReferenceUID");
		nameByTag.put(TagFromName.Laterality,"Laterality");
		nameByTag.put(TagFromName.ImageLaterality,"ImageLaterality");
		nameByTag.put(TagFromName.ImageGeometryType,"ImageGeometryType");
		nameByTag.put(TagFromName.MaskingImage,"MaskingImage");
		nameByTag.put(TagFromName.ReportNumber,"ReportNumber");
		nameByTag.put(TagFromName.TemporalPositionIdentifier,"TemporalPositionIdentifier");
		nameByTag.put(TagFromName.NumberOfTemporalPositions,"NumberOfTemporalPositions");
		nameByTag.put(TagFromName.TemporalResolution,"TemporalResolution");
		nameByTag.put(TagFromName.SynchronizationFrameOfReferenceUID,"SynchronizationFrameOfReferenceUID");
		nameByTag.put(TagFromName.SOPInstanceUIDOfConcatenationSource,"SOPInstanceUIDOfConcatenationSource");
		nameByTag.put(TagFromName.SeriesInStudy,"SeriesInStudy");
		nameByTag.put(TagFromName.AcquisitionsInSeries,"AcquisitionsInSeries");
		nameByTag.put(TagFromName.ImagesInAcquisition,"ImagesInAcquisition");
		nameByTag.put(TagFromName.ImagesInSeries,"ImagesInSeries");
		nameByTag.put(TagFromName.AcquisitionsInStudy,"AcquisitionsInStudy");
		nameByTag.put(TagFromName.ImagesInStudy,"ImagesInStudy");
		nameByTag.put(TagFromName.Reference,"Reference");
		nameByTag.put(TagFromName.TargetPositionReferenceIndicator,"TargetPositionReferenceIndicator");
		nameByTag.put(TagFromName.PositionReferenceIndicator,"PositionReferenceIndicator");
		nameByTag.put(TagFromName.SliceLocation,"SliceLocation");
		nameByTag.put(TagFromName.OtherStudyNumbers,"OtherStudyNumbers");
		nameByTag.put(TagFromName.NumberOfPatientRelatedStudies,"NumberOfPatientRelatedStudies");
		nameByTag.put(TagFromName.NumberOfPatientRelatedSeries,"NumberOfPatientRelatedSeries");
		nameByTag.put(TagFromName.NumberOfPatientRelatedInstances,"NumberOfPatientRelatedInstances");
		nameByTag.put(TagFromName.NumberOfStudyRelatedSeries,"NumberOfStudyRelatedSeries");
		nameByTag.put(TagFromName.NumberOfStudyRelatedInstances,"NumberOfStudyRelatedInstances");
		nameByTag.put(TagFromName.NumberOfSeriesRelatedInstances,"NumberOfSeriesRelatedInstances");
		nameByTag.put(TagFromName.SourceImageID,"SourceImageID");
		nameByTag.put(TagFromName.ModifyingDeviceID,"ModifyingDeviceID");
		nameByTag.put(TagFromName.ModifiedImageID,"ModifiedImageID");
		nameByTag.put(TagFromName.ModifiedImageDate,"ModifiedImageDate");
		nameByTag.put(TagFromName.ModifyingDeviceManufacturer,"ModifyingDeviceManufacturer");
		nameByTag.put(TagFromName.ModifiedImageTime,"ModifiedImageTime");
		nameByTag.put(TagFromName.ModifiedImageDescription,"ModifiedImageDescription");
		nameByTag.put(TagFromName.ImageComments,"ImageComments");
		nameByTag.put(TagFromName.OriginalImageIdentification,"OriginalImageIdentification");
		nameByTag.put(TagFromName.OriginalImageIdentificationNomenclature,"OriginalImageIdentificationNomenclature");
		nameByTag.put(TagFromName.StackID,"StackID");
		nameByTag.put(TagFromName.InStackPositionNumber,"InStackPositionNumber");
		nameByTag.put(TagFromName.FrameAnatomySequence,"FrameAnatomySequence");
		nameByTag.put(TagFromName.FrameLaterality,"FrameLaterality");
		nameByTag.put(TagFromName.FrameContentSequence,"FrameContentSequence");
		nameByTag.put(TagFromName.PlanePositionSequence,"PlanePositionSequence");
		nameByTag.put(TagFromName.PlaneOrientationSequence,"PlaneOrientationSequence");
		nameByTag.put(TagFromName.TemporalPositionIndex,"TemporalPositionIndex");
		nameByTag.put(TagFromName.NominalCardiacTriggerDelayTime,"NominalCardiacTriggerDelayTime");
		nameByTag.put(TagFromName.NominalCardiacTriggerTimePriorToRPeak,"NominalCardiacTriggerTimePriorToRPeak");
		nameByTag.put(TagFromName.ActualCardiacTriggerTimePriorToRPeak,"ActualCardiacTriggerTimePriorToRPeak");
		nameByTag.put(TagFromName.FrameAcquisitionNumber,"FrameAcquisitionNumber");
		nameByTag.put(TagFromName.DimensionIndexValues,"DimensionIndexValues");
		nameByTag.put(TagFromName.FrameComments,"FrameComments");
		nameByTag.put(TagFromName.ConcatenationUID,"ConcatenationUID");
		nameByTag.put(TagFromName.InConcatenationNumber,"InConcatenationNumber");
		nameByTag.put(TagFromName.InConcatenationTotalNumber,"InConcatenationTotalNumber");
		nameByTag.put(TagFromName.DimensionOrganizationUID,"DimensionOrganizationUID");
		nameByTag.put(TagFromName.DimensionIndexPointer,"DimensionIndexPointer");
		nameByTag.put(TagFromName.FunctionalGroupPointer,"FunctionalGroupPointer");
		nameByTag.put(TagFromName.UnassignedSharedConvertedAttributesSequence,"UnassignedSharedConvertedAttributesSequence");
		nameByTag.put(TagFromName.UnassignedPerFrameConvertedAttributesSequence,"UnassignedPerFrameConvertedAttributesSequence");
		nameByTag.put(TagFromName.ConversionSourceAttributesSequence,"ConversionSourceAttributesSequence");
		nameByTag.put(TagFromName.DimensionIndexPrivateCreator,"DimensionIndexPrivateCreator");
		nameByTag.put(TagFromName.DimensionOrganizationSequence,"DimensionOrganizationSequence");
		nameByTag.put(TagFromName.DimensionIndexSequence,"DimensionIndexSequence");
		nameByTag.put(TagFromName.ConcatenationFrameOffsetNumber,"ConcatenationFrameOffsetNumber");
		nameByTag.put(TagFromName.FunctionalGroupPrivateCreator,"FunctionalGroupPrivateCreator");
		nameByTag.put(TagFromName.NominalPercentageOfCardiacPhase,"NominalPercentageOfCardiacPhase");
		nameByTag.put(TagFromName.NominalPercentageOfRespiratoryPhase,"NominalPercentageOfRespiratoryPhase");
		nameByTag.put(TagFromName.StartingRespiratoryAmplitude,"StartingRespiratoryAmplitude");
		nameByTag.put(TagFromName.StartingRespiratoryPhase,"StartingRespiratoryPhase");
		nameByTag.put(TagFromName.EndingRespiratoryAmplitude,"EndingRespiratoryAmplitude");
		nameByTag.put(TagFromName.EndingRespiratoryPhase,"EndingRespiratoryPhase");
		nameByTag.put(TagFromName.RespiratoryTriggerType,"RespiratoryTriggerType");
		nameByTag.put(TagFromName.RRIntervalTimeNominal,"RRIntervalTimeNominal");
		nameByTag.put(TagFromName.ActualCardiacTriggerDelayTime,"ActualCardiacTriggerDelayTime");
		nameByTag.put(TagFromName.RespiratorySynchronizationSequence,"RespiratorySynchronizationSequence");
		nameByTag.put(TagFromName.RespiratoryIntervalTime,"RespiratoryIntervalTime");
		nameByTag.put(TagFromName.NominalRespiratoryTriggerDelayTime,"NominalRespiratoryTriggerDelayTime");
		nameByTag.put(TagFromName.RespiratoryTriggerDelayThreshold,"RespiratoryTriggerDelayThreshold");
		nameByTag.put(TagFromName.ActualRespiratoryTriggerDelayTime,"ActualRespiratoryTriggerDelayTime");
		nameByTag.put(TagFromName.ImagePositionVolume,"ImagePositionVolume");
		nameByTag.put(TagFromName.ImageOrientationVolume,"ImageOrientationVolume");
		nameByTag.put(TagFromName.UltrasoundAcquisitionGeometry,"UltrasoundAcquisitionGeometry");
		nameByTag.put(TagFromName.ApexPosition,"ApexPosition");
		nameByTag.put(TagFromName.VolumeToTransducerMappingMatrix,"VolumeToTransducerMappingMatrix");
		nameByTag.put(TagFromName.VolumeToTableMappingMatrix,"VolumeToTableMappingMatrix");
		nameByTag.put(TagFromName.VolumeToTransducerRelationship,"VolumeToTransducerRelationship");
		nameByTag.put(TagFromName.PatientFrameOfReferenceSource,"PatientFrameOfReferenceSource");
		nameByTag.put(TagFromName.TemporalPositionTimeOffset,"TemporalPositionTimeOffset");
		nameByTag.put(TagFromName.PlanePositionVolumeSequence,"PlanePositionVolumeSequence");
		nameByTag.put(TagFromName.PlaneOrientationVolumeSequence,"PlaneOrientationVolumeSequence");
		nameByTag.put(TagFromName.TemporalPositionSequence,"TemporalPositionSequence");
		nameByTag.put(TagFromName.DimensionOrganizationType,"DimensionOrganizationType");
		nameByTag.put(TagFromName.VolumeFrameOfReferenceUID,"VolumeFrameOfReferenceUID");
		nameByTag.put(TagFromName.TableFrameOfReferenceUID,"TableFrameOfReferenceUID");
		nameByTag.put(TagFromName.DimensionDescriptionLabel,"DimensionDescriptionLabel");
		nameByTag.put(TagFromName.PatientOrientationInFrameSequence,"PatientOrientationInFrameSequence");
		nameByTag.put(TagFromName.FrameLabel,"FrameLabel");
		nameByTag.put(TagFromName.AcquisitionIndex,"AcquisitionIndex");
		nameByTag.put(TagFromName.ContributingSOPInstancesReferenceSequence,"ContributingSOPInstancesReferenceSequence");
		nameByTag.put(TagFromName.ReconstructionIndex,"ReconstructionIndex");
		nameByTag.put(TagFromName.LightPathFilterPassThroughWavelength,"LightPathFilterPassThroughWavelength");
		nameByTag.put(TagFromName.LightPathFilterPassBand,"LightPathFilterPassBand");
		nameByTag.put(TagFromName.ImagePathFilterPassThroughWavelength,"ImagePathFilterPassThroughWavelength");
		nameByTag.put(TagFromName.ImagePathFilterPassBand,"ImagePathFilterPassBand");
		nameByTag.put(TagFromName.PatientEyeMovementCommanded,"PatientEyeMovementCommanded");
		nameByTag.put(TagFromName.PatientEyeMovementCommandCodeSequence,"PatientEyeMovementCommandCodeSequence");
		nameByTag.put(TagFromName.SphericalLensPower,"SphericalLensPower");
		nameByTag.put(TagFromName.CylinderLensPower,"CylinderLensPower");
		nameByTag.put(TagFromName.CylinderAxis,"CylinderAxis");
		nameByTag.put(TagFromName.EmmetropicMagnification,"EmmetropicMagnification");
		nameByTag.put(TagFromName.IntraOcularPressure,"IntraOcularPressure");
		nameByTag.put(TagFromName.HorizontalFieldOfView,"HorizontalFieldOfView");
		nameByTag.put(TagFromName.PupilDilated,"PupilDilated");
		nameByTag.put(TagFromName.DegreeOfDilation,"DegreeOfDilation");
		nameByTag.put(TagFromName.StereoBaselineAngle,"StereoBaselineAngle");
		nameByTag.put(TagFromName.StereoBaselineDisplacement,"StereoBaselineDisplacement");
		nameByTag.put(TagFromName.StereoHorizontalPixelOffset,"StereoHorizontalPixelOffset");
		nameByTag.put(TagFromName.StereoVerticalPixelOffset,"StereoVerticalPixelOffset");
		nameByTag.put(TagFromName.StereoRotation,"StereoRotation");
		nameByTag.put(TagFromName.AcquisitionDeviceTypeCodeSequence,"AcquisitionDeviceTypeCodeSequence");
		nameByTag.put(TagFromName.IlluminationTypeCodeSequence,"IlluminationTypeCodeSequence");
		nameByTag.put(TagFromName.LightPathFilterTypeStackCodeSequence,"LightPathFilterTypeStackCodeSequence");
		nameByTag.put(TagFromName.ImagePathFilterTypeStackCodeSequence,"ImagePathFilterTypeStackCodeSequence");
		nameByTag.put(TagFromName.LensesCodeSequence,"LensesCodeSequence");
		nameByTag.put(TagFromName.ChannelDescriptionCodeSequence,"ChannelDescriptionCodeSequence");
		nameByTag.put(TagFromName.RefractiveStateSequence,"RefractiveStateSequence");
		nameByTag.put(TagFromName.MydriaticAgentCodeSequence,"MydriaticAgentCodeSequence");
		nameByTag.put(TagFromName.RelativeImagePositionCodeSequence,"RelativeImagePositionCodeSequence");
		nameByTag.put(TagFromName.CameraAngleOfView,"CameraAngleOfView");
		nameByTag.put(TagFromName.StereoPairsSequence,"StereoPairsSequence");
		nameByTag.put(TagFromName.LeftImageSequence,"LeftImageSequence");
		nameByTag.put(TagFromName.RightImageSequence,"RightImageSequence");
		nameByTag.put(TagFromName.StereoPairsPresent,"StereoPairsPresent");
		nameByTag.put(TagFromName.AxialLengthOfTheEye,"AxialLengthOfTheEye");
		nameByTag.put(TagFromName.OphthalmicFrameLocationSequence,"OphthalmicFrameLocationSequence");
		nameByTag.put(TagFromName.ReferenceCoordinates,"ReferenceCoordinates");
		nameByTag.put(TagFromName.DepthSpatialResolution,"DepthSpatialResolution");
		nameByTag.put(TagFromName.MaximumDepthDistortion,"MaximumDepthDistortion");
		nameByTag.put(TagFromName.AlongScanSpatialResolution,"AlongScanSpatialResolution");
		nameByTag.put(TagFromName.MaximumAlongScanDistortion,"MaximumAlongScanDistortion");
		nameByTag.put(TagFromName.OphthalmicImageOrientation,"OphthalmicImageOrientation");
		nameByTag.put(TagFromName.DepthOfTransverseImage,"DepthOfTransverseImage");
		nameByTag.put(TagFromName.MydriaticAgentConcentrationUnitsSequence,"MydriaticAgentConcentrationUnitsSequence");
		nameByTag.put(TagFromName.AcrossScanSpatialResolution,"AcrossScanSpatialResolution");
		nameByTag.put(TagFromName.MaximumAcrossScanDistortion,"MaximumAcrossScanDistortion");
		nameByTag.put(TagFromName.MydriaticAgentConcentration,"MydriaticAgentConcentration");
		nameByTag.put(TagFromName.IlluminationWaveLength,"IlluminationWaveLength");
		nameByTag.put(TagFromName.IlluminationPower,"IlluminationPower");
		nameByTag.put(TagFromName.IlluminationBandwidth,"IlluminationBandwidth");
		nameByTag.put(TagFromName.MydriaticAgentSequence,"MydriaticAgentSequence");
		nameByTag.put(TagFromName.OphthalmicAxialMeasurementsRightEyeSequence,"OphthalmicAxialMeasurementsRightEyeSequence");
		nameByTag.put(TagFromName.OphthalmicAxialMeasurementsLeftEyeSequence,"OphthalmicAxialMeasurementsLeftEyeSequence");
		nameByTag.put(TagFromName.OphthalmicAxialMeasurementsDeviceType,"OphthalmicAxialMeasurementsDeviceType");
		nameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsType,"OphthalmicAxialLengthMeasurementsType");
		nameByTag.put(TagFromName.OphthalmicAxialLengthSequence,"OphthalmicAxialLengthSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLength,"OphthalmicAxialLength");
		nameByTag.put(TagFromName.LensStatusCodeSequence,"LensStatusCodeSequence");
		nameByTag.put(TagFromName.VitreousStatusCodeSequence,"VitreousStatusCodeSequence");
		nameByTag.put(TagFromName.IOLFormulaCodeSequence,"IOLFormulaCodeSequence");
		nameByTag.put(TagFromName.IOLFormulaDetail,"IOLFormulaDetail");
		nameByTag.put(TagFromName.KeratometerIndex,"KeratometerIndex");
		nameByTag.put(TagFromName.SourceOfOphthalmicAxialLengthCodeSequence,"SourceOfOphthalmicAxialLengthCodeSequence");
		nameByTag.put(TagFromName.TargetRefraction,"TargetRefraction");
		nameByTag.put(TagFromName.RefractiveProcedureOccurred,"RefractiveProcedureOccurred");
		nameByTag.put(TagFromName.RefractiveSurgeryTypeCodeSequence,"RefractiveSurgeryTypeCodeSequence");
		nameByTag.put(TagFromName.OphthalmicUltrasoundMethodCodeSequence,"OphthalmicUltrasoundMethodCodeSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSequence,"OphthalmicAxialLengthMeasurementsSequence");
		nameByTag.put(TagFromName.IOLPower,"IOLPower");
		nameByTag.put(TagFromName.PredictedRefractiveError,"PredictedRefractiveError");
		nameByTag.put(TagFromName.OphthalmicAxialLengthVelocity,"OphthalmicAxialLengthVelocity");
		nameByTag.put(TagFromName.LensStatusDescription,"LensStatusDescription");
		nameByTag.put(TagFromName.VitreousStatusDescription,"VitreousStatusDescription");
		nameByTag.put(TagFromName.IOLPowerSequence,"IOLPowerSequence");
		nameByTag.put(TagFromName.LensConstantSequence,"LensConstantSequence");
		nameByTag.put(TagFromName.IOLManufacturer,"IOLManufacturer");
		nameByTag.put(TagFromName.LensConstantDescription,"LensConstantDescription");
		nameByTag.put(TagFromName.ImplantName,"ImplantName");
		nameByTag.put(TagFromName.KeratometryMeasurementTypeCodeSequence,"KeratometryMeasurementTypeCodeSequence");
		nameByTag.put(TagFromName.ImplantPartNumber,"ImplantPartNumber");
		nameByTag.put(TagFromName.ReferencedOphthalmicAxialMeasurementsSequence,"ReferencedOphthalmicAxialMeasurementsSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence,"OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence");
		nameByTag.put(TagFromName.RefractiveErrorBeforeRefractiveSurgeryCodeSequence,"RefractiveErrorBeforeRefractiveSurgeryCodeSequence");
		nameByTag.put(TagFromName.IOLPowerForExactEmmetropia,"IOLPowerForExactEmmetropia");
		nameByTag.put(TagFromName.IOLPowerForExactTargetRefraction,"IOLPowerForExactTargetRefraction");
		nameByTag.put(TagFromName.AnteriorChamberDepthDefinitionCodeSequence,"AnteriorChamberDepthDefinitionCodeSequence");
		nameByTag.put(TagFromName.LensThicknessSequence,"LensThicknessSequence");
		nameByTag.put(TagFromName.AnteriorChamberDepthSequence,"AnteriorChamberDepthSequence");
		nameByTag.put(TagFromName.LensThickness,"LensThickness");
		nameByTag.put(TagFromName.AnteriorChamberDepth,"AnteriorChamberDepth");
		nameByTag.put(TagFromName.SourceOfLensThicknessDataCodeSequence,"SourceOfLensThicknessDataCodeSequence");
		nameByTag.put(TagFromName.SourceOfAnteriorChamberDepthDataCodeSequence,"SourceOfAnteriorChamberDepthDataCodeSequence");
		nameByTag.put(TagFromName.SourceOfRefractiveMeasurementsSequence,"SourceOfRefractiveMeasurementsSequence");
		nameByTag.put(TagFromName.SourceOfRefractiveMeasurementsCodeSequence,"SourceOfRefractiveMeasurementsCodeSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementModified,"OphthalmicAxialLengthMeasurementModified");
		nameByTag.put(TagFromName.OphthalmicAxialLengthDataSourceCodeSequence,"OphthalmicAxialLengthDataSourceCodeSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthAcquisitionMethodCodeSequence,"OphthalmicAxialLengthAcquisitionMethodCodeSequence");
		nameByTag.put(TagFromName.SignalToNoiseRatio,"SignalToNoiseRatio");
		nameByTag.put(TagFromName.OphthalmicAxialLengthDataSourceDescription,"OphthalmicAxialLengthDataSourceDescription");
		nameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsTotalLengthSequence,"OphthalmicAxialLengthMeasurementsTotalLengthSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSegmentalLengthSequence,"OphthalmicAxialLengthMeasurementsSegmentalLengthSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsLengthSummationSequence,"OphthalmicAxialLengthMeasurementsLengthSummationSequence");
		nameByTag.put(TagFromName.UltrasoundOphthalmicAxialLengthMeasurementsSequence,"UltrasoundOphthalmicAxialLengthMeasurementsSequence");
		nameByTag.put(TagFromName.OpticalOphthalmicAxialLengthMeasurementsSequence,"OpticalOphthalmicAxialLengthMeasurementsSequence");
		nameByTag.put(TagFromName.UltrasoundSelectedOphthalmicAxialLengthSequence,"UltrasoundSelectedOphthalmicAxialLengthSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthSelectionMethodCodeSequence,"OphthalmicAxialLengthSelectionMethodCodeSequence");
		nameByTag.put(TagFromName.OpticalSelectedOphthalmicAxialLengthSequence,"OpticalSelectedOphthalmicAxialLengthSequence");
		nameByTag.put(TagFromName.SelectedSegmentalOphthalmicAxialLengthSequence,"SelectedSegmentalOphthalmicAxialLengthSequence");
		nameByTag.put(TagFromName.SelectedTotalOphthalmicAxialLengthSequence,"SelectedTotalOphthalmicAxialLengthSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricSequence,"OphthalmicAxialLengthQualityMetricSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricTypeCodeSequence,"OphthalmicAxialLengthQualityMetricTypeCodeSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricTypeDescription,"OphthalmicAxialLengthQualityMetricTypeDescription");
		nameByTag.put(TagFromName.IntraocularLensCalculationsRightEyeSequence,"IntraocularLensCalculationsRightEyeSequence");
		nameByTag.put(TagFromName.IntraocularLensCalculationsLeftEyeSequence,"IntraocularLensCalculationsLeftEyeSequence");
		nameByTag.put(TagFromName.ReferencedOphthalmicAxialLengthMeasurementQCImageSequence,"ReferencedOphthalmicAxialLengthMeasurementQCImageSequence");
		nameByTag.put(TagFromName.OphthalmicMappingDeviceType,"OphthalmicMappingDeviceType");
		nameByTag.put(TagFromName.AcquisitionMethodCodeSequence,"AcquisitionMethodCodeSequence");
		nameByTag.put(TagFromName.AcquisitionMethodAlgorithmSequence,"AcquisitionMethodAlgorithmSequence");
		nameByTag.put(TagFromName.OphthalmicThicknessMapTypeCodeSequence,"OphthalmicThicknessMapTypeCodeSequence");
		nameByTag.put(TagFromName.OphthalmicThicknessMappingNormalsSequence,"OphthalmicThicknessMappingNormalsSequence");
		nameByTag.put(TagFromName.RetinalThicknessDefinitionCodeSequence,"RetinalThicknessDefinitionCodeSequence");
		nameByTag.put(TagFromName.PixelValueMappingToCodedConceptSequence,"PixelValueMappingToCodedConceptSequence");
		nameByTag.put(TagFromName.MappedPixelValue,"MappedPixelValue");
		nameByTag.put(TagFromName.PixelValueMappingExplanation,"PixelValueMappingExplanation");
		nameByTag.put(TagFromName.OphthalmicThicknessMapQualityThresholdSequence,"OphthalmicThicknessMapQualityThresholdSequence");
		nameByTag.put(TagFromName.OphthalmicThicknessMapThresholdQualityRating,"OphthalmicThicknessMapThresholdQualityRating");
		nameByTag.put(TagFromName.AnatomicStructureReferencePoint,"AnatomicStructureReferencePoint");
		nameByTag.put(TagFromName.RegistrationToLocalizerSequence,"RegistrationToLocalizerSequence");
		nameByTag.put(TagFromName.RegisteredLocalizerUnits,"RegisteredLocalizerUnits");
		nameByTag.put(TagFromName.RegisteredLocalizerTopLeftHandCorner,"RegisteredLocalizerTopLeftHandCorner");
		nameByTag.put(TagFromName.RegisteredLocalizerBottomRightHandCorner,"RegisteredLocalizerBottomRightHandCorner");
		nameByTag.put(TagFromName.OphthalmicThicknessMapQualityRatingSequence,"OphthalmicThicknessMapQualityRatingSequence");
		nameByTag.put(TagFromName.RelevantOPTAttributesSequence,"RelevantOPTAttributesSequence");
		nameByTag.put(TagFromName.TransformationMethodCodeSequence,"TransformationMethodCodeSequence");
		nameByTag.put(TagFromName.TransformationAlgorithmSequence,"TransformationAlgorithmSequence");
		nameByTag.put(TagFromName.OphthalmicAxialLengthMethod,"OphthalmicAxialLengthMethod");
		nameByTag.put(TagFromName.OphthalmicFOV,"OphthalmicFOV");
		nameByTag.put(TagFromName.TwoDimensionalToThreeDimensionalMapSequence,"TwoDimensionalToThreeDimensionalMapSequence");
		nameByTag.put(TagFromName.WideFieldOphthalmicPhotographyQualityRatingSequence,"WideFieldOphthalmicPhotographyQualityRatingSequence");
		nameByTag.put(TagFromName.WideFieldOphthalmicPhotographyQualityThresholdSequence,"WideFieldOphthalmicPhotographyQualityThresholdSequence");
		nameByTag.put(TagFromName.WideFieldOphthalmicPhotographyThresholdQualityRating,"WideFieldOphthalmicPhotographyThresholdQualityRating");
		nameByTag.put(TagFromName.XCoordinatesCenterPixelViewAngle,"XCoordinatesCenterPixelViewAngle");
		nameByTag.put(TagFromName.YCoordinatesCenterPixelViewAngle,"YCoordinatesCenterPixelViewAngle");
		nameByTag.put(TagFromName.NumberOfMapPoints,"NumberOfMapPoints");
		nameByTag.put(TagFromName.TwoDimensionalToThreeDimensionalMapData,"TwoDimensionalToThreeDimensionalMapData");
		nameByTag.put(TagFromName.DerivationAlgorithmSequence,"DerivationAlgorithmSequence");
		nameByTag.put(TagFromName.OphthalmicImageTypeCodeSequence,"OphthalmicImageTypeCodeSequence");
		nameByTag.put(TagFromName.OphthalmicImageTypeDescription,"OphthalmicImageTypeDescription");
		nameByTag.put(TagFromName.ScanPatternTypeCodeSequence,"ScanPatternTypeCodeSequence");
		nameByTag.put(TagFromName.ReferencedSurfaceMeshIdentificationSequence,"ReferencedSurfaceMeshIdentificationSequence");
		nameByTag.put(TagFromName.OphthalmicVolumetricPropertiesFlag,"OphthalmicVolumetricPropertiesFlag");
		nameByTag.put(TagFromName.OphthalmicAnatomicReferencePointXCoordinate,"OphthalmicAnatomicReferencePointXCoordinate");
		nameByTag.put(TagFromName.OphthalmicAnatomicReferencePointYCoordinate,"OphthalmicAnatomicReferencePointYCoordinate");
		nameByTag.put(TagFromName.OphthalmicEnFaceImageQualityRatingSequence,"OphthalmicEnFaceImageQualityRatingSequence");
		nameByTag.put(TagFromName.QualityThreshold,"QualityThreshold");
		nameByTag.put(TagFromName.OCTBscanAnalysisAcquisitionParametersSequence,"OCTBscanAnalysisAcquisitionParametersSequence");
		nameByTag.put(TagFromName.NumberofBscansPerFrame,"NumberofBscansPerFrame");
		nameByTag.put(TagFromName.BscanSlabThickness,"BscanSlabThickness");
		nameByTag.put(TagFromName.DistanceBetweenBscanSlabs,"DistanceBetweenBscanSlabs");
		nameByTag.put(TagFromName.BscanCycleTime,"BscanCycleTime");
		nameByTag.put(TagFromName.BscanCycleTimeVector,"BscanCycleTimeVector");
		nameByTag.put(TagFromName.AscanRate,"AscanRate");
		nameByTag.put(TagFromName.BscanRate,"BscanRate");
		nameByTag.put(TagFromName.SurfaceMeshZPixelOffset,"SurfaceMeshZPixelOffset");
		nameByTag.put(TagFromName.VisualFieldHorizontalExtent,"VisualFieldHorizontalExtent");
		nameByTag.put(TagFromName.VisualFieldVerticalExtent,"VisualFieldVerticalExtent");
		nameByTag.put(TagFromName.VisualFieldShape,"VisualFieldShape");
		nameByTag.put(TagFromName.ScreeningTestModeCodeSequence,"ScreeningTestModeCodeSequence");
		nameByTag.put(TagFromName.MaximumStimulusLuminance,"MaximumStimulusLuminance");
		nameByTag.put(TagFromName.BackgroundLuminance,"BackgroundLuminance");
		nameByTag.put(TagFromName.StimulusColorCodeSequence,"StimulusColorCodeSequence");
		nameByTag.put(TagFromName.BackgroundIlluminationColorCodeSequence,"BackgroundIlluminationColorCodeSequence");
		nameByTag.put(TagFromName.StimulusArea,"StimulusArea");
		nameByTag.put(TagFromName.StimulusPresentationTime,"StimulusPresentationTime");
		nameByTag.put(TagFromName.FixationSequence,"FixationSequence");
		nameByTag.put(TagFromName.FixationMonitoringCodeSequence,"FixationMonitoringCodeSequence");
		nameByTag.put(TagFromName.VisualFieldCatchTrialSequence,"VisualFieldCatchTrialSequence");
		nameByTag.put(TagFromName.FixationCheckedQuantity,"FixationCheckedQuantity");
		nameByTag.put(TagFromName.PatientNotProperlyFixatedQuantity,"PatientNotProperlyFixatedQuantity");
		nameByTag.put(TagFromName.PresentedVisualStimuliDataFlag,"PresentedVisualStimuliDataFlag");
		nameByTag.put(TagFromName.NumberOfVisualStimuli,"NumberOfVisualStimuli");
		nameByTag.put(TagFromName.ExcessiveFixationLossesDataFlag,"ExcessiveFixationLossesDataFlag");
		nameByTag.put(TagFromName.ExcessiveFixationLosses,"ExcessiveFixationLosses");
		nameByTag.put(TagFromName.StimuliRetestingQuantity,"StimuliRetestingQuantity");
		nameByTag.put(TagFromName.CommentsOnPatientPerformanceOfVisualField,"CommentsOnPatientPerformanceOfVisualField");
		nameByTag.put(TagFromName.FalseNegativesEstimateFlag,"FalseNegativesEstimateFlag");
		nameByTag.put(TagFromName.FalseNegativesEstimate,"FalseNegativesEstimate");
		nameByTag.put(TagFromName.NegativeCatchTrialsQuantity,"NegativeCatchTrialsQuantity");
		nameByTag.put(TagFromName.FalseNegativesQuantity,"FalseNegativesQuantity");
		nameByTag.put(TagFromName.ExcessiveFalseNegativesDataFlag,"ExcessiveFalseNegativesDataFlag");
		nameByTag.put(TagFromName.ExcessiveFalseNegatives,"ExcessiveFalseNegatives");
		nameByTag.put(TagFromName.FalsePositivesEstimateFlag,"FalsePositivesEstimateFlag");
		nameByTag.put(TagFromName.FalsePositivesEstimate,"FalsePositivesEstimate");
		nameByTag.put(TagFromName.CatchTrialsDataFlag,"CatchTrialsDataFlag");
		nameByTag.put(TagFromName.PositiveCatchTrialsQuantity,"PositiveCatchTrialsQuantity");
		nameByTag.put(TagFromName.TestPointNormalsDataFlag,"TestPointNormalsDataFlag");
		nameByTag.put(TagFromName.TestPointNormalsSequence,"TestPointNormalsSequence");
		nameByTag.put(TagFromName.GlobalDeviationProbabilityNormalsFlag,"GlobalDeviationProbabilityNormalsFlag");
		nameByTag.put(TagFromName.FalsePositivesQuantity,"FalsePositivesQuantity");
		nameByTag.put(TagFromName.ExcessiveFalsePositivesDataFlag,"ExcessiveFalsePositivesDataFlag");
		nameByTag.put(TagFromName.ExcessiveFalsePositives,"ExcessiveFalsePositives");
		nameByTag.put(TagFromName.VisualFieldTestNormalsFlag,"VisualFieldTestNormalsFlag");
		nameByTag.put(TagFromName.ResultsNormalsSequence,"ResultsNormalsSequence");
		nameByTag.put(TagFromName.AgeCorrectedSensitivityDeviationAlgorithmSequence,"AgeCorrectedSensitivityDeviationAlgorithmSequence");
		nameByTag.put(TagFromName.GlobalDeviationFromNormal,"GlobalDeviationFromNormal");
		nameByTag.put(TagFromName.GeneralizedDefectSensitivityDeviationAlgorithmSequence,"GeneralizedDefectSensitivityDeviationAlgorithmSequence");
		nameByTag.put(TagFromName.LocalizedDeviationFromNormal,"LocalizedDeviationFromNormal");
		nameByTag.put(TagFromName.PatientReliabilityIndicator,"PatientReliabilityIndicator");
		nameByTag.put(TagFromName.VisualFieldMeanSensitivity,"VisualFieldMeanSensitivity");
		nameByTag.put(TagFromName.GlobalDeviationProbability,"GlobalDeviationProbability");
		nameByTag.put(TagFromName.LocalDeviationProbabilityNormalsFlag,"LocalDeviationProbabilityNormalsFlag");
		nameByTag.put(TagFromName.LocalizedDeviationProbability,"LocalizedDeviationProbability");
		nameByTag.put(TagFromName.ShortTermFluctuationCalculated,"ShortTermFluctuationCalculated");
		nameByTag.put(TagFromName.ShortTermFluctuation,"ShortTermFluctuation");
		nameByTag.put(TagFromName.ShortTermFluctuationProbabilityCalculated,"ShortTermFluctuationProbabilityCalculated");
		nameByTag.put(TagFromName.ShortTermFluctuationProbability,"ShortTermFluctuationProbability");
		nameByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalCalculated,"CorrectedLocalizedDeviationFromNormalCalculated");
		nameByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormal,"CorrectedLocalizedDeviationFromNormal");
		nameByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalProbabilityCalculated,"CorrectedLocalizedDeviationFromNormalProbabilityCalculated");
		nameByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalProbability,"CorrectedLocalizedDeviationFromNormalProbability");
		nameByTag.put(TagFromName.GlobalDeviationProbabilitySequence,"GlobalDeviationProbabilitySequence");
		nameByTag.put(TagFromName.LocalizedDeviationProbabilitySequence,"LocalizedDeviationProbabilitySequence");
		nameByTag.put(TagFromName.FovealSensitivityMeasured,"FovealSensitivityMeasured");
		nameByTag.put(TagFromName.FovealSensitivity,"FovealSensitivity");
		nameByTag.put(TagFromName.VisualFieldTestDuration,"VisualFieldTestDuration");
		nameByTag.put(TagFromName.VisualFieldTestPointSequence,"VisualFieldTestPointSequence");
		nameByTag.put(TagFromName.VisualFieldTestPointXCoordinate,"VisualFieldTestPointXCoordinate");
		nameByTag.put(TagFromName.VisualFieldTestPointYCoordinate,"VisualFieldTestPointYCoordinate");
		nameByTag.put(TagFromName.AgeCorrectedSensitivityDeviationValue,"AgeCorrectedSensitivityDeviationValue");
		nameByTag.put(TagFromName.StimulusResults,"StimulusResults");
		nameByTag.put(TagFromName.SensitivityValue,"SensitivityValue");
		nameByTag.put(TagFromName.RetestStimulusSeen,"RetestStimulusSeen");
		nameByTag.put(TagFromName.RetestSensitivityValue,"RetestSensitivityValue");
		nameByTag.put(TagFromName.VisualFieldTestPointNormalsSequence,"VisualFieldTestPointNormalsSequence");
		nameByTag.put(TagFromName.QuantifiedDefect,"QuantifiedDefect");
		nameByTag.put(TagFromName.AgeCorrectedSensitivityDeviationProbabilityValue,"AgeCorrectedSensitivityDeviationProbabilityValue");
		nameByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationFlag,"GeneralizedDefectCorrectedSensitivityDeviationFlag");
		nameByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationValue,"GeneralizedDefectCorrectedSensitivityDeviationValue");
		nameByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue,"GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue");
		nameByTag.put(TagFromName.MinimumSensitivityValue,"MinimumSensitivityValue");
		nameByTag.put(TagFromName.BlindSpotLocalized,"BlindSpotLocalized");
		nameByTag.put(TagFromName.BlindSpotXCoordinate,"BlindSpotXCoordinate");
		nameByTag.put(TagFromName.BlindSpotYCoordinate,"BlindSpotYCoordinate");
		nameByTag.put(TagFromName.VisualAcuityMeasurementSequence,"VisualAcuityMeasurementSequence");
		nameByTag.put(TagFromName.RefractiveParametersUsedOnPatientSequence,"RefractiveParametersUsedOnPatientSequence");
		nameByTag.put(TagFromName.MeasurementLaterality,"MeasurementLaterality");
		nameByTag.put(TagFromName.OphthalmicPatientClinicalInformationLeftEyeSequence,"OphthalmicPatientClinicalInformationLeftEyeSequence");
		nameByTag.put(TagFromName.OphthalmicPatientClinicalInformationRightEyeSequence,"OphthalmicPatientClinicalInformationRightEyeSequence");
		nameByTag.put(TagFromName.FovealPointNormativeDataFlag,"FovealPointNormativeDataFlag");
		nameByTag.put(TagFromName.FovealPointProbabilityValue,"FovealPointProbabilityValue");
		nameByTag.put(TagFromName.ScreeningBaselineMeasured,"ScreeningBaselineMeasured");
		nameByTag.put(TagFromName.ScreeningBaselineMeasuredSequence,"ScreeningBaselineMeasuredSequence");
		nameByTag.put(TagFromName.ScreeningBaselineType,"ScreeningBaselineType");
		nameByTag.put(TagFromName.ScreeningBaselineValue,"ScreeningBaselineValue");
		nameByTag.put(TagFromName.AlgorithmSource,"AlgorithmSource");
		nameByTag.put(TagFromName.DataSetName,"DataSetName");
		nameByTag.put(TagFromName.DataSetVersion,"DataSetVersion");
		nameByTag.put(TagFromName.DataSetSource,"DataSetSource");
		nameByTag.put(TagFromName.DataSetDescription,"DataSetDescription");
		nameByTag.put(TagFromName.VisualFieldTestReliabilityGlobalIndexSequence,"VisualFieldTestReliabilityGlobalIndexSequence");
		nameByTag.put(TagFromName.VisualFieldGlobalResultsIndexSequence,"VisualFieldGlobalResultsIndexSequence");
		nameByTag.put(TagFromName.DataObservationSequence,"DataObservationSequence");
		nameByTag.put(TagFromName.IndexNormalsFlag,"IndexNormalsFlag");
		nameByTag.put(TagFromName.IndexProbability,"IndexProbability");
		nameByTag.put(TagFromName.IndexProbabilitySequence,"IndexProbabilitySequence");
		nameByTag.put(TagFromName.SamplesPerPixel,"SamplesPerPixel");
		nameByTag.put(TagFromName.SamplesPerPixelUsed,"SamplesPerPixelUsed");
		nameByTag.put(TagFromName.PhotometricInterpretation,"PhotometricInterpretation");
		nameByTag.put(TagFromName.ImageDimensions,"ImageDimensions");
		nameByTag.put(TagFromName.PlanarConfiguration,"PlanarConfiguration");
		nameByTag.put(TagFromName.NumberOfFrames,"NumberOfFrames");
		nameByTag.put(TagFromName.FrameIncrementPointer,"FrameIncrementPointer");
		nameByTag.put(TagFromName.FrameDimensionPointer,"FrameDimensionPointer");
		nameByTag.put(TagFromName.Rows,"Rows");
		nameByTag.put(TagFromName.Columns,"Columns");
		nameByTag.put(TagFromName.Planes,"Planes");
		nameByTag.put(TagFromName.UltrasoundColorDataPresent,"UltrasoundColorDataPresent");
		nameByTag.put(TagFromName.PixelSpacing,"PixelSpacing");
		nameByTag.put(TagFromName.ZoomFactor,"ZoomFactor");
		nameByTag.put(TagFromName.ZoomCenter,"ZoomCenter");
		nameByTag.put(TagFromName.PixelAspectRatio,"PixelAspectRatio");
		nameByTag.put(TagFromName.ImageFormat,"ImageFormat");
		nameByTag.put(TagFromName.ManipulatedImage,"ManipulatedImage");
		nameByTag.put(TagFromName.CorrectedImage,"CorrectedImage");
		nameByTag.put(TagFromName.CompressionRecognitionCode,"CompressionRecognitionCode");
		nameByTag.put(TagFromName.CompressionCode,"CompressionCode");
		nameByTag.put(TagFromName.CompressionOriginator,"CompressionOriginator");
		nameByTag.put(TagFromName.CompressionLabel,"CompressionLabel");
		nameByTag.put(TagFromName.CompressionDescription,"CompressionDescription");
		nameByTag.put(TagFromName.CompressionSequence,"CompressionSequence");
		nameByTag.put(TagFromName.CompressionStepPointers,"CompressionStepPointers");
		nameByTag.put(TagFromName.RepeatInterval,"RepeatInterval");
		nameByTag.put(TagFromName.BitsGrouped,"BitsGrouped");
		nameByTag.put(TagFromName.PerimeterTable,"PerimeterTable");
		nameByTag.put(TagFromName.PerimeterValue,"PerimeterValue");
		nameByTag.put(TagFromName.PredictorRows,"PredictorRows");
		nameByTag.put(TagFromName.PredictorColumns,"PredictorColumns");
		nameByTag.put(TagFromName.PredictorConstants,"PredictorConstants");
		nameByTag.put(TagFromName.BlockedPixels,"BlockedPixels");
		nameByTag.put(TagFromName.BlockRows,"BlockRows");
		nameByTag.put(TagFromName.BlockColumns,"BlockColumns");
		nameByTag.put(TagFromName.RowOverlap,"RowOverlap");
		nameByTag.put(TagFromName.ColumnOverlap,"ColumnOverlap");
		nameByTag.put(TagFromName.BitsAllocated,"BitsAllocated");
		nameByTag.put(TagFromName.BitsStored,"BitsStored");
		nameByTag.put(TagFromName.HighBit,"HighBit");
		nameByTag.put(TagFromName.PixelRepresentation,"PixelRepresentation");
		nameByTag.put(TagFromName.SmallestValidPixelValue,"SmallestValidPixelValue");
		nameByTag.put(TagFromName.LargestValidPixelValue,"LargestValidPixelValue");
		nameByTag.put(TagFromName.SmallestImagePixelValue,"SmallestImagePixelValue");
		nameByTag.put(TagFromName.LargestImagePixelValue,"LargestImagePixelValue");
		nameByTag.put(TagFromName.SmallestPixelValueInSeries,"SmallestPixelValueInSeries");
		nameByTag.put(TagFromName.LargestPixelValueInSeries,"LargestPixelValueInSeries");
		nameByTag.put(TagFromName.SmallestImagePixelValueInPlane,"SmallestImagePixelValueInPlane");
		nameByTag.put(TagFromName.LargestImagePixelValueInPlane,"LargestImagePixelValueInPlane");
		nameByTag.put(TagFromName.PixelPaddingValue,"PixelPaddingValue");
		nameByTag.put(TagFromName.PixelPaddingRangeLimit,"PixelPaddingRangeLimit");
		nameByTag.put(TagFromName.FloatPixelPaddingValue,"FloatPixelPaddingValue");
		nameByTag.put(TagFromName.DoubleFloatPixelPaddingValue,"DoubleFloatPixelPaddingValue");
		nameByTag.put(TagFromName.FloatPixelPaddingRangeLimit,"FloatPixelPaddingRangeLimit");
		nameByTag.put(TagFromName.DoubleFloatPixelPaddingRangeLimit,"DoubleFloatPixelPaddingRangeLimit");
		nameByTag.put(TagFromName.ImageLocation,"ImageLocation");
		nameByTag.put(TagFromName.QualityControlImage,"QualityControlImage");
		nameByTag.put(TagFromName.BurnedInAnnotation,"BurnedInAnnotation");
		nameByTag.put(TagFromName.RecognizableVisualFeatures,"RecognizableVisualFeatures");
		nameByTag.put(TagFromName.LongitudinalTemporalInformationModified,"LongitudinalTemporalInformationModified");
		nameByTag.put(TagFromName.ReferencedColorPaletteInstanceUID,"ReferencedColorPaletteInstanceUID");
		nameByTag.put(TagFromName.TransformLabel,"TransformLabel");
		nameByTag.put(TagFromName.TransformVersionNumber,"TransformVersionNumber");
		nameByTag.put(TagFromName.NumberOfTransformSteps,"NumberOfTransformSteps");
		nameByTag.put(TagFromName.SequenceOfCompressedData,"SequenceOfCompressedData");
		nameByTag.put(TagFromName.DetailsOfCoefficients,"DetailsOfCoefficients");
		nameByTag.put(TagFromName.DCTLabel,"DCTLabel");
		nameByTag.put(TagFromName.DataBlockDescription,"DataBlockDescription");
		nameByTag.put(TagFromName.DataBlock,"DataBlock");
		nameByTag.put(TagFromName.NormalizationFactorFormat,"NormalizationFactorFormat");
		nameByTag.put(TagFromName.ZonalMapNumberFormat,"ZonalMapNumberFormat");
		nameByTag.put(TagFromName.ZonalMapLocation,"ZonalMapLocation");
		nameByTag.put(TagFromName.ZonalMapFormat,"ZonalMapFormat");
		nameByTag.put(TagFromName.AdaptiveMapFormat,"AdaptiveMapFormat");
		nameByTag.put(TagFromName.CodeNumberFormat,"CodeNumberFormat");
		nameByTag.put(TagFromName.PixelSpacingCalibrationType,"PixelSpacingCalibrationType");
		nameByTag.put(TagFromName.PixelSpacingCalibrationDescription,"PixelSpacingCalibrationDescription");
		nameByTag.put(TagFromName.PixelIntensityRelationship,"PixelIntensityRelationship");
		nameByTag.put(TagFromName.PixelIntensityRelationshipSign,"PixelIntensityRelationshipSign");
		nameByTag.put(TagFromName.WindowCenter,"WindowCenter");
		nameByTag.put(TagFromName.WindowWidth,"WindowWidth");
		nameByTag.put(TagFromName.RescaleIntercept,"RescaleIntercept");
		nameByTag.put(TagFromName.RescaleSlope,"RescaleSlope");
		nameByTag.put(TagFromName.RescaleType,"RescaleType");
		nameByTag.put(TagFromName.WindowCenterWidthExplanation,"WindowCenterWidthExplanation");
		nameByTag.put(TagFromName.VOILUTFunction,"VOILUTFunction");
		nameByTag.put(TagFromName.GrayScale,"GrayScale");
		nameByTag.put(TagFromName.RecommendedViewingMode,"RecommendedViewingMode");
		nameByTag.put(TagFromName.GrayLookupTableDescriptor,"GrayLookupTableDescriptor");
		nameByTag.put(TagFromName.RedPaletteColorLookupTableDescriptor,"RedPaletteColorLookupTableDescriptor");
		nameByTag.put(TagFromName.GreenPaletteColorLookupTableDescriptor,"GreenPaletteColorLookupTableDescriptor");
		nameByTag.put(TagFromName.BluePaletteColorLookupTableDescriptor,"BluePaletteColorLookupTableDescriptor");
		nameByTag.put(TagFromName.AlphaPaletteColorLookupTableDescriptor,"AlphaPaletteColorLookupTableDescriptor");
		nameByTag.put(TagFromName.LargeRedPaletteColorLookupTableDescriptor,"LargeRedPaletteColorLookupTableDescriptor");
		nameByTag.put(TagFromName.LargeGreenPaletteColorLookupTableDescriptor,"LargeGreenPaletteColorLookupTableDescriptor");
		nameByTag.put(TagFromName.LargeBluePaletteColorLookupTableDescriptor,"LargeBluePaletteColorLookupTableDescriptor");
		nameByTag.put(TagFromName.PaletteColorLookupTableUID,"PaletteColorLookupTableUID");
		nameByTag.put(TagFromName.GrayLookupTableData,"GrayLookupTableData");
		nameByTag.put(TagFromName.RedPaletteColorLookupTableData,"RedPaletteColorLookupTableData");
		nameByTag.put(TagFromName.GreenPaletteColorLookupTableData,"GreenPaletteColorLookupTableData");
		nameByTag.put(TagFromName.BluePaletteColorLookupTableData,"BluePaletteColorLookupTableData");
		nameByTag.put(TagFromName.AlphaPaletteColorLookupTableData,"AlphaPaletteColorLookupTableData");
		nameByTag.put(TagFromName.LargeRedPaletteColorLookupTableData,"LargeRedPaletteColorLookupTableData");
		nameByTag.put(TagFromName.LargeGreenPaletteColorLookupTableData,"LargeGreenPaletteColorLookupTableData");
		nameByTag.put(TagFromName.LargeBluePaletteColorLookupTableData,"LargeBluePaletteColorLookupTableData");
		nameByTag.put(TagFromName.LargePaletteColorLookupTableUID,"LargePaletteColorLookupTableUID");
		nameByTag.put(TagFromName.SegmentedRedPaletteColorLookupTableData,"SegmentedRedPaletteColorLookupTableData");
		nameByTag.put(TagFromName.SegmentedGreenPaletteColorLookupTableData,"SegmentedGreenPaletteColorLookupTableData");
		nameByTag.put(TagFromName.SegmentedBluePaletteColorLookupTableData,"SegmentedBluePaletteColorLookupTableData");
		nameByTag.put(TagFromName.SegmentedAlphaPaletteColorLookupTableData,"SegmentedAlphaPaletteColorLookupTableData");
		nameByTag.put(TagFromName.StoredValueColorRangeSequence,"StoredValueColorRangeSequence");
		nameByTag.put(TagFromName.MinimumStoredValueMapped,"MinimumStoredValueMapped");
		nameByTag.put(TagFromName.MaximumStoredValueMapped,"MaximumStoredValueMapped");
		nameByTag.put(TagFromName.BreastImplantPresent,"BreastImplantPresent");
		nameByTag.put(TagFromName.PartialView,"PartialView");
		nameByTag.put(TagFromName.PartialViewDescription,"PartialViewDescription");
		nameByTag.put(TagFromName.PartialViewCodeSequence,"PartialViewCodeSequence");
		nameByTag.put(TagFromName.SpatialLocationsPreserved,"SpatialLocationsPreserved");
		nameByTag.put(TagFromName.DataFrameAssignmentSequence,"DataFrameAssignmentSequence");
		nameByTag.put(TagFromName.DataPathAssignment,"DataPathAssignment");
		nameByTag.put(TagFromName.BitsMappedToColorLookupTable,"BitsMappedToColorLookupTable");
		nameByTag.put(TagFromName.BlendingLUT1Sequence,"BlendingLUT1Sequence");
		nameByTag.put(TagFromName.BlendingLUT1TransferFunction,"BlendingLUT1TransferFunction");
		nameByTag.put(TagFromName.BlendingWeightConstant,"BlendingWeightConstant");
		nameByTag.put(TagFromName.BlendingLookupTableDescriptor,"BlendingLookupTableDescriptor");
		nameByTag.put(TagFromName.BlendingLookupTableData,"BlendingLookupTableData");
		nameByTag.put(TagFromName.EnhancedPaletteColorLookupTableSequence,"EnhancedPaletteColorLookupTableSequence");
		nameByTag.put(TagFromName.BlendingLUT2Sequence,"BlendingLUT2Sequence");
		nameByTag.put(TagFromName.BlendingLUT2TransferFunction,"BlendingLUT2TransferFunction");
		nameByTag.put(TagFromName.DataPathID,"DataPathID");
		nameByTag.put(TagFromName.RGBLUTTransferFunction,"RGBLUTTransferFunction");
		nameByTag.put(TagFromName.AlphaLUTTransferFunction,"AlphaLUTTransferFunction");
		nameByTag.put(TagFromName.ICCProfile,"ICCProfile");
		nameByTag.put(TagFromName.ColorSpace,"ColorSpace");
		nameByTag.put(TagFromName.LossyImageCompression,"LossyImageCompression");
		nameByTag.put(TagFromName.LossyImageCompressionRatio,"LossyImageCompressionRatio");
		nameByTag.put(TagFromName.LossyImageCompressionMethod,"LossyImageCompressionMethod");
		nameByTag.put(TagFromName.ModalityLUTSequence,"ModalityLUTSequence");
		nameByTag.put(TagFromName.LUTDescriptor,"LUTDescriptor");
		nameByTag.put(TagFromName.LUTExplanation,"LUTExplanation");
		nameByTag.put(TagFromName.ModalityLUTType,"ModalityLUTType");
		nameByTag.put(TagFromName.LUTData,"LUTData");
		nameByTag.put(TagFromName.VOILUTSequence,"VOILUTSequence");
		nameByTag.put(TagFromName.SoftcopyVOILUTSequence,"SoftcopyVOILUTSequence");
		nameByTag.put(TagFromName.ImagePresentationComments,"ImagePresentationComments");
		nameByTag.put(TagFromName.BiPlaneAcquisitionSequence,"BiPlaneAcquisitionSequence");
		nameByTag.put(TagFromName.RepresentativeFrameNumber,"RepresentativeFrameNumber");
		nameByTag.put(TagFromName.FrameNumbersOfInterest,"FrameNumbersOfInterest");
		nameByTag.put(TagFromName.FrameOfInterestDescription,"FrameOfInterestDescription");
		nameByTag.put(TagFromName.FrameOfInterestType,"FrameOfInterestType");
		nameByTag.put(TagFromName.MaskPointers,"MaskPointers");
		nameByTag.put(TagFromName.RWavePointer,"RWavePointer");
		nameByTag.put(TagFromName.MaskSubtractionSequence,"MaskSubtractionSequence");
		nameByTag.put(TagFromName.MaskOperation,"MaskOperation");
		nameByTag.put(TagFromName.ApplicableFrameRange,"ApplicableFrameRange");
		nameByTag.put(TagFromName.MaskFrameNumbers,"MaskFrameNumbers");
		nameByTag.put(TagFromName.ContrastFrameAveraging,"ContrastFrameAveraging");
		nameByTag.put(TagFromName.MaskSubPixelShift,"MaskSubPixelShift");
		nameByTag.put(TagFromName.TIDOffset,"TIDOffset");
		nameByTag.put(TagFromName.MaskOperationExplanation,"MaskOperationExplanation");
		nameByTag.put(TagFromName.EquipmentAdministratorSequence,"EquipmentAdministratorSequence");
		nameByTag.put(TagFromName.NumberOfDisplaySubsystems,"NumberOfDisplaySubsystems");
		nameByTag.put(TagFromName.CurrentConfigurationID,"CurrentConfigurationID");
		nameByTag.put(TagFromName.DisplaySystemID,"DisplaySystemID");
		nameByTag.put(TagFromName.DisplaySubsystemName,"DisplaySubsystemName");
		nameByTag.put(TagFromName.DisplaySubsystemDescription,"DisplaySubsystemDescription");
		nameByTag.put(TagFromName.SystemStatus,"SystemStatus");
		nameByTag.put(TagFromName.SystemStatusComment,"SystemStatusComment");
		nameByTag.put(TagFromName.TargetLuminanceCharacteristicsSequence,"TargetLuminanceCharacteristicsSequence");
		nameByTag.put(TagFromName.LuminanceCharacteristicsID,"LuminanceCharacteristicsID");
		nameByTag.put(TagFromName.DisplaySubsystemConfigurationSequence,"DisplaySubsystemConfigurationSequence");
		nameByTag.put(TagFromName.ConfigurationID,"ConfigurationID");
		nameByTag.put(TagFromName.ConfigurationName,"ConfigurationName");
		nameByTag.put(TagFromName.ConfigurationDescription,"ConfigurationDescription");
		nameByTag.put(TagFromName.ReferencedTargetLuminanceCharacteristicsID,"ReferencedTargetLuminanceCharacteristicsID");
		nameByTag.put(TagFromName.QAResultsSequence,"QAResultsSequence");
		nameByTag.put(TagFromName.DisplaySubsystemQAResultsSequence,"DisplaySubsystemQAResultsSequence");
		nameByTag.put(TagFromName.ConfigurationQAResultsSequence,"ConfigurationQAResultsSequence");
		nameByTag.put(TagFromName.MeasurementEquipmentSequence,"MeasurementEquipmentSequence");
		nameByTag.put(TagFromName.MeasurementFunctions,"MeasurementFunctions");
		nameByTag.put(TagFromName.MeasurementEquipmentType,"MeasurementEquipmentType");
		nameByTag.put(TagFromName.VisualEvaluationResultSequence,"VisualEvaluationResultSequence");
		nameByTag.put(TagFromName.DisplayCalibrationResultSequence,"DisplayCalibrationResultSequence");
		nameByTag.put(TagFromName.DDLValue,"DDLValue");
		nameByTag.put(TagFromName.CIExyWhitePoint,"CIExyWhitePoint");
		nameByTag.put(TagFromName.DisplayFunctionType,"DisplayFunctionType");
		nameByTag.put(TagFromName.GammaValue,"GammaValue");
		nameByTag.put(TagFromName.NumberOfLuminancePoints,"NumberOfLuminancePoints");
		nameByTag.put(TagFromName.LuminanceResponseSequence,"LuminanceResponseSequence");
		nameByTag.put(TagFromName.TargetMinimumLuminance,"TargetMinimumLuminance");
		nameByTag.put(TagFromName.TargetMaximumLuminance,"TargetMaximumLuminance");
		nameByTag.put(TagFromName.LuminanceValue,"LuminanceValue");
		nameByTag.put(TagFromName.LuminanceResponseDescription,"LuminanceResponseDescription");
		nameByTag.put(TagFromName.WhitePointFlag,"WhitePointFlag");
		nameByTag.put(TagFromName.DisplayDeviceTypeCodeSequence,"DisplayDeviceTypeCodeSequence");
		nameByTag.put(TagFromName.DisplaySubsystemSequence,"DisplaySubsystemSequence");
		nameByTag.put(TagFromName.LuminanceResultSequence,"LuminanceResultSequence");
		nameByTag.put(TagFromName.AmbientLightValueSource,"AmbientLightValueSource");
		nameByTag.put(TagFromName.MeasuredCharacteristics,"MeasuredCharacteristics");
		nameByTag.put(TagFromName.LuminanceUniformityResultSequence,"LuminanceUniformityResultSequence");
		nameByTag.put(TagFromName.VisualEvaluationTestSequence,"VisualEvaluationTestSequence");
		nameByTag.put(TagFromName.TestResult,"TestResult");
		nameByTag.put(TagFromName.TestResultComment,"TestResultComment");
		nameByTag.put(TagFromName.TestImageValidation,"TestImageValidation");
		nameByTag.put(TagFromName.TestPatternCodeSequence,"TestPatternCodeSequence");
		nameByTag.put(TagFromName.MeasurementPatternCodeSequence,"MeasurementPatternCodeSequence");
		nameByTag.put(TagFromName.VisualEvaluationMethodCodeSequence,"VisualEvaluationMethodCodeSequence");
		nameByTag.put(TagFromName.PixelDataProviderURL,"PixelDataProviderURL");
		nameByTag.put(TagFromName.DataPointRows,"DataPointRows");
		nameByTag.put(TagFromName.DataPointColumns,"DataPointColumns");
		nameByTag.put(TagFromName.SignalDomainColumns,"SignalDomainColumns");
		nameByTag.put(TagFromName.LargestMonochromePixelValue,"LargestMonochromePixelValue");
		nameByTag.put(TagFromName.DataRepresentation,"DataRepresentation");
		nameByTag.put(TagFromName.PixelMeasuresSequence,"PixelMeasuresSequence");
		nameByTag.put(TagFromName.FrameVOILUTSequence,"FrameVOILUTSequence");
		nameByTag.put(TagFromName.PixelValueTransformationSequence,"PixelValueTransformationSequence");
		nameByTag.put(TagFromName.SignalDomainRows,"SignalDomainRows");
		nameByTag.put(TagFromName.DisplayFilterPercentage,"DisplayFilterPercentage");
		nameByTag.put(TagFromName.FramePixelShiftSequence,"FramePixelShiftSequence");
		nameByTag.put(TagFromName.SubtractionItemID,"SubtractionItemID");
		nameByTag.put(TagFromName.PixelIntensityRelationshipLUTSequence,"PixelIntensityRelationshipLUTSequence");
		nameByTag.put(TagFromName.FramePixelDataPropertiesSequence,"FramePixelDataPropertiesSequence");
		nameByTag.put(TagFromName.GeometricalProperties,"GeometricalProperties");
		nameByTag.put(TagFromName.GeometricMaximumDistortion,"GeometricMaximumDistortion");
		nameByTag.put(TagFromName.ImageProcessingApplied,"ImageProcessingApplied");
		nameByTag.put(TagFromName.MaskSelectionMode,"MaskSelectionMode");
		nameByTag.put(TagFromName.LUTFunction,"LUTFunction");
		nameByTag.put(TagFromName.MaskVisibilityPercentage,"MaskVisibilityPercentage");
		nameByTag.put(TagFromName.PixelShiftSequence,"PixelShiftSequence");
		nameByTag.put(TagFromName.RegionPixelShiftSequence,"RegionPixelShiftSequence");
		nameByTag.put(TagFromName.VerticesOfTheRegion,"VerticesOfTheRegion");
		nameByTag.put(TagFromName.MultiFramePresentationSequence,"MultiFramePresentationSequence");
		nameByTag.put(TagFromName.PixelShiftFrameRange,"PixelShiftFrameRange");
		nameByTag.put(TagFromName.LUTFrameRange,"LUTFrameRange");
		nameByTag.put(TagFromName.ImageToEquipmentMappingMatrix,"ImageToEquipmentMappingMatrix");
		nameByTag.put(TagFromName.EquipmentCoordinateSystemIdentification,"EquipmentCoordinateSystemIdentification");
		nameByTag.put(TagFromName.StudyStatusID,"StudyStatusID");
		nameByTag.put(TagFromName.StudyPriorityID,"StudyPriorityID");
		nameByTag.put(TagFromName.StudyIDIssuer,"StudyIDIssuer");
		nameByTag.put(TagFromName.StudyVerifiedDate,"StudyVerifiedDate");
		nameByTag.put(TagFromName.StudyVerifiedTime,"StudyVerifiedTime");
		nameByTag.put(TagFromName.StudyReadDate,"StudyReadDate");
		nameByTag.put(TagFromName.StudyReadTime,"StudyReadTime");
		nameByTag.put(TagFromName.ScheduledStudyStartDate,"ScheduledStudyStartDate");
		nameByTag.put(TagFromName.ScheduledStudyStartTime,"ScheduledStudyStartTime");
		nameByTag.put(TagFromName.ScheduledStudyStopDate,"ScheduledStudyStopDate");
		nameByTag.put(TagFromName.ScheduledStudyStopTime,"ScheduledStudyStopTime");
		nameByTag.put(TagFromName.ScheduledStudyLocation,"ScheduledStudyLocation");
		nameByTag.put(TagFromName.ScheduledStudyLocationAETitle,"ScheduledStudyLocationAETitle");
		nameByTag.put(TagFromName.ReasonForStudy,"ReasonForStudy");
		nameByTag.put(TagFromName.RequestingPhysicianIdentificationSequence,"RequestingPhysicianIdentificationSequence");
		nameByTag.put(TagFromName.RequestingPhysician,"RequestingPhysician");
		nameByTag.put(TagFromName.RequestingService,"RequestingService");
		nameByTag.put(TagFromName.RequestingServiceCodeSequence,"RequestingServiceCodeSequence");
		nameByTag.put(TagFromName.StudyArrivalDate,"StudyArrivalDate");
		nameByTag.put(TagFromName.StudyArrivalTime,"StudyArrivalTime");
		nameByTag.put(TagFromName.StudyCompletionDate,"StudyCompletionDate");
		nameByTag.put(TagFromName.StudyCompletionTime,"StudyCompletionTime");
		nameByTag.put(TagFromName.StudyComponentStatusID,"StudyComponentStatusID");
		nameByTag.put(TagFromName.RequestedProcedureDescription,"RequestedProcedureDescription");
		nameByTag.put(TagFromName.RequestedProcedureCodeSequence,"RequestedProcedureCodeSequence");
		nameByTag.put(TagFromName.RequestedContrastAgent,"RequestedContrastAgent");
		nameByTag.put(TagFromName.StudyComments,"StudyComments");
		nameByTag.put(TagFromName.ReferencedPatientAliasSequence,"ReferencedPatientAliasSequence");
		nameByTag.put(TagFromName.VisitStatusID,"VisitStatusID");
		nameByTag.put(TagFromName.AdmissionID,"AdmissionID");
		nameByTag.put(TagFromName.IssuerOfAdmissionID,"IssuerOfAdmissionID");
		nameByTag.put(TagFromName.IssuerOfAdmissionIDSequence,"IssuerOfAdmissionIDSequence");
		nameByTag.put(TagFromName.RouteOfAdmissions,"RouteOfAdmissions");
		nameByTag.put(TagFromName.ScheduledAdmissionDate,"ScheduledAdmissionDate");
		nameByTag.put(TagFromName.ScheduledAdmissionTime,"ScheduledAdmissionTime");
		nameByTag.put(TagFromName.ScheduledDischargeDate,"ScheduledDischargeDate");
		nameByTag.put(TagFromName.ScheduledDischargeTime,"ScheduledDischargeTime");
		nameByTag.put(TagFromName.ScheduledPatientInstitutionResidence,"ScheduledPatientInstitutionResidence");
		nameByTag.put(TagFromName.AdmittingDate,"AdmittingDate");
		nameByTag.put(TagFromName.AdmittingTime,"AdmittingTime");
		nameByTag.put(TagFromName.DischargeDate,"DischargeDate");
		nameByTag.put(TagFromName.DischargeTime,"DischargeTime");
		nameByTag.put(TagFromName.DischargeDiagnosisDescription,"DischargeDiagnosisDescription");
		nameByTag.put(TagFromName.DischargeDiagnosisCodeSequence,"DischargeDiagnosisCodeSequence");
		nameByTag.put(TagFromName.SpecialNeeds,"SpecialNeeds");
		nameByTag.put(TagFromName.ServiceEpisodeID,"ServiceEpisodeID");
		nameByTag.put(TagFromName.IssuerOfServiceEpisodeID,"IssuerOfServiceEpisodeID");
		nameByTag.put(TagFromName.ServiceEpisodeDescription,"ServiceEpisodeDescription");
		nameByTag.put(TagFromName.IssuerOfServiceEpisodeIDSequence,"IssuerOfServiceEpisodeIDSequence");
		nameByTag.put(TagFromName.PertinentDocumentsSequence,"PertinentDocumentsSequence");
		nameByTag.put(TagFromName.PertinentResourcesSequence,"PertinentResourcesSequence");
		nameByTag.put(TagFromName.ResourceDescription,"ResourceDescription");
		nameByTag.put(TagFromName.CurrentPatientLocation,"CurrentPatientLocation");
		nameByTag.put(TagFromName.PatientInstitutionResidence,"PatientInstitutionResidence");
		nameByTag.put(TagFromName.PatientState,"PatientState");
		nameByTag.put(TagFromName.PatientClinicalTrialParticipationSequence,"PatientClinicalTrialParticipationSequence");
		nameByTag.put(TagFromName.VisitComments,"VisitComments");
		nameByTag.put(TagFromName.WaveformOriginality,"WaveformOriginality");
		nameByTag.put(TagFromName.NumberOfWaveformChannels,"NumberOfWaveformChannels");
		nameByTag.put(TagFromName.NumberOfWaveformSamples,"NumberOfWaveformSamples");
		nameByTag.put(TagFromName.SamplingFrequency,"SamplingFrequency");
		nameByTag.put(TagFromName.MultiplexGroupLabel,"MultiplexGroupLabel");
		nameByTag.put(TagFromName.ChannelDefinitionSequence,"ChannelDefinitionSequence");
		nameByTag.put(TagFromName.WaveformChannelNumber,"WaveformChannelNumber");
		nameByTag.put(TagFromName.ChannelLabel,"ChannelLabel");
		nameByTag.put(TagFromName.ChannelStatus,"ChannelStatus");
		nameByTag.put(TagFromName.ChannelSourceSequence,"ChannelSourceSequence");
		nameByTag.put(TagFromName.ChannelSourceModifiersSequence,"ChannelSourceModifiersSequence");
		nameByTag.put(TagFromName.SourceWaveformSequence,"SourceWaveformSequence");
		nameByTag.put(TagFromName.ChannelDerivationDescription,"ChannelDerivationDescription");
		nameByTag.put(TagFromName.ChannelSensitivity,"ChannelSensitivity");
		nameByTag.put(TagFromName.ChannelSensitivityUnitsSequence,"ChannelSensitivityUnitsSequence");
		nameByTag.put(TagFromName.ChannelSensitivityCorrectionFactor,"ChannelSensitivityCorrectionFactor");
		nameByTag.put(TagFromName.ChannelBaseline,"ChannelBaseline");
		nameByTag.put(TagFromName.ChannelTimeSkew,"ChannelTimeSkew");
		nameByTag.put(TagFromName.ChannelSampleSkew,"ChannelSampleSkew");
		nameByTag.put(TagFromName.ChannelOffset,"ChannelOffset");
		nameByTag.put(TagFromName.WaveformBitsStored,"WaveformBitsStored");
		nameByTag.put(TagFromName.FilterLowFrequency,"FilterLowFrequency");
		nameByTag.put(TagFromName.FilterHighFrequency,"FilterHighFrequency");
		nameByTag.put(TagFromName.NotchFilterFrequency,"NotchFilterFrequency");
		nameByTag.put(TagFromName.NotchFilterBandwidth,"NotchFilterBandwidth");
		nameByTag.put(TagFromName.WaveformDataDisplayScale,"WaveformDataDisplayScale");
		nameByTag.put(TagFromName.WaveformDisplayBackgroundCIELabValue,"WaveformDisplayBackgroundCIELabValue");
		nameByTag.put(TagFromName.WaveformPresentationGroupSequence,"WaveformPresentationGroupSequence");
		nameByTag.put(TagFromName.PresentationGroupNumber,"PresentationGroupNumber");
		nameByTag.put(TagFromName.ChannelDisplaySequence,"ChannelDisplaySequence");
		nameByTag.put(TagFromName.ChannelRecommendedDisplayCIELabValue,"ChannelRecommendedDisplayCIELabValue");
		nameByTag.put(TagFromName.ChannelPosition,"ChannelPosition");
		nameByTag.put(TagFromName.DisplayShadingFlag,"DisplayShadingFlag");
		nameByTag.put(TagFromName.FractionalChannelDisplayScale,"FractionalChannelDisplayScale");
		nameByTag.put(TagFromName.AbsoluteChannelDisplayScale,"AbsoluteChannelDisplayScale");
		nameByTag.put(TagFromName.MultiplexedAudioChannelsDescriptionCodeSequence,"MultiplexedAudioChannelsDescriptionCodeSequence");
		nameByTag.put(TagFromName.ChannelIdentificationCode,"ChannelIdentificationCode");
		nameByTag.put(TagFromName.ChannelMode,"ChannelMode");
		nameByTag.put(TagFromName.ScheduledStationAETitle,"ScheduledStationAETitle");
		nameByTag.put(TagFromName.ScheduledProcedureStepStartDate,"ScheduledProcedureStepStartDate");
		nameByTag.put(TagFromName.ScheduledProcedureStepStartTime,"ScheduledProcedureStepStartTime");
		nameByTag.put(TagFromName.ScheduledProcedureStepEndDate,"ScheduledProcedureStepEndDate");
		nameByTag.put(TagFromName.ScheduledProcedureStepEndTime,"ScheduledProcedureStepEndTime");
		nameByTag.put(TagFromName.ScheduledPerformingPhysicianName,"ScheduledPerformingPhysicianName");
		nameByTag.put(TagFromName.ScheduledProcedureStepDescription,"ScheduledProcedureStepDescription");
		nameByTag.put(TagFromName.ScheduledProtocolCodeSequence,"ScheduledProtocolCodeSequence");
		nameByTag.put(TagFromName.ScheduledProcedureStepID,"ScheduledProcedureStepID");
		nameByTag.put(TagFromName.StageCodeSequence,"StageCodeSequence");
		nameByTag.put(TagFromName.ScheduledPerformingPhysicianIdentificationSequence,"ScheduledPerformingPhysicianIdentificationSequence");
		nameByTag.put(TagFromName.ScheduledStationName,"ScheduledStationName");
		nameByTag.put(TagFromName.ScheduledProcedureStepLocation,"ScheduledProcedureStepLocation");
		nameByTag.put(TagFromName.PreMedication,"PreMedication");
		nameByTag.put(TagFromName.ScheduledProcedureStepStatus,"ScheduledProcedureStepStatus");
		nameByTag.put(TagFromName.OrderPlacerIdentifierSequence,"OrderPlacerIdentifierSequence");
		nameByTag.put(TagFromName.OrderFillerIdentifierSequence,"OrderFillerIdentifierSequence");
		nameByTag.put(TagFromName.LocalNamespaceEntityID,"LocalNamespaceEntityID");
		nameByTag.put(TagFromName.UniversalEntityID,"UniversalEntityID");
		nameByTag.put(TagFromName.UniversalEntityIDType,"UniversalEntityIDType");
		nameByTag.put(TagFromName.IdentifierTypeCode,"IdentifierTypeCode");
		nameByTag.put(TagFromName.AssigningFacilitySequence,"AssigningFacilitySequence");
		nameByTag.put(TagFromName.AssigningJurisdictionCodeSequence,"AssigningJurisdictionCodeSequence");
		nameByTag.put(TagFromName.AssigningAgencyOrDepartmentCodeSequence,"AssigningAgencyOrDepartmentCodeSequence");
		nameByTag.put(TagFromName.ScheduledProcedureStepSequence,"ScheduledProcedureStepSequence");
		nameByTag.put(TagFromName.ReferencedNonImageCompositeSOPInstanceSequence,"ReferencedNonImageCompositeSOPInstanceSequence");
		nameByTag.put(TagFromName.PerformedStationAETitle,"PerformedStationAETitle");
		nameByTag.put(TagFromName.PerformedStationName,"PerformedStationName");
		nameByTag.put(TagFromName.PerformedLocation,"PerformedLocation");
		nameByTag.put(TagFromName.PerformedProcedureStepStartDate,"PerformedProcedureStepStartDate");
		nameByTag.put(TagFromName.PerformedProcedureStepStartTime,"PerformedProcedureStepStartTime");
		nameByTag.put(TagFromName.PerformedProcedureStepEndDate,"PerformedProcedureStepEndDate");
		nameByTag.put(TagFromName.PerformedProcedureStepEndTime,"PerformedProcedureStepEndTime");
		nameByTag.put(TagFromName.PerformedProcedureStepStatus,"PerformedProcedureStepStatus");
		nameByTag.put(TagFromName.PerformedProcedureStepID,"PerformedProcedureStepID");
		nameByTag.put(TagFromName.PerformedProcedureStepDescription,"PerformedProcedureStepDescription");
		nameByTag.put(TagFromName.PerformedProcedureTypeDescription,"PerformedProcedureTypeDescription");
		nameByTag.put(TagFromName.PerformedProtocolCodeSequence,"PerformedProtocolCodeSequence");
		nameByTag.put(TagFromName.PerformedProtocolType,"PerformedProtocolType");
		nameByTag.put(TagFromName.ScheduledStepAttributesSequence,"ScheduledStepAttributesSequence");
		nameByTag.put(TagFromName.RequestAttributesSequence,"RequestAttributesSequence");
		nameByTag.put(TagFromName.CommentsOnThePerformedProcedureStep,"CommentsOnThePerformedProcedureStep");
		nameByTag.put(TagFromName.PerformedProcedureStepDiscontinuationReasonCodeSequence,"PerformedProcedureStepDiscontinuationReasonCodeSequence");
		nameByTag.put(TagFromName.QuantitySequence,"QuantitySequence");
		nameByTag.put(TagFromName.Quantity,"Quantity");
		nameByTag.put(TagFromName.MeasuringUnitsSequence,"MeasuringUnitsSequence");
		nameByTag.put(TagFromName.BillingItemSequence,"BillingItemSequence");
		nameByTag.put(TagFromName.TotalTimeOfFluoroscopy,"TotalTimeOfFluoroscopy");
		nameByTag.put(TagFromName.TotalNumberOfExposures,"TotalNumberOfExposures");
		nameByTag.put(TagFromName.EntranceDose,"EntranceDose");
		nameByTag.put(TagFromName.ExposedArea,"ExposedArea");
		nameByTag.put(TagFromName.DistanceSourceToEntrance,"DistanceSourceToEntrance");
		nameByTag.put(TagFromName.DistanceSourceToSupport,"DistanceSourceToSupport");
		nameByTag.put(TagFromName.ExposureDoseSequence,"ExposureDoseSequence");
		nameByTag.put(TagFromName.CommentsOnRadiationDose,"CommentsOnRadiationDose");
		nameByTag.put(TagFromName.XRayOutput,"XRayOutput");
		nameByTag.put(TagFromName.HalfValueLayer,"HalfValueLayer");
		nameByTag.put(TagFromName.OrganDose,"OrganDose");
		nameByTag.put(TagFromName.OrganExposed,"OrganExposed");
		nameByTag.put(TagFromName.BillingProcedureStepSequence,"BillingProcedureStepSequence");
		nameByTag.put(TagFromName.FilmConsumptionSequence,"FilmConsumptionSequence");
		nameByTag.put(TagFromName.BillingSuppliesAndDevicesSequence,"BillingSuppliesAndDevicesSequence");
		nameByTag.put(TagFromName.ReferencedProcedureStepSequence,"ReferencedProcedureStepSequence");
		nameByTag.put(TagFromName.PerformedSeriesSequence,"PerformedSeriesSequence");
		nameByTag.put(TagFromName.CommentsOnTheScheduledProcedureStep,"CommentsOnTheScheduledProcedureStep");
		nameByTag.put(TagFromName.ProtocolContextSequence,"ProtocolContextSequence");
		nameByTag.put(TagFromName.ContentItemModifierSequence,"ContentItemModifierSequence");
		nameByTag.put(TagFromName.ScheduledSpecimenSequence,"ScheduledSpecimenSequence");
		nameByTag.put(TagFromName.SpecimenAccessionNumber,"SpecimenAccessionNumber");
		nameByTag.put(TagFromName.ContainerIdentifier,"ContainerIdentifier");
		nameByTag.put(TagFromName.IssuerOfTheContainerIdentifierSequence,"IssuerOfTheContainerIdentifierSequence");
		nameByTag.put(TagFromName.AlternateContainerIdentifierSequence,"AlternateContainerIdentifierSequence");
		nameByTag.put(TagFromName.ContainerTypeCodeSequence,"ContainerTypeCodeSequence");
		nameByTag.put(TagFromName.ContainerDescription,"ContainerDescription");
		nameByTag.put(TagFromName.ContainerComponentSequence,"ContainerComponentSequence");
		nameByTag.put(TagFromName.SpecimenSequence,"SpecimenSequence");
		nameByTag.put(TagFromName.SpecimenIdentifier,"SpecimenIdentifier");
		nameByTag.put(TagFromName.SpecimenDescriptionSequenceTrial,"SpecimenDescriptionSequenceTrial");
		nameByTag.put(TagFromName.SpecimenDescriptionTrial,"SpecimenDescriptionTrial");
		nameByTag.put(TagFromName.SpecimenUID,"SpecimenUID");
		nameByTag.put(TagFromName.AcquisitionContextSequence,"AcquisitionContextSequence");
		nameByTag.put(TagFromName.AcquisitionContextDescription,"AcquisitionContextDescription");
		nameByTag.put(TagFromName.SpecimenDescriptionSequence,"SpecimenDescriptionSequence");
		nameByTag.put(TagFromName.IssuerOfTheSpecimenIdentifierSequence,"IssuerOfTheSpecimenIdentifierSequence");
		nameByTag.put(TagFromName.SpecimenTypeCodeSequence,"SpecimenTypeCodeSequence");
		nameByTag.put(TagFromName.SpecimenShortDescription,"SpecimenShortDescription");
		nameByTag.put(TagFromName.SpecimenDetailedDescription,"SpecimenDetailedDescription");
		nameByTag.put(TagFromName.SpecimenPreparationSequence,"SpecimenPreparationSequence");
		nameByTag.put(TagFromName.SpecimenPreparationStepContentItemSequence,"SpecimenPreparationStepContentItemSequence");
		nameByTag.put(TagFromName.SpecimenLocalizationContentItemSequence,"SpecimenLocalizationContentItemSequence");
		nameByTag.put(TagFromName.SlideIdentifier,"SlideIdentifier");
		nameByTag.put(TagFromName.WholeSlideMicroscopyImageFrameTypeSequence,"WholeSlideMicroscopyImageFrameTypeSequence");
		nameByTag.put(TagFromName.ImageCenterPointCoordinatesSequence,"ImageCenterPointCoordinatesSequence");
		nameByTag.put(TagFromName.XOffsetInSlideCoordinateSystem,"XOffsetInSlideCoordinateSystem");
		nameByTag.put(TagFromName.YOffsetInSlideCoordinateSystem,"YOffsetInSlideCoordinateSystem");
		nameByTag.put(TagFromName.ZOffsetInSlideCoordinateSystem,"ZOffsetInSlideCoordinateSystem");
		nameByTag.put(TagFromName.PixelSpacingSequence,"PixelSpacingSequence");
		nameByTag.put(TagFromName.CoordinateSystemAxisCodeSequence,"CoordinateSystemAxisCodeSequence");
		nameByTag.put(TagFromName.MeasurementUnitsCodeSequence,"MeasurementUnitsCodeSequence");
		nameByTag.put(TagFromName.VitalStainCodeSequenceTrial,"VitalStainCodeSequenceTrial");
		nameByTag.put(TagFromName.RequestedProcedureID,"RequestedProcedureID");
		nameByTag.put(TagFromName.ReasonForTheRequestedProcedure,"ReasonForTheRequestedProcedure");
		nameByTag.put(TagFromName.RequestedProcedurePriority,"RequestedProcedurePriority");
		nameByTag.put(TagFromName.PatientTransportArrangements,"PatientTransportArrangements");
		nameByTag.put(TagFromName.RequestedProcedureLocation,"RequestedProcedureLocation");
		nameByTag.put(TagFromName.PlacerOrderNumberProcedure,"PlacerOrderNumberProcedure");
		nameByTag.put(TagFromName.FillerOrderNumberProcedure,"FillerOrderNumberProcedure");
		nameByTag.put(TagFromName.ConfidentialityCode,"ConfidentialityCode");
		nameByTag.put(TagFromName.ReportingPriority,"ReportingPriority");
		nameByTag.put(TagFromName.ReasonForRequestedProcedureCodeSequence,"ReasonForRequestedProcedureCodeSequence");
		nameByTag.put(TagFromName.NamesOfIntendedRecipientsOfResults,"NamesOfIntendedRecipientsOfResults");
		nameByTag.put(TagFromName.IntendedRecipientsOfResultsIdentificationSequence,"IntendedRecipientsOfResultsIdentificationSequence");
		nameByTag.put(TagFromName.ReasonForPerformedProcedureCodeSequence,"ReasonForPerformedProcedureCodeSequence");
		nameByTag.put(TagFromName.RequestedProcedureDescriptionTrial,"RequestedProcedureDescriptionTrial");
		nameByTag.put(TagFromName.PersonIdentificationCodeSequence,"PersonIdentificationCodeSequence");
		nameByTag.put(TagFromName.PersonAddress,"PersonAddress");
		nameByTag.put(TagFromName.PersonTelephoneNumbers,"PersonTelephoneNumbers");
		nameByTag.put(TagFromName.PersonTelecomInformation,"PersonTelecomInformation");
		nameByTag.put(TagFromName.RequestedProcedureComments,"RequestedProcedureComments");
		nameByTag.put(TagFromName.ReasonForTheImagingServiceRequest,"ReasonForTheImagingServiceRequest");
		nameByTag.put(TagFromName.IssueDateOfImagingServiceRequest,"IssueDateOfImagingServiceRequest");
		nameByTag.put(TagFromName.IssueTimeOfImagingServiceRequest,"IssueTimeOfImagingServiceRequest");
		nameByTag.put(TagFromName.PlacerOrderNumberImagingServiceRequestRetired,"PlacerOrderNumberImagingServiceRequestRetired");
		nameByTag.put(TagFromName.FillerOrderNumberImagingServiceRequestRetired,"FillerOrderNumberImagingServiceRequestRetired");
		nameByTag.put(TagFromName.OrderEnteredBy,"OrderEnteredBy");
		nameByTag.put(TagFromName.OrderEntererLocation,"OrderEntererLocation");
		nameByTag.put(TagFromName.OrderCallbackPhoneNumber,"OrderCallbackPhoneNumber");
		nameByTag.put(TagFromName.OrderCallbackTelecomInformation,"OrderCallbackTelecomInformation");
		nameByTag.put(TagFromName.PlacerOrderNumberImagingServiceRequest,"PlacerOrderNumberImagingServiceRequest");
		nameByTag.put(TagFromName.FillerOrderNumberImagingServiceRequest,"FillerOrderNumberImagingServiceRequest");
		nameByTag.put(TagFromName.ImagingServiceRequestComments,"ImagingServiceRequestComments");
		nameByTag.put(TagFromName.ConfidentialityConstraintOnPatientDataDescription,"ConfidentialityConstraintOnPatientDataDescription");
		nameByTag.put(TagFromName.GeneralPurposeScheduledProcedureStepStatus,"GeneralPurposeScheduledProcedureStepStatus");
		nameByTag.put(TagFromName.GeneralPurposePerformedProcedureStepStatus,"GeneralPurposePerformedProcedureStepStatus");
		nameByTag.put(TagFromName.GeneralPurposeScheduledProcedureStepPriority,"GeneralPurposeScheduledProcedureStepPriority");
		nameByTag.put(TagFromName.ScheduledProcessingApplicationsCodeSequence,"ScheduledProcessingApplicationsCodeSequence");
		nameByTag.put(TagFromName.ScheduledProcedureStepStartDateTime,"ScheduledProcedureStepStartDateTime");
		nameByTag.put(TagFromName.MultipleCopiesFlag,"MultipleCopiesFlag");
		nameByTag.put(TagFromName.PerformedProcessingApplicationsCodeSequence,"PerformedProcessingApplicationsCodeSequence");
		nameByTag.put(TagFromName.ScheduledProcedureStepExpirationDateTime,"ScheduledProcedureStepExpirationDateTime");
		nameByTag.put(TagFromName.HumanPerformerCodeSequence,"HumanPerformerCodeSequence");
		nameByTag.put(TagFromName.ScheduledProcedureStepModificationDateTime,"ScheduledProcedureStepModificationDateTime");
		nameByTag.put(TagFromName.ExpectedCompletionDateTime,"ExpectedCompletionDateTime");
		nameByTag.put(TagFromName.ResultingGeneralPurposePerformedProcedureStepsSequence,"ResultingGeneralPurposePerformedProcedureStepsSequence");
		nameByTag.put(TagFromName.ReferencedGeneralPurposeScheduledProcedureStepSequence,"ReferencedGeneralPurposeScheduledProcedureStepSequence");
		nameByTag.put(TagFromName.ScheduledWorkitemCodeSequence,"ScheduledWorkitemCodeSequence");
		nameByTag.put(TagFromName.PerformedWorkitemCodeSequence,"PerformedWorkitemCodeSequence");
		nameByTag.put(TagFromName.InputAvailabilityFlag,"InputAvailabilityFlag");
		nameByTag.put(TagFromName.InputInformationSequence,"InputInformationSequence");
		nameByTag.put(TagFromName.RelevantInformationSequence,"RelevantInformationSequence");
		nameByTag.put(TagFromName.ReferencedGeneralPurposeScheduledProcedureStepTransactionUID,"ReferencedGeneralPurposeScheduledProcedureStepTransactionUID");
		nameByTag.put(TagFromName.ScheduledStationNameCodeSequence,"ScheduledStationNameCodeSequence");
		nameByTag.put(TagFromName.ScheduledStationClassCodeSequence,"ScheduledStationClassCodeSequence");
		nameByTag.put(TagFromName.ScheduledStationGeographicLocationCodeSequence,"ScheduledStationGeographicLocationCodeSequence");
		nameByTag.put(TagFromName.PerformedStationNameCodeSequence,"PerformedStationNameCodeSequence");
		nameByTag.put(TagFromName.PerformedStationClassCodeSequence,"PerformedStationClassCodeSequence");
		nameByTag.put(TagFromName.PerformedStationGeographicLocationCodeSequence,"PerformedStationGeographicLocationCodeSequence");
		nameByTag.put(TagFromName.RequestedSubsequentWorkitemCodeSequence,"RequestedSubsequentWorkitemCodeSequence");
		nameByTag.put(TagFromName.NonDICOMOutputCodeSequence,"NonDICOMOutputCodeSequence");
		nameByTag.put(TagFromName.OutputInformationSequence,"OutputInformationSequence");
		nameByTag.put(TagFromName.ScheduledHumanPerformersSequence,"ScheduledHumanPerformersSequence");
		nameByTag.put(TagFromName.ActualHumanPerformersSequence,"ActualHumanPerformersSequence");
		nameByTag.put(TagFromName.HumanPerformerOrganization,"HumanPerformerOrganization");
		nameByTag.put(TagFromName.HumanPerformerName,"HumanPerformerName");
		nameByTag.put(TagFromName.RawDataHandling,"RawDataHandling");
		nameByTag.put(TagFromName.InputReadinessState,"InputReadinessState");
		nameByTag.put(TagFromName.PerformedProcedureStepStartDateTime,"PerformedProcedureStepStartDateTime");
		nameByTag.put(TagFromName.PerformedProcedureStepEndDateTime,"PerformedProcedureStepEndDateTime");
		nameByTag.put(TagFromName.ProcedureStepCancellationDateTime,"ProcedureStepCancellationDateTime");
		nameByTag.put(TagFromName.OutputDestinationSequence,"OutputDestinationSequence");
		nameByTag.put(TagFromName.DICOMStorageSequence,"DICOMStorageSequence");
		nameByTag.put(TagFromName.STOWRSStorageSequence,"STOWRSStorageSequence");
		nameByTag.put(TagFromName.StorageURL,"StorageURL");
		nameByTag.put(TagFromName.XDSStorageSequence,"XDSStorageSequence");
		nameByTag.put(TagFromName.EntranceDoseInmGy,"EntranceDoseInmGy");
		nameByTag.put(TagFromName.EntranceDoseDerivation,"EntranceDoseDerivation");
		nameByTag.put(TagFromName.ParametricMapFrameTypeSequence,"ParametricMapFrameTypeSequence");
		nameByTag.put(TagFromName.ReferencedImageRealWorldValueMappingSequence,"ReferencedImageRealWorldValueMappingSequence");
		nameByTag.put(TagFromName.RealWorldValueMappingSequence,"RealWorldValueMappingSequence");
		nameByTag.put(TagFromName.PixelValueMappingCodeSequence,"PixelValueMappingCodeSequence");
		nameByTag.put(TagFromName.LUTLabel,"LUTLabel");
		nameByTag.put(TagFromName.RealWorldValueLastValueMapped,"RealWorldValueLastValueMapped");
		nameByTag.put(TagFromName.RealWorldValueLUTData,"RealWorldValueLUTData");
		nameByTag.put(TagFromName.DoubleFloatRealWorldValueLastValueMapped,"DoubleFloatRealWorldValueLastValueMapped");
		nameByTag.put(TagFromName.DoubleFloatRealWorldValueFirstValueMapped,"DoubleFloatRealWorldValueFirstValueMapped");
		nameByTag.put(TagFromName.RealWorldValueFirstValueMapped,"RealWorldValueFirstValueMapped");
		nameByTag.put(TagFromName.QuantityDefinitionSequence,"QuantityDefinitionSequence");
		nameByTag.put(TagFromName.RealWorldValueIntercept,"RealWorldValueIntercept");
		nameByTag.put(TagFromName.RealWorldValueSlope,"RealWorldValueSlope");
		nameByTag.put(TagFromName.FindingsFlagTrial,"FindingsFlagTrial");
		nameByTag.put(TagFromName.RelationshipType,"RelationshipType");
		nameByTag.put(TagFromName.FindingsSequenceTrial,"FindingsSequenceTrial");
		nameByTag.put(TagFromName.FindingsGroupUIDTrial,"FindingsGroupUIDTrial");
		nameByTag.put(TagFromName.ReferencedFindingsGroupUIDTrial,"ReferencedFindingsGroupUIDTrial");
		nameByTag.put(TagFromName.FindingsGroupRecordingDateTrial,"FindingsGroupRecordingDateTrial");
		nameByTag.put(TagFromName.FindingsGroupRecordingTimeTrial,"FindingsGroupRecordingTimeTrial");
		nameByTag.put(TagFromName.FindingsSourceCategoryCodeSequenceTrial,"FindingsSourceCategoryCodeSequenceTrial");
		nameByTag.put(TagFromName.VerifyingOrganization,"VerifyingOrganization");
		nameByTag.put(TagFromName.DocumentingOrganizationIdentifierCodeSequenceTrial,"DocumentingOrganizationIdentifierCodeSequenceTrial");
		nameByTag.put(TagFromName.VerificationDateTime,"VerificationDateTime");
		nameByTag.put(TagFromName.ObservationDateTime,"ObservationDateTime");
		nameByTag.put(TagFromName.ValueType,"ValueType");
		nameByTag.put(TagFromName.ConceptNameCodeSequence,"ConceptNameCodeSequence");
		nameByTag.put(TagFromName.MeasurementPrecisionDescriptionTrial,"MeasurementPrecisionDescriptionTrial");
		nameByTag.put(TagFromName.ContinuityOfContent,"ContinuityOfContent");
		nameByTag.put(TagFromName.UrgencyOrPriorityAlertsTrial,"UrgencyOrPriorityAlertsTrial");
		nameByTag.put(TagFromName.SequencingIndicatorTrial,"SequencingIndicatorTrial");
		nameByTag.put(TagFromName.DocumentIdentifierCodeSequenceTrial,"DocumentIdentifierCodeSequenceTrial");
		nameByTag.put(TagFromName.DocumentAuthorTrial,"DocumentAuthorTrial");
		nameByTag.put(TagFromName.DocumentAuthorIdentifierCodeSequenceTrial,"DocumentAuthorIdentifierCodeSequenceTrial");
		nameByTag.put(TagFromName.IdentifierCodeSequenceTrial,"IdentifierCodeSequenceTrial");
		nameByTag.put(TagFromName.VerifyingObserverSequence,"VerifyingObserverSequence");
		nameByTag.put(TagFromName.ObjectBinaryIdentifierTrial,"ObjectBinaryIdentifierTrial");
		nameByTag.put(TagFromName.VerifyingObserverName,"VerifyingObserverName");
		nameByTag.put(TagFromName.DocumentingObserverIdentifierCodeSequenceTrial,"DocumentingObserverIdentifierCodeSequenceTrial");
		nameByTag.put(TagFromName.AuthorObserverSequence,"AuthorObserverSequence");
		nameByTag.put(TagFromName.ParticipantSequence,"ParticipantSequence");
		nameByTag.put(TagFromName.CustodialOrganizationSequence,"CustodialOrganizationSequence");
		nameByTag.put(TagFromName.ParticipationType,"ParticipationType");
		nameByTag.put(TagFromName.ParticipationDateTime,"ParticipationDateTime");
		nameByTag.put(TagFromName.ObserverType,"ObserverType");
		nameByTag.put(TagFromName.ProcedureIdentifierCodeSequenceTrial,"ProcedureIdentifierCodeSequenceTrial");
		nameByTag.put(TagFromName.VerifyingObserverIdentificationCodeSequence,"VerifyingObserverIdentificationCodeSequence");
		nameByTag.put(TagFromName.ObjectDirectoryBinaryIdentifierTrial,"ObjectDirectoryBinaryIdentifierTrial");
		nameByTag.put(TagFromName.EquivalentCDADocumentSequence,"EquivalentCDADocumentSequence");
		nameByTag.put(TagFromName.ReferencedWaveformChannels,"ReferencedWaveformChannels");
		nameByTag.put(TagFromName.DateOfDocumentOrVerbalTransactionTrial,"DateOfDocumentOrVerbalTransactionTrial");
		nameByTag.put(TagFromName.TimeOfDocumentCreationOrVerbalTransactionTrial,"TimeOfDocumentCreationOrVerbalTransactionTrial");
		nameByTag.put(TagFromName.DateTime,"DateTime");
		nameByTag.put(TagFromName.Date,"Date");
		nameByTag.put(TagFromName.Time,"Time");
		nameByTag.put(TagFromName.PersonName,"PersonName");
		nameByTag.put(TagFromName.UID,"UID");
		nameByTag.put(TagFromName.ReportStatusIDTrial,"ReportStatusIDTrial");
		nameByTag.put(TagFromName.TemporalRangeType,"TemporalRangeType");
		nameByTag.put(TagFromName.ReferencedSamplePositions,"ReferencedSamplePositions");
		nameByTag.put(TagFromName.ReferencedFrameNumbers,"ReferencedFrameNumbers");
		nameByTag.put(TagFromName.ReferencedTimeOffsets,"ReferencedTimeOffsets");
		nameByTag.put(TagFromName.ReferencedDateTime,"ReferencedDateTime");
		nameByTag.put(TagFromName.TextValue,"TextValue");
		nameByTag.put(TagFromName.FloatingPointValue,"FloatingPointValue");
		nameByTag.put(TagFromName.RationalNumeratorValue,"RationalNumeratorValue");
		nameByTag.put(TagFromName.RationalDenominatorValue,"RationalDenominatorValue");
		nameByTag.put(TagFromName.ObservationCategoryCodeSequenceTrial,"ObservationCategoryCodeSequenceTrial");
		nameByTag.put(TagFromName.ConceptCodeSequence,"ConceptCodeSequence");
		nameByTag.put(TagFromName.BibliographicCitationTrial,"BibliographicCitationTrial");
		nameByTag.put(TagFromName.PurposeOfReferenceCodeSequence,"PurposeOfReferenceCodeSequence");
		nameByTag.put(TagFromName.ObservationUID,"ObservationUID");
		nameByTag.put(TagFromName.ReferencedObservationUIDTrial,"ReferencedObservationUIDTrial");
		nameByTag.put(TagFromName.ReferencedObservationClassTrial,"ReferencedObservationClassTrial");
		nameByTag.put(TagFromName.ReferencedObjectObservationClassTrial,"ReferencedObjectObservationClassTrial");
		nameByTag.put(TagFromName.AnnotationGroupNumber,"AnnotationGroupNumber");
		nameByTag.put(TagFromName.ObservationDateTrial,"ObservationDateTrial");
		nameByTag.put(TagFromName.ObservationTimeTrial,"ObservationTimeTrial");
		nameByTag.put(TagFromName.MeasurementAutomationTrial,"MeasurementAutomationTrial");
		nameByTag.put(TagFromName.ModifierCodeSequence,"ModifierCodeSequence");
		nameByTag.put(TagFromName.IdentificationDescriptionTrial,"IdentificationDescriptionTrial");
		nameByTag.put(TagFromName.CoordinatesSetGeometricTypeTrial,"CoordinatesSetGeometricTypeTrial");
		nameByTag.put(TagFromName.AlgorithmCodeSequenceTrial,"AlgorithmCodeSequenceTrial");
		nameByTag.put(TagFromName.AlgorithmDescriptionTrial,"AlgorithmDescriptionTrial");
		nameByTag.put(TagFromName.PixelCoordinatesSetTrial,"PixelCoordinatesSetTrial");
		nameByTag.put(TagFromName.MeasuredValueSequence,"MeasuredValueSequence");
		nameByTag.put(TagFromName.NumericValueQualifierCodeSequence,"NumericValueQualifierCodeSequence");
		nameByTag.put(TagFromName.CurrentObserverTrial,"CurrentObserverTrial");
		nameByTag.put(TagFromName.NumericValue,"NumericValue");
		nameByTag.put(TagFromName.ReferencedAccessionSequenceTrial,"ReferencedAccessionSequenceTrial");
		nameByTag.put(TagFromName.ReportStatusCommentTrial,"ReportStatusCommentTrial");
		nameByTag.put(TagFromName.ProcedureContextSequenceTrial,"ProcedureContextSequenceTrial");
		nameByTag.put(TagFromName.VerbalSourceTrial,"VerbalSourceTrial");
		nameByTag.put(TagFromName.AddressTrial,"AddressTrial");
		nameByTag.put(TagFromName.TelephoneNumberTrial,"TelephoneNumberTrial");
		nameByTag.put(TagFromName.VerbalSourceIdentifierCodeSequenceTrial,"VerbalSourceIdentifierCodeSequenceTrial");
		nameByTag.put(TagFromName.PredecessorDocumentsSequence,"PredecessorDocumentsSequence");
		nameByTag.put(TagFromName.ReferencedRequestSequence,"ReferencedRequestSequence");
		nameByTag.put(TagFromName.PerformedProcedureCodeSequence,"PerformedProcedureCodeSequence");
		nameByTag.put(TagFromName.CurrentRequestedProcedureEvidenceSequence,"CurrentRequestedProcedureEvidenceSequence");
		nameByTag.put(TagFromName.ReportDetailSequenceTrial,"ReportDetailSequenceTrial");
		nameByTag.put(TagFromName.PertinentOtherEvidenceSequence,"PertinentOtherEvidenceSequence");
		nameByTag.put(TagFromName.HL7StructuredDocumentReferenceSequence,"HL7StructuredDocumentReferenceSequence");
		nameByTag.put(TagFromName.ObservationSubjectUIDTrial,"ObservationSubjectUIDTrial");
		nameByTag.put(TagFromName.ObservationSubjectClassTrial,"ObservationSubjectClassTrial");
		nameByTag.put(TagFromName.ObservationSubjectTypeCodeSequenceTrial,"ObservationSubjectTypeCodeSequenceTrial");
		nameByTag.put(TagFromName.CompletionFlag,"CompletionFlag");
		nameByTag.put(TagFromName.CompletionFlagDescription,"CompletionFlagDescription");
		nameByTag.put(TagFromName.VerificationFlag,"VerificationFlag");
		nameByTag.put(TagFromName.ArchiveRequested,"ArchiveRequested");
		nameByTag.put(TagFromName.PreliminaryFlag,"PreliminaryFlag");
		nameByTag.put(TagFromName.ContentTemplateSequence,"ContentTemplateSequence");
		nameByTag.put(TagFromName.IdenticalDocumentsSequence,"IdenticalDocumentsSequence");
		nameByTag.put(TagFromName.ObservationSubjectContextFlagTrial,"ObservationSubjectContextFlagTrial");
		nameByTag.put(TagFromName.ObserverContextFlagTrial,"ObserverContextFlagTrial");
		nameByTag.put(TagFromName.ProcedureContextFlagTrial,"ProcedureContextFlagTrial");
		nameByTag.put(TagFromName.ContentSequence,"ContentSequence");
		nameByTag.put(TagFromName.RelationshipSequenceTrial,"RelationshipSequenceTrial");
		nameByTag.put(TagFromName.RelationshipTypeCodeSequenceTrial,"RelationshipTypeCodeSequenceTrial");
		nameByTag.put(TagFromName.LanguageCodeSequenceTrial,"LanguageCodeSequenceTrial");
		nameByTag.put(TagFromName.UniformResourceLocatorTrial,"UniformResourceLocatorTrial");
		nameByTag.put(TagFromName.WaveformAnnotationSequence,"WaveformAnnotationSequence");
		nameByTag.put(TagFromName.TemplateIdentifier,"TemplateIdentifier");
		nameByTag.put(TagFromName.TemplateVersion,"TemplateVersion");
		nameByTag.put(TagFromName.TemplateLocalVersion,"TemplateLocalVersion");
		nameByTag.put(TagFromName.TemplateExtensionFlag,"TemplateExtensionFlag");
		nameByTag.put(TagFromName.TemplateExtensionOrganizationUID,"TemplateExtensionOrganizationUID");
		nameByTag.put(TagFromName.TemplateExtensionCreatorUID,"TemplateExtensionCreatorUID");
		nameByTag.put(TagFromName.ReferencedContentItemIdentifier,"ReferencedContentItemIdentifier");
		nameByTag.put(TagFromName.HL7InstanceIdentifier,"HL7InstanceIdentifier");
		nameByTag.put(TagFromName.HL7DocumentEffectiveTime,"HL7DocumentEffectiveTime");
		nameByTag.put(TagFromName.HL7DocumentTypeCodeSequence,"HL7DocumentTypeCodeSequence");
		nameByTag.put(TagFromName.DocumentClassCodeSequence,"DocumentClassCodeSequence");
		nameByTag.put(TagFromName.RetrieveURI,"RetrieveURI");
		nameByTag.put(TagFromName.RetrieveLocationUID,"RetrieveLocationUID");
		nameByTag.put(TagFromName.TypeOfInstances,"TypeOfInstances");
		nameByTag.put(TagFromName.DICOMRetrievalSequence,"DICOMRetrievalSequence");
		nameByTag.put(TagFromName.DICOMMediaRetrievalSequence,"DICOMMediaRetrievalSequence");
		nameByTag.put(TagFromName.WADORetrievalSequence,"WADORetrievalSequence");
		nameByTag.put(TagFromName.XDSRetrievalSequence,"XDSRetrievalSequence");
		nameByTag.put(TagFromName.WADORSRetrievalSequence,"WADORSRetrievalSequence");
		nameByTag.put(TagFromName.RepositoryUniqueID,"RepositoryUniqueID");
		nameByTag.put(TagFromName.HomeCommunityID,"HomeCommunityID");
		nameByTag.put(TagFromName.DocumentTitle,"DocumentTitle");
		nameByTag.put(TagFromName.EncapsulatedDocument,"EncapsulatedDocument");
		nameByTag.put(TagFromName.MIMETypeOfEncapsulatedDocument,"MIMETypeOfEncapsulatedDocument");
		nameByTag.put(TagFromName.SourceInstanceSequence,"SourceInstanceSequence");
		nameByTag.put(TagFromName.ListOfMIMETypes,"ListOfMIMETypes");
		nameByTag.put(TagFromName.ProductPackageIdentifier,"ProductPackageIdentifier");
		nameByTag.put(TagFromName.SubstanceAdministrationApproval,"SubstanceAdministrationApproval");
		nameByTag.put(TagFromName.ApprovalStatusFurtherDescription,"ApprovalStatusFurtherDescription");
		nameByTag.put(TagFromName.ApprovalStatusDateTime,"ApprovalStatusDateTime");
		nameByTag.put(TagFromName.ProductTypeCodeSequence,"ProductTypeCodeSequence");
		nameByTag.put(TagFromName.ProductName,"ProductName");
		nameByTag.put(TagFromName.ProductDescription,"ProductDescription");
		nameByTag.put(TagFromName.ProductLotIdentifier,"ProductLotIdentifier");
		nameByTag.put(TagFromName.ProductExpirationDateTime,"ProductExpirationDateTime");
		nameByTag.put(TagFromName.SubstanceAdministrationDateTime,"SubstanceAdministrationDateTime");
		nameByTag.put(TagFromName.SubstanceAdministrationNotes,"SubstanceAdministrationNotes");
		nameByTag.put(TagFromName.SubstanceAdministrationDeviceID,"SubstanceAdministrationDeviceID");
		nameByTag.put(TagFromName.ProductParameterSequence,"ProductParameterSequence");
		nameByTag.put(TagFromName.SubstanceAdministrationParameterSequence,"SubstanceAdministrationParameterSequence");
		nameByTag.put(TagFromName.ApprovalSequence,"ApprovalSequence");
		nameByTag.put(TagFromName.AssertionCodeSequence,"AssertionCodeSequence");
		nameByTag.put(TagFromName.AssertionUID,"AssertionUID");
		nameByTag.put(TagFromName.AsserterIdentificationSequence,"AsserterIdentificationSequence");
		nameByTag.put(TagFromName.AssertionDateTime,"AssertionDateTime");
		nameByTag.put(TagFromName.AssertionExpirationDateTime,"AssertionExpirationDateTime");
		nameByTag.put(TagFromName.AssertionComments,"AssertionComments");
		nameByTag.put(TagFromName.RelatedAssertionSequence,"RelatedAssertionSequence");
		nameByTag.put(TagFromName.ReferencedAssertionUID,"ReferencedAssertionUID");
		nameByTag.put(TagFromName.ApprovalSubjectSequence,"ApprovalSubjectSequence");
		nameByTag.put(TagFromName.OrganizationalRoleCodeSequence,"OrganizationalRoleCodeSequence");
		nameByTag.put(TagFromName.LensDescription,"LensDescription");
		nameByTag.put(TagFromName.RightLensSequence,"RightLensSequence");
		nameByTag.put(TagFromName.LeftLensSequence,"LeftLensSequence");
		nameByTag.put(TagFromName.UnspecifiedLateralityLensSequence,"UnspecifiedLateralityLensSequence");
		nameByTag.put(TagFromName.CylinderSequence,"CylinderSequence");
		nameByTag.put(TagFromName.PrismSequence,"PrismSequence");
		nameByTag.put(TagFromName.HorizontalPrismPower,"HorizontalPrismPower");
		nameByTag.put(TagFromName.HorizontalPrismBase,"HorizontalPrismBase");
		nameByTag.put(TagFromName.VerticalPrismPower,"VerticalPrismPower");
		nameByTag.put(TagFromName.VerticalPrismBase,"VerticalPrismBase");
		nameByTag.put(TagFromName.LensSegmentType,"LensSegmentType");
		nameByTag.put(TagFromName.OpticalTransmittance,"OpticalTransmittance");
		nameByTag.put(TagFromName.ChannelWidth,"ChannelWidth");
		nameByTag.put(TagFromName.PupilSize,"PupilSize");
		nameByTag.put(TagFromName.CornealSize,"CornealSize");
		nameByTag.put(TagFromName.AutorefractionRightEyeSequence,"AutorefractionRightEyeSequence");
		nameByTag.put(TagFromName.AutorefractionLeftEyeSequence,"AutorefractionLeftEyeSequence");
		nameByTag.put(TagFromName.DistancePupillaryDistance,"DistancePupillaryDistance");
		nameByTag.put(TagFromName.NearPupillaryDistance,"NearPupillaryDistance");
		nameByTag.put(TagFromName.IntermediatePupillaryDistance,"IntermediatePupillaryDistance");
		nameByTag.put(TagFromName.OtherPupillaryDistance,"OtherPupillaryDistance");
		nameByTag.put(TagFromName.KeratometryRightEyeSequence,"KeratometryRightEyeSequence");
		nameByTag.put(TagFromName.KeratometryLeftEyeSequence,"KeratometryLeftEyeSequence");
		nameByTag.put(TagFromName.SteepKeratometricAxisSequence,"SteepKeratometricAxisSequence");
		nameByTag.put(TagFromName.RadiusOfCurvature,"RadiusOfCurvature");
		nameByTag.put(TagFromName.KeratometricPower,"KeratometricPower");
		nameByTag.put(TagFromName.KeratometricAxis,"KeratometricAxis");
		nameByTag.put(TagFromName.FlatKeratometricAxisSequence,"FlatKeratometricAxisSequence");
		nameByTag.put(TagFromName.BackgroundColor,"BackgroundColor");
		nameByTag.put(TagFromName.Optotype,"Optotype");
		nameByTag.put(TagFromName.OptotypePresentation,"OptotypePresentation");
		nameByTag.put(TagFromName.SubjectiveRefractionRightEyeSequence,"SubjectiveRefractionRightEyeSequence");
		nameByTag.put(TagFromName.SubjectiveRefractionLeftEyeSequence,"SubjectiveRefractionLeftEyeSequence");
		nameByTag.put(TagFromName.AddNearSequence,"AddNearSequence");
		nameByTag.put(TagFromName.AddIntermediateSequence,"AddIntermediateSequence");
		nameByTag.put(TagFromName.AddOtherSequence,"AddOtherSequence");
		nameByTag.put(TagFromName.AddPower,"AddPower");
		nameByTag.put(TagFromName.ViewingDistance,"ViewingDistance");
		nameByTag.put(TagFromName.VisualAcuityTypeCodeSequence,"VisualAcuityTypeCodeSequence");
		nameByTag.put(TagFromName.VisualAcuityRightEyeSequence,"VisualAcuityRightEyeSequence");
		nameByTag.put(TagFromName.VisualAcuityLeftEyeSequence,"VisualAcuityLeftEyeSequence");
		nameByTag.put(TagFromName.VisualAcuityBothEyesOpenSequence,"VisualAcuityBothEyesOpenSequence");
		nameByTag.put(TagFromName.ViewingDistanceType,"ViewingDistanceType");
		nameByTag.put(TagFromName.VisualAcuityModifiers,"VisualAcuityModifiers");
		nameByTag.put(TagFromName.DecimalVisualAcuity,"DecimalVisualAcuity");
		nameByTag.put(TagFromName.OptotypeDetailedDefinition,"OptotypeDetailedDefinition");
		nameByTag.put(TagFromName.ReferencedRefractiveMeasurementsSequence,"ReferencedRefractiveMeasurementsSequence");
		nameByTag.put(TagFromName.SpherePower,"SpherePower");
		nameByTag.put(TagFromName.CylinderPower,"CylinderPower");
		nameByTag.put(TagFromName.CornealTopographySurface,"CornealTopographySurface");
		nameByTag.put(TagFromName.CornealVertexLocation,"CornealVertexLocation");
		nameByTag.put(TagFromName.PupilCentroidXCoordinate,"PupilCentroidXCoordinate");
		nameByTag.put(TagFromName.PupilCentroidYCoordinate,"PupilCentroidYCoordinate");
		nameByTag.put(TagFromName.EquivalentPupilRadius,"EquivalentPupilRadius");
		nameByTag.put(TagFromName.CornealTopographyMapTypeCodeSequence,"CornealTopographyMapTypeCodeSequence");
		nameByTag.put(TagFromName.VerticesOfTheOutlineOfPupil,"VerticesOfTheOutlineOfPupil");
		nameByTag.put(TagFromName.CornealTopographyMappingNormalsSequence,"CornealTopographyMappingNormalsSequence");
		nameByTag.put(TagFromName.MaximumCornealCurvatureSequence,"MaximumCornealCurvatureSequence");
		nameByTag.put(TagFromName.MaximumCornealCurvature,"MaximumCornealCurvature");
		nameByTag.put(TagFromName.MaximumCornealCurvatureLocation,"MaximumCornealCurvatureLocation");
		nameByTag.put(TagFromName.MinimumKeratometricSequence,"MinimumKeratometricSequence");
		nameByTag.put(TagFromName.SimulatedKeratometricCylinderSequence,"SimulatedKeratometricCylinderSequence");
		nameByTag.put(TagFromName.AverageCornealPower,"AverageCornealPower");
		nameByTag.put(TagFromName.CornealISValue,"CornealISValue");
		nameByTag.put(TagFromName.AnalyzedArea,"AnalyzedArea");
		nameByTag.put(TagFromName.SurfaceRegularityIndex,"SurfaceRegularityIndex");
		nameByTag.put(TagFromName.SurfaceAsymmetryIndex,"SurfaceAsymmetryIndex");
		nameByTag.put(TagFromName.CornealEccentricityIndex,"CornealEccentricityIndex");
		nameByTag.put(TagFromName.KeratoconusPredictionIndex,"KeratoconusPredictionIndex");
		nameByTag.put(TagFromName.DecimalPotentialVisualAcuity,"DecimalPotentialVisualAcuity");
		nameByTag.put(TagFromName.CornealTopographyMapQualityEvaluation,"CornealTopographyMapQualityEvaluation");
		nameByTag.put(TagFromName.SourceImageCornealProcessedDataSequence,"SourceImageCornealProcessedDataSequence");
		nameByTag.put(TagFromName.CornealPointLocation,"CornealPointLocation");
		nameByTag.put(TagFromName.CornealPointEstimated,"CornealPointEstimated");
		nameByTag.put(TagFromName.AxialPower,"AxialPower");
		nameByTag.put(TagFromName.TangentialPower,"TangentialPower");
		nameByTag.put(TagFromName.RefractivePower,"RefractivePower");
		nameByTag.put(TagFromName.RelativeElevation,"RelativeElevation");
		nameByTag.put(TagFromName.CornealWavefront,"CornealWavefront");
		nameByTag.put(TagFromName.ImagedVolumeWidth,"ImagedVolumeWidth");
		nameByTag.put(TagFromName.ImagedVolumeHeight,"ImagedVolumeHeight");
		nameByTag.put(TagFromName.ImagedVolumeDepth,"ImagedVolumeDepth");
		nameByTag.put(TagFromName.TotalPixelMatrixColumns,"TotalPixelMatrixColumns");
		nameByTag.put(TagFromName.TotalPixelMatrixRows,"TotalPixelMatrixRows");
		nameByTag.put(TagFromName.TotalPixelMatrixOriginSequence,"TotalPixelMatrixOriginSequence");
		nameByTag.put(TagFromName.SpecimenLabelInImage,"SpecimenLabelInImage");
		nameByTag.put(TagFromName.FocusMethod,"FocusMethod");
		nameByTag.put(TagFromName.ExtendedDepthOfField,"ExtendedDepthOfField");
		nameByTag.put(TagFromName.NumberOfFocalPlanes,"NumberOfFocalPlanes");
		nameByTag.put(TagFromName.DistanceBetweenFocalPlanes,"DistanceBetweenFocalPlanes");
		nameByTag.put(TagFromName.RecommendedAbsentPixelCIELabValue,"RecommendedAbsentPixelCIELabValue");
		nameByTag.put(TagFromName.IlluminatorTypeCodeSequence,"IlluminatorTypeCodeSequence");
		nameByTag.put(TagFromName.ImageOrientationSlide,"ImageOrientationSlide");
		nameByTag.put(TagFromName.OpticalPathSequence,"OpticalPathSequence");
		nameByTag.put(TagFromName.OpticalPathIdentifier,"OpticalPathIdentifier");
		nameByTag.put(TagFromName.OpticalPathDescription,"OpticalPathDescription");
		nameByTag.put(TagFromName.IlluminationColorCodeSequence,"IlluminationColorCodeSequence");
		nameByTag.put(TagFromName.SpecimenReferenceSequence,"SpecimenReferenceSequence");
		nameByTag.put(TagFromName.CondenserLensPower,"CondenserLensPower");
		nameByTag.put(TagFromName.ObjectiveLensPower,"ObjectiveLensPower");
		nameByTag.put(TagFromName.ObjectiveLensNumericalAperture,"ObjectiveLensNumericalAperture");
		nameByTag.put(TagFromName.PaletteColorLookupTableSequence,"PaletteColorLookupTableSequence");
		nameByTag.put(TagFromName.ReferencedImageNavigationSequence,"ReferencedImageNavigationSequence");
		nameByTag.put(TagFromName.TopLeftHandCornerOfLocalizerArea,"TopLeftHandCornerOfLocalizerArea");
		nameByTag.put(TagFromName.BottomRightHandCornerOfLocalizerArea,"BottomRightHandCornerOfLocalizerArea");
		nameByTag.put(TagFromName.OpticalPathIdentificationSequence,"OpticalPathIdentificationSequence");
		nameByTag.put(TagFromName.PlanePositionSlideSequence,"PlanePositionSlideSequence");
		nameByTag.put(TagFromName.ColumnPositionInTotalImagePixelMatrix,"ColumnPositionInTotalImagePixelMatrix");
		nameByTag.put(TagFromName.RowPositionInTotalImagePixelMatrix,"RowPositionInTotalImagePixelMatrix");
		nameByTag.put(TagFromName.PixelOriginInterpretation,"PixelOriginInterpretation");
		nameByTag.put(TagFromName.NumberOfOpticalPaths,"NumberOfOpticalPaths");
		nameByTag.put(TagFromName.TotalPixelMatrixFocalPlanes,"TotalPixelMatrixFocalPlanes");
		nameByTag.put(TagFromName.CalibrationImage,"CalibrationImage");
		nameByTag.put(TagFromName.DeviceSequence,"DeviceSequence");
		nameByTag.put(TagFromName.ContainerComponentTypeCodeSequence,"ContainerComponentTypeCodeSequence");
		nameByTag.put(TagFromName.ContainerComponentThickness,"ContainerComponentThickness");
		nameByTag.put(TagFromName.DeviceLength,"DeviceLength");
		nameByTag.put(TagFromName.ContainerComponentWidth,"ContainerComponentWidth");
		nameByTag.put(TagFromName.DeviceDiameter,"DeviceDiameter");
		nameByTag.put(TagFromName.DeviceDiameterUnits,"DeviceDiameterUnits");
		nameByTag.put(TagFromName.DeviceVolume,"DeviceVolume");
		nameByTag.put(TagFromName.InterMarkerDistance,"InterMarkerDistance");
		nameByTag.put(TagFromName.ContainerComponentMaterial,"ContainerComponentMaterial");
		nameByTag.put(TagFromName.ContainerComponentID,"ContainerComponentID");
		nameByTag.put(TagFromName.ContainerComponentLength,"ContainerComponentLength");
		nameByTag.put(TagFromName.ContainerComponentDiameter,"ContainerComponentDiameter");
		nameByTag.put(TagFromName.ContainerComponentDescription,"ContainerComponentDescription");
		nameByTag.put(TagFromName.DeviceDescription,"DeviceDescription");
		nameByTag.put(TagFromName.ContrastBolusIngredientPercentByVolume,"ContrastBolusIngredientPercentByVolume");
		nameByTag.put(TagFromName.OCTFocalDistance,"OCTFocalDistance");
		nameByTag.put(TagFromName.BeamSpotSize,"BeamSpotSize");
		nameByTag.put(TagFromName.EffectiveRefractiveIndex,"EffectiveRefractiveIndex");
		nameByTag.put(TagFromName.OCTAcquisitionDomain,"OCTAcquisitionDomain");
		nameByTag.put(TagFromName.OCTOpticalCenterWavelength,"OCTOpticalCenterWavelength");
		nameByTag.put(TagFromName.AxialResolution,"AxialResolution");
		nameByTag.put(TagFromName.RangingDepth,"RangingDepth");
		nameByTag.put(TagFromName.ALineRate,"ALineRate");
		nameByTag.put(TagFromName.ALinesPerFrame,"ALinesPerFrame");
		nameByTag.put(TagFromName.CatheterRotationalRate,"CatheterRotationalRate");
		nameByTag.put(TagFromName.ALinePixelSpacing,"ALinePixelSpacing");
		nameByTag.put(TagFromName.ModeOfPercutaneousAccessSequence,"ModeOfPercutaneousAccessSequence");
		nameByTag.put(TagFromName.IntravascularOCTFrameTypeSequence,"IntravascularOCTFrameTypeSequence");
		nameByTag.put(TagFromName.OCTZOffsetApplied,"OCTZOffsetApplied");
		nameByTag.put(TagFromName.IntravascularFrameContentSequence,"IntravascularFrameContentSequence");
		nameByTag.put(TagFromName.IntravascularLongitudinalDistance,"IntravascularLongitudinalDistance");
		nameByTag.put(TagFromName.IntravascularOCTFrameContentSequence,"IntravascularOCTFrameContentSequence");
		nameByTag.put(TagFromName.OCTZOffsetCorrection,"OCTZOffsetCorrection");
		nameByTag.put(TagFromName.CatheterDirectionOfRotation,"CatheterDirectionOfRotation");
		nameByTag.put(TagFromName.SeamLineLocation,"SeamLineLocation");
		nameByTag.put(TagFromName.FirstALineLocation,"FirstALineLocation");
		nameByTag.put(TagFromName.SeamLineIndex,"SeamLineIndex");
		nameByTag.put(TagFromName.NumberOfPaddedALines,"NumberOfPaddedALines");
		nameByTag.put(TagFromName.InterpolationType,"InterpolationType");
		nameByTag.put(TagFromName.RefractiveIndexApplied,"RefractiveIndexApplied");
		nameByTag.put(TagFromName.EnergyWindowVector,"EnergyWindowVector");
		nameByTag.put(TagFromName.NumberOfEnergyWindows,"NumberOfEnergyWindows");
		nameByTag.put(TagFromName.EnergyWindowInformationSequence,"EnergyWindowInformationSequence");
		nameByTag.put(TagFromName.EnergyWindowRangeSequence,"EnergyWindowRangeSequence");
		nameByTag.put(TagFromName.EnergyWindowLowerLimit,"EnergyWindowLowerLimit");
		nameByTag.put(TagFromName.EnergyWindowUpperLimit,"EnergyWindowUpperLimit");
		nameByTag.put(TagFromName.RadiopharmaceuticalInformationSequence,"RadiopharmaceuticalInformationSequence");
		nameByTag.put(TagFromName.ResidualSyringeCounts,"ResidualSyringeCounts");
		nameByTag.put(TagFromName.EnergyWindowName,"EnergyWindowName");
		nameByTag.put(TagFromName.DetectorVector,"DetectorVector");
		nameByTag.put(TagFromName.NumberOfDetectors,"NumberOfDetectors");
		nameByTag.put(TagFromName.DetectorInformationSequence,"DetectorInformationSequence");
		nameByTag.put(TagFromName.PhaseVector,"PhaseVector");
		nameByTag.put(TagFromName.NumberOfPhases,"NumberOfPhases");
		nameByTag.put(TagFromName.PhaseInformationSequence,"PhaseInformationSequence");
		nameByTag.put(TagFromName.NumberOfFramesInPhase,"NumberOfFramesInPhase");
		nameByTag.put(TagFromName.PhaseDelay,"PhaseDelay");
		nameByTag.put(TagFromName.PauseBetweenFrames,"PauseBetweenFrames");
		nameByTag.put(TagFromName.PhaseDescription,"PhaseDescription");
		nameByTag.put(TagFromName.RotationVector,"RotationVector");
		nameByTag.put(TagFromName.NumberOfRotations,"NumberOfRotations");
		nameByTag.put(TagFromName.RotationInformationSequence,"RotationInformationSequence");
		nameByTag.put(TagFromName.NumberOfFramesInRotation,"NumberOfFramesInRotation");
		nameByTag.put(TagFromName.RRIntervalVector,"RRIntervalVector");
		nameByTag.put(TagFromName.NumberOfRRIntervals,"NumberOfRRIntervals");
		nameByTag.put(TagFromName.GatedInformationSequence,"GatedInformationSequence");
		nameByTag.put(TagFromName.DataInformationSequence,"DataInformationSequence");
		nameByTag.put(TagFromName.TimeSlotVector,"TimeSlotVector");
		nameByTag.put(TagFromName.NumberOfTimeSlots,"NumberOfTimeSlots");
		nameByTag.put(TagFromName.TimeSlotInformationSequence,"TimeSlotInformationSequence");
		nameByTag.put(TagFromName.TimeSlotTime,"TimeSlotTime");
		nameByTag.put(TagFromName.SliceVector,"SliceVector");
		nameByTag.put(TagFromName.NumberOfSlices,"NumberOfSlices");
		nameByTag.put(TagFromName.AngularViewVector,"AngularViewVector");
		nameByTag.put(TagFromName.TimeSliceVector,"TimeSliceVector");
		nameByTag.put(TagFromName.NumberOfTimeSlices,"NumberOfTimeSlices");
		nameByTag.put(TagFromName.StartAngle,"StartAngle");
		nameByTag.put(TagFromName.TypeOfDetectorMotion,"TypeOfDetectorMotion");
		nameByTag.put(TagFromName.TriggerVector,"TriggerVector");
		nameByTag.put(TagFromName.NumberOfTriggersInPhase,"NumberOfTriggersInPhase");
		nameByTag.put(TagFromName.ViewCodeSequence,"ViewCodeSequence");
		nameByTag.put(TagFromName.ViewModifierCodeSequence,"ViewModifierCodeSequence");
		nameByTag.put(TagFromName.RadionuclideCodeSequence,"RadionuclideCodeSequence");
		nameByTag.put(TagFromName.AdministrationRouteCodeSequence,"AdministrationRouteCodeSequence");
		nameByTag.put(TagFromName.RadiopharmaceuticalCodeSequence,"RadiopharmaceuticalCodeSequence");
		nameByTag.put(TagFromName.CalibrationDataSequence,"CalibrationDataSequence");
		nameByTag.put(TagFromName.EnergyWindowNumber,"EnergyWindowNumber");
		nameByTag.put(TagFromName.ImageID,"ImageID");
		nameByTag.put(TagFromName.PatientOrientationCodeSequence,"PatientOrientationCodeSequence");
		nameByTag.put(TagFromName.PatientOrientationModifierCodeSequence,"PatientOrientationModifierCodeSequence");
		nameByTag.put(TagFromName.PatientGantryRelationshipCodeSequence,"PatientGantryRelationshipCodeSequence");
		nameByTag.put(TagFromName.SliceProgressionDirection,"SliceProgressionDirection");
		nameByTag.put(TagFromName.ScanProgressionDirection,"ScanProgressionDirection");
		nameByTag.put(TagFromName.SeriesType,"SeriesType");
		nameByTag.put(TagFromName.Units,"Units");
		nameByTag.put(TagFromName.CountsSource,"CountsSource");
		nameByTag.put(TagFromName.ReprojectionMethod,"ReprojectionMethod");
		nameByTag.put(TagFromName.SUVType,"SUVType");
		nameByTag.put(TagFromName.RandomsCorrectionMethod,"RandomsCorrectionMethod");
		nameByTag.put(TagFromName.AttenuationCorrectionMethod,"AttenuationCorrectionMethod");
		nameByTag.put(TagFromName.DecayCorrection,"DecayCorrection");
		nameByTag.put(TagFromName.ReconstructionMethod,"ReconstructionMethod");
		nameByTag.put(TagFromName.DetectorLinesOfResponseUsed,"DetectorLinesOfResponseUsed");
		nameByTag.put(TagFromName.ScatterCorrectionMethod,"ScatterCorrectionMethod");
		nameByTag.put(TagFromName.AxialAcceptance,"AxialAcceptance");
		nameByTag.put(TagFromName.AxialMash,"AxialMash");
		nameByTag.put(TagFromName.TransverseMash,"TransverseMash");
		nameByTag.put(TagFromName.DetectorElementSize,"DetectorElementSize");
		nameByTag.put(TagFromName.CoincidenceWindowWidth,"CoincidenceWindowWidth");
		nameByTag.put(TagFromName.SecondaryCountsType,"SecondaryCountsType");
		nameByTag.put(TagFromName.FrameReferenceTime,"FrameReferenceTime");
		nameByTag.put(TagFromName.PrimaryPromptsCountsAccumulated,"PrimaryPromptsCountsAccumulated");
		nameByTag.put(TagFromName.SecondaryCountsAccumulated,"SecondaryCountsAccumulated");
		nameByTag.put(TagFromName.SliceSensitivityFactor,"SliceSensitivityFactor");
		nameByTag.put(TagFromName.DecayFactor,"DecayFactor");
		nameByTag.put(TagFromName.DoseCalibrationFactor,"DoseCalibrationFactor");
		nameByTag.put(TagFromName.ScatterFractionFactor,"ScatterFractionFactor");
		nameByTag.put(TagFromName.DeadTimeFactor,"DeadTimeFactor");
		nameByTag.put(TagFromName.ImageIndex,"ImageIndex");
		nameByTag.put(TagFromName.CountsIncluded,"CountsIncluded");
		nameByTag.put(TagFromName.DeadTimeCorrectionFlag,"DeadTimeCorrectionFlag");
		nameByTag.put(TagFromName.HistogramSequence,"HistogramSequence");
		nameByTag.put(TagFromName.HistogramNumberOfBins,"HistogramNumberOfBins");
		nameByTag.put(TagFromName.HistogramFirstBinValue,"HistogramFirstBinValue");
		nameByTag.put(TagFromName.HistogramLastBinValue,"HistogramLastBinValue");
		nameByTag.put(TagFromName.HistogramBinWidth,"HistogramBinWidth");
		nameByTag.put(TagFromName.HistogramExplanation,"HistogramExplanation");
		nameByTag.put(TagFromName.HistogramData,"HistogramData");
		nameByTag.put(TagFromName.SegmentationType,"SegmentationType");
		nameByTag.put(TagFromName.SegmentSequence,"SegmentSequence");
		nameByTag.put(TagFromName.SegmentedPropertyCategoryCodeSequence,"SegmentedPropertyCategoryCodeSequence");
		nameByTag.put(TagFromName.SegmentNumber,"SegmentNumber");
		nameByTag.put(TagFromName.SegmentLabel,"SegmentLabel");
		nameByTag.put(TagFromName.SegmentDescription,"SegmentDescription");
		nameByTag.put(TagFromName.SegmentationAlgorithmIdentificationSequence,"SegmentationAlgorithmIdentificationSequence");
		nameByTag.put(TagFromName.SegmentAlgorithmType,"SegmentAlgorithmType");
		nameByTag.put(TagFromName.SegmentAlgorithmName,"SegmentAlgorithmName");
		nameByTag.put(TagFromName.SegmentIdentificationSequence,"SegmentIdentificationSequence");
		nameByTag.put(TagFromName.ReferencedSegmentNumber,"ReferencedSegmentNumber");
		nameByTag.put(TagFromName.RecommendedDisplayGrayscaleValue,"RecommendedDisplayGrayscaleValue");
		nameByTag.put(TagFromName.RecommendedDisplayCIELabValue,"RecommendedDisplayCIELabValue");
		nameByTag.put(TagFromName.MaximumFractionalValue,"MaximumFractionalValue");
		nameByTag.put(TagFromName.SegmentedPropertyTypeCodeSequence,"SegmentedPropertyTypeCodeSequence");
		nameByTag.put(TagFromName.SegmentationFractionalType,"SegmentationFractionalType");
		nameByTag.put(TagFromName.SegmentedPropertyTypeModifierCodeSequence,"SegmentedPropertyTypeModifierCodeSequence");
		nameByTag.put(TagFromName.UsedSegmentsSequence,"UsedSegmentsSequence");
		nameByTag.put(TagFromName.TrackingID,"TrackingID");
		nameByTag.put(TagFromName.TrackingUID,"TrackingUID");
		nameByTag.put(TagFromName.DeformableRegistrationSequence,"DeformableRegistrationSequence");
		nameByTag.put(TagFromName.SourceFrameOfReferenceUID,"SourceFrameOfReferenceUID");
		nameByTag.put(TagFromName.DeformableRegistrationGridSequence,"DeformableRegistrationGridSequence");
		nameByTag.put(TagFromName.GridDimensions,"GridDimensions");
		nameByTag.put(TagFromName.GridResolution,"GridResolution");
		nameByTag.put(TagFromName.VectorGridData,"VectorGridData");
		nameByTag.put(TagFromName.PreDeformationMatrixRegistrationSequence,"PreDeformationMatrixRegistrationSequence");
		nameByTag.put(TagFromName.PostDeformationMatrixRegistrationSequence,"PostDeformationMatrixRegistrationSequence");
		nameByTag.put(TagFromName.NumberOfSurfaces,"NumberOfSurfaces");
		nameByTag.put(TagFromName.SurfaceSequence,"SurfaceSequence");
		nameByTag.put(TagFromName.SurfaceNumber,"SurfaceNumber");
		nameByTag.put(TagFromName.SurfaceComments,"SurfaceComments");
		nameByTag.put(TagFromName.SurfaceProcessing,"SurfaceProcessing");
		nameByTag.put(TagFromName.SurfaceProcessingRatio,"SurfaceProcessingRatio");
		nameByTag.put(TagFromName.SurfaceProcessingDescription,"SurfaceProcessingDescription");
		nameByTag.put(TagFromName.RecommendedPresentationOpacity,"RecommendedPresentationOpacity");
		nameByTag.put(TagFromName.RecommendedPresentationType,"RecommendedPresentationType");
		nameByTag.put(TagFromName.FiniteVolume,"FiniteVolume");
		nameByTag.put(TagFromName.Manifold,"Manifold");
		nameByTag.put(TagFromName.SurfacePointsSequence,"SurfacePointsSequence");
		nameByTag.put(TagFromName.SurfacePointsNormalsSequence,"SurfacePointsNormalsSequence");
		nameByTag.put(TagFromName.SurfaceMeshPrimitivesSequence,"SurfaceMeshPrimitivesSequence");
		nameByTag.put(TagFromName.NumberOfSurfacePoints,"NumberOfSurfacePoints");
		nameByTag.put(TagFromName.PointCoordinatesData,"PointCoordinatesData");
		nameByTag.put(TagFromName.PointPositionAccuracy,"PointPositionAccuracy");
		nameByTag.put(TagFromName.MeanPointDistance,"MeanPointDistance");
		nameByTag.put(TagFromName.MaximumPointDistance,"MaximumPointDistance");
		nameByTag.put(TagFromName.PointsBoundingBoxCoordinates,"PointsBoundingBoxCoordinates");
		nameByTag.put(TagFromName.AxisOfRotation,"AxisOfRotation");
		nameByTag.put(TagFromName.CenterOfRotation,"CenterOfRotation");
		nameByTag.put(TagFromName.NumberOfVectors,"NumberOfVectors");
		nameByTag.put(TagFromName.VectorDimensionality,"VectorDimensionality");
		nameByTag.put(TagFromName.VectorAccuracy,"VectorAccuracy");
		nameByTag.put(TagFromName.VectorCoordinateData,"VectorCoordinateData");
		nameByTag.put(TagFromName.TrianglePointIndexList,"TrianglePointIndexList");
		nameByTag.put(TagFromName.EdgePointIndexList,"EdgePointIndexList");
		nameByTag.put(TagFromName.VertexPointIndexList,"VertexPointIndexList");
		nameByTag.put(TagFromName.TriangleStripSequence,"TriangleStripSequence");
		nameByTag.put(TagFromName.TriangleFanSequence,"TriangleFanSequence");
		nameByTag.put(TagFromName.LineSequence,"LineSequence");
		nameByTag.put(TagFromName.PrimitivePointIndexList,"PrimitivePointIndexList");
		nameByTag.put(TagFromName.SurfaceCount,"SurfaceCount");
		nameByTag.put(TagFromName.ReferencedSurfaceSequence,"ReferencedSurfaceSequence");
		nameByTag.put(TagFromName.ReferencedSurfaceNumber,"ReferencedSurfaceNumber");
		nameByTag.put(TagFromName.SegmentSurfaceGenerationAlgorithmIdentificationSequence,"SegmentSurfaceGenerationAlgorithmIdentificationSequence");
		nameByTag.put(TagFromName.SegmentSurfaceSourceInstanceSequence,"SegmentSurfaceSourceInstanceSequence");
		nameByTag.put(TagFromName.AlgorithmFamilyCodeSequence,"AlgorithmFamilyCodeSequence");
		nameByTag.put(TagFromName.AlgorithmNameCodeSequence,"AlgorithmNameCodeSequence");
		nameByTag.put(TagFromName.AlgorithmVersion,"AlgorithmVersion");
		nameByTag.put(TagFromName.AlgorithmParameters,"AlgorithmParameters");
		nameByTag.put(TagFromName.FacetSequence,"FacetSequence");
		nameByTag.put(TagFromName.SurfaceProcessingAlgorithmIdentificationSequence,"SurfaceProcessingAlgorithmIdentificationSequence");
		nameByTag.put(TagFromName.AlgorithmName,"AlgorithmName");
		nameByTag.put(TagFromName.RecommendedPointRadius,"RecommendedPointRadius");
		nameByTag.put(TagFromName.RecommendedLineThickness,"RecommendedLineThickness");
		nameByTag.put(TagFromName.LongPrimitivePointIndexList,"LongPrimitivePointIndexList");
		nameByTag.put(TagFromName.LongTrianglePointIndexList,"LongTrianglePointIndexList");
		nameByTag.put(TagFromName.LongEdgePointIndexList,"LongEdgePointIndexList");
		nameByTag.put(TagFromName.LongVertexPointIndexList,"LongVertexPointIndexList");
		nameByTag.put(TagFromName.TrackSetSequence,"TrackSetSequence");
		nameByTag.put(TagFromName.TrackSequence,"TrackSequence");
		nameByTag.put(TagFromName.RecommendedDisplayCIELabValueList,"RecommendedDisplayCIELabValueList");
		nameByTag.put(TagFromName.TrackingAlgorithmIdentificationSequence,"TrackingAlgorithmIdentificationSequence");
		nameByTag.put(TagFromName.TrackSetNumber,"TrackSetNumber");
		nameByTag.put(TagFromName.TrackSetLabel,"TrackSetLabel");
		nameByTag.put(TagFromName.TrackSetDescription,"TrackSetDescription");
		nameByTag.put(TagFromName.TrackSetAnatomicalTypeCodeSequence,"TrackSetAnatomicalTypeCodeSequence");
		nameByTag.put(TagFromName.MeasurementsSequence,"MeasurementsSequence");
		nameByTag.put(TagFromName.TrackSetStatisticsSequence,"TrackSetStatisticsSequence");
		nameByTag.put(TagFromName.FloatingPointValues,"FloatingPointValues");
		nameByTag.put(TagFromName.TrackPointIndexList,"TrackPointIndexList");
		nameByTag.put(TagFromName.TrackStatisticsSequence,"TrackStatisticsSequence");
		nameByTag.put(TagFromName.MeasurementValuesSequence,"MeasurementValuesSequence");
		nameByTag.put(TagFromName.DiffusionAcquisitionCodeSequence,"DiffusionAcquisitionCodeSequence");
		nameByTag.put(TagFromName.DiffusionModelCodeSequence,"DiffusionModelCodeSequence");
		nameByTag.put(TagFromName.ImplantSize,"ImplantSize");
		nameByTag.put(TagFromName.ImplantTemplateVersion,"ImplantTemplateVersion");
		nameByTag.put(TagFromName.ReplacedImplantTemplateSequence,"ReplacedImplantTemplateSequence");
		nameByTag.put(TagFromName.ImplantType,"ImplantType");
		nameByTag.put(TagFromName.DerivationImplantTemplateSequence,"DerivationImplantTemplateSequence");
		nameByTag.put(TagFromName.OriginalImplantTemplateSequence,"OriginalImplantTemplateSequence");
		nameByTag.put(TagFromName.EffectiveDateTime,"EffectiveDateTime");
		nameByTag.put(TagFromName.ImplantTargetAnatomySequence,"ImplantTargetAnatomySequence");
		nameByTag.put(TagFromName.InformationFromManufacturerSequence,"InformationFromManufacturerSequence");
		nameByTag.put(TagFromName.NotificationFromManufacturerSequence,"NotificationFromManufacturerSequence");
		nameByTag.put(TagFromName.InformationIssueDateTime,"InformationIssueDateTime");
		nameByTag.put(TagFromName.InformationSummary,"InformationSummary");
		nameByTag.put(TagFromName.ImplantRegulatoryDisapprovalCodeSequence,"ImplantRegulatoryDisapprovalCodeSequence");
		nameByTag.put(TagFromName.OverallTemplateSpatialTolerance,"OverallTemplateSpatialTolerance");
		nameByTag.put(TagFromName.HPGLDocumentSequence,"HPGLDocumentSequence");
		nameByTag.put(TagFromName.HPGLDocumentID,"HPGLDocumentID");
		nameByTag.put(TagFromName.HPGLDocumentLabel,"HPGLDocumentLabel");
		nameByTag.put(TagFromName.ViewOrientationCodeSequence,"ViewOrientationCodeSequence");
		nameByTag.put(TagFromName.ViewOrientationModifierCodeSequence,"ViewOrientationModifierCodeSequence");
		nameByTag.put(TagFromName.HPGLDocumentScaling,"HPGLDocumentScaling");
		nameByTag.put(TagFromName.HPGLDocument,"HPGLDocument");
		nameByTag.put(TagFromName.HPGLContourPenNumber,"HPGLContourPenNumber");
		nameByTag.put(TagFromName.HPGLPenSequence,"HPGLPenSequence");
		nameByTag.put(TagFromName.HPGLPenNumber,"HPGLPenNumber");
		nameByTag.put(TagFromName.HPGLPenLabel,"HPGLPenLabel");
		nameByTag.put(TagFromName.HPGLPenDescription,"HPGLPenDescription");
		nameByTag.put(TagFromName.RecommendedRotationPoint,"RecommendedRotationPoint");
		nameByTag.put(TagFromName.BoundingRectangle,"BoundingRectangle");
		nameByTag.put(TagFromName.ImplantTemplate3DModelSurfaceNumber,"ImplantTemplate3DModelSurfaceNumber");
		nameByTag.put(TagFromName.SurfaceModelDescriptionSequence,"SurfaceModelDescriptionSequence");
		nameByTag.put(TagFromName.SurfaceModelLabel,"SurfaceModelLabel");
		nameByTag.put(TagFromName.SurfaceModelScalingFactor,"SurfaceModelScalingFactor");
		nameByTag.put(TagFromName.MaterialsCodeSequence,"MaterialsCodeSequence");
		nameByTag.put(TagFromName.CoatingMaterialsCodeSequence,"CoatingMaterialsCodeSequence");
		nameByTag.put(TagFromName.ImplantTypeCodeSequence,"ImplantTypeCodeSequence");
		nameByTag.put(TagFromName.FixationMethodCodeSequence,"FixationMethodCodeSequence");
		nameByTag.put(TagFromName.MatingFeatureSetsSequence,"MatingFeatureSetsSequence");
		nameByTag.put(TagFromName.MatingFeatureSetID,"MatingFeatureSetID");
		nameByTag.put(TagFromName.MatingFeatureSetLabel,"MatingFeatureSetLabel");
		nameByTag.put(TagFromName.MatingFeatureSequence,"MatingFeatureSequence");
		nameByTag.put(TagFromName.MatingFeatureID,"MatingFeatureID");
		nameByTag.put(TagFromName.MatingFeatureDegreeOfFreedomSequence,"MatingFeatureDegreeOfFreedomSequence");
		nameByTag.put(TagFromName.DegreeOfFreedomID,"DegreeOfFreedomID");
		nameByTag.put(TagFromName.DegreeOfFreedomType,"DegreeOfFreedomType");
		nameByTag.put(TagFromName.TwoDMatingFeatureCoordinatesSequence,"TwoDMatingFeatureCoordinatesSequence");
		nameByTag.put(TagFromName.ReferencedHPGLDocumentID,"ReferencedHPGLDocumentID");
		nameByTag.put(TagFromName.TwoDMatingPoint,"TwoDMatingPoint");
		nameByTag.put(TagFromName.TwoDMatingAxes,"TwoDMatingAxes");
		nameByTag.put(TagFromName.TwoDDegreeOfFreedomSequence,"TwoDDegreeOfFreedomSequence");
		nameByTag.put(TagFromName.ThreeDDegreeOfFreedomAxis,"ThreeDDegreeOfFreedomAxis");
		nameByTag.put(TagFromName.RangeOfFreedom,"RangeOfFreedom");
		nameByTag.put(TagFromName.ThreeDMatingPoint,"ThreeDMatingPoint");
		nameByTag.put(TagFromName.ThreeDMatingAxes,"ThreeDMatingAxes");
		nameByTag.put(TagFromName.TwoDDegreeOfFreedomAxis,"TwoDDegreeOfFreedomAxis");
		nameByTag.put(TagFromName.PlanningLandmarkPointSequence,"PlanningLandmarkPointSequence");
		nameByTag.put(TagFromName.PlanningLandmarkLineSequence,"PlanningLandmarkLineSequence");
		nameByTag.put(TagFromName.PlanningLandmarkPlaneSequence,"PlanningLandmarkPlaneSequence");
		nameByTag.put(TagFromName.PlanningLandmarkID,"PlanningLandmarkID");
		nameByTag.put(TagFromName.PlanningLandmarkDescription,"PlanningLandmarkDescription");
		nameByTag.put(TagFromName.PlanningLandmarkIdentificationCodeSequence,"PlanningLandmarkIdentificationCodeSequence");
		nameByTag.put(TagFromName.TwoDPointCoordinatesSequence,"TwoDPointCoordinatesSequence");
		nameByTag.put(TagFromName.TwoDPointCoordinates,"TwoDPointCoordinates");
		nameByTag.put(TagFromName.ThreeDPointCoordinates,"ThreeDPointCoordinates");
		nameByTag.put(TagFromName.TwoDLineCoordinatesSequence,"TwoDLineCoordinatesSequence");
		nameByTag.put(TagFromName.TwoDLineCoordinates,"TwoDLineCoordinates");
		nameByTag.put(TagFromName.ThreeDLineCoordinates,"ThreeDLineCoordinates");
		nameByTag.put(TagFromName.TwoDPlaneCoordinatesSequence,"TwoDPlaneCoordinatesSequence");
		nameByTag.put(TagFromName.TwoDPlaneIntersection,"TwoDPlaneIntersection");
		nameByTag.put(TagFromName.ThreeDPlaneOrigin,"ThreeDPlaneOrigin");
		nameByTag.put(TagFromName.ThreeDPlaneNormal,"ThreeDPlaneNormal");
		nameByTag.put(TagFromName.ModelModification,"ModelModification");
		nameByTag.put(TagFromName.ModelMirroring,"ModelMirroring");
		nameByTag.put(TagFromName.ModelUsageCodeSequence,"ModelUsageCodeSequence");
		nameByTag.put(TagFromName.GraphicAnnotationSequence,"GraphicAnnotationSequence");
		nameByTag.put(TagFromName.GraphicLayer,"GraphicLayer");
		nameByTag.put(TagFromName.BoundingBoxAnnotationUnits,"BoundingBoxAnnotationUnits");
		nameByTag.put(TagFromName.AnchorPointAnnotationUnits,"AnchorPointAnnotationUnits");
		nameByTag.put(TagFromName.GraphicAnnotationUnits,"GraphicAnnotationUnits");
		nameByTag.put(TagFromName.UnformattedTextValue,"UnformattedTextValue");
		nameByTag.put(TagFromName.TextObjectSequence,"TextObjectSequence");
		nameByTag.put(TagFromName.GraphicObjectSequence,"GraphicObjectSequence");
		nameByTag.put(TagFromName.BoundingBoxTopLeftHandCorner,"BoundingBoxTopLeftHandCorner");
		nameByTag.put(TagFromName.BoundingBoxBottomRightHandCorner,"BoundingBoxBottomRightHandCorner");
		nameByTag.put(TagFromName.BoundingBoxTextHorizontalJustification,"BoundingBoxTextHorizontalJustification");
		nameByTag.put(TagFromName.AnchorPoint,"AnchorPoint");
		nameByTag.put(TagFromName.AnchorPointVisibility,"AnchorPointVisibility");
		nameByTag.put(TagFromName.GraphicDimensions,"GraphicDimensions");
		nameByTag.put(TagFromName.NumberOfGraphicPoints,"NumberOfGraphicPoints");
		nameByTag.put(TagFromName.GraphicData,"GraphicData");
		nameByTag.put(TagFromName.GraphicType,"GraphicType");
		nameByTag.put(TagFromName.GraphicFilled,"GraphicFilled");
		nameByTag.put(TagFromName.ImageRotationRetired,"ImageRotationRetired");
		nameByTag.put(TagFromName.ImageHorizontalFlip,"ImageHorizontalFlip");
		nameByTag.put(TagFromName.ImageRotation,"ImageRotation");
		nameByTag.put(TagFromName.DisplayedAreaTopLeftHandCornerTrial,"DisplayedAreaTopLeftHandCornerTrial");
		nameByTag.put(TagFromName.DisplayedAreaBottomRightHandCornerTrial,"DisplayedAreaBottomRightHandCornerTrial");
		nameByTag.put(TagFromName.DisplayedAreaTopLeftHandCorner,"DisplayedAreaTopLeftHandCorner");
		nameByTag.put(TagFromName.DisplayedAreaBottomRightHandCorner,"DisplayedAreaBottomRightHandCorner");
		nameByTag.put(TagFromName.DisplayedAreaSelectionSequence,"DisplayedAreaSelectionSequence");
		nameByTag.put(TagFromName.GraphicLayerSequence,"GraphicLayerSequence");
		nameByTag.put(TagFromName.GraphicLayerOrder,"GraphicLayerOrder");
		nameByTag.put(TagFromName.GraphicLayerRecommendedDisplayGrayscaleValue,"GraphicLayerRecommendedDisplayGrayscaleValue");
		nameByTag.put(TagFromName.GraphicLayerRecommendedDisplayRGBValue,"GraphicLayerRecommendedDisplayRGBValue");
		nameByTag.put(TagFromName.GraphicLayerDescription,"GraphicLayerDescription");
		nameByTag.put(TagFromName.ContentLabel,"ContentLabel");
		nameByTag.put(TagFromName.ContentDescription,"ContentDescription");
		nameByTag.put(TagFromName.PresentationCreationDate,"PresentationCreationDate");
		nameByTag.put(TagFromName.PresentationCreationTime,"PresentationCreationTime");
		nameByTag.put(TagFromName.ContentCreatorName,"ContentCreatorName");
		nameByTag.put(TagFromName.ContentCreatorIdentificationCodeSequence,"ContentCreatorIdentificationCodeSequence");
		nameByTag.put(TagFromName.AlternateContentDescriptionSequence,"AlternateContentDescriptionSequence");
		nameByTag.put(TagFromName.PresentationSizeMode,"PresentationSizeMode");
		nameByTag.put(TagFromName.PresentationPixelSpacing,"PresentationPixelSpacing");
		nameByTag.put(TagFromName.PresentationPixelAspectRatio,"PresentationPixelAspectRatio");
		nameByTag.put(TagFromName.PresentationPixelMagnificationRatio,"PresentationPixelMagnificationRatio");
		nameByTag.put(TagFromName.GraphicGroupLabel,"GraphicGroupLabel");
		nameByTag.put(TagFromName.GraphicGroupDescription,"GraphicGroupDescription");
		nameByTag.put(TagFromName.CompoundGraphicSequence,"CompoundGraphicSequence");
		nameByTag.put(TagFromName.CompoundGraphicInstanceID,"CompoundGraphicInstanceID");
		nameByTag.put(TagFromName.FontName,"FontName");
		nameByTag.put(TagFromName.FontNameType,"FontNameType");
		nameByTag.put(TagFromName.CSSFontName,"CSSFontName");
		nameByTag.put(TagFromName.RotationAngle,"RotationAngle");
		nameByTag.put(TagFromName.TextStyleSequence,"TextStyleSequence");
		nameByTag.put(TagFromName.LineStyleSequence,"LineStyleSequence");
		nameByTag.put(TagFromName.FillStyleSequence,"FillStyleSequence");
		nameByTag.put(TagFromName.GraphicGroupSequence,"GraphicGroupSequence");
		nameByTag.put(TagFromName.TextColorCIELabValue,"TextColorCIELabValue");
		nameByTag.put(TagFromName.HorizontalAlignment,"HorizontalAlignment");
		nameByTag.put(TagFromName.VerticalAlignment,"VerticalAlignment");
		nameByTag.put(TagFromName.ShadowStyle,"ShadowStyle");
		nameByTag.put(TagFromName.ShadowOffsetX,"ShadowOffsetX");
		nameByTag.put(TagFromName.ShadowOffsetY,"ShadowOffsetY");
		nameByTag.put(TagFromName.ShadowColorCIELabValue,"ShadowColorCIELabValue");
		nameByTag.put(TagFromName.Underlined,"Underlined");
		nameByTag.put(TagFromName.Bold,"Bold");
		nameByTag.put(TagFromName.Italic,"Italic");
		nameByTag.put(TagFromName.PatternOnColorCIELabValue,"PatternOnColorCIELabValue");
		nameByTag.put(TagFromName.PatternOffColorCIELabValue,"PatternOffColorCIELabValue");
		nameByTag.put(TagFromName.LineThickness,"LineThickness");
		nameByTag.put(TagFromName.LineDashingStyle,"LineDashingStyle");
		nameByTag.put(TagFromName.LinePattern,"LinePattern");
		nameByTag.put(TagFromName.FillPattern,"FillPattern");
		nameByTag.put(TagFromName.FillMode,"FillMode");
		nameByTag.put(TagFromName.ShadowOpacity,"ShadowOpacity");
		nameByTag.put(TagFromName.GapLength,"GapLength");
		nameByTag.put(TagFromName.DiameterOfVisibility,"DiameterOfVisibility");
		nameByTag.put(TagFromName.RotationPoint,"RotationPoint");
		nameByTag.put(TagFromName.TickAlignment,"TickAlignment");
		nameByTag.put(TagFromName.ShowTickLabel,"ShowTickLabel");
		nameByTag.put(TagFromName.TickLabelAlignment,"TickLabelAlignment");
		nameByTag.put(TagFromName.CompoundGraphicUnits,"CompoundGraphicUnits");
		nameByTag.put(TagFromName.PatternOnOpacity,"PatternOnOpacity");
		nameByTag.put(TagFromName.PatternOffOpacity,"PatternOffOpacity");
		nameByTag.put(TagFromName.MajorTicksSequence,"MajorTicksSequence");
		nameByTag.put(TagFromName.TickPosition,"TickPosition");
		nameByTag.put(TagFromName.TickLabel,"TickLabel");
		nameByTag.put(TagFromName.CompoundGraphicType,"CompoundGraphicType");
		nameByTag.put(TagFromName.GraphicGroupID,"GraphicGroupID");
		nameByTag.put(TagFromName.ShapeType,"ShapeType");
		nameByTag.put(TagFromName.RegistrationSequence,"RegistrationSequence");
		nameByTag.put(TagFromName.MatrixRegistrationSequence,"MatrixRegistrationSequence");
		nameByTag.put(TagFromName.MatrixSequence,"MatrixSequence");
		nameByTag.put(TagFromName.FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix,"FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix");
		nameByTag.put(TagFromName.FrameOfReferenceTransformationMatrixType,"FrameOfReferenceTransformationMatrixType");
		nameByTag.put(TagFromName.RegistrationTypeCodeSequence,"RegistrationTypeCodeSequence");
		nameByTag.put(TagFromName.FiducialDescription,"FiducialDescription");
		nameByTag.put(TagFromName.FiducialIdentifier,"FiducialIdentifier");
		nameByTag.put(TagFromName.FiducialIdentifierCodeSequence,"FiducialIdentifierCodeSequence");
		nameByTag.put(TagFromName.ContourUncertaintyRadius,"ContourUncertaintyRadius");
		nameByTag.put(TagFromName.UsedFiducialsSequence,"UsedFiducialsSequence");
		nameByTag.put(TagFromName.GraphicCoordinatesDataSequence,"GraphicCoordinatesDataSequence");
		nameByTag.put(TagFromName.FiducialUID,"FiducialUID");
		nameByTag.put(TagFromName.ReferencedFiducialUID,"ReferencedFiducialUID");
		nameByTag.put(TagFromName.FiducialSetSequence,"FiducialSetSequence");
		nameByTag.put(TagFromName.FiducialSequence,"FiducialSequence");
		nameByTag.put(TagFromName.FiducialsPropertyCategoryCodeSequence,"FiducialsPropertyCategoryCodeSequence");
		nameByTag.put(TagFromName.GraphicLayerRecommendedDisplayCIELabValue,"GraphicLayerRecommendedDisplayCIELabValue");
		nameByTag.put(TagFromName.BlendingSequence,"BlendingSequence");
		nameByTag.put(TagFromName.RelativeOpacity,"RelativeOpacity");
		nameByTag.put(TagFromName.ReferencedSpatialRegistrationSequence,"ReferencedSpatialRegistrationSequence");
		nameByTag.put(TagFromName.BlendingPosition,"BlendingPosition");
		nameByTag.put(TagFromName.PresentationDisplayCollectionUID,"PresentationDisplayCollectionUID");
		nameByTag.put(TagFromName.PresentationSequenceCollectionUID,"PresentationSequenceCollectionUID");
		nameByTag.put(TagFromName.PresentationSequencePositionIndex,"PresentationSequencePositionIndex");
		nameByTag.put(TagFromName.RenderedImageReferenceSequence,"RenderedImageReferenceSequence");
		nameByTag.put(TagFromName.VolumetricPresentationStateInputSequence,"VolumetricPresentationStateInputSequence");
		nameByTag.put(TagFromName.PresentationInputType,"PresentationInputType");
		nameByTag.put(TagFromName.InputSequencePositionIndex,"InputSequencePositionIndex");
		nameByTag.put(TagFromName.Crop,"Crop");
		nameByTag.put(TagFromName.CroppingSpecificationIndex,"CroppingSpecificationIndex");
		nameByTag.put(TagFromName.CompositingMethod,"CompositingMethod");
		nameByTag.put(TagFromName.VolumetricPresentationInputNumber,"VolumetricPresentationInputNumber");
		nameByTag.put(TagFromName.ImageVolumeGeometry,"ImageVolumeGeometry");
		nameByTag.put(TagFromName.VolumetricPresentationInputSetUID,"VolumetricPresentationInputSetUID");
		nameByTag.put(TagFromName.VolumetricPresentationInputSetSequence,"VolumetricPresentationInputSetSequence");
		nameByTag.put(TagFromName.GlobalCrop,"GlobalCrop");
		nameByTag.put(TagFromName.GlobalCroppingSpecificationIndex,"GlobalCroppingSpecificationIndex");
		nameByTag.put(TagFromName.RenderingMethod,"RenderingMethod");
		nameByTag.put(TagFromName.VolumeCroppingSequence,"VolumeCroppingSequence");
		nameByTag.put(TagFromName.VolumeCroppingMethod,"VolumeCroppingMethod");
		nameByTag.put(TagFromName.BoundingBoxCrop,"BoundingBoxCrop");
		nameByTag.put(TagFromName.ObliqueCroppingPlaneSequence,"ObliqueCroppingPlaneSequence");
		nameByTag.put(TagFromName.Plane,"Plane");
		nameByTag.put(TagFromName.PlaneNormal,"PlaneNormal");
		nameByTag.put(TagFromName.CroppingSpecificationNumber,"CroppingSpecificationNumber");
		nameByTag.put(TagFromName.MultiPlanarReconstructionStyle,"MultiPlanarReconstructionStyle");
		nameByTag.put(TagFromName.MPRThicknessType,"MPRThicknessType");
		nameByTag.put(TagFromName.MPRSlabThickness,"MPRSlabThickness");
		nameByTag.put(TagFromName.MPRTopLeftHandCorner,"MPRTopLeftHandCorner");
		nameByTag.put(TagFromName.MPRViewWidthDirection,"MPRViewWidthDirection");
		nameByTag.put(TagFromName.MPRViewWidth,"MPRViewWidth");
		nameByTag.put(TagFromName.NumberOfVolumetricCurvePoints,"NumberOfVolumetricCurvePoints");
		nameByTag.put(TagFromName.VolumetricCurvePoints,"VolumetricCurvePoints");
		nameByTag.put(TagFromName.MPRViewHeightDirection,"MPRViewHeightDirection");
		nameByTag.put(TagFromName.MPRViewHeight,"MPRViewHeight");
		nameByTag.put(TagFromName.RenderProjection,"RenderProjection");
		nameByTag.put(TagFromName.ViewpointPosition,"ViewpointPosition");
		nameByTag.put(TagFromName.ViewpointLookAtPoint,"ViewpointLookAtPoint");
		nameByTag.put(TagFromName.ViewpointUpDirection,"ViewpointUpDirection");
		nameByTag.put(TagFromName.RenderFieldOfView,"RenderFieldOfView");
		nameByTag.put(TagFromName.SamplingStepSize,"SamplingStepSize");
		nameByTag.put(TagFromName.ShadingStyle,"ShadingStyle");
		nameByTag.put(TagFromName.AmbientReflectionIntensity,"AmbientReflectionIntensity");
		nameByTag.put(TagFromName.LightDirection,"LightDirection");
		nameByTag.put(TagFromName.DiffuseReflectionIntensity,"DiffuseReflectionIntensity");
		nameByTag.put(TagFromName.SpecularReflectionIntensity,"SpecularReflectionIntensity");
		nameByTag.put(TagFromName.Shininess,"Shininess");
		nameByTag.put(TagFromName.PresentationStateClassificationComponentSequence,"PresentationStateClassificationComponentSequence");
		nameByTag.put(TagFromName.ComponentType,"ComponentType");
		nameByTag.put(TagFromName.ComponentInputSequence,"ComponentInputSequence");
		nameByTag.put(TagFromName.VolumetricPresentationInputIndex,"VolumetricPresentationInputIndex");
		nameByTag.put(TagFromName.PresentationStateCompositorComponentSequence,"PresentationStateCompositorComponentSequence");
		nameByTag.put(TagFromName.WeightingTransferFunctionSequence,"WeightingTransferFunctionSequence");
		nameByTag.put(TagFromName.WeightingLookupTableDescriptor,"WeightingLookupTableDescriptor");
		nameByTag.put(TagFromName.WeightingLookupTableData,"WeightingLookupTableData");
		nameByTag.put(TagFromName.VolumetricAnnotationSequence,"VolumetricAnnotationSequence");
		nameByTag.put(TagFromName.ReferencedStructuredContextSequence,"ReferencedStructuredContextSequence");
		nameByTag.put(TagFromName.ReferencedContentItem,"ReferencedContentItem");
		nameByTag.put(TagFromName.VolumetricPresentationInputAnnotationSequence,"VolumetricPresentationInputAnnotationSequence");
		nameByTag.put(TagFromName.AnnotationClipping,"AnnotationClipping");
		nameByTag.put(TagFromName.PresentationAnimationStyle,"PresentationAnimationStyle");
		nameByTag.put(TagFromName.RecommendedAnimationRate,"RecommendedAnimationRate");
		nameByTag.put(TagFromName.AnimationCurveSequence,"AnimationCurveSequence");
		nameByTag.put(TagFromName.AnimationStepSize,"AnimationStepSize");
		nameByTag.put(TagFromName.SwivelRange,"SwivelRange");
		nameByTag.put(TagFromName.VolumetricCurveUpDirections,"VolumetricCurveUpDirections");
		nameByTag.put(TagFromName.VolumeStreamSequence,"VolumeStreamSequence");
		nameByTag.put(TagFromName.RGBATransferFunctionDescription,"RGBATransferFunctionDescription");
		nameByTag.put(TagFromName.AdvancedBlendingSequence,"AdvancedBlendingSequence");
		nameByTag.put(TagFromName.BlendingInputNumber,"BlendingInputNumber");
		nameByTag.put(TagFromName.BlendingDisplayInputSequence,"BlendingDisplayInputSequence");
		nameByTag.put(TagFromName.BlendingDisplaySequence,"BlendingDisplaySequence");
		nameByTag.put(TagFromName.BlendingMode,"BlendingMode");
		nameByTag.put(TagFromName.TimeSeriesBlending,"TimeSeriesBlending");
		nameByTag.put(TagFromName.GeometryForDisplay,"GeometryForDisplay");
		nameByTag.put(TagFromName.ThresholdSequence,"ThresholdSequence");
		nameByTag.put(TagFromName.ThresholdValueSequence,"ThresholdValueSequence");
		nameByTag.put(TagFromName.ThresholdType,"ThresholdType");
		nameByTag.put(TagFromName.ThresholdValue,"ThresholdValue");
		nameByTag.put(TagFromName.HangingProtocolName,"HangingProtocolName");
		nameByTag.put(TagFromName.HangingProtocolDescription,"HangingProtocolDescription");
		nameByTag.put(TagFromName.HangingProtocolLevel,"HangingProtocolLevel");
		nameByTag.put(TagFromName.HangingProtocolCreator,"HangingProtocolCreator");
		nameByTag.put(TagFromName.HangingProtocolCreationDateTime,"HangingProtocolCreationDateTime");
		nameByTag.put(TagFromName.HangingProtocolDefinitionSequence,"HangingProtocolDefinitionSequence");
		nameByTag.put(TagFromName.HangingProtocolUserIdentificationCodeSequence,"HangingProtocolUserIdentificationCodeSequence");
		nameByTag.put(TagFromName.HangingProtocolUserGroupName,"HangingProtocolUserGroupName");
		nameByTag.put(TagFromName.SourceHangingProtocolSequence,"SourceHangingProtocolSequence");
		nameByTag.put(TagFromName.NumberOfPriorsReferenced,"NumberOfPriorsReferenced");
		nameByTag.put(TagFromName.ImageSetsSequence,"ImageSetsSequence");
		nameByTag.put(TagFromName.ImageSetSelectorSequence,"ImageSetSelectorSequence");
		nameByTag.put(TagFromName.ImageSetSelectorUsageFlag,"ImageSetSelectorUsageFlag");
		nameByTag.put(TagFromName.SelectorAttribute,"SelectorAttribute");
		nameByTag.put(TagFromName.SelectorValueNumber,"SelectorValueNumber");
		nameByTag.put(TagFromName.TimeBasedImageSetsSequence,"TimeBasedImageSetsSequence");
		nameByTag.put(TagFromName.ImageSetNumber,"ImageSetNumber");
		nameByTag.put(TagFromName.ImageSetSelectorCategory,"ImageSetSelectorCategory");
		nameByTag.put(TagFromName.RelativeTime,"RelativeTime");
		nameByTag.put(TagFromName.RelativeTimeUnits,"RelativeTimeUnits");
		nameByTag.put(TagFromName.AbstractPriorValue,"AbstractPriorValue");
		nameByTag.put(TagFromName.AbstractPriorCodeSequence,"AbstractPriorCodeSequence");
		nameByTag.put(TagFromName.ImageSetLabel,"ImageSetLabel");
		nameByTag.put(TagFromName.SelectorAttributeVR,"SelectorAttributeVR");
		nameByTag.put(TagFromName.SelectorSequencePointer,"SelectorSequencePointer");
		nameByTag.put(TagFromName.SelectorSequencePointerPrivateCreator,"SelectorSequencePointerPrivateCreator");
		nameByTag.put(TagFromName.SelectorAttributePrivateCreator,"SelectorAttributePrivateCreator");
		nameByTag.put(TagFromName.SelectorAEValue,"SelectorAEValue");
		nameByTag.put(TagFromName.SelectorASValue,"SelectorASValue");
		nameByTag.put(TagFromName.SelectorATValue,"SelectorATValue");
		nameByTag.put(TagFromName.SelectorDAValue,"SelectorDAValue");
		nameByTag.put(TagFromName.SelectorCSValue,"SelectorCSValue");
		nameByTag.put(TagFromName.SelectorDTValue,"SelectorDTValue");
		nameByTag.put(TagFromName.SelectorISValue,"SelectorISValue");
		nameByTag.put(TagFromName.SelectorOBValue,"SelectorOBValue");
		nameByTag.put(TagFromName.SelectorLOValue,"SelectorLOValue");
		nameByTag.put(TagFromName.SelectorOFValue,"SelectorOFValue");
		nameByTag.put(TagFromName.SelectorLTValue,"SelectorLTValue");
		nameByTag.put(TagFromName.SelectorOWValue,"SelectorOWValue");
		nameByTag.put(TagFromName.SelectorPNValue,"SelectorPNValue");
		nameByTag.put(TagFromName.SelectorTMValue,"SelectorTMValue");
		nameByTag.put(TagFromName.SelectorSHValue,"SelectorSHValue");
		nameByTag.put(TagFromName.SelectorUNValue,"SelectorUNValue");
		nameByTag.put(TagFromName.SelectorSTValue,"SelectorSTValue");
		nameByTag.put(TagFromName.SelectorUCValue,"SelectorUCValue");
		nameByTag.put(TagFromName.SelectorUTValue,"SelectorUTValue");
		nameByTag.put(TagFromName.SelectorURValue,"SelectorURValue");
		nameByTag.put(TagFromName.SelectorDSValue,"SelectorDSValue");
		nameByTag.put(TagFromName.SelectorODValue,"SelectorODValue");
		nameByTag.put(TagFromName.SelectorFDValue,"SelectorFDValue");
		nameByTag.put(TagFromName.SelectorOLValue,"SelectorOLValue");
		nameByTag.put(TagFromName.SelectorFLValue,"SelectorFLValue");
		nameByTag.put(TagFromName.SelectorULValue,"SelectorULValue");
		nameByTag.put(TagFromName.SelectorUSValue,"SelectorUSValue");
		nameByTag.put(TagFromName.SelectorSLValue,"SelectorSLValue");
		nameByTag.put(TagFromName.SelectorSSValue,"SelectorSSValue");
		nameByTag.put(TagFromName.SelectorUIValue,"SelectorUIValue");
		nameByTag.put(TagFromName.SelectorCodeSequenceValue,"SelectorCodeSequenceValue");
		nameByTag.put(TagFromName.NumberOfScreens,"NumberOfScreens");
		nameByTag.put(TagFromName.NominalScreenDefinitionSequence,"NominalScreenDefinitionSequence");
		nameByTag.put(TagFromName.NumberOfVerticalPixels,"NumberOfVerticalPixels");
		nameByTag.put(TagFromName.NumberOfHorizontalPixels,"NumberOfHorizontalPixels");
		nameByTag.put(TagFromName.DisplayEnvironmentSpatialPosition,"DisplayEnvironmentSpatialPosition");
		nameByTag.put(TagFromName.ScreenMinimumGrayscaleBitDepth,"ScreenMinimumGrayscaleBitDepth");
		nameByTag.put(TagFromName.ScreenMinimumColorBitDepth,"ScreenMinimumColorBitDepth");
		nameByTag.put(TagFromName.ApplicationMaximumRepaintTime,"ApplicationMaximumRepaintTime");
		nameByTag.put(TagFromName.DisplaySetsSequence,"DisplaySetsSequence");
		nameByTag.put(TagFromName.DisplaySetNumber,"DisplaySetNumber");
		nameByTag.put(TagFromName.DisplaySetLabel,"DisplaySetLabel");
		nameByTag.put(TagFromName.DisplaySetPresentationGroup,"DisplaySetPresentationGroup");
		nameByTag.put(TagFromName.DisplaySetPresentationGroupDescription,"DisplaySetPresentationGroupDescription");
		nameByTag.put(TagFromName.PartialDataDisplayHandling,"PartialDataDisplayHandling");
		nameByTag.put(TagFromName.SynchronizedScrollingSequence,"SynchronizedScrollingSequence");
		nameByTag.put(TagFromName.DisplaySetScrollingGroup,"DisplaySetScrollingGroup");
		nameByTag.put(TagFromName.NavigationIndicatorSequence,"NavigationIndicatorSequence");
		nameByTag.put(TagFromName.NavigationDisplaySet,"NavigationDisplaySet");
		nameByTag.put(TagFromName.ReferenceDisplaySets,"ReferenceDisplaySets");
		nameByTag.put(TagFromName.ImageBoxesSequence,"ImageBoxesSequence");
		nameByTag.put(TagFromName.ImageBoxNumber,"ImageBoxNumber");
		nameByTag.put(TagFromName.ImageBoxLayoutType,"ImageBoxLayoutType");
		nameByTag.put(TagFromName.ImageBoxTileHorizontalDimension,"ImageBoxTileHorizontalDimension");
		nameByTag.put(TagFromName.ImageBoxTileVerticalDimension,"ImageBoxTileVerticalDimension");
		nameByTag.put(TagFromName.ImageBoxScrollDirection,"ImageBoxScrollDirection");
		nameByTag.put(TagFromName.ImageBoxSmallScrollType,"ImageBoxSmallScrollType");
		nameByTag.put(TagFromName.ImageBoxSmallScrollAmount,"ImageBoxSmallScrollAmount");
		nameByTag.put(TagFromName.ImageBoxLargeScrollType,"ImageBoxLargeScrollType");
		nameByTag.put(TagFromName.ImageBoxLargeScrollAmount,"ImageBoxLargeScrollAmount");
		nameByTag.put(TagFromName.ImageBoxOverlapPriority,"ImageBoxOverlapPriority");
		nameByTag.put(TagFromName.CineRelativeToRealTime,"CineRelativeToRealTime");
		nameByTag.put(TagFromName.FilterOperationsSequence,"FilterOperationsSequence");
		nameByTag.put(TagFromName.FilterByCategory,"FilterByCategory");
		nameByTag.put(TagFromName.FilterByAttributePresence,"FilterByAttributePresence");
		nameByTag.put(TagFromName.FilterByOperator,"FilterByOperator");
		nameByTag.put(TagFromName.StructuredDisplayBackgroundCIELabValue,"StructuredDisplayBackgroundCIELabValue");
		nameByTag.put(TagFromName.EmptyImageBoxCIELabValue,"EmptyImageBoxCIELabValue");
		nameByTag.put(TagFromName.StructuredDisplayImageBoxSequence,"StructuredDisplayImageBoxSequence");
		nameByTag.put(TagFromName.StructuredDisplayTextBoxSequence,"StructuredDisplayTextBoxSequence");
		nameByTag.put(TagFromName.ReferencedFirstFrameSequence,"ReferencedFirstFrameSequence");
		nameByTag.put(TagFromName.ImageBoxSynchronizationSequence,"ImageBoxSynchronizationSequence");
		nameByTag.put(TagFromName.SynchronizedImageBoxList,"SynchronizedImageBoxList");
		nameByTag.put(TagFromName.TypeOfSynchronization,"TypeOfSynchronization");
		nameByTag.put(TagFromName.BlendingOperationType,"BlendingOperationType");
		nameByTag.put(TagFromName.ReformattingOperationType,"ReformattingOperationType");
		nameByTag.put(TagFromName.ReformattingThickness,"ReformattingThickness");
		nameByTag.put(TagFromName.ReformattingInterval,"ReformattingInterval");
		nameByTag.put(TagFromName.ReformattingOperationInitialViewDirection,"ReformattingOperationInitialViewDirection");
		nameByTag.put(TagFromName.ThreeDRenderingType,"ThreeDRenderingType");
		nameByTag.put(TagFromName.SortingOperationsSequence,"SortingOperationsSequence");
		nameByTag.put(TagFromName.SortByCategory,"SortByCategory");
		nameByTag.put(TagFromName.SortingDirection,"SortingDirection");
		nameByTag.put(TagFromName.DisplaySetPatientOrientation,"DisplaySetPatientOrientation");
		nameByTag.put(TagFromName.VOIType,"VOIType");
		nameByTag.put(TagFromName.PseudoColorType,"PseudoColorType");
		nameByTag.put(TagFromName.PseudoColorPaletteInstanceReferenceSequence,"PseudoColorPaletteInstanceReferenceSequence");
		nameByTag.put(TagFromName.ShowGrayscaleInverted,"ShowGrayscaleInverted");
		nameByTag.put(TagFromName.ShowImageTrueSizeFlag,"ShowImageTrueSizeFlag");
		nameByTag.put(TagFromName.ShowGraphicAnnotationFlag,"ShowGraphicAnnotationFlag");
		nameByTag.put(TagFromName.ShowPatientDemographicsFlag,"ShowPatientDemographicsFlag");
		nameByTag.put(TagFromName.ShowAcquisitionTechniquesFlag,"ShowAcquisitionTechniquesFlag");
		nameByTag.put(TagFromName.DisplaySetHorizontalJustification,"DisplaySetHorizontalJustification");
		nameByTag.put(TagFromName.DisplaySetVerticalJustification,"DisplaySetVerticalJustification");
		nameByTag.put(TagFromName.ContinuationStartMeterset,"ContinuationStartMeterset");
		nameByTag.put(TagFromName.ContinuationEndMeterset,"ContinuationEndMeterset");
		nameByTag.put(TagFromName.ProcedureStepState,"ProcedureStepState");
		nameByTag.put(TagFromName.ProcedureStepProgressInformationSequence,"ProcedureStepProgressInformationSequence");
		nameByTag.put(TagFromName.ProcedureStepProgress,"ProcedureStepProgress");
		nameByTag.put(TagFromName.ProcedureStepProgressDescription,"ProcedureStepProgressDescription");
		nameByTag.put(TagFromName.ProcedureStepProgressParametersSequence,"ProcedureStepProgressParametersSequence");
		nameByTag.put(TagFromName.ProcedureStepCommunicationsURISequence,"ProcedureStepCommunicationsURISequence");
		nameByTag.put(TagFromName.ContactURI,"ContactURI");
		nameByTag.put(TagFromName.ContactDisplayName,"ContactDisplayName");
		nameByTag.put(TagFromName.ProcedureStepDiscontinuationReasonCodeSequence,"ProcedureStepDiscontinuationReasonCodeSequence");
		nameByTag.put(TagFromName.BeamTaskSequence,"BeamTaskSequence");
		nameByTag.put(TagFromName.BeamTaskType,"BeamTaskType");
		nameByTag.put(TagFromName.BeamOrderIndexTrial,"BeamOrderIndexTrial");
		nameByTag.put(TagFromName.AutosequenceFlag,"AutosequenceFlag");
		nameByTag.put(TagFromName.TableTopVerticalAdjustedPosition,"TableTopVerticalAdjustedPosition");
		nameByTag.put(TagFromName.TableTopLongitudinalAdjustedPosition,"TableTopLongitudinalAdjustedPosition");
		nameByTag.put(TagFromName.TableTopLateralAdjustedPosition,"TableTopLateralAdjustedPosition");
		nameByTag.put(TagFromName.PatientSupportAdjustedAngle,"PatientSupportAdjustedAngle");
		nameByTag.put(TagFromName.TableTopEccentricAdjustedAngle,"TableTopEccentricAdjustedAngle");
		nameByTag.put(TagFromName.TableTopPitchAdjustedAngle,"TableTopPitchAdjustedAngle");
		nameByTag.put(TagFromName.TableTopRollAdjustedAngle,"TableTopRollAdjustedAngle");
		nameByTag.put(TagFromName.DeliveryVerificationImageSequence,"DeliveryVerificationImageSequence");
		nameByTag.put(TagFromName.VerificationImageTiming,"VerificationImageTiming");
		nameByTag.put(TagFromName.DoubleExposureFlag,"DoubleExposureFlag");
		nameByTag.put(TagFromName.DoubleExposureOrdering,"DoubleExposureOrdering");
		nameByTag.put(TagFromName.DoubleExposureMetersetTrial,"DoubleExposureMetersetTrial");
		nameByTag.put(TagFromName.DoubleExposureFieldDeltaTrial,"DoubleExposureFieldDeltaTrial");
		nameByTag.put(TagFromName.RelatedReferenceRTImageSequence,"RelatedReferenceRTImageSequence");
		nameByTag.put(TagFromName.GeneralMachineVerificationSequence,"GeneralMachineVerificationSequence");
		nameByTag.put(TagFromName.ConventionalMachineVerificationSequence,"ConventionalMachineVerificationSequence");
		nameByTag.put(TagFromName.IonMachineVerificationSequence,"IonMachineVerificationSequence");
		nameByTag.put(TagFromName.FailedAttributesSequence,"FailedAttributesSequence");
		nameByTag.put(TagFromName.OverriddenAttributesSequence,"OverriddenAttributesSequence");
		nameByTag.put(TagFromName.ConventionalControlPointVerificationSequence,"ConventionalControlPointVerificationSequence");
		nameByTag.put(TagFromName.IonControlPointVerificationSequence,"IonControlPointVerificationSequence");
		nameByTag.put(TagFromName.AttributeOccurrenceSequence,"AttributeOccurrenceSequence");
		nameByTag.put(TagFromName.AttributeOccurrencePointer,"AttributeOccurrencePointer");
		nameByTag.put(TagFromName.AttributeItemSelector,"AttributeItemSelector");
		nameByTag.put(TagFromName.AttributeOccurrencePrivateCreator,"AttributeOccurrencePrivateCreator");
		nameByTag.put(TagFromName.SelectorSequencePointerItems,"SelectorSequencePointerItems");
		nameByTag.put(TagFromName.ScheduledProcedureStepPriority,"ScheduledProcedureStepPriority");
		nameByTag.put(TagFromName.WorklistLabel,"WorklistLabel");
		nameByTag.put(TagFromName.ProcedureStepLabel,"ProcedureStepLabel");
		nameByTag.put(TagFromName.ScheduledProcessingParametersSequence,"ScheduledProcessingParametersSequence");
		nameByTag.put(TagFromName.PerformedProcessingParametersSequence,"PerformedProcessingParametersSequence");
		nameByTag.put(TagFromName.UnifiedProcedureStepPerformedProcedureSequence,"UnifiedProcedureStepPerformedProcedureSequence");
		nameByTag.put(TagFromName.RelatedProcedureStepSequence,"RelatedProcedureStepSequence");
		nameByTag.put(TagFromName.ProcedureStepRelationshipType,"ProcedureStepRelationshipType");
		nameByTag.put(TagFromName.ReplacedProcedureStepSequence,"ReplacedProcedureStepSequence");
		nameByTag.put(TagFromName.DeletionLock,"DeletionLock");
		nameByTag.put(TagFromName.ReceivingAE,"ReceivingAE");
		nameByTag.put(TagFromName.RequestingAE,"RequestingAE");
		nameByTag.put(TagFromName.ReasonForCancellation,"ReasonForCancellation");
		nameByTag.put(TagFromName.SCPStatus,"SCPStatus");
		nameByTag.put(TagFromName.SubscriptionListStatus,"SubscriptionListStatus");
		nameByTag.put(TagFromName.UnifiedProcedureStepListStatus,"UnifiedProcedureStepListStatus");
		nameByTag.put(TagFromName.BeamOrderIndex,"BeamOrderIndex");
		nameByTag.put(TagFromName.DoubleExposureMeterset,"DoubleExposureMeterset");
		nameByTag.put(TagFromName.DoubleExposureFieldDelta,"DoubleExposureFieldDelta");
		nameByTag.put(TagFromName.BrachyTaskSequence,"BrachyTaskSequence");
		nameByTag.put(TagFromName.ContinuationStartTotalReferenceAirKerma,"ContinuationStartTotalReferenceAirKerma");
		nameByTag.put(TagFromName.ContinuationEndTotalReferenceAirKerma,"ContinuationEndTotalReferenceAirKerma");
		nameByTag.put(TagFromName.ContinuationPulseNumber,"ContinuationPulseNumber");
		nameByTag.put(TagFromName.ChannelDeliveryOrderSequence,"ChannelDeliveryOrderSequence");
		nameByTag.put(TagFromName.ReferencedChannelNumber,"ReferencedChannelNumber");
		nameByTag.put(TagFromName.StartCumulativeTimeWeight,"StartCumulativeTimeWeight");
		nameByTag.put(TagFromName.EndCumulativeTimeWeight,"EndCumulativeTimeWeight");
		nameByTag.put(TagFromName.OmittedChannelSequence,"OmittedChannelSequence");
		nameByTag.put(TagFromName.ReasonForChannelOmission,"ReasonForChannelOmission");
		nameByTag.put(TagFromName.ReasonForChannelOmissionDescription,"ReasonForChannelOmissionDescription");
		nameByTag.put(TagFromName.ChannelDeliveryOrderIndex,"ChannelDeliveryOrderIndex");
		nameByTag.put(TagFromName.ChannelDeliveryContinuationSequence,"ChannelDeliveryContinuationSequence");
		nameByTag.put(TagFromName.OmittedApplicationSetupSequence,"OmittedApplicationSetupSequence");
		nameByTag.put(TagFromName.ImplantAssemblyTemplateName,"ImplantAssemblyTemplateName");
		nameByTag.put(TagFromName.ImplantAssemblyTemplateIssuer,"ImplantAssemblyTemplateIssuer");
		nameByTag.put(TagFromName.ImplantAssemblyTemplateVersion,"ImplantAssemblyTemplateVersion");
		nameByTag.put(TagFromName.ReplacedImplantAssemblyTemplateSequence,"ReplacedImplantAssemblyTemplateSequence");
		nameByTag.put(TagFromName.ImplantAssemblyTemplateType,"ImplantAssemblyTemplateType");
		nameByTag.put(TagFromName.OriginalImplantAssemblyTemplateSequence,"OriginalImplantAssemblyTemplateSequence");
		nameByTag.put(TagFromName.DerivationImplantAssemblyTemplateSequence,"DerivationImplantAssemblyTemplateSequence");
		nameByTag.put(TagFromName.ImplantAssemblyTemplateTargetAnatomySequence,"ImplantAssemblyTemplateTargetAnatomySequence");
		nameByTag.put(TagFromName.ProcedureTypeCodeSequence,"ProcedureTypeCodeSequence");
		nameByTag.put(TagFromName.SurgicalTechnique,"SurgicalTechnique");
		nameByTag.put(TagFromName.ComponentTypesSequence,"ComponentTypesSequence");
		nameByTag.put(TagFromName.ComponentTypeCodeSequence,"ComponentTypeCodeSequence");
		nameByTag.put(TagFromName.ExclusiveComponentType,"ExclusiveComponentType");
		nameByTag.put(TagFromName.MandatoryComponentType,"MandatoryComponentType");
		nameByTag.put(TagFromName.ComponentSequence,"ComponentSequence");
		nameByTag.put(TagFromName.ComponentID,"ComponentID");
		nameByTag.put(TagFromName.ComponentAssemblySequence,"ComponentAssemblySequence");
		nameByTag.put(TagFromName.Component1ReferencedID,"Component1ReferencedID");
		nameByTag.put(TagFromName.Component1ReferencedMatingFeatureSetID,"Component1ReferencedMatingFeatureSetID");
		nameByTag.put(TagFromName.Component1ReferencedMatingFeatureID,"Component1ReferencedMatingFeatureID");
		nameByTag.put(TagFromName.Component2ReferencedID,"Component2ReferencedID");
		nameByTag.put(TagFromName.Component2ReferencedMatingFeatureSetID,"Component2ReferencedMatingFeatureSetID");
		nameByTag.put(TagFromName.Component2ReferencedMatingFeatureID,"Component2ReferencedMatingFeatureID");
		nameByTag.put(TagFromName.ImplantTemplateGroupName,"ImplantTemplateGroupName");
		nameByTag.put(TagFromName.ImplantTemplateGroupDescription,"ImplantTemplateGroupDescription");
		nameByTag.put(TagFromName.ImplantTemplateGroupIssuer,"ImplantTemplateGroupIssuer");
		nameByTag.put(TagFromName.ImplantTemplateGroupVersion,"ImplantTemplateGroupVersion");
		nameByTag.put(TagFromName.ReplacedImplantTemplateGroupSequence,"ReplacedImplantTemplateGroupSequence");
		nameByTag.put(TagFromName.ImplantTemplateGroupTargetAnatomySequence,"ImplantTemplateGroupTargetAnatomySequence");
		nameByTag.put(TagFromName.ImplantTemplateGroupMembersSequence,"ImplantTemplateGroupMembersSequence");
		nameByTag.put(TagFromName.ImplantTemplateGroupMemberID,"ImplantTemplateGroupMemberID");
		nameByTag.put(TagFromName.ThreeDImplantTemplateGroupMemberMatchingPoint,"ThreeDImplantTemplateGroupMemberMatchingPoint");
		nameByTag.put(TagFromName.ThreeDImplantTemplateGroupMemberMatchingAxes,"ThreeDImplantTemplateGroupMemberMatchingAxes");
		nameByTag.put(TagFromName.ImplantTemplateGroupMemberMatching2DCoordinatesSequence,"ImplantTemplateGroupMemberMatching2DCoordinatesSequence");
		nameByTag.put(TagFromName.TwoDImplantTemplateGroupMemberMatchingPoint,"TwoDImplantTemplateGroupMemberMatchingPoint");
		nameByTag.put(TagFromName.TwoDImplantTemplateGroupMemberMatchingAxes,"TwoDImplantTemplateGroupMemberMatchingAxes");
		nameByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionSequence,"ImplantTemplateGroupVariationDimensionSequence");
		nameByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionName,"ImplantTemplateGroupVariationDimensionName");
		nameByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionRankSequence,"ImplantTemplateGroupVariationDimensionRankSequence");
		nameByTag.put(TagFromName.ReferencedImplantTemplateGroupMemberID,"ReferencedImplantTemplateGroupMemberID");
		nameByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionRank,"ImplantTemplateGroupVariationDimensionRank");
		nameByTag.put(TagFromName.SurfaceScanAcquisitionTypeCodeSequence,"SurfaceScanAcquisitionTypeCodeSequence");
		nameByTag.put(TagFromName.SurfaceScanModeCodeSequence,"SurfaceScanModeCodeSequence");
		nameByTag.put(TagFromName.RegistrationMethodCodeSequence,"RegistrationMethodCodeSequence");
		nameByTag.put(TagFromName.ShotDurationTime,"ShotDurationTime");
		nameByTag.put(TagFromName.ShotOffsetTime,"ShotOffsetTime");
		nameByTag.put(TagFromName.SurfacePointPresentationValueData,"SurfacePointPresentationValueData");
		nameByTag.put(TagFromName.SurfacePointColorCIELabValueData,"SurfacePointColorCIELabValueData");
		nameByTag.put(TagFromName.UVMappingSequence,"UVMappingSequence");
		nameByTag.put(TagFromName.TextureLabel,"TextureLabel");
		nameByTag.put(TagFromName.UValueData,"UValueData");
		nameByTag.put(TagFromName.VValueData,"VValueData");
		nameByTag.put(TagFromName.ReferencedTextureSequence,"ReferencedTextureSequence");
		nameByTag.put(TagFromName.ReferencedSurfaceDataSequence,"ReferencedSurfaceDataSequence");
		nameByTag.put(TagFromName.AssessmentSummary,"AssessmentSummary");
		nameByTag.put(TagFromName.AssessmentSummaryDescription,"AssessmentSummaryDescription");
		nameByTag.put(TagFromName.AssessedSOPInstanceSequence,"AssessedSOPInstanceSequence");
		nameByTag.put(TagFromName.ReferencedComparisonSOPInstanceSequence,"ReferencedComparisonSOPInstanceSequence");
		nameByTag.put(TagFromName.NumberOfAssessmentObservations,"NumberOfAssessmentObservations");
		nameByTag.put(TagFromName.AssessmentObservationsSequence,"AssessmentObservationsSequence");
		nameByTag.put(TagFromName.ObservationSignificance,"ObservationSignificance");
		nameByTag.put(TagFromName.ObservationDescription,"ObservationDescription");
		nameByTag.put(TagFromName.StructuredContraintObservationSequence,"StructuredContraintObservationSequence");
		nameByTag.put(TagFromName.AssessedAttributeValueSequence,"AssessedAttributeValueSequence");
		nameByTag.put(TagFromName.AssessmentSetID,"AssessmentSetID");
		nameByTag.put(TagFromName.AssessmentRequesterSequence,"AssessmentRequesterSequence");
		nameByTag.put(TagFromName.SelectorAttributeName,"SelectorAttributeName");
		nameByTag.put(TagFromName.SelectorAttributeKeyword,"SelectorAttributeKeyword");
		nameByTag.put(TagFromName.AssessmentTypeCodeSequence,"AssessmentTypeCodeSequence");
		nameByTag.put(TagFromName.ObservationBasisCodeSequence,"ObservationBasisCodeSequence");
		nameByTag.put(TagFromName.AssessmentLabel,"AssessmentLabel");
		nameByTag.put(TagFromName.ConstraintType,"ConstraintType");
		nameByTag.put(TagFromName.SpecificationSelectionGuidance,"SpecificationSelectionGuidance");
		nameByTag.put(TagFromName.ConstraintValueSequence,"ConstraintValueSequence");
		nameByTag.put(TagFromName.RecommendedDefaultValueSequence,"RecommendedDefaultValueSequence");
		nameByTag.put(TagFromName.ConstraintViolationSignificance,"ConstraintViolationSignificance");
		nameByTag.put(TagFromName.ConstraintViolationCondition,"ConstraintViolationCondition");
		nameByTag.put(TagFromName.ModifiableConstraintFlag,"ModifiableConstraintFlag");
		nameByTag.put(TagFromName.StorageMediaFileSetID,"StorageMediaFileSetID");
		nameByTag.put(TagFromName.StorageMediaFileSetUID,"StorageMediaFileSetUID");
		nameByTag.put(TagFromName.IconImageSequence,"IconImageSequence");
		nameByTag.put(TagFromName.TopicTitle,"TopicTitle");
		nameByTag.put(TagFromName.TopicSubject,"TopicSubject");
		nameByTag.put(TagFromName.TopicAuthor,"TopicAuthor");
		nameByTag.put(TagFromName.TopicKeywords,"TopicKeywords");
		nameByTag.put(TagFromName.SOPInstanceStatus,"SOPInstanceStatus");
		nameByTag.put(TagFromName.SOPAuthorizationDateTime,"SOPAuthorizationDateTime");
		nameByTag.put(TagFromName.SOPAuthorizationComment,"SOPAuthorizationComment");
		nameByTag.put(TagFromName.AuthorizationEquipmentCertificationNumber,"AuthorizationEquipmentCertificationNumber");
		nameByTag.put(TagFromName.MACIDNumber,"MACIDNumber");
		nameByTag.put(TagFromName.MACCalculationTransferSyntaxUID,"MACCalculationTransferSyntaxUID");
		nameByTag.put(TagFromName.MACAlgorithm,"MACAlgorithm");
		nameByTag.put(TagFromName.DataElementsSigned,"DataElementsSigned");
		nameByTag.put(TagFromName.DigitalSignatureUID,"DigitalSignatureUID");
		nameByTag.put(TagFromName.DigitalSignatureDateTime,"DigitalSignatureDateTime");
		nameByTag.put(TagFromName.CertificateType,"CertificateType");
		nameByTag.put(TagFromName.CertificateOfSigner,"CertificateOfSigner");
		nameByTag.put(TagFromName.Signature,"Signature");
		nameByTag.put(TagFromName.CertifiedTimestampType,"CertifiedTimestampType");
		nameByTag.put(TagFromName.CertifiedTimestamp,"CertifiedTimestamp");
		nameByTag.put(TagFromName.DigitalSignaturePurposeCodeSequence,"DigitalSignaturePurposeCodeSequence");
		nameByTag.put(TagFromName.ReferencedDigitalSignatureSequence,"ReferencedDigitalSignatureSequence");
		nameByTag.put(TagFromName.ReferencedSOPInstanceMACSequence,"ReferencedSOPInstanceMACSequence");
		nameByTag.put(TagFromName.MAC,"MAC");
		nameByTag.put(TagFromName.EncryptedAttributesSequence,"EncryptedAttributesSequence");
		nameByTag.put(TagFromName.EncryptedContentTransferSyntaxUID,"EncryptedContentTransferSyntaxUID");
		nameByTag.put(TagFromName.EncryptedContent,"EncryptedContent");
		nameByTag.put(TagFromName.ModifiedAttributesSequence,"ModifiedAttributesSequence");
		nameByTag.put(TagFromName.OriginalAttributesSequence,"OriginalAttributesSequence");
		nameByTag.put(TagFromName.AttributeModificationDateTime,"AttributeModificationDateTime");
		nameByTag.put(TagFromName.ModifyingSystem,"ModifyingSystem");
		nameByTag.put(TagFromName.SourceOfPreviousValues,"SourceOfPreviousValues");
		nameByTag.put(TagFromName.ReasonForTheAttributeModification,"ReasonForTheAttributeModification");
		nameByTag.put(TagFromName.InstanceOriginStatus,"InstanceOriginStatus");
		nameByTag.put(TagFromName.ZonalMap,"ZonalMap");
		nameByTag.put(TagFromName.NumberOfCopies,"NumberOfCopies");
		nameByTag.put(TagFromName.PrinterConfigurationSequence,"PrinterConfigurationSequence");
		nameByTag.put(TagFromName.PrintPriority,"PrintPriority");
		nameByTag.put(TagFromName.MediumType,"MediumType");
		nameByTag.put(TagFromName.FilmDestination,"FilmDestination");
		nameByTag.put(TagFromName.FilmSessionLabel,"FilmSessionLabel");
		nameByTag.put(TagFromName.MemoryAllocation,"MemoryAllocation");
		nameByTag.put(TagFromName.MaximumMemoryAllocation,"MaximumMemoryAllocation");
		nameByTag.put(TagFromName.ColorImagePrintingFlag,"ColorImagePrintingFlag");
		nameByTag.put(TagFromName.CollationFlag,"CollationFlag");
		nameByTag.put(TagFromName.AnnotationFlag,"AnnotationFlag");
		nameByTag.put(TagFromName.ImageOverlayFlag,"ImageOverlayFlag");
		nameByTag.put(TagFromName.PresentationLUTFlag,"PresentationLUTFlag");
		nameByTag.put(TagFromName.ImageBoxPresentationLUTFlag,"ImageBoxPresentationLUTFlag");
		nameByTag.put(TagFromName.MemoryBitDepth,"MemoryBitDepth");
		nameByTag.put(TagFromName.PrintingBitDepth,"PrintingBitDepth");
		nameByTag.put(TagFromName.MediaInstalledSequence,"MediaInstalledSequence");
		nameByTag.put(TagFromName.OtherMediaAvailableSequence,"OtherMediaAvailableSequence");
		nameByTag.put(TagFromName.SupportedImageDisplayFormatsSequence,"SupportedImageDisplayFormatsSequence");
		nameByTag.put(TagFromName.ReferencedFilmBoxSequence,"ReferencedFilmBoxSequence");
		nameByTag.put(TagFromName.ReferencedStoredPrintSequence,"ReferencedStoredPrintSequence");
		nameByTag.put(TagFromName.ImageDisplayFormat,"ImageDisplayFormat");
		nameByTag.put(TagFromName.AnnotationDisplayFormatID,"AnnotationDisplayFormatID");
		nameByTag.put(TagFromName.FilmOrientation,"FilmOrientation");
		nameByTag.put(TagFromName.FilmSizeID,"FilmSizeID");
		nameByTag.put(TagFromName.PrinterResolutionID,"PrinterResolutionID");
		nameByTag.put(TagFromName.DefaultPrinterResolutionID,"DefaultPrinterResolutionID");
		nameByTag.put(TagFromName.MagnificationType,"MagnificationType");
		nameByTag.put(TagFromName.SmoothingType,"SmoothingType");
		nameByTag.put(TagFromName.DefaultMagnificationType,"DefaultMagnificationType");
		nameByTag.put(TagFromName.OtherMagnificationTypesAvailable,"OtherMagnificationTypesAvailable");
		nameByTag.put(TagFromName.DefaultSmoothingType,"DefaultSmoothingType");
		nameByTag.put(TagFromName.OtherSmoothingTypesAvailable,"OtherSmoothingTypesAvailable");
		nameByTag.put(TagFromName.BorderDensity,"BorderDensity");
		nameByTag.put(TagFromName.EmptyImageDensity,"EmptyImageDensity");
		nameByTag.put(TagFromName.MinDensity,"MinDensity");
		nameByTag.put(TagFromName.MaxDensity,"MaxDensity");
		nameByTag.put(TagFromName.Trim,"Trim");
		nameByTag.put(TagFromName.ConfigurationInformation,"ConfigurationInformation");
		nameByTag.put(TagFromName.ConfigurationInformationDescription,"ConfigurationInformationDescription");
		nameByTag.put(TagFromName.MaximumCollatedFilms,"MaximumCollatedFilms");
		nameByTag.put(TagFromName.Illumination,"Illumination");
		nameByTag.put(TagFromName.ReflectedAmbientLight,"ReflectedAmbientLight");
		nameByTag.put(TagFromName.PrinterPixelSpacing,"PrinterPixelSpacing");
		nameByTag.put(TagFromName.ReferencedFilmSessionSequence,"ReferencedFilmSessionSequence");
		nameByTag.put(TagFromName.ReferencedImageBoxSequence,"ReferencedImageBoxSequence");
		nameByTag.put(TagFromName.ReferencedBasicAnnotationBoxSequence,"ReferencedBasicAnnotationBoxSequence");
		nameByTag.put(TagFromName.ImageBoxPosition,"ImageBoxPosition");
		nameByTag.put(TagFromName.Polarity,"Polarity");
		nameByTag.put(TagFromName.RequestedImageSize,"RequestedImageSize");
		nameByTag.put(TagFromName.RequestedDecimateCropBehavior,"RequestedDecimateCropBehavior");
		nameByTag.put(TagFromName.RequestedResolutionID,"RequestedResolutionID");
		nameByTag.put(TagFromName.RequestedImageSizeFlag,"RequestedImageSizeFlag");
		nameByTag.put(TagFromName.DecimateCropResult,"DecimateCropResult");
		nameByTag.put(TagFromName.BasicGrayscaleImageSequence,"BasicGrayscaleImageSequence");
		nameByTag.put(TagFromName.BasicColorImageSequence,"BasicColorImageSequence");
		nameByTag.put(TagFromName.ReferencedImageOverlayBoxSequence,"ReferencedImageOverlayBoxSequence");
		nameByTag.put(TagFromName.ReferencedVOILUTBoxSequence,"ReferencedVOILUTBoxSequence");
		nameByTag.put(TagFromName.AnnotationPosition,"AnnotationPosition");
		nameByTag.put(TagFromName.TextString,"TextString");
		nameByTag.put(TagFromName.ReferencedOverlayPlaneSequence,"ReferencedOverlayPlaneSequence");
		nameByTag.put(TagFromName.ReferencedOverlayPlaneGroups,"ReferencedOverlayPlaneGroups");
		nameByTag.put(TagFromName.OverlayPixelDataSequence,"OverlayPixelDataSequence");
		nameByTag.put(TagFromName.OverlayMagnificationType,"OverlayMagnificationType");
		nameByTag.put(TagFromName.OverlaySmoothingType,"OverlaySmoothingType");
		nameByTag.put(TagFromName.OverlayOrImageMagnification,"OverlayOrImageMagnification");
		nameByTag.put(TagFromName.MagnifyToNumberOfColumns,"MagnifyToNumberOfColumns");
		nameByTag.put(TagFromName.OverlayForegroundDensity,"OverlayForegroundDensity");
		nameByTag.put(TagFromName.OverlayBackgroundDensity,"OverlayBackgroundDensity");
		nameByTag.put(TagFromName.OverlayMode,"OverlayMode");
		nameByTag.put(TagFromName.ThresholdDensity,"ThresholdDensity");
		nameByTag.put(TagFromName.ReferencedImageBoxSequenceRetired,"ReferencedImageBoxSequenceRetired");
		nameByTag.put(TagFromName.PresentationLUTSequence,"PresentationLUTSequence");
		nameByTag.put(TagFromName.PresentationLUTShape,"PresentationLUTShape");
		nameByTag.put(TagFromName.ReferencedPresentationLUTSequence,"ReferencedPresentationLUTSequence");
		nameByTag.put(TagFromName.PrintJobID,"PrintJobID");
		nameByTag.put(TagFromName.ExecutionStatus,"ExecutionStatus");
		nameByTag.put(TagFromName.ExecutionStatusInfo,"ExecutionStatusInfo");
		nameByTag.put(TagFromName.CreationDate,"CreationDate");
		nameByTag.put(TagFromName.CreationTime,"CreationTime");
		nameByTag.put(TagFromName.Originator,"Originator");
		nameByTag.put(TagFromName.DestinationAE,"DestinationAE");
		nameByTag.put(TagFromName.OwnerID,"OwnerID");
		nameByTag.put(TagFromName.NumberOfFilms,"NumberOfFilms");
		nameByTag.put(TagFromName.ReferencedPrintJobSequencePullStoredPrint,"ReferencedPrintJobSequencePullStoredPrint");
		nameByTag.put(TagFromName.PrinterStatus,"PrinterStatus");
		nameByTag.put(TagFromName.PrinterStatusInfo,"PrinterStatusInfo");
		nameByTag.put(TagFromName.PrinterName,"PrinterName");
		nameByTag.put(TagFromName.PrintQueueID,"PrintQueueID");
		nameByTag.put(TagFromName.QueueStatus,"QueueStatus");
		nameByTag.put(TagFromName.PrintJobDescriptionSequence,"PrintJobDescriptionSequence");
		nameByTag.put(TagFromName.ReferencedPrintJobSequence,"ReferencedPrintJobSequence");
		nameByTag.put(TagFromName.PrintManagementCapabilitiesSequence,"PrintManagementCapabilitiesSequence");
		nameByTag.put(TagFromName.PrinterCharacteristicsSequence,"PrinterCharacteristicsSequence");
		nameByTag.put(TagFromName.FilmBoxContentSequence,"FilmBoxContentSequence");
		nameByTag.put(TagFromName.ImageBoxContentSequence,"ImageBoxContentSequence");
		nameByTag.put(TagFromName.AnnotationContentSequence,"AnnotationContentSequence");
		nameByTag.put(TagFromName.ImageOverlayBoxContentSequence,"ImageOverlayBoxContentSequence");
		nameByTag.put(TagFromName.PresentationLUTContentSequence,"PresentationLUTContentSequence");
		nameByTag.put(TagFromName.ProposedStudySequence,"ProposedStudySequence");
		nameByTag.put(TagFromName.OriginalImageSequence,"OriginalImageSequence");
		nameByTag.put(TagFromName.LabelUsingInformationExtractedFromInstances,"LabelUsingInformationExtractedFromInstances");
		nameByTag.put(TagFromName.LabelText,"LabelText");
		nameByTag.put(TagFromName.LabelStyleSelection,"LabelStyleSelection");
		nameByTag.put(TagFromName.MediaDisposition,"MediaDisposition");
		nameByTag.put(TagFromName.BarcodeValue,"BarcodeValue");
		nameByTag.put(TagFromName.BarcodeSymbology,"BarcodeSymbology");
		nameByTag.put(TagFromName.AllowMediaSplitting,"AllowMediaSplitting");
		nameByTag.put(TagFromName.IncludeNonDICOMObjects,"IncludeNonDICOMObjects");
		nameByTag.put(TagFromName.IncludeDisplayApplication,"IncludeDisplayApplication");
		nameByTag.put(TagFromName.PreserveCompositeInstancesAfterMediaCreation,"PreserveCompositeInstancesAfterMediaCreation");
		nameByTag.put(TagFromName.TotalNumberOfPiecesOfMediaCreated,"TotalNumberOfPiecesOfMediaCreated");
		nameByTag.put(TagFromName.RequestedMediaApplicationProfile,"RequestedMediaApplicationProfile");
		nameByTag.put(TagFromName.ReferencedStorageMediaSequence,"ReferencedStorageMediaSequence");
		nameByTag.put(TagFromName.FailureAttributes,"FailureAttributes");
		nameByTag.put(TagFromName.AllowLossyCompression,"AllowLossyCompression");
		nameByTag.put(TagFromName.RequestPriority,"RequestPriority");
		nameByTag.put(TagFromName.RTImageLabel,"RTImageLabel");
		nameByTag.put(TagFromName.RTImageName,"RTImageName");
		nameByTag.put(TagFromName.RTImageDescription,"RTImageDescription");
		nameByTag.put(TagFromName.ReportedValuesOrigin,"ReportedValuesOrigin");
		nameByTag.put(TagFromName.RTImagePlane,"RTImagePlane");
		nameByTag.put(TagFromName.XRayImageReceptorTranslation,"XRayImageReceptorTranslation");
		nameByTag.put(TagFromName.XRayImageReceptorAngle,"XRayImageReceptorAngle");
		nameByTag.put(TagFromName.RTImageOrientation,"RTImageOrientation");
		nameByTag.put(TagFromName.ImagePlanePixelSpacing,"ImagePlanePixelSpacing");
		nameByTag.put(TagFromName.RTImagePosition,"RTImagePosition");
		nameByTag.put(TagFromName.RadiationMachineName,"RadiationMachineName");
		nameByTag.put(TagFromName.RadiationMachineSAD,"RadiationMachineSAD");
		nameByTag.put(TagFromName.RadiationMachineSSD,"RadiationMachineSSD");
		nameByTag.put(TagFromName.RTImageSID,"RTImageSID");
		nameByTag.put(TagFromName.SourceToReferenceObjectDistance,"SourceToReferenceObjectDistance");
		nameByTag.put(TagFromName.FractionNumber,"FractionNumber");
		nameByTag.put(TagFromName.ExposureSequence,"ExposureSequence");
		nameByTag.put(TagFromName.MetersetExposure,"MetersetExposure");
		nameByTag.put(TagFromName.DiaphragmPosition,"DiaphragmPosition");
		nameByTag.put(TagFromName.FluenceMapSequence,"FluenceMapSequence");
		nameByTag.put(TagFromName.FluenceDataSource,"FluenceDataSource");
		nameByTag.put(TagFromName.FluenceDataScale,"FluenceDataScale");
		nameByTag.put(TagFromName.PrimaryFluenceModeSequence,"PrimaryFluenceModeSequence");
		nameByTag.put(TagFromName.FluenceMode,"FluenceMode");
		nameByTag.put(TagFromName.FluenceModeID,"FluenceModeID");
		nameByTag.put(TagFromName.DVHType,"DVHType");
		nameByTag.put(TagFromName.DoseUnits,"DoseUnits");
		nameByTag.put(TagFromName.DoseType,"DoseType");
		nameByTag.put(TagFromName.SpatialTransformOfDose,"SpatialTransformOfDose");
		nameByTag.put(TagFromName.DoseComment,"DoseComment");
		nameByTag.put(TagFromName.NormalizationPoint,"NormalizationPoint");
		nameByTag.put(TagFromName.DoseSummationType,"DoseSummationType");
		nameByTag.put(TagFromName.GridFrameOffsetVector,"GridFrameOffsetVector");
		nameByTag.put(TagFromName.DoseGridScaling,"DoseGridScaling");
		nameByTag.put(TagFromName.RTDoseROISequence,"RTDoseROISequence");
		nameByTag.put(TagFromName.DoseValue,"DoseValue");
		nameByTag.put(TagFromName.TissueHeterogeneityCorrection,"TissueHeterogeneityCorrection");
		nameByTag.put(TagFromName.DVHNormalizationPoint,"DVHNormalizationPoint");
		nameByTag.put(TagFromName.DVHNormalizationDoseValue,"DVHNormalizationDoseValue");
		nameByTag.put(TagFromName.DVHSequence,"DVHSequence");
		nameByTag.put(TagFromName.DVHDoseScaling,"DVHDoseScaling");
		nameByTag.put(TagFromName.DVHVolumeUnits,"DVHVolumeUnits");
		nameByTag.put(TagFromName.DVHNumberOfBins,"DVHNumberOfBins");
		nameByTag.put(TagFromName.DVHData,"DVHData");
		nameByTag.put(TagFromName.DVHReferencedROISequence,"DVHReferencedROISequence");
		nameByTag.put(TagFromName.DVHROIContributionType,"DVHROIContributionType");
		nameByTag.put(TagFromName.DVHMinimumDose,"DVHMinimumDose");
		nameByTag.put(TagFromName.DVHMaximumDose,"DVHMaximumDose");
		nameByTag.put(TagFromName.DVHMeanDose,"DVHMeanDose");
		nameByTag.put(TagFromName.StructureSetLabel,"StructureSetLabel");
		nameByTag.put(TagFromName.StructureSetName,"StructureSetName");
		nameByTag.put(TagFromName.StructureSetDescription,"StructureSetDescription");
		nameByTag.put(TagFromName.StructureSetDate,"StructureSetDate");
		nameByTag.put(TagFromName.StructureSetTime,"StructureSetTime");
		nameByTag.put(TagFromName.ReferencedFrameOfReferenceSequence,"ReferencedFrameOfReferenceSequence");
		nameByTag.put(TagFromName.RTReferencedStudySequence,"RTReferencedStudySequence");
		nameByTag.put(TagFromName.RTReferencedSeriesSequence,"RTReferencedSeriesSequence");
		nameByTag.put(TagFromName.ContourImageSequence,"ContourImageSequence");
		nameByTag.put(TagFromName.PredecessorStructureSetSequence,"PredecessorStructureSetSequence");
		nameByTag.put(TagFromName.StructureSetROISequence,"StructureSetROISequence");
		nameByTag.put(TagFromName.ROINumber,"ROINumber");
		nameByTag.put(TagFromName.ReferencedFrameOfReferenceUID,"ReferencedFrameOfReferenceUID");
		nameByTag.put(TagFromName.ROIName,"ROIName");
		nameByTag.put(TagFromName.ROIDescription,"ROIDescription");
		nameByTag.put(TagFromName.ROIDisplayColor,"ROIDisplayColor");
		nameByTag.put(TagFromName.ROIVolume,"ROIVolume");
		nameByTag.put(TagFromName.RTRelatedROISequence,"RTRelatedROISequence");
		nameByTag.put(TagFromName.RTROIRelationship,"RTROIRelationship");
		nameByTag.put(TagFromName.ROIGenerationAlgorithm,"ROIGenerationAlgorithm");
		nameByTag.put(TagFromName.ROIGenerationDescription,"ROIGenerationDescription");
		nameByTag.put(TagFromName.ROIContourSequence,"ROIContourSequence");
		nameByTag.put(TagFromName.ContourSequence,"ContourSequence");
		nameByTag.put(TagFromName.ContourGeometricType,"ContourGeometricType");
		nameByTag.put(TagFromName.ContourSlabThickness,"ContourSlabThickness");
		nameByTag.put(TagFromName.ContourOffsetVector,"ContourOffsetVector");
		nameByTag.put(TagFromName.NumberOfContourPoints,"NumberOfContourPoints");
		nameByTag.put(TagFromName.ContourNumber,"ContourNumber");
		nameByTag.put(TagFromName.AttachedContours,"AttachedContours");
		nameByTag.put(TagFromName.ContourData,"ContourData");
		nameByTag.put(TagFromName.RTROIObservationsSequence,"RTROIObservationsSequence");
		nameByTag.put(TagFromName.ObservationNumber,"ObservationNumber");
		nameByTag.put(TagFromName.ReferencedROINumber,"ReferencedROINumber");
		nameByTag.put(TagFromName.ROIObservationLabel,"ROIObservationLabel");
		nameByTag.put(TagFromName.RTROIIdentificationCodeSequence,"RTROIIdentificationCodeSequence");
		nameByTag.put(TagFromName.ROIObservationDescription,"ROIObservationDescription");
		nameByTag.put(TagFromName.RelatedRTROIObservationsSequence,"RelatedRTROIObservationsSequence");
		nameByTag.put(TagFromName.RTROIInterpretedType,"RTROIInterpretedType");
		nameByTag.put(TagFromName.ROIInterpreter,"ROIInterpreter");
		nameByTag.put(TagFromName.ROIPhysicalPropertiesSequence,"ROIPhysicalPropertiesSequence");
		nameByTag.put(TagFromName.ROIPhysicalProperty,"ROIPhysicalProperty");
		nameByTag.put(TagFromName.ROIPhysicalPropertyValue,"ROIPhysicalPropertyValue");
		nameByTag.put(TagFromName.ROIElementalCompositionSequence,"ROIElementalCompositionSequence");
		nameByTag.put(TagFromName.ROIElementalCompositionAtomicNumber,"ROIElementalCompositionAtomicNumber");
		nameByTag.put(TagFromName.ROIElementalCompositionAtomicMassFraction,"ROIElementalCompositionAtomicMassFraction");
		nameByTag.put(TagFromName.AdditionalRTROIClassificationCodeSequence,"AdditionalRTROIClassificationCodeSequence");
		nameByTag.put(TagFromName.FrameOfReferenceRelationshipSequence,"FrameOfReferenceRelationshipSequence");
		nameByTag.put(TagFromName.RelatedFrameOfReferenceUID,"RelatedFrameOfReferenceUID");
		nameByTag.put(TagFromName.FrameOfReferenceTransformationType,"FrameOfReferenceTransformationType");
		nameByTag.put(TagFromName.FrameOfReferenceTransformationMatrix,"FrameOfReferenceTransformationMatrix");
		nameByTag.put(TagFromName.FrameOfReferenceTransformationComment,"FrameOfReferenceTransformationComment");
		nameByTag.put(TagFromName.MeasuredDoseReferenceSequence,"MeasuredDoseReferenceSequence");
		nameByTag.put(TagFromName.MeasuredDoseDescription,"MeasuredDoseDescription");
		nameByTag.put(TagFromName.MeasuredDoseType,"MeasuredDoseType");
		nameByTag.put(TagFromName.MeasuredDoseValue,"MeasuredDoseValue");
		nameByTag.put(TagFromName.TreatmentSessionBeamSequence,"TreatmentSessionBeamSequence");
		nameByTag.put(TagFromName.TreatmentSessionIonBeamSequence,"TreatmentSessionIonBeamSequence");
		nameByTag.put(TagFromName.CurrentFractionNumber,"CurrentFractionNumber");
		nameByTag.put(TagFromName.TreatmentControlPointDate,"TreatmentControlPointDate");
		nameByTag.put(TagFromName.TreatmentControlPointTime,"TreatmentControlPointTime");
		nameByTag.put(TagFromName.TreatmentTerminationStatus,"TreatmentTerminationStatus");
		nameByTag.put(TagFromName.TreatmentTerminationCode,"TreatmentTerminationCode");
		nameByTag.put(TagFromName.TreatmentVerificationStatus,"TreatmentVerificationStatus");
		nameByTag.put(TagFromName.ReferencedTreatmentRecordSequence,"ReferencedTreatmentRecordSequence");
		nameByTag.put(TagFromName.SpecifiedPrimaryMeterset,"SpecifiedPrimaryMeterset");
		nameByTag.put(TagFromName.SpecifiedSecondaryMeterset,"SpecifiedSecondaryMeterset");
		nameByTag.put(TagFromName.DeliveredPrimaryMeterset,"DeliveredPrimaryMeterset");
		nameByTag.put(TagFromName.DeliveredSecondaryMeterset,"DeliveredSecondaryMeterset");
		nameByTag.put(TagFromName.SpecifiedTreatmentTime,"SpecifiedTreatmentTime");
		nameByTag.put(TagFromName.DeliveredTreatmentTime,"DeliveredTreatmentTime");
		nameByTag.put(TagFromName.ControlPointDeliverySequence,"ControlPointDeliverySequence");
		nameByTag.put(TagFromName.IonControlPointDeliverySequence,"IonControlPointDeliverySequence");
		nameByTag.put(TagFromName.SpecifiedMeterset,"SpecifiedMeterset");
		nameByTag.put(TagFromName.DeliveredMeterset,"DeliveredMeterset");
		nameByTag.put(TagFromName.MetersetRateSet,"MetersetRateSet");
		nameByTag.put(TagFromName.MetersetRateDelivered,"MetersetRateDelivered");
		nameByTag.put(TagFromName.ScanSpotMetersetsDelivered,"ScanSpotMetersetsDelivered");
		nameByTag.put(TagFromName.DoseRateDelivered,"DoseRateDelivered");
		nameByTag.put(TagFromName.TreatmentSummaryCalculatedDoseReferenceSequence,"TreatmentSummaryCalculatedDoseReferenceSequence");
		nameByTag.put(TagFromName.CumulativeDoseToDoseReference,"CumulativeDoseToDoseReference");
		nameByTag.put(TagFromName.FirstTreatmentDate,"FirstTreatmentDate");
		nameByTag.put(TagFromName.MostRecentTreatmentDate,"MostRecentTreatmentDate");
		nameByTag.put(TagFromName.NumberOfFractionsDelivered,"NumberOfFractionsDelivered");
		nameByTag.put(TagFromName.OverrideSequence,"OverrideSequence");
		nameByTag.put(TagFromName.ParameterSequencePointer,"ParameterSequencePointer");
		nameByTag.put(TagFromName.OverrideParameterPointer,"OverrideParameterPointer");
		nameByTag.put(TagFromName.ParameterItemIndex,"ParameterItemIndex");
		nameByTag.put(TagFromName.MeasuredDoseReferenceNumber,"MeasuredDoseReferenceNumber");
		nameByTag.put(TagFromName.ParameterPointer,"ParameterPointer");
		nameByTag.put(TagFromName.OverrideReason,"OverrideReason");
		nameByTag.put(TagFromName.ParameterValueNumber,"ParameterValueNumber");
		nameByTag.put(TagFromName.CorrectedParameterSequence,"CorrectedParameterSequence");
		nameByTag.put(TagFromName.CorrectionValue,"CorrectionValue");
		nameByTag.put(TagFromName.CalculatedDoseReferenceSequence,"CalculatedDoseReferenceSequence");
		nameByTag.put(TagFromName.CalculatedDoseReferenceNumber,"CalculatedDoseReferenceNumber");
		nameByTag.put(TagFromName.CalculatedDoseReferenceDescription,"CalculatedDoseReferenceDescription");
		nameByTag.put(TagFromName.CalculatedDoseReferenceDoseValue,"CalculatedDoseReferenceDoseValue");
		nameByTag.put(TagFromName.StartMeterset,"StartMeterset");
		nameByTag.put(TagFromName.EndMeterset,"EndMeterset");
		nameByTag.put(TagFromName.ReferencedMeasuredDoseReferenceSequence,"ReferencedMeasuredDoseReferenceSequence");
		nameByTag.put(TagFromName.ReferencedMeasuredDoseReferenceNumber,"ReferencedMeasuredDoseReferenceNumber");
		nameByTag.put(TagFromName.ReferencedCalculatedDoseReferenceSequence,"ReferencedCalculatedDoseReferenceSequence");
		nameByTag.put(TagFromName.ReferencedCalculatedDoseReferenceNumber,"ReferencedCalculatedDoseReferenceNumber");
		nameByTag.put(TagFromName.BeamLimitingDeviceLeafPairsSequence,"BeamLimitingDeviceLeafPairsSequence");
		nameByTag.put(TagFromName.RecordedWedgeSequence,"RecordedWedgeSequence");
		nameByTag.put(TagFromName.RecordedCompensatorSequence,"RecordedCompensatorSequence");
		nameByTag.put(TagFromName.RecordedBlockSequence,"RecordedBlockSequence");
		nameByTag.put(TagFromName.TreatmentSummaryMeasuredDoseReferenceSequence,"TreatmentSummaryMeasuredDoseReferenceSequence");
		nameByTag.put(TagFromName.RecordedSnoutSequence,"RecordedSnoutSequence");
		nameByTag.put(TagFromName.RecordedRangeShifterSequence,"RecordedRangeShifterSequence");
		nameByTag.put(TagFromName.RecordedLateralSpreadingDeviceSequence,"RecordedLateralSpreadingDeviceSequence");
		nameByTag.put(TagFromName.RecordedRangeModulatorSequence,"RecordedRangeModulatorSequence");
		nameByTag.put(TagFromName.RecordedSourceSequence,"RecordedSourceSequence");
		nameByTag.put(TagFromName.SourceSerialNumber,"SourceSerialNumber");
		nameByTag.put(TagFromName.TreatmentSessionApplicationSetupSequence,"TreatmentSessionApplicationSetupSequence");
		nameByTag.put(TagFromName.ApplicationSetupCheck,"ApplicationSetupCheck");
		nameByTag.put(TagFromName.RecordedBrachyAccessoryDeviceSequence,"RecordedBrachyAccessoryDeviceSequence");
		nameByTag.put(TagFromName.ReferencedBrachyAccessoryDeviceNumber,"ReferencedBrachyAccessoryDeviceNumber");
		nameByTag.put(TagFromName.RecordedChannelSequence,"RecordedChannelSequence");
		nameByTag.put(TagFromName.SpecifiedChannelTotalTime,"SpecifiedChannelTotalTime");
		nameByTag.put(TagFromName.DeliveredChannelTotalTime,"DeliveredChannelTotalTime");
		nameByTag.put(TagFromName.SpecifiedNumberOfPulses,"SpecifiedNumberOfPulses");
		nameByTag.put(TagFromName.DeliveredNumberOfPulses,"DeliveredNumberOfPulses");
		nameByTag.put(TagFromName.SpecifiedPulseRepetitionInterval,"SpecifiedPulseRepetitionInterval");
		nameByTag.put(TagFromName.DeliveredPulseRepetitionInterval,"DeliveredPulseRepetitionInterval");
		nameByTag.put(TagFromName.RecordedSourceApplicatorSequence,"RecordedSourceApplicatorSequence");
		nameByTag.put(TagFromName.ReferencedSourceApplicatorNumber,"ReferencedSourceApplicatorNumber");
		nameByTag.put(TagFromName.RecordedChannelShieldSequence,"RecordedChannelShieldSequence");
		nameByTag.put(TagFromName.ReferencedChannelShieldNumber,"ReferencedChannelShieldNumber");
		nameByTag.put(TagFromName.BrachyControlPointDeliveredSequence,"BrachyControlPointDeliveredSequence");
		nameByTag.put(TagFromName.SafePositionExitDate,"SafePositionExitDate");
		nameByTag.put(TagFromName.SafePositionExitTime,"SafePositionExitTime");
		nameByTag.put(TagFromName.SafePositionReturnDate,"SafePositionReturnDate");
		nameByTag.put(TagFromName.SafePositionReturnTime,"SafePositionReturnTime");
		nameByTag.put(TagFromName.PulseSpecificBrachyControlPointDeliveredSequence,"PulseSpecificBrachyControlPointDeliveredSequence");
		nameByTag.put(TagFromName.PulseNumber,"PulseNumber");
		nameByTag.put(TagFromName.BrachyPulseControlPointDeliveredSequence,"BrachyPulseControlPointDeliveredSequence");
		nameByTag.put(TagFromName.CurrentTreatmentStatus,"CurrentTreatmentStatus");
		nameByTag.put(TagFromName.TreatmentStatusComment,"TreatmentStatusComment");
		nameByTag.put(TagFromName.FractionGroupSummarySequence,"FractionGroupSummarySequence");
		nameByTag.put(TagFromName.ReferencedFractionNumber,"ReferencedFractionNumber");
		nameByTag.put(TagFromName.FractionGroupType,"FractionGroupType");
		nameByTag.put(TagFromName.BeamStopperPosition,"BeamStopperPosition");
		nameByTag.put(TagFromName.FractionStatusSummarySequence,"FractionStatusSummarySequence");
		nameByTag.put(TagFromName.TreatmentDate,"TreatmentDate");
		nameByTag.put(TagFromName.TreatmentTime,"TreatmentTime");
		nameByTag.put(TagFromName.RTPlanLabel,"RTPlanLabel");
		nameByTag.put(TagFromName.RTPlanName,"RTPlanName");
		nameByTag.put(TagFromName.RTPlanDescription,"RTPlanDescription");
		nameByTag.put(TagFromName.RTPlanDate,"RTPlanDate");
		nameByTag.put(TagFromName.RTPlanTime,"RTPlanTime");
		nameByTag.put(TagFromName.TreatmentProtocols,"TreatmentProtocols");
		nameByTag.put(TagFromName.PlanIntent,"PlanIntent");
		nameByTag.put(TagFromName.TreatmentSites,"TreatmentSites");
		nameByTag.put(TagFromName.RTPlanGeometry,"RTPlanGeometry");
		nameByTag.put(TagFromName.PrescriptionDescription,"PrescriptionDescription");
		nameByTag.put(TagFromName.DoseReferenceSequence,"DoseReferenceSequence");
		nameByTag.put(TagFromName.DoseReferenceNumber,"DoseReferenceNumber");
		nameByTag.put(TagFromName.DoseReferenceUID,"DoseReferenceUID");
		nameByTag.put(TagFromName.DoseReferenceStructureType,"DoseReferenceStructureType");
		nameByTag.put(TagFromName.NominalBeamEnergyUnit,"NominalBeamEnergyUnit");
		nameByTag.put(TagFromName.DoseReferenceDescription,"DoseReferenceDescription");
		nameByTag.put(TagFromName.DoseReferencePointCoordinates,"DoseReferencePointCoordinates");
		nameByTag.put(TagFromName.NominalPriorDose,"NominalPriorDose");
		nameByTag.put(TagFromName.DoseReferenceType,"DoseReferenceType");
		nameByTag.put(TagFromName.ConstraintWeight,"ConstraintWeight");
		nameByTag.put(TagFromName.DeliveryWarningDose,"DeliveryWarningDose");
		nameByTag.put(TagFromName.DeliveryMaximumDose,"DeliveryMaximumDose");
		nameByTag.put(TagFromName.TargetMinimumDose,"TargetMinimumDose");
		nameByTag.put(TagFromName.TargetPrescriptionDose,"TargetPrescriptionDose");
		nameByTag.put(TagFromName.TargetMaximumDose,"TargetMaximumDose");
		nameByTag.put(TagFromName.TargetUnderdoseVolumeFraction,"TargetUnderdoseVolumeFraction");
		nameByTag.put(TagFromName.OrganAtRiskFullVolumeDose,"OrganAtRiskFullVolumeDose");
		nameByTag.put(TagFromName.OrganAtRiskLimitDose,"OrganAtRiskLimitDose");
		nameByTag.put(TagFromName.OrganAtRiskMaximumDose,"OrganAtRiskMaximumDose");
		nameByTag.put(TagFromName.OrganAtRiskOverdoseVolumeFraction,"OrganAtRiskOverdoseVolumeFraction");
		nameByTag.put(TagFromName.ToleranceTableSequence,"ToleranceTableSequence");
		nameByTag.put(TagFromName.ToleranceTableNumber,"ToleranceTableNumber");
		nameByTag.put(TagFromName.ToleranceTableLabel,"ToleranceTableLabel");
		nameByTag.put(TagFromName.GantryAngleTolerance,"GantryAngleTolerance");
		nameByTag.put(TagFromName.BeamLimitingDeviceAngleTolerance,"BeamLimitingDeviceAngleTolerance");
		nameByTag.put(TagFromName.BeamLimitingDeviceToleranceSequence,"BeamLimitingDeviceToleranceSequence");
		nameByTag.put(TagFromName.BeamLimitingDevicePositionTolerance,"BeamLimitingDevicePositionTolerance");
		nameByTag.put(TagFromName.SnoutPositionTolerance,"SnoutPositionTolerance");
		nameByTag.put(TagFromName.PatientSupportAngleTolerance,"PatientSupportAngleTolerance");
		nameByTag.put(TagFromName.TableTopEccentricAngleTolerance,"TableTopEccentricAngleTolerance");
		nameByTag.put(TagFromName.TableTopPitchAngleTolerance,"TableTopPitchAngleTolerance");
		nameByTag.put(TagFromName.TableTopRollAngleTolerance,"TableTopRollAngleTolerance");
		nameByTag.put(TagFromName.TableTopVerticalPositionTolerance,"TableTopVerticalPositionTolerance");
		nameByTag.put(TagFromName.TableTopLongitudinalPositionTolerance,"TableTopLongitudinalPositionTolerance");
		nameByTag.put(TagFromName.TableTopLateralPositionTolerance,"TableTopLateralPositionTolerance");
		nameByTag.put(TagFromName.RTPlanRelationship,"RTPlanRelationship");
		nameByTag.put(TagFromName.FractionGroupSequence,"FractionGroupSequence");
		nameByTag.put(TagFromName.FractionGroupNumber,"FractionGroupNumber");
		nameByTag.put(TagFromName.FractionGroupDescription,"FractionGroupDescription");
		nameByTag.put(TagFromName.NumberOfFractionsPlanned,"NumberOfFractionsPlanned");
		nameByTag.put(TagFromName.NumberOfFractionPatternDigitsPerDay,"NumberOfFractionPatternDigitsPerDay");
		nameByTag.put(TagFromName.RepeatFractionCycleLength,"RepeatFractionCycleLength");
		nameByTag.put(TagFromName.FractionPattern,"FractionPattern");
		nameByTag.put(TagFromName.NumberOfBeams,"NumberOfBeams");
		nameByTag.put(TagFromName.BeamDoseSpecificationPoint,"BeamDoseSpecificationPoint");
		nameByTag.put(TagFromName.ReferencedDoseReferenceUID,"ReferencedDoseReferenceUID");
		nameByTag.put(TagFromName.BeamDose,"BeamDose");
		nameByTag.put(TagFromName.BeamMeterset,"BeamMeterset");
		nameByTag.put(TagFromName.BeamDosePointDepth,"BeamDosePointDepth");
		nameByTag.put(TagFromName.BeamDosePointEquivalentDepth,"BeamDosePointEquivalentDepth");
		nameByTag.put(TagFromName.BeamDosePointSSD,"BeamDosePointSSD");
		nameByTag.put(TagFromName.BeamDoseMeaning,"BeamDoseMeaning");
		nameByTag.put(TagFromName.BeamDoseVerificationControlPointSequence,"BeamDoseVerificationControlPointSequence");
		nameByTag.put(TagFromName.AverageBeamDosePointDepth,"AverageBeamDosePointDepth");
		nameByTag.put(TagFromName.AverageBeamDosePointEquivalentDepth,"AverageBeamDosePointEquivalentDepth");
		nameByTag.put(TagFromName.AverageBeamDosePointSSD,"AverageBeamDosePointSSD");
		nameByTag.put(TagFromName.BeamDoseType,"BeamDoseType");
		nameByTag.put(TagFromName.AlternateBeamDose,"AlternateBeamDose");
		nameByTag.put(TagFromName.AlternateBeamDoseType,"AlternateBeamDoseType");
		nameByTag.put(TagFromName.DepthValueAveragingFlag,"DepthValueAveragingFlag");
		nameByTag.put(TagFromName.BeamDosePointSourceToExternalContourDistance,"BeamDosePointSourceToExternalContourDistance");
		nameByTag.put(TagFromName.NumberOfBrachyApplicationSetups,"NumberOfBrachyApplicationSetups");
		nameByTag.put(TagFromName.BrachyApplicationSetupDoseSpecificationPoint,"BrachyApplicationSetupDoseSpecificationPoint");
		nameByTag.put(TagFromName.BrachyApplicationSetupDose,"BrachyApplicationSetupDose");
		nameByTag.put(TagFromName.BeamSequence,"BeamSequence");
		nameByTag.put(TagFromName.TreatmentMachineName,"TreatmentMachineName");
		nameByTag.put(TagFromName.PrimaryDosimeterUnit,"PrimaryDosimeterUnit");
		nameByTag.put(TagFromName.SourceAxisDistance,"SourceAxisDistance");
		nameByTag.put(TagFromName.BeamLimitingDeviceSequence,"BeamLimitingDeviceSequence");
		nameByTag.put(TagFromName.RTBeamLimitingDeviceType,"RTBeamLimitingDeviceType");
		nameByTag.put(TagFromName.SourceToBeamLimitingDeviceDistance,"SourceToBeamLimitingDeviceDistance");
		nameByTag.put(TagFromName.IsocenterToBeamLimitingDeviceDistance,"IsocenterToBeamLimitingDeviceDistance");
		nameByTag.put(TagFromName.NumberOfLeafJawPairs,"NumberOfLeafJawPairs");
		nameByTag.put(TagFromName.LeafPositionBoundaries,"LeafPositionBoundaries");
		nameByTag.put(TagFromName.BeamNumber,"BeamNumber");
		nameByTag.put(TagFromName.BeamName,"BeamName");
		nameByTag.put(TagFromName.BeamDescription,"BeamDescription");
		nameByTag.put(TagFromName.BeamType,"BeamType");
		nameByTag.put(TagFromName.BeamDeliveryDurationLimit,"BeamDeliveryDurationLimit");
		nameByTag.put(TagFromName.RadiationType,"RadiationType");
		nameByTag.put(TagFromName.HighDoseTechniqueType,"HighDoseTechniqueType");
		nameByTag.put(TagFromName.ReferenceImageNumber,"ReferenceImageNumber");
		nameByTag.put(TagFromName.PlannedVerificationImageSequence,"PlannedVerificationImageSequence");
		nameByTag.put(TagFromName.ImagingDeviceSpecificAcquisitionParameters,"ImagingDeviceSpecificAcquisitionParameters");
		nameByTag.put(TagFromName.TreatmentDeliveryType,"TreatmentDeliveryType");
		nameByTag.put(TagFromName.NumberOfWedges,"NumberOfWedges");
		nameByTag.put(TagFromName.WedgeSequence,"WedgeSequence");
		nameByTag.put(TagFromName.WedgeNumber,"WedgeNumber");
		nameByTag.put(TagFromName.WedgeType,"WedgeType");
		nameByTag.put(TagFromName.WedgeID,"WedgeID");
		nameByTag.put(TagFromName.WedgeAngle,"WedgeAngle");
		nameByTag.put(TagFromName.WedgeFactor,"WedgeFactor");
		nameByTag.put(TagFromName.TotalWedgeTrayWaterEquivalentThickness,"TotalWedgeTrayWaterEquivalentThickness");
		nameByTag.put(TagFromName.WedgeOrientation,"WedgeOrientation");
		nameByTag.put(TagFromName.IsocenterToWedgeTrayDistance,"IsocenterToWedgeTrayDistance");
		nameByTag.put(TagFromName.SourceToWedgeTrayDistance,"SourceToWedgeTrayDistance");
		nameByTag.put(TagFromName.WedgeThinEdgePosition,"WedgeThinEdgePosition");
		nameByTag.put(TagFromName.BolusID,"BolusID");
		nameByTag.put(TagFromName.BolusDescription,"BolusDescription");
		nameByTag.put(TagFromName.EffectiveWedgeAngle,"EffectiveWedgeAngle");
		nameByTag.put(TagFromName.NumberOfCompensators,"NumberOfCompensators");
		nameByTag.put(TagFromName.MaterialID,"MaterialID");
		nameByTag.put(TagFromName.TotalCompensatorTrayFactor,"TotalCompensatorTrayFactor");
		nameByTag.put(TagFromName.CompensatorSequence,"CompensatorSequence");
		nameByTag.put(TagFromName.CompensatorNumber,"CompensatorNumber");
		nameByTag.put(TagFromName.CompensatorID,"CompensatorID");
		nameByTag.put(TagFromName.SourceToCompensatorTrayDistance,"SourceToCompensatorTrayDistance");
		nameByTag.put(TagFromName.CompensatorRows,"CompensatorRows");
		nameByTag.put(TagFromName.CompensatorColumns,"CompensatorColumns");
		nameByTag.put(TagFromName.CompensatorPixelSpacing,"CompensatorPixelSpacing");
		nameByTag.put(TagFromName.CompensatorPosition,"CompensatorPosition");
		nameByTag.put(TagFromName.CompensatorTransmissionData,"CompensatorTransmissionData");
		nameByTag.put(TagFromName.CompensatorThicknessData,"CompensatorThicknessData");
		nameByTag.put(TagFromName.NumberOfBoli,"NumberOfBoli");
		nameByTag.put(TagFromName.CompensatorType,"CompensatorType");
		nameByTag.put(TagFromName.CompensatorTrayID,"CompensatorTrayID");
		nameByTag.put(TagFromName.NumberOfBlocks,"NumberOfBlocks");
		nameByTag.put(TagFromName.TotalBlockTrayFactor,"TotalBlockTrayFactor");
		nameByTag.put(TagFromName.TotalBlockTrayWaterEquivalentThickness,"TotalBlockTrayWaterEquivalentThickness");
		nameByTag.put(TagFromName.BlockSequence,"BlockSequence");
		nameByTag.put(TagFromName.BlockTrayID,"BlockTrayID");
		nameByTag.put(TagFromName.SourceToBlockTrayDistance,"SourceToBlockTrayDistance");
		nameByTag.put(TagFromName.IsocenterToBlockTrayDistance,"IsocenterToBlockTrayDistance");
		nameByTag.put(TagFromName.BlockType,"BlockType");
		nameByTag.put(TagFromName.AccessoryCode,"AccessoryCode");
		nameByTag.put(TagFromName.BlockDivergence,"BlockDivergence");
		nameByTag.put(TagFromName.BlockMountingPosition,"BlockMountingPosition");
		nameByTag.put(TagFromName.BlockNumber,"BlockNumber");
		nameByTag.put(TagFromName.BlockName,"BlockName");
		nameByTag.put(TagFromName.BlockThickness,"BlockThickness");
		nameByTag.put(TagFromName.BlockTransmission,"BlockTransmission");
		nameByTag.put(TagFromName.BlockNumberOfPoints,"BlockNumberOfPoints");
		nameByTag.put(TagFromName.BlockData,"BlockData");
		nameByTag.put(TagFromName.ApplicatorSequence,"ApplicatorSequence");
		nameByTag.put(TagFromName.ApplicatorID,"ApplicatorID");
		nameByTag.put(TagFromName.ApplicatorType,"ApplicatorType");
		nameByTag.put(TagFromName.ApplicatorDescription,"ApplicatorDescription");
		nameByTag.put(TagFromName.CumulativeDoseReferenceCoefficient,"CumulativeDoseReferenceCoefficient");
		nameByTag.put(TagFromName.FinalCumulativeMetersetWeight,"FinalCumulativeMetersetWeight");
		nameByTag.put(TagFromName.NumberOfControlPoints,"NumberOfControlPoints");
		nameByTag.put(TagFromName.ControlPointSequence,"ControlPointSequence");
		nameByTag.put(TagFromName.ControlPointIndex,"ControlPointIndex");
		nameByTag.put(TagFromName.NominalBeamEnergy,"NominalBeamEnergy");
		nameByTag.put(TagFromName.DoseRateSet,"DoseRateSet");
		nameByTag.put(TagFromName.WedgePositionSequence,"WedgePositionSequence");
		nameByTag.put(TagFromName.WedgePosition,"WedgePosition");
		nameByTag.put(TagFromName.BeamLimitingDevicePositionSequence,"BeamLimitingDevicePositionSequence");
		nameByTag.put(TagFromName.LeafJawPositions,"LeafJawPositions");
		nameByTag.put(TagFromName.GantryAngle,"GantryAngle");
		nameByTag.put(TagFromName.GantryRotationDirection,"GantryRotationDirection");
		nameByTag.put(TagFromName.BeamLimitingDeviceAngle,"BeamLimitingDeviceAngle");
		nameByTag.put(TagFromName.BeamLimitingDeviceRotationDirection,"BeamLimitingDeviceRotationDirection");
		nameByTag.put(TagFromName.PatientSupportAngle,"PatientSupportAngle");
		nameByTag.put(TagFromName.PatientSupportRotationDirection,"PatientSupportRotationDirection");
		nameByTag.put(TagFromName.TableTopEccentricAxisDistance,"TableTopEccentricAxisDistance");
		nameByTag.put(TagFromName.TableTopEccentricAngle,"TableTopEccentricAngle");
		nameByTag.put(TagFromName.TableTopEccentricRotationDirection,"TableTopEccentricRotationDirection");
		nameByTag.put(TagFromName.TableTopVerticalPosition,"TableTopVerticalPosition");
		nameByTag.put(TagFromName.TableTopLongitudinalPosition,"TableTopLongitudinalPosition");
		nameByTag.put(TagFromName.TableTopLateralPosition,"TableTopLateralPosition");
		nameByTag.put(TagFromName.IsocenterPosition,"IsocenterPosition");
		nameByTag.put(TagFromName.SurfaceEntryPoint,"SurfaceEntryPoint");
		nameByTag.put(TagFromName.SourceToSurfaceDistance,"SourceToSurfaceDistance");
		nameByTag.put(TagFromName.AverageBeamDosePointSourceToExternalContourDistance,"AverageBeamDosePointSourceToExternalContourDistance");
		nameByTag.put(TagFromName.SourceToExternalContourDistance,"SourceToExternalContourDistance");
		nameByTag.put(TagFromName.ExternalContourEntryPoint,"ExternalContourEntryPoint");
		nameByTag.put(TagFromName.CumulativeMetersetWeight,"CumulativeMetersetWeight");
		nameByTag.put(TagFromName.TableTopPitchAngle,"TableTopPitchAngle");
		nameByTag.put(TagFromName.TableTopPitchRotationDirection,"TableTopPitchRotationDirection");
		nameByTag.put(TagFromName.TableTopRollAngle,"TableTopRollAngle");
		nameByTag.put(TagFromName.TableTopRollRotationDirection,"TableTopRollRotationDirection");
		nameByTag.put(TagFromName.HeadFixationAngle,"HeadFixationAngle");
		nameByTag.put(TagFromName.GantryPitchAngle,"GantryPitchAngle");
		nameByTag.put(TagFromName.GantryPitchRotationDirection,"GantryPitchRotationDirection");
		nameByTag.put(TagFromName.GantryPitchAngleTolerance,"GantryPitchAngleTolerance");
		nameByTag.put(TagFromName.PatientSetupSequence,"PatientSetupSequence");
		nameByTag.put(TagFromName.PatientSetupNumber,"PatientSetupNumber");
		nameByTag.put(TagFromName.PatientSetupLabel,"PatientSetupLabel");
		nameByTag.put(TagFromName.PatientAdditionalPosition,"PatientAdditionalPosition");
		nameByTag.put(TagFromName.FixationDeviceSequence,"FixationDeviceSequence");
		nameByTag.put(TagFromName.FixationDeviceType,"FixationDeviceType");
		nameByTag.put(TagFromName.FixationDeviceLabel,"FixationDeviceLabel");
		nameByTag.put(TagFromName.FixationDeviceDescription,"FixationDeviceDescription");
		nameByTag.put(TagFromName.FixationDevicePosition,"FixationDevicePosition");
		nameByTag.put(TagFromName.FixationDevicePitchAngle,"FixationDevicePitchAngle");
		nameByTag.put(TagFromName.FixationDeviceRollAngle,"FixationDeviceRollAngle");
		nameByTag.put(TagFromName.ShieldingDeviceSequence,"ShieldingDeviceSequence");
		nameByTag.put(TagFromName.ShieldingDeviceType,"ShieldingDeviceType");
		nameByTag.put(TagFromName.ShieldingDeviceLabel,"ShieldingDeviceLabel");
		nameByTag.put(TagFromName.ShieldingDeviceDescription,"ShieldingDeviceDescription");
		nameByTag.put(TagFromName.ShieldingDevicePosition,"ShieldingDevicePosition");
		nameByTag.put(TagFromName.SetupTechnique,"SetupTechnique");
		nameByTag.put(TagFromName.SetupTechniqueDescription,"SetupTechniqueDescription");
		nameByTag.put(TagFromName.SetupDeviceSequence,"SetupDeviceSequence");
		nameByTag.put(TagFromName.SetupDeviceType,"SetupDeviceType");
		nameByTag.put(TagFromName.SetupDeviceLabel,"SetupDeviceLabel");
		nameByTag.put(TagFromName.SetupDeviceDescription,"SetupDeviceDescription");
		nameByTag.put(TagFromName.SetupDeviceParameter,"SetupDeviceParameter");
		nameByTag.put(TagFromName.SetupReferenceDescription,"SetupReferenceDescription");
		nameByTag.put(TagFromName.TableTopVerticalSetupDisplacement,"TableTopVerticalSetupDisplacement");
		nameByTag.put(TagFromName.TableTopLongitudinalSetupDisplacement,"TableTopLongitudinalSetupDisplacement");
		nameByTag.put(TagFromName.TableTopLateralSetupDisplacement,"TableTopLateralSetupDisplacement");
		nameByTag.put(TagFromName.BrachyTreatmentTechnique,"BrachyTreatmentTechnique");
		nameByTag.put(TagFromName.BrachyTreatmentType,"BrachyTreatmentType");
		nameByTag.put(TagFromName.TreatmentMachineSequence,"TreatmentMachineSequence");
		nameByTag.put(TagFromName.SourceSequence,"SourceSequence");
		nameByTag.put(TagFromName.SourceNumber,"SourceNumber");
		nameByTag.put(TagFromName.SourceType,"SourceType");
		nameByTag.put(TagFromName.SourceManufacturer,"SourceManufacturer");
		nameByTag.put(TagFromName.ActiveSourceDiameter,"ActiveSourceDiameter");
		nameByTag.put(TagFromName.ActiveSourceLength,"ActiveSourceLength");
		nameByTag.put(TagFromName.SourceModelID,"SourceModelID");
		nameByTag.put(TagFromName.SourceDescription,"SourceDescription");
		nameByTag.put(TagFromName.SourceEncapsulationNominalThickness,"SourceEncapsulationNominalThickness");
		nameByTag.put(TagFromName.SourceEncapsulationNominalTransmission,"SourceEncapsulationNominalTransmission");
		nameByTag.put(TagFromName.SourceIsotopeName,"SourceIsotopeName");
		nameByTag.put(TagFromName.SourceIsotopeHalfLife,"SourceIsotopeHalfLife");
		nameByTag.put(TagFromName.SourceStrengthUnits,"SourceStrengthUnits");
		nameByTag.put(TagFromName.ReferenceAirKermaRate,"ReferenceAirKermaRate");
		nameByTag.put(TagFromName.SourceStrength,"SourceStrength");
		nameByTag.put(TagFromName.SourceStrengthReferenceDate,"SourceStrengthReferenceDate");
		nameByTag.put(TagFromName.SourceStrengthReferenceTime,"SourceStrengthReferenceTime");
		nameByTag.put(TagFromName.ApplicationSetupSequence,"ApplicationSetupSequence");
		nameByTag.put(TagFromName.ApplicationSetupType,"ApplicationSetupType");
		nameByTag.put(TagFromName.ApplicationSetupNumber,"ApplicationSetupNumber");
		nameByTag.put(TagFromName.ApplicationSetupName,"ApplicationSetupName");
		nameByTag.put(TagFromName.ApplicationSetupManufacturer,"ApplicationSetupManufacturer");
		nameByTag.put(TagFromName.TemplateNumber,"TemplateNumber");
		nameByTag.put(TagFromName.TemplateType,"TemplateType");
		nameByTag.put(TagFromName.TemplateName,"TemplateName");
		nameByTag.put(TagFromName.TotalReferenceAirKerma,"TotalReferenceAirKerma");
		nameByTag.put(TagFromName.BrachyAccessoryDeviceSequence,"BrachyAccessoryDeviceSequence");
		nameByTag.put(TagFromName.BrachyAccessoryDeviceNumber,"BrachyAccessoryDeviceNumber");
		nameByTag.put(TagFromName.BrachyAccessoryDeviceID,"BrachyAccessoryDeviceID");
		nameByTag.put(TagFromName.BrachyAccessoryDeviceType,"BrachyAccessoryDeviceType");
		nameByTag.put(TagFromName.BrachyAccessoryDeviceName,"BrachyAccessoryDeviceName");
		nameByTag.put(TagFromName.BrachyAccessoryDeviceNominalThickness,"BrachyAccessoryDeviceNominalThickness");
		nameByTag.put(TagFromName.BrachyAccessoryDeviceNominalTransmission,"BrachyAccessoryDeviceNominalTransmission");
		nameByTag.put(TagFromName.ChannelEffectiveLength,"ChannelEffectiveLength");
		nameByTag.put(TagFromName.ChannelInnerLength,"ChannelInnerLength");
		nameByTag.put(TagFromName.AfterloaderChannelID,"AfterloaderChannelID");
		nameByTag.put(TagFromName.SourceApplicatorTipLength,"SourceApplicatorTipLength");
		nameByTag.put(TagFromName.ChannelSequence,"ChannelSequence");
		nameByTag.put(TagFromName.ChannelNumber,"ChannelNumber");
		nameByTag.put(TagFromName.ChannelLength,"ChannelLength");
		nameByTag.put(TagFromName.ChannelTotalTime,"ChannelTotalTime");
		nameByTag.put(TagFromName.SourceMovementType,"SourceMovementType");
		nameByTag.put(TagFromName.NumberOfPulses,"NumberOfPulses");
		nameByTag.put(TagFromName.PulseRepetitionInterval,"PulseRepetitionInterval");
		nameByTag.put(TagFromName.SourceApplicatorNumber,"SourceApplicatorNumber");
		nameByTag.put(TagFromName.SourceApplicatorID,"SourceApplicatorID");
		nameByTag.put(TagFromName.SourceApplicatorType,"SourceApplicatorType");
		nameByTag.put(TagFromName.SourceApplicatorName,"SourceApplicatorName");
		nameByTag.put(TagFromName.SourceApplicatorLength,"SourceApplicatorLength");
		nameByTag.put(TagFromName.SourceApplicatorManufacturer,"SourceApplicatorManufacturer");
		nameByTag.put(TagFromName.SourceApplicatorWallNominalThickness,"SourceApplicatorWallNominalThickness");
		nameByTag.put(TagFromName.SourceApplicatorWallNominalTransmission,"SourceApplicatorWallNominalTransmission");
		nameByTag.put(TagFromName.SourceApplicatorStepSize,"SourceApplicatorStepSize");
		nameByTag.put(TagFromName.TransferTubeNumber,"TransferTubeNumber");
		nameByTag.put(TagFromName.TransferTubeLength,"TransferTubeLength");
		nameByTag.put(TagFromName.ChannelShieldSequence,"ChannelShieldSequence");
		nameByTag.put(TagFromName.ChannelShieldNumber,"ChannelShieldNumber");
		nameByTag.put(TagFromName.ChannelShieldID,"ChannelShieldID");
		nameByTag.put(TagFromName.ChannelShieldName,"ChannelShieldName");
		nameByTag.put(TagFromName.ChannelShieldNominalThickness,"ChannelShieldNominalThickness");
		nameByTag.put(TagFromName.ChannelShieldNominalTransmission,"ChannelShieldNominalTransmission");
		nameByTag.put(TagFromName.FinalCumulativeTimeWeight,"FinalCumulativeTimeWeight");
		nameByTag.put(TagFromName.BrachyControlPointSequence,"BrachyControlPointSequence");
		nameByTag.put(TagFromName.ControlPointRelativePosition,"ControlPointRelativePosition");
		nameByTag.put(TagFromName.ControlPoint3DPosition,"ControlPoint3DPosition");
		nameByTag.put(TagFromName.CumulativeTimeWeight,"CumulativeTimeWeight");
		nameByTag.put(TagFromName.CompensatorDivergence,"CompensatorDivergence");
		nameByTag.put(TagFromName.CompensatorMountingPosition,"CompensatorMountingPosition");
		nameByTag.put(TagFromName.SourceToCompensatorDistance,"SourceToCompensatorDistance");
		nameByTag.put(TagFromName.TotalCompensatorTrayWaterEquivalentThickness,"TotalCompensatorTrayWaterEquivalentThickness");
		nameByTag.put(TagFromName.IsocenterToCompensatorTrayDistance,"IsocenterToCompensatorTrayDistance");
		nameByTag.put(TagFromName.CompensatorColumnOffset,"CompensatorColumnOffset");
		nameByTag.put(TagFromName.IsocenterToCompensatorDistances,"IsocenterToCompensatorDistances");
		nameByTag.put(TagFromName.CompensatorRelativeStoppingPowerRatio,"CompensatorRelativeStoppingPowerRatio");
		nameByTag.put(TagFromName.CompensatorMillingToolDiameter,"CompensatorMillingToolDiameter");
		nameByTag.put(TagFromName.IonRangeCompensatorSequence,"IonRangeCompensatorSequence");
		nameByTag.put(TagFromName.CompensatorDescription,"CompensatorDescription");
		nameByTag.put(TagFromName.RadiationMassNumber,"RadiationMassNumber");
		nameByTag.put(TagFromName.RadiationAtomicNumber,"RadiationAtomicNumber");
		nameByTag.put(TagFromName.RadiationChargeState,"RadiationChargeState");
		nameByTag.put(TagFromName.ScanMode,"ScanMode");
		nameByTag.put(TagFromName.ModulatedScanModeType,"ModulatedScanModeType");
		nameByTag.put(TagFromName.VirtualSourceAxisDistances,"VirtualSourceAxisDistances");
		nameByTag.put(TagFromName.SnoutSequence,"SnoutSequence");
		nameByTag.put(TagFromName.SnoutPosition,"SnoutPosition");
		nameByTag.put(TagFromName.SnoutID,"SnoutID");
		nameByTag.put(TagFromName.NumberOfRangeShifters,"NumberOfRangeShifters");
		nameByTag.put(TagFromName.RangeShifterSequence,"RangeShifterSequence");
		nameByTag.put(TagFromName.RangeShifterNumber,"RangeShifterNumber");
		nameByTag.put(TagFromName.RangeShifterID,"RangeShifterID");
		nameByTag.put(TagFromName.RangeShifterType,"RangeShifterType");
		nameByTag.put(TagFromName.RangeShifterDescription,"RangeShifterDescription");
		nameByTag.put(TagFromName.NumberOfLateralSpreadingDevices,"NumberOfLateralSpreadingDevices");
		nameByTag.put(TagFromName.LateralSpreadingDeviceSequence,"LateralSpreadingDeviceSequence");
		nameByTag.put(TagFromName.LateralSpreadingDeviceNumber,"LateralSpreadingDeviceNumber");
		nameByTag.put(TagFromName.LateralSpreadingDeviceID,"LateralSpreadingDeviceID");
		nameByTag.put(TagFromName.LateralSpreadingDeviceType,"LateralSpreadingDeviceType");
		nameByTag.put(TagFromName.LateralSpreadingDeviceDescription,"LateralSpreadingDeviceDescription");
		nameByTag.put(TagFromName.LateralSpreadingDeviceWaterEquivalentThickness,"LateralSpreadingDeviceWaterEquivalentThickness");
		nameByTag.put(TagFromName.NumberOfRangeModulators,"NumberOfRangeModulators");
		nameByTag.put(TagFromName.RangeModulatorSequence,"RangeModulatorSequence");
		nameByTag.put(TagFromName.RangeModulatorNumber,"RangeModulatorNumber");
		nameByTag.put(TagFromName.RangeModulatorID,"RangeModulatorID");
		nameByTag.put(TagFromName.RangeModulatorType,"RangeModulatorType");
		nameByTag.put(TagFromName.RangeModulatorDescription,"RangeModulatorDescription");
		nameByTag.put(TagFromName.BeamCurrentModulationID,"BeamCurrentModulationID");
		nameByTag.put(TagFromName.PatientSupportType,"PatientSupportType");
		nameByTag.put(TagFromName.PatientSupportID,"PatientSupportID");
		nameByTag.put(TagFromName.PatientSupportAccessoryCode,"PatientSupportAccessoryCode");
		nameByTag.put(TagFromName.TrayAccessoryCode,"TrayAccessoryCode");
		nameByTag.put(TagFromName.FixationLightAzimuthalAngle,"FixationLightAzimuthalAngle");
		nameByTag.put(TagFromName.FixationLightPolarAngle,"FixationLightPolarAngle");
		nameByTag.put(TagFromName.MetersetRate,"MetersetRate");
		nameByTag.put(TagFromName.RangeShifterSettingsSequence,"RangeShifterSettingsSequence");
		nameByTag.put(TagFromName.RangeShifterSetting,"RangeShifterSetting");
		nameByTag.put(TagFromName.IsocenterToRangeShifterDistance,"IsocenterToRangeShifterDistance");
		nameByTag.put(TagFromName.RangeShifterWaterEquivalentThickness,"RangeShifterWaterEquivalentThickness");
		nameByTag.put(TagFromName.LateralSpreadingDeviceSettingsSequence,"LateralSpreadingDeviceSettingsSequence");
		nameByTag.put(TagFromName.LateralSpreadingDeviceSetting,"LateralSpreadingDeviceSetting");
		nameByTag.put(TagFromName.IsocenterToLateralSpreadingDeviceDistance,"IsocenterToLateralSpreadingDeviceDistance");
		nameByTag.put(TagFromName.RangeModulatorSettingsSequence,"RangeModulatorSettingsSequence");
		nameByTag.put(TagFromName.RangeModulatorGatingStartValue,"RangeModulatorGatingStartValue");
		nameByTag.put(TagFromName.RangeModulatorGatingStopValue,"RangeModulatorGatingStopValue");
		nameByTag.put(TagFromName.RangeModulatorGatingStartWaterEquivalentThickness,"RangeModulatorGatingStartWaterEquivalentThickness");
		nameByTag.put(TagFromName.RangeModulatorGatingStopWaterEquivalentThickness,"RangeModulatorGatingStopWaterEquivalentThickness");
		nameByTag.put(TagFromName.IsocenterToRangeModulatorDistance,"IsocenterToRangeModulatorDistance");
		nameByTag.put(TagFromName.ScanSpotTimeOffset,"ScanSpotTimeOffset");
		nameByTag.put(TagFromName.ScanSpotTuneID,"ScanSpotTuneID");
		nameByTag.put(TagFromName.ScanSpotPrescribedIndices,"ScanSpotPrescribedIndices");
		nameByTag.put(TagFromName.NumberOfScanSpotPositions,"NumberOfScanSpotPositions");
		nameByTag.put(TagFromName.ScanSpotReordered,"ScanSpotReordered");
		nameByTag.put(TagFromName.ScanSpotPositionMap,"ScanSpotPositionMap");
		nameByTag.put(TagFromName.ScanSpotReorderingAllowed,"ScanSpotReorderingAllowed");
		nameByTag.put(TagFromName.ScanSpotMetersetWeights,"ScanSpotMetersetWeights");
		nameByTag.put(TagFromName.ScanningSpotSize,"ScanningSpotSize");
		nameByTag.put(TagFromName.NumberOfPaintings,"NumberOfPaintings");
		nameByTag.put(TagFromName.IonToleranceTableSequence,"IonToleranceTableSequence");
		nameByTag.put(TagFromName.IonBeamSequence,"IonBeamSequence");
		nameByTag.put(TagFromName.IonBeamLimitingDeviceSequence,"IonBeamLimitingDeviceSequence");
		nameByTag.put(TagFromName.IonBlockSequence,"IonBlockSequence");
		nameByTag.put(TagFromName.IonControlPointSequence,"IonControlPointSequence");
		nameByTag.put(TagFromName.IonWedgeSequence,"IonWedgeSequence");
		nameByTag.put(TagFromName.IonWedgePositionSequence,"IonWedgePositionSequence");
		nameByTag.put(TagFromName.ReferencedSetupImageSequence,"ReferencedSetupImageSequence");
		nameByTag.put(TagFromName.SetupImageComment,"SetupImageComment");
		nameByTag.put(TagFromName.MotionSynchronizationSequence,"MotionSynchronizationSequence");
		nameByTag.put(TagFromName.ControlPointOrientation,"ControlPointOrientation");
		nameByTag.put(TagFromName.GeneralAccessorySequence,"GeneralAccessorySequence");
		nameByTag.put(TagFromName.GeneralAccessoryID,"GeneralAccessoryID");
		nameByTag.put(TagFromName.GeneralAccessoryDescription,"GeneralAccessoryDescription");
		nameByTag.put(TagFromName.GeneralAccessoryType,"GeneralAccessoryType");
		nameByTag.put(TagFromName.GeneralAccessoryNumber,"GeneralAccessoryNumber");
		nameByTag.put(TagFromName.SourceToGeneralAccessoryDistance,"SourceToGeneralAccessoryDistance");
		nameByTag.put(TagFromName.ApplicatorGeometrySequence,"ApplicatorGeometrySequence");
		nameByTag.put(TagFromName.ApplicatorApertureShape,"ApplicatorApertureShape");
		nameByTag.put(TagFromName.ApplicatorOpening,"ApplicatorOpening");
		nameByTag.put(TagFromName.ApplicatorOpeningX,"ApplicatorOpeningX");
		nameByTag.put(TagFromName.ApplicatorOpeningY,"ApplicatorOpeningY");
		nameByTag.put(TagFromName.SourceToApplicatorMountingPositionDistance,"SourceToApplicatorMountingPositionDistance");
		nameByTag.put(TagFromName.NumberOfBlockSlabItems,"NumberOfBlockSlabItems");
		nameByTag.put(TagFromName.BlockSlabSequence,"BlockSlabSequence");
		nameByTag.put(TagFromName.BlockSlabThickness,"BlockSlabThickness");
		nameByTag.put(TagFromName.BlockSlabNumber,"BlockSlabNumber");
		nameByTag.put(TagFromName.DeviceMotionControlSequence,"DeviceMotionControlSequence");
		nameByTag.put(TagFromName.DeviceMotionExecutionMode,"DeviceMotionExecutionMode");
		nameByTag.put(TagFromName.DeviceMotionObservationMode,"DeviceMotionObservationMode");
		nameByTag.put(TagFromName.DeviceMotionParameterCodeSequence,"DeviceMotionParameterCodeSequence");
		nameByTag.put(TagFromName.DistalDepthFraction,"DistalDepthFraction");
		nameByTag.put(TagFromName.DistalDepth,"DistalDepth");
		nameByTag.put(TagFromName.NominalRangeModulatioFractions,"NominalRangeModulatioFractions");
		nameByTag.put(TagFromName.NominalRangeModulatedRegionDepths,"NominalRangeModulatedRegionDepths");
		nameByTag.put(TagFromName.DepthDoseParametersSequence,"DepthDoseParametersSequence");
		nameByTag.put(TagFromName.DeliveredDepthDoseParametersSequence,"DeliveredDepthDoseParametersSequence");
		nameByTag.put(TagFromName.DeliveredDistalDepthFraction,"DeliveredDistalDepthFraction");
		nameByTag.put(TagFromName.DeliveredDistalDepth,"DeliveredDistalDepth");
		nameByTag.put(TagFromName.DeliveredNominalRangeModulationFractions,"DeliveredNominalRangeModulationFractions");
		nameByTag.put(TagFromName.DeliveredNominalRangeModulatedRegionDepths,"DeliveredNominalRangeModulatedRegionDepths");
		nameByTag.put(TagFromName.DeliveredReferenceDoseDefinition,"DeliveredReferenceDoseDefinition");
		nameByTag.put(TagFromName.ReferenceDoseDefinition,"ReferenceDoseDefinition");
		nameByTag.put(TagFromName.ReferencedRTPlanSequence,"ReferencedRTPlanSequence");
		nameByTag.put(TagFromName.ReferencedBeamSequence,"ReferencedBeamSequence");
		nameByTag.put(TagFromName.ReferencedBeamNumber,"ReferencedBeamNumber");
		nameByTag.put(TagFromName.ReferencedReferenceImageNumber,"ReferencedReferenceImageNumber");
		nameByTag.put(TagFromName.StartCumulativeMetersetWeight,"StartCumulativeMetersetWeight");
		nameByTag.put(TagFromName.EndCumulativeMetersetWeight,"EndCumulativeMetersetWeight");
		nameByTag.put(TagFromName.ReferencedBrachyApplicationSetupSequence,"ReferencedBrachyApplicationSetupSequence");
		nameByTag.put(TagFromName.ReferencedBrachyApplicationSetupNumber,"ReferencedBrachyApplicationSetupNumber");
		nameByTag.put(TagFromName.ReferencedSourceNumber,"ReferencedSourceNumber");
		nameByTag.put(TagFromName.ReferencedFractionGroupSequence,"ReferencedFractionGroupSequence");
		nameByTag.put(TagFromName.ReferencedFractionGroupNumber,"ReferencedFractionGroupNumber");
		nameByTag.put(TagFromName.ReferencedVerificationImageSequence,"ReferencedVerificationImageSequence");
		nameByTag.put(TagFromName.ReferencedReferenceImageSequence,"ReferencedReferenceImageSequence");
		nameByTag.put(TagFromName.ReferencedDoseReferenceSequence,"ReferencedDoseReferenceSequence");
		nameByTag.put(TagFromName.ReferencedDoseReferenceNumber,"ReferencedDoseReferenceNumber");
		nameByTag.put(TagFromName.BrachyReferencedDoseReferenceSequence,"BrachyReferencedDoseReferenceSequence");
		nameByTag.put(TagFromName.ReferencedStructureSetSequence,"ReferencedStructureSetSequence");
		nameByTag.put(TagFromName.ReferencedPatientSetupNumber,"ReferencedPatientSetupNumber");
		nameByTag.put(TagFromName.ReferencedDoseSequence,"ReferencedDoseSequence");
		nameByTag.put(TagFromName.ReferencedToleranceTableNumber,"ReferencedToleranceTableNumber");
		nameByTag.put(TagFromName.ReferencedBolusSequence,"ReferencedBolusSequence");
		nameByTag.put(TagFromName.ReferencedWedgeNumber,"ReferencedWedgeNumber");
		nameByTag.put(TagFromName.ReferencedCompensatorNumber,"ReferencedCompensatorNumber");
		nameByTag.put(TagFromName.ReferencedBlockNumber,"ReferencedBlockNumber");
		nameByTag.put(TagFromName.ReferencedControlPointIndex,"ReferencedControlPointIndex");
		nameByTag.put(TagFromName.ReferencedControlPointSequence,"ReferencedControlPointSequence");
		nameByTag.put(TagFromName.ReferencedStartControlPointIndex,"ReferencedStartControlPointIndex");
		nameByTag.put(TagFromName.ReferencedStopControlPointIndex,"ReferencedStopControlPointIndex");
		nameByTag.put(TagFromName.ReferencedRangeShifterNumber,"ReferencedRangeShifterNumber");
		nameByTag.put(TagFromName.ReferencedLateralSpreadingDeviceNumber,"ReferencedLateralSpreadingDeviceNumber");
		nameByTag.put(TagFromName.ReferencedRangeModulatorNumber,"ReferencedRangeModulatorNumber");
		nameByTag.put(TagFromName.OmittedBeamTaskSequence,"OmittedBeamTaskSequence");
		nameByTag.put(TagFromName.ReasonForOmission,"ReasonForOmission");
		nameByTag.put(TagFromName.ReasonForOmissionDescription,"ReasonForOmissionDescription");
		nameByTag.put(TagFromName.ApprovalStatus,"ApprovalStatus");
		nameByTag.put(TagFromName.ReviewDate,"ReviewDate");
		nameByTag.put(TagFromName.ReviewTime,"ReviewTime");
		nameByTag.put(TagFromName.ReviewerName,"ReviewerName");
		nameByTag.put(TagFromName.Arbitrary,"Arbitrary");
		nameByTag.put(TagFromName.TextComments,"TextComments");
		nameByTag.put(TagFromName.ResultsID,"ResultsID");
		nameByTag.put(TagFromName.ResultsIDIssuer,"ResultsIDIssuer");
		nameByTag.put(TagFromName.ReferencedInterpretationSequence,"ReferencedInterpretationSequence");
		nameByTag.put(TagFromName.ReportProductionStatusTrial,"ReportProductionStatusTrial");
		nameByTag.put(TagFromName.InterpretationRecordedDate,"InterpretationRecordedDate");
		nameByTag.put(TagFromName.InterpretationRecordedTime,"InterpretationRecordedTime");
		nameByTag.put(TagFromName.InterpretationRecorder,"InterpretationRecorder");
		nameByTag.put(TagFromName.ReferenceToRecordedSound,"ReferenceToRecordedSound");
		nameByTag.put(TagFromName.InterpretationTranscriptionDate,"InterpretationTranscriptionDate");
		nameByTag.put(TagFromName.InterpretationTranscriptionTime,"InterpretationTranscriptionTime");
		nameByTag.put(TagFromName.InterpretationTranscriber,"InterpretationTranscriber");
		nameByTag.put(TagFromName.InterpretationText,"InterpretationText");
		nameByTag.put(TagFromName.InterpretationAuthor,"InterpretationAuthor");
		nameByTag.put(TagFromName.InterpretationApproverSequence,"InterpretationApproverSequence");
		nameByTag.put(TagFromName.InterpretationApprovalDate,"InterpretationApprovalDate");
		nameByTag.put(TagFromName.InterpretationApprovalTime,"InterpretationApprovalTime");
		nameByTag.put(TagFromName.PhysicianApprovingInterpretation,"PhysicianApprovingInterpretation");
		nameByTag.put(TagFromName.InterpretationDiagnosisDescription,"InterpretationDiagnosisDescription");
		nameByTag.put(TagFromName.InterpretationDiagnosisCodeSequence,"InterpretationDiagnosisCodeSequence");
		nameByTag.put(TagFromName.ResultsDistributionListSequence,"ResultsDistributionListSequence");
		nameByTag.put(TagFromName.DistributionName,"DistributionName");
		nameByTag.put(TagFromName.DistributionAddress,"DistributionAddress");
		nameByTag.put(TagFromName.InterpretationID,"InterpretationID");
		nameByTag.put(TagFromName.InterpretationIDIssuer,"InterpretationIDIssuer");
		nameByTag.put(TagFromName.InterpretationTypeID,"InterpretationTypeID");
		nameByTag.put(TagFromName.InterpretationStatusID,"InterpretationStatusID");
		nameByTag.put(TagFromName.Impressions,"Impressions");
		nameByTag.put(TagFromName.ResultsComments,"ResultsComments");
		nameByTag.put(TagFromName.LowEnergyDetectors,"LowEnergyDetectors");
		nameByTag.put(TagFromName.HighEnergyDetectors,"HighEnergyDetectors");
		nameByTag.put(TagFromName.DetectorGeometrySequence,"DetectorGeometrySequence");
		nameByTag.put(TagFromName.ThreatROIVoxelSequence,"ThreatROIVoxelSequence");
		nameByTag.put(TagFromName.ThreatROIBase,"ThreatROIBase");
		nameByTag.put(TagFromName.ThreatROIExtents,"ThreatROIExtents");
		nameByTag.put(TagFromName.ThreatROIBitmap,"ThreatROIBitmap");
		nameByTag.put(TagFromName.RouteSegmentID,"RouteSegmentID");
		nameByTag.put(TagFromName.GantryType,"GantryType");
		nameByTag.put(TagFromName.OOIOwnerType,"OOIOwnerType");
		nameByTag.put(TagFromName.RouteSegmentSequence,"RouteSegmentSequence");
		nameByTag.put(TagFromName.PotentialThreatObjectID,"PotentialThreatObjectID");
		nameByTag.put(TagFromName.ThreatSequence,"ThreatSequence");
		nameByTag.put(TagFromName.ThreatCategory,"ThreatCategory");
		nameByTag.put(TagFromName.ThreatCategoryDescription,"ThreatCategoryDescription");
		nameByTag.put(TagFromName.ATDAbilityAssessment,"ATDAbilityAssessment");
		nameByTag.put(TagFromName.ATDAssessmentFlag,"ATDAssessmentFlag");
		nameByTag.put(TagFromName.ATDAssessmentProbability,"ATDAssessmentProbability");
		nameByTag.put(TagFromName.Mass,"Mass");
		nameByTag.put(TagFromName.Density,"Density");
		nameByTag.put(TagFromName.ZEffective,"ZEffective");
		nameByTag.put(TagFromName.BoardingPassID,"BoardingPassID");
		nameByTag.put(TagFromName.CenterOfMass,"CenterOfMass");
		nameByTag.put(TagFromName.CenterOfPTO,"CenterOfPTO");
		nameByTag.put(TagFromName.BoundingPolygon,"BoundingPolygon");
		nameByTag.put(TagFromName.RouteSegmentStartLocationID,"RouteSegmentStartLocationID");
		nameByTag.put(TagFromName.RouteSegmentEndLocationID,"RouteSegmentEndLocationID");
		nameByTag.put(TagFromName.RouteSegmentLocationIDType,"RouteSegmentLocationIDType");
		nameByTag.put(TagFromName.AbortReason,"AbortReason");
		nameByTag.put(TagFromName.VolumeOfPTO,"VolumeOfPTO");
		nameByTag.put(TagFromName.AbortFlag,"AbortFlag");
		nameByTag.put(TagFromName.RouteSegmentStartTime,"RouteSegmentStartTime");
		nameByTag.put(TagFromName.RouteSegmentEndTime,"RouteSegmentEndTime");
		nameByTag.put(TagFromName.TDRType,"TDRType");
		nameByTag.put(TagFromName.InternationalRouteSegment,"InternationalRouteSegment");
		nameByTag.put(TagFromName.ThreatDetectionAlgorithmAndVersion,"ThreatDetectionAlgorithmAndVersion");
		nameByTag.put(TagFromName.AssignedLocation,"AssignedLocation");
		nameByTag.put(TagFromName.AlarmDecisionTime,"AlarmDecisionTime");
		nameByTag.put(TagFromName.AlarmDecision,"AlarmDecision");
		nameByTag.put(TagFromName.NumberOfTotalObjects,"NumberOfTotalObjects");
		nameByTag.put(TagFromName.NumberOfAlarmObjects,"NumberOfAlarmObjects");
		nameByTag.put(TagFromName.PTORepresentationSequence,"PTORepresentationSequence");
		nameByTag.put(TagFromName.ATDAssessmentSequence,"ATDAssessmentSequence");
		nameByTag.put(TagFromName.TIPType,"TIPType");
		nameByTag.put(TagFromName.DICOSVersion,"DICOSVersion");
		nameByTag.put(TagFromName.OOIOwnerCreationTime,"OOIOwnerCreationTime");
		nameByTag.put(TagFromName.OOIType,"OOIType");
		nameByTag.put(TagFromName.OOISize,"OOISize");
		nameByTag.put(TagFromName.AcquisitionStatus,"AcquisitionStatus");
		nameByTag.put(TagFromName.BasisMaterialsCodeSequence,"BasisMaterialsCodeSequence");
		nameByTag.put(TagFromName.PhantomType,"PhantomType");
		nameByTag.put(TagFromName.OOIOwnerSequence,"OOIOwnerSequence");
		nameByTag.put(TagFromName.ScanType,"ScanType");
		nameByTag.put(TagFromName.ItineraryID,"ItineraryID");
		nameByTag.put(TagFromName.ItineraryIDType,"ItineraryIDType");
		nameByTag.put(TagFromName.ItineraryIDAssigningAuthority,"ItineraryIDAssigningAuthority");
		nameByTag.put(TagFromName.RouteID,"RouteID");
		nameByTag.put(TagFromName.RouteIDAssigningAuthority,"RouteIDAssigningAuthority");
		nameByTag.put(TagFromName.InboundArrivalType,"InboundArrivalType");
		nameByTag.put(TagFromName.CarrierID,"CarrierID");
		nameByTag.put(TagFromName.CarrierIDAssigningAuthority,"CarrierIDAssigningAuthority");
		nameByTag.put(TagFromName.SourceOrientation,"SourceOrientation");
		nameByTag.put(TagFromName.SourcePosition,"SourcePosition");
		nameByTag.put(TagFromName.BeltHeight,"BeltHeight");
		nameByTag.put(TagFromName.AlgorithmRoutingCodeSequence,"AlgorithmRoutingCodeSequence");
		nameByTag.put(TagFromName.TransportClassification,"TransportClassification");
		nameByTag.put(TagFromName.OOITypeDescriptor,"OOITypeDescriptor");
		nameByTag.put(TagFromName.TotalProcessingTime,"TotalProcessingTime");
		nameByTag.put(TagFromName.DetectorCalibrationData,"DetectorCalibrationData");
		nameByTag.put(TagFromName.AdditionalScreeningPerformed,"AdditionalScreeningPerformed");
		nameByTag.put(TagFromName.AdditionalInspectionSelectionCriteria,"AdditionalInspectionSelectionCriteria");
		nameByTag.put(TagFromName.AdditionalInspectionMethodSequence,"AdditionalInspectionMethodSequence");
		nameByTag.put(TagFromName.AITDeviceType,"AITDeviceType");
		nameByTag.put(TagFromName.QRMeasurementsSequence,"QRMeasurementsSequence");
		nameByTag.put(TagFromName.TargetMaterialSequence,"TargetMaterialSequence");
		nameByTag.put(TagFromName.SNRThreshold,"SNRThreshold");
		nameByTag.put(TagFromName.ImageScaleRepresentation,"ImageScaleRepresentation");
		nameByTag.put(TagFromName.ReferencedPTOSequence,"ReferencedPTOSequence");
		nameByTag.put(TagFromName.ReferencedTDRInstanceSequence,"ReferencedTDRInstanceSequence");
		nameByTag.put(TagFromName.PTOLocationDescription,"PTOLocationDescription");
		nameByTag.put(TagFromName.AnomalyLocatorIndicatorSequence,"AnomalyLocatorIndicatorSequence");
		nameByTag.put(TagFromName.AnomalyLocatorIndicator,"AnomalyLocatorIndicator");
		nameByTag.put(TagFromName.PTORegionSequence,"PTORegionSequence");
		nameByTag.put(TagFromName.InspectionSelectionCriteria,"InspectionSelectionCriteria");
		nameByTag.put(TagFromName.SecondaryInspectionMethodSequence,"SecondaryInspectionMethodSequence");
		nameByTag.put(TagFromName.PRCSToRCSOrientation,"PRCSToRCSOrientation");
		nameByTag.put(TagFromName.MACParametersSequence,"MACParametersSequence");
		nameByTag.put(TagFromName.CurveDimensions,"CurveDimensions");
		nameByTag.put(TagFromName.NumberOfPoints,"NumberOfPoints");
		nameByTag.put(TagFromName.TypeOfData,"TypeOfData");
		nameByTag.put(TagFromName.CurveDescription,"CurveDescription");
		nameByTag.put(TagFromName.AxisUnits,"AxisUnits");
		nameByTag.put(TagFromName.AxisLabels,"AxisLabels");
		nameByTag.put(TagFromName.DataValueRepresentation,"DataValueRepresentation");
		nameByTag.put(TagFromName.MinimumCoordinateValue,"MinimumCoordinateValue");
		nameByTag.put(TagFromName.MaximumCoordinateValue,"MaximumCoordinateValue");
		nameByTag.put(TagFromName.CurveRange,"CurveRange");
		nameByTag.put(TagFromName.CurveDataDescriptor,"CurveDataDescriptor");
		nameByTag.put(TagFromName.CoordinateStartValue,"CoordinateStartValue");
		nameByTag.put(TagFromName.CoordinateStepValue,"CoordinateStepValue");
		nameByTag.put(TagFromName.CurveActivationLayer,"CurveActivationLayer");
		nameByTag.put(TagFromName.AudioType,"AudioType");
		nameByTag.put(TagFromName.AudioSampleFormat,"AudioSampleFormat");
		nameByTag.put(TagFromName.NumberOfChannels,"NumberOfChannels");
		nameByTag.put(TagFromName.NumberOfSamples,"NumberOfSamples");
		nameByTag.put(TagFromName.SampleRate,"SampleRate");
		nameByTag.put(TagFromName.TotalTime,"TotalTime");
		nameByTag.put(TagFromName.AudioSampleData,"AudioSampleData");
		nameByTag.put(TagFromName.AudioComments,"AudioComments");
		nameByTag.put(TagFromName.CurveLabel,"CurveLabel");
		nameByTag.put(TagFromName.CurveReferencedOverlaySequence,"CurveReferencedOverlaySequence");
		nameByTag.put(TagFromName.CurveReferencedOverlayGroup,"CurveReferencedOverlayGroup");
		nameByTag.put(TagFromName.CurveData,"CurveData");
		nameByTag.put(TagFromName.SharedFunctionalGroupsSequence,"SharedFunctionalGroupsSequence");
		nameByTag.put(TagFromName.PerFrameFunctionalGroupsSequence,"PerFrameFunctionalGroupsSequence");
		nameByTag.put(TagFromName.WaveformSequence,"WaveformSequence");
		nameByTag.put(TagFromName.ChannelMinimumValue,"ChannelMinimumValue");
		nameByTag.put(TagFromName.ChannelMaximumValue,"ChannelMaximumValue");
		nameByTag.put(TagFromName.WaveformBitsAllocated,"WaveformBitsAllocated");
		nameByTag.put(TagFromName.WaveformSampleInterpretation,"WaveformSampleInterpretation");
		nameByTag.put(TagFromName.WaveformPaddingValue,"WaveformPaddingValue");
		nameByTag.put(TagFromName.WaveformData,"WaveformData");
		nameByTag.put(TagFromName.FirstOrderPhaseCorrectionAngle,"FirstOrderPhaseCorrectionAngle");
		nameByTag.put(TagFromName.SpectroscopyData,"SpectroscopyData");
		nameByTag.put(TagFromName.OverlayRows,"OverlayRows");
		nameByTag.put(TagFromName.OverlayColumns,"OverlayColumns");
		nameByTag.put(TagFromName.OverlayPlanes,"OverlayPlanes");
		nameByTag.put(TagFromName.NumberOfFramesInOverlay,"NumberOfFramesInOverlay");
		nameByTag.put(TagFromName.OverlayDescription,"OverlayDescription");
		nameByTag.put(TagFromName.OverlayType,"OverlayType");
		nameByTag.put(TagFromName.OverlaySubtype,"OverlaySubtype");
		nameByTag.put(TagFromName.OverlayOrigin,"OverlayOrigin");
		nameByTag.put(TagFromName.ImageFrameOrigin,"ImageFrameOrigin");
		nameByTag.put(TagFromName.OverlayPlaneOrigin,"OverlayPlaneOrigin");
		nameByTag.put(TagFromName.OverlayCompressionCode,"OverlayCompressionCode");
		nameByTag.put(TagFromName.OverlayCompressionOriginator,"OverlayCompressionOriginator");
		nameByTag.put(TagFromName.OverlayCompressionLabel,"OverlayCompressionLabel");
		nameByTag.put(TagFromName.OverlayCompressionDescription,"OverlayCompressionDescription");
		nameByTag.put(TagFromName.OverlayCompressionStepPointers,"OverlayCompressionStepPointers");
		nameByTag.put(TagFromName.OverlayRepeatInterval,"OverlayRepeatInterval");
		nameByTag.put(TagFromName.OverlayBitsGrouped,"OverlayBitsGrouped");
		nameByTag.put(TagFromName.OverlayBitsAllocated,"OverlayBitsAllocated");
		nameByTag.put(TagFromName.OverlayBitPosition,"OverlayBitPosition");
		nameByTag.put(TagFromName.OverlayFormat,"OverlayFormat");
		nameByTag.put(TagFromName.OverlayLocation,"OverlayLocation");
		nameByTag.put(TagFromName.OverlayCodeLabel,"OverlayCodeLabel");
		nameByTag.put(TagFromName.OverlayNumberOfTables,"OverlayNumberOfTables");
		nameByTag.put(TagFromName.OverlayCodeTableLocation,"OverlayCodeTableLocation");
		nameByTag.put(TagFromName.OverlayBitsForCodeWord,"OverlayBitsForCodeWord");
		nameByTag.put(TagFromName.OverlayActivationLayer,"OverlayActivationLayer");
		nameByTag.put(TagFromName.OverlayDescriptorGray,"OverlayDescriptorGray");
		nameByTag.put(TagFromName.OverlayDescriptorRed,"OverlayDescriptorRed");
		nameByTag.put(TagFromName.OverlayDescriptorGreen,"OverlayDescriptorGreen");
		nameByTag.put(TagFromName.OverlayDescriptorBlue,"OverlayDescriptorBlue");
		nameByTag.put(TagFromName.OverlayGray,"OverlayGray");
		nameByTag.put(TagFromName.OverlayRed,"OverlayRed");
		nameByTag.put(TagFromName.OverlayGreen,"OverlayGreen");
		nameByTag.put(TagFromName.OverlayBlue,"OverlayBlue");
		nameByTag.put(TagFromName.ROIArea,"ROIArea");
		nameByTag.put(TagFromName.ROIMean,"ROIMean");
		nameByTag.put(TagFromName.ROIStandardDeviation,"ROIStandardDeviation");
		nameByTag.put(TagFromName.OverlayLabel,"OverlayLabel");
		nameByTag.put(TagFromName.OverlayData,"OverlayData");
		nameByTag.put(TagFromName.OverlayComments,"OverlayComments");
		nameByTag.put(TagFromName.FloatPixelData,"FloatPixelData");
		nameByTag.put(TagFromName.DoubleFloatPixelData,"DoubleFloatPixelData");
		nameByTag.put(TagFromName.PixelData,"PixelData");
		nameByTag.put(TagFromName.CoefficientsSDVN,"CoefficientsSDVN");
		nameByTag.put(TagFromName.CoefficientsSDHN,"CoefficientsSDHN");
		nameByTag.put(TagFromName.CoefficientsSDDN,"CoefficientsSDDN");
		nameByTag.put(TagFromName.VariablePixelData,"VariablePixelData");
		nameByTag.put(TagFromName.VariableNextDataGroup,"VariableNextDataGroup");
		nameByTag.put(TagFromName.VariableCoefficientsSDVN,"VariableCoefficientsSDVN");
		nameByTag.put(TagFromName.VariableCoefficientsSDHN,"VariableCoefficientsSDHN");
		nameByTag.put(TagFromName.VariableCoefficientsSDDN,"VariableCoefficientsSDDN");
		nameByTag.put(TagFromName.DigitalSignaturesSequence,"DigitalSignaturesSequence");
		nameByTag.put(TagFromName.DataSetTrailingPadding,"DataSetTrailingPadding");
	}
	protected void createFullNameByTag() {

		fullNameByTag = new HashMap(100);

		fullNameByTag.put(TagFromName.CommandGroupLength,"Command Group Length");
		fullNameByTag.put(TagFromName.CommandLengthToEnd,"Command Length to End");
		fullNameByTag.put(TagFromName.AffectedSOPClassUID,"Affected SOP Class UID");
		fullNameByTag.put(TagFromName.RequestedSOPClassUID,"Requested SOP Class UID");
		fullNameByTag.put(TagFromName.CommandRecognitionCode,"Command Recognition Code");
		fullNameByTag.put(TagFromName.CommandField,"Command Field");
		fullNameByTag.put(TagFromName.MessageID,"Message ID");
		fullNameByTag.put(TagFromName.MessageIDBeingRespondedTo,"Message ID Being Responded To");
		fullNameByTag.put(TagFromName.Initiator,"Initiator");
		fullNameByTag.put(TagFromName.Receiver,"Receiver");
		fullNameByTag.put(TagFromName.FindLocation,"Find Location");
		fullNameByTag.put(TagFromName.MoveDestination,"Move Destination");
		fullNameByTag.put(TagFromName.Priority,"Priority");
		fullNameByTag.put(TagFromName.CommandDataSetType,"Command Data Set Type");
		fullNameByTag.put(TagFromName.NumberOfMatches,"Number of Matches");
		fullNameByTag.put(TagFromName.ResponseSequenceNumber,"Response Sequence Number");
		fullNameByTag.put(TagFromName.Status,"Status");
		fullNameByTag.put(TagFromName.OffendingElement,"Offending Element");
		fullNameByTag.put(TagFromName.ErrorComment,"Error Comment");
		fullNameByTag.put(TagFromName.ErrorID,"Error ID");
		fullNameByTag.put(TagFromName.AffectedSOPInstanceUID,"Affected SOP Instance UID");
		fullNameByTag.put(TagFromName.RequestedSOPInstanceUID,"Requested SOP Instance UID");
		fullNameByTag.put(TagFromName.EventTypeID,"Event Type ID");
		fullNameByTag.put(TagFromName.AttributeIdentifierList,"Attribute Identifier List");
		fullNameByTag.put(TagFromName.ActionTypeID,"Action Type ID");
		fullNameByTag.put(TagFromName.NumberOfRemainingSuboperations,"Number of Remaining Sub-operations");
		fullNameByTag.put(TagFromName.NumberOfCompletedSuboperations,"Number of Completed Sub-operations");
		fullNameByTag.put(TagFromName.NumberOfFailedSuboperations,"Number of Failed Sub-operations");
		fullNameByTag.put(TagFromName.NumberOfWarningSuboperations,"Number of Warning Sub-operations");
		fullNameByTag.put(TagFromName.MoveOriginatorApplicationEntityTitle,"Move Originator Application Entity Title");
		fullNameByTag.put(TagFromName.MoveOriginatorMessageID,"Move Originator Message ID");
		fullNameByTag.put(TagFromName.DialogReceiver,"Dialog Receiver");
		fullNameByTag.put(TagFromName.TerminalType,"Terminal Type");
		fullNameByTag.put(TagFromName.MessageSetID,"Message Set ID");
		fullNameByTag.put(TagFromName.EndMessageID,"End Message ID");
		fullNameByTag.put(TagFromName.DisplayFormat,"Display Format");
		fullNameByTag.put(TagFromName.PagePositionID,"Page Position ID");
		fullNameByTag.put(TagFromName.TextFormatID,"Text Format ID");
		fullNameByTag.put(TagFromName.NormalReverse,"Normal/Reverse");
		fullNameByTag.put(TagFromName.AddGrayScale,"Add Gray Scale");
		fullNameByTag.put(TagFromName.Borders,"Borders");
		fullNameByTag.put(TagFromName.Copies,"Copies");
		fullNameByTag.put(TagFromName.CommandMagnificationType,"Command Magnification Type");
		fullNameByTag.put(TagFromName.Erase,"Erase");
		fullNameByTag.put(TagFromName.Print,"Print");
		fullNameByTag.put(TagFromName.Overlays,"Overlays");
		fullNameByTag.put(TagFromName.FileMetaInformationGroupLength,"File Meta Information Group Length");
		fullNameByTag.put(TagFromName.FileMetaInformationVersion,"File Meta Information Version");
		fullNameByTag.put(TagFromName.MediaStorageSOPClassUID,"Media Storage SOP Class UID");
		fullNameByTag.put(TagFromName.MediaStorageSOPInstanceUID,"Media Storage SOP Instance UID");
		fullNameByTag.put(TagFromName.TransferSyntaxUID,"Transfer Syntax UID");
		fullNameByTag.put(TagFromName.ImplementationClassUID,"Implementation Class UID");
		fullNameByTag.put(TagFromName.ImplementationVersionName,"Implementation Version Name");
		fullNameByTag.put(TagFromName.SourceApplicationEntityTitle,"Source Application Entity Title");
		fullNameByTag.put(TagFromName.SendingApplicationEntityTitle,"Sending Application Entity Title");
		fullNameByTag.put(TagFromName.ReceivingApplicationEntityTitle,"Receiving Application Entity Title");
		fullNameByTag.put(TagFromName.PrivateInformationCreatorUID,"Private Information Creator UID");
		fullNameByTag.put(TagFromName.PrivateInformation,"Private Information");
		fullNameByTag.put(TagFromName.FileSetID,"File-set ID");
		fullNameByTag.put(TagFromName.FileSetDescriptorFileID,"File-set Descriptor File ID");
		fullNameByTag.put(TagFromName.SpecificCharacterSetOfFileSetDescriptorFile,"Specific Character Set of File-set Descriptor File");
		fullNameByTag.put(TagFromName.OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity,"Offset of the First Directory Record of the Root Directory Entity");
		fullNameByTag.put(TagFromName.OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity,"Offset of the Last Directory Record of the Root Directory Entity");
		fullNameByTag.put(TagFromName.FileSetConsistencyFlag,"File-set Consistency Flag");
		fullNameByTag.put(TagFromName.DirectoryRecordSequence,"Directory Record Sequence");
		fullNameByTag.put(TagFromName.OffsetOfTheNextDirectoryRecord,"Offset of the Next Directory Record");
		fullNameByTag.put(TagFromName.RecordInUseFlag,"Record In-use Flag");
		fullNameByTag.put(TagFromName.OffsetOfReferencedLowerLevelDirectoryEntity,"Offset of Referenced Lower-Level Directory Entity");
		fullNameByTag.put(TagFromName.DirectoryRecordType,"Directory Record Type");
		fullNameByTag.put(TagFromName.PrivateRecordUID,"Private Record UID");
		fullNameByTag.put(TagFromName.ReferencedFileID,"Referenced File ID");
		fullNameByTag.put(TagFromName.MRDRDirectoryRecordOffset,"MRDR Directory Record Offset");
		fullNameByTag.put(TagFromName.ReferencedSOPClassUIDInFile,"Referenced SOP Class UID in File");
		fullNameByTag.put(TagFromName.ReferencedSOPInstanceUIDInFile,"Referenced SOP Instance UID in File");
		fullNameByTag.put(TagFromName.ReferencedTransferSyntaxUIDInFile,"Referenced Transfer Syntax UID in File");
		fullNameByTag.put(TagFromName.ReferencedRelatedGeneralSOPClassUIDInFile,"Referenced Related General SOP Class UID in File");
		fullNameByTag.put(TagFromName.NumberOfReferences,"Number of References");
		fullNameByTag.put(TagFromName.LengthToEnd,"Length to End");
		fullNameByTag.put(TagFromName.SpecificCharacterSet,"Specific Character Set");
		fullNameByTag.put(TagFromName.LanguageCodeSequence,"Language Code Sequence");
		fullNameByTag.put(TagFromName.ImageType,"Image Type");
		fullNameByTag.put(TagFromName.RecognitionCode,"Recognition Code");
		fullNameByTag.put(TagFromName.InstanceCreationDate,"Instance Creation Date");
		fullNameByTag.put(TagFromName.InstanceCreationTime,"Instance Creation Time");
		fullNameByTag.put(TagFromName.InstanceCreatorUID,"Instance Creator UID");
		fullNameByTag.put(TagFromName.InstanceCoercionDateTime,"Instance Coercion DateTime");
		fullNameByTag.put(TagFromName.SOPClassUID,"SOP Class UID");
		fullNameByTag.put(TagFromName.SOPInstanceUID,"SOP Instance UID");
		fullNameByTag.put(TagFromName.RelatedGeneralSOPClassUID,"Related General SOP Class UID");
		fullNameByTag.put(TagFromName.OriginalSpecializedSOPClassUID,"Original Specialized SOP Class UID");
		fullNameByTag.put(TagFromName.StudyDate,"Study Date");
		fullNameByTag.put(TagFromName.SeriesDate,"Series Date");
		fullNameByTag.put(TagFromName.AcquisitionDate,"Acquisition Date");
		fullNameByTag.put(TagFromName.ContentDate,"Content Date");
		fullNameByTag.put(TagFromName.OverlayDate,"Overlay Date");
		fullNameByTag.put(TagFromName.CurveDate,"Curve Date");
		fullNameByTag.put(TagFromName.AcquisitionDateTime,"Acquisition Date Time");
		fullNameByTag.put(TagFromName.StudyTime,"Study Time");
		fullNameByTag.put(TagFromName.SeriesTime,"Series Time");
		fullNameByTag.put(TagFromName.AcquisitionTime,"Acquisition Time");
		fullNameByTag.put(TagFromName.ContentTime,"Content Time");
		fullNameByTag.put(TagFromName.OverlayTime,"Overlay Time");
		fullNameByTag.put(TagFromName.CurveTime,"Curve Time");
		fullNameByTag.put(TagFromName.DataSetType,"Data Set Type");
		fullNameByTag.put(TagFromName.DataSetSubtype,"Data Set Subtype");
		fullNameByTag.put(TagFromName.NuclearMedicineSeriesType,"Nuclear Medicine Series Type");
		fullNameByTag.put(TagFromName.AccessionNumber,"Accession Number");
		fullNameByTag.put(TagFromName.IssuerOfAccessionNumberSequence,"Issuer of Accession Number Sequence");
		fullNameByTag.put(TagFromName.QueryRetrieveLevel,"Query/Retrieve Level");
		fullNameByTag.put(TagFromName.QueryRetrieveView,"Query/Retrieve View");
		fullNameByTag.put(TagFromName.RetrieveAETitle,"Retrieve AE Title");
		fullNameByTag.put(TagFromName.StationAETitle,"Station AE Title");
		fullNameByTag.put(TagFromName.InstanceAvailability,"Instance Availability");
		fullNameByTag.put(TagFromName.FailedSOPInstanceUIDList,"Failed SOP Instance UID List");
		fullNameByTag.put(TagFromName.Modality,"Modality");
		fullNameByTag.put(TagFromName.ModalitiesInStudy,"Modalities in Study");
		fullNameByTag.put(TagFromName.SOPClassesInStudy,"SOP Classes in Study");
		fullNameByTag.put(TagFromName.AnatomicRegionsInStudyCodeSequence,"Anatomic Regions in Study Code Sequence");
		fullNameByTag.put(TagFromName.ConversionType,"Conversion Type");
		fullNameByTag.put(TagFromName.PresentationIntentType,"Presentation Intent Type");
		fullNameByTag.put(TagFromName.Manufacturer,"Manufacturer");
		fullNameByTag.put(TagFromName.InstitutionName,"Institution Name");
		fullNameByTag.put(TagFromName.InstitutionAddress,"Institution Address");
		fullNameByTag.put(TagFromName.InstitutionCodeSequence,"Institution Code Sequence");
		fullNameByTag.put(TagFromName.ReferringPhysicianName,"Referring Physician's Name");
		fullNameByTag.put(TagFromName.ReferringPhysicianAddress,"Referring Physician's Address");
		fullNameByTag.put(TagFromName.ReferringPhysicianTelephoneNumbers,"Referring Physician's Telephone Numbers");
		fullNameByTag.put(TagFromName.ReferringPhysicianIdentificationSequence,"Referring Physician Identification Sequence");
		fullNameByTag.put(TagFromName.ConsultingPhysicianName,"Consulting Physician's Name");
		fullNameByTag.put(TagFromName.ConsultingPhysicianIdentificationSequence,"Consulting Physician Identification Sequence");
		fullNameByTag.put(TagFromName.CodeValue,"Code Value");
		fullNameByTag.put(TagFromName.ExtendedCodeValue,"Extended Code Value");
		fullNameByTag.put(TagFromName.CodingSchemeDesignator,"Coding Scheme Designator");
		fullNameByTag.put(TagFromName.CodingSchemeVersion,"Coding Scheme Version");
		fullNameByTag.put(TagFromName.CodeMeaning,"Code Meaning");
		fullNameByTag.put(TagFromName.MappingResource,"Mapping Resource");
		fullNameByTag.put(TagFromName.ContextGroupVersion,"Context Group Version");
		fullNameByTag.put(TagFromName.ContextGroupLocalVersion,"Context Group Local Version");
		fullNameByTag.put(TagFromName.ExtendedCodeMeaning,"Extended Code Meaning");
		fullNameByTag.put(TagFromName.CodingSchemeResourcesSequence,"Coding Scheme Resources Sequence");
		fullNameByTag.put(TagFromName.CodingSchemeURLType,"Coding Scheme URL Type");
		fullNameByTag.put(TagFromName.ContextGroupExtensionFlag,"Context Group Extension Flag");
		fullNameByTag.put(TagFromName.CodingSchemeUID,"Coding Scheme UID");
		fullNameByTag.put(TagFromName.ContextGroupExtensionCreatorUID,"Context Group Extension Creator UID");
		fullNameByTag.put(TagFromName.CodingSchemeURL,"Coding Scheme URL");
		fullNameByTag.put(TagFromName.ContextIdentifier,"Context Identifier");
		fullNameByTag.put(TagFromName.CodingSchemeIdentificationSequence,"Coding Scheme Identification Sequence");
		fullNameByTag.put(TagFromName.CodingSchemeRegistry,"Coding Scheme Registry");
		fullNameByTag.put(TagFromName.CodingSchemeExternalID,"Coding Scheme External ID");
		fullNameByTag.put(TagFromName.CodingSchemeName,"Coding Scheme Name");
		fullNameByTag.put(TagFromName.CodingSchemeResponsibleOrganization,"Coding Scheme Responsible Organization");
		fullNameByTag.put(TagFromName.ContextUID,"Context UID");
		fullNameByTag.put(TagFromName.MappingResourceUID,"Mapping Resource UID");
		fullNameByTag.put(TagFromName.LongCodeValue,"Long Code Value");
		fullNameByTag.put(TagFromName.URNCodeValue,"URN Code Value");
		fullNameByTag.put(TagFromName.EquivalentCodeSequence,"Equivalent Code Sequence");
		fullNameByTag.put(TagFromName.MappingResourceName,"Mapping Resource Name");
		fullNameByTag.put(TagFromName.ContextGroupIdentificationSequence,"Context Group Identification Sequence");
		fullNameByTag.put(TagFromName.MappingResourceIdentificationSequence,"Mapping Resource Identification Sequence");
		fullNameByTag.put(TagFromName.TimezoneOffsetFromUTC,"Timezone Offset From UTC");
		fullNameByTag.put(TagFromName.ResponsibleGroupCodeSequence,"Responsible Group Code Sequence");
		fullNameByTag.put(TagFromName.EquipmentModality,"Equipment Modality");
		fullNameByTag.put(TagFromName.ManufacturerRelatedModelGroup,"Manufacturer's Related Model Group");
		fullNameByTag.put(TagFromName.PrivateDataElementCharacteristicsSequence,"Private Data Element Characteristics Sequence");
		fullNameByTag.put(TagFromName.PrivateGroupReference,"Private Group Reference");
		fullNameByTag.put(TagFromName.PrivateCreatorReference,"Private Creator Reference");
		fullNameByTag.put(TagFromName.BlockIdentifyingInformationStatus,"Block Identifying Information Status");
		fullNameByTag.put(TagFromName.NonidentifyingPrivateElements,"Nonidentifying Private Elements");
		fullNameByTag.put(TagFromName.DeidentificationActionSequence,"Deidentification Action Sequence");
		fullNameByTag.put(TagFromName.IdentifyingPrivateElements,"Identifying Private Elements");
		fullNameByTag.put(TagFromName.DeidentificationAction,"Deidentification Action");
		fullNameByTag.put(TagFromName.PrivateDataElement,"Private Data Element");
		fullNameByTag.put(TagFromName.PrivateDataElementValueMultiplicity,"Private Data Element Value Multiplicity");
		fullNameByTag.put(TagFromName.PrivateDataElementValueRepresentation,"Private Data Element Value Representation");
		fullNameByTag.put(TagFromName.PrivateDataElementNumberOfItems,"Private Data Element Number of Items");
		fullNameByTag.put(TagFromName.PrivateDataElementName,"Private Data Element Name");
		fullNameByTag.put(TagFromName.PrivateDataElementKeyword,"Private Data Element Keyword");
		fullNameByTag.put(TagFromName.PrivateDataElementDescription,"Private Data Element Description");
		fullNameByTag.put(TagFromName.PrivateDataElementEncoding,"Private Data Element Encoding");
		fullNameByTag.put(TagFromName.PrivateDataElementDefinitionSequence,"Private Data Element Definition Sequence");
		fullNameByTag.put(TagFromName.NetworkID,"Network ID");
		fullNameByTag.put(TagFromName.StationName,"Station Name");
		fullNameByTag.put(TagFromName.StudyDescription,"Study Description");
		fullNameByTag.put(TagFromName.ProcedureCodeSequence,"Procedure Code Sequence");
		fullNameByTag.put(TagFromName.SeriesDescription,"Series Description");
		fullNameByTag.put(TagFromName.SeriesDescriptionCodeSequence,"Series Description Code Sequence");
		fullNameByTag.put(TagFromName.InstitutionalDepartmentName,"Institutional Department Name");
		fullNameByTag.put(TagFromName.PhysiciansOfRecord,"Physician(s) of Record");
		fullNameByTag.put(TagFromName.PhysiciansOfRecordIdentificationSequence,"Physician(s) of Record Identification Sequence");
		fullNameByTag.put(TagFromName.PerformingPhysicianName,"Performing Physician's Name");
		fullNameByTag.put(TagFromName.PerformingPhysicianIdentificationSequence,"Performing Physician Identification Sequence");
		fullNameByTag.put(TagFromName.NameOfPhysiciansReadingStudy,"Name of Physician(s) Reading Study");
		fullNameByTag.put(TagFromName.PhysiciansReadingStudyIdentificationSequence,"Physician(s) Reading Study Identification Sequence");
		fullNameByTag.put(TagFromName.OperatorsName,"Operators' Name");
		fullNameByTag.put(TagFromName.OperatorIdentificationSequence,"Operator Identification Sequence");
		fullNameByTag.put(TagFromName.AdmittingDiagnosesDescription,"Admitting Diagnoses Description");
		fullNameByTag.put(TagFromName.AdmittingDiagnosesCodeSequence,"Admitting Diagnoses Code Sequence");
		fullNameByTag.put(TagFromName.ManufacturerModelName,"Manufacturer's Model Name");
		fullNameByTag.put(TagFromName.ReferencedResultsSequence,"Referenced Results Sequence");
		fullNameByTag.put(TagFromName.ReferencedStudySequence,"Referenced Study Sequence");
		fullNameByTag.put(TagFromName.ReferencedPerformedProcedureStepSequence,"Referenced Performed Procedure Step Sequence");
		fullNameByTag.put(TagFromName.ReferencedSeriesSequence,"Referenced Series Sequence");
		fullNameByTag.put(TagFromName.ReferencedPatientSequence,"Referenced Patient Sequence");
		fullNameByTag.put(TagFromName.ReferencedVisitSequence,"Referenced Visit Sequence");
		fullNameByTag.put(TagFromName.ReferencedOverlaySequence,"Referenced Overlay Sequence");
		fullNameByTag.put(TagFromName.ReferencedStereometricInstanceSequence,"Referenced Stereometric Instance Sequence");
		fullNameByTag.put(TagFromName.ReferencedWaveformSequence,"Referenced Waveform Sequence");
		fullNameByTag.put(TagFromName.ReferencedImageSequence,"Referenced Image Sequence");
		fullNameByTag.put(TagFromName.ReferencedCurveSequence,"Referenced Curve Sequence");
		fullNameByTag.put(TagFromName.ReferencedInstanceSequence,"Referenced Instance Sequence");
		fullNameByTag.put(TagFromName.ReferencedRealWorldValueMappingInstanceSequence,"Referenced Real World Value Mapping Instance Sequence");
		fullNameByTag.put(TagFromName.ReferencedSOPClassUID,"Referenced SOP Class UID");
		fullNameByTag.put(TagFromName.ReferencedSOPInstanceUID,"Referenced SOP Instance UID");
		fullNameByTag.put(TagFromName.DefinitionSourceSequence,"Definition Source Sequence");
		fullNameByTag.put(TagFromName.SOPClassesSupported,"SOP Classes Supported");
		fullNameByTag.put(TagFromName.ReferencedFrameNumber,"Referenced Frame Number");
		fullNameByTag.put(TagFromName.SimpleFrameList,"Simple Frame List");
		fullNameByTag.put(TagFromName.CalculatedFrameList,"Calculated Frame List");
		fullNameByTag.put(TagFromName.TimeRange,"Time Range");
		fullNameByTag.put(TagFromName.FrameExtractionSequence,"Frame Extraction Sequence");
		fullNameByTag.put(TagFromName.MultiFrameSourceSOPInstanceUID,"Multi-frame Source SOP Instance UID");
		fullNameByTag.put(TagFromName.RetrieveURL,"Retrieve URL");
		fullNameByTag.put(TagFromName.TransactionUID,"Transaction UID");
		fullNameByTag.put(TagFromName.WarningReason,"Warning Reason");
		fullNameByTag.put(TagFromName.FailureReason,"Failure Reason");
		fullNameByTag.put(TagFromName.FailedSOPSequence,"Failed SOP Sequence");
		fullNameByTag.put(TagFromName.ReferencedSOPSequence,"Referenced SOP Sequence");
		fullNameByTag.put(TagFromName.OtherFailuresSequence,"Other Failures Sequence");
		fullNameByTag.put(TagFromName.StudiesContainingOtherReferencedInstancesSequence,"Studies Containing Other Referenced Instances Sequence");
		fullNameByTag.put(TagFromName.RelatedSeriesSequence,"Related Series Sequence");
		fullNameByTag.put(TagFromName.LossyImageCompressionRetired,"Lossy Image Compression (Retired)");
		fullNameByTag.put(TagFromName.DerivationDescription,"Derivation Description");
		fullNameByTag.put(TagFromName.SourceImageSequence,"Source Image Sequence");
		fullNameByTag.put(TagFromName.StageName,"Stage Name");
		fullNameByTag.put(TagFromName.StageNumber,"Stage Number");
		fullNameByTag.put(TagFromName.NumberOfStages,"Number of Stages");
		fullNameByTag.put(TagFromName.ViewName,"View Name");
		fullNameByTag.put(TagFromName.ViewNumber,"View Number");
		fullNameByTag.put(TagFromName.NumberOfEventTimers,"Number of Event Timers");
		fullNameByTag.put(TagFromName.NumberOfViewsInStage,"Number of Views in Stage");
		fullNameByTag.put(TagFromName.EventElapsedTimes,"Event Elapsed Time(s)");
		fullNameByTag.put(TagFromName.EventTimerNames,"Event Timer Name(s)");
		fullNameByTag.put(TagFromName.EventTimerSequence,"Event Timer Sequence");
		fullNameByTag.put(TagFromName.EventTimeOffset,"Event Time Offset");
		fullNameByTag.put(TagFromName.EventCodeSequence,"Event Code Sequence");
		fullNameByTag.put(TagFromName.StartTrim,"Start Trim");
		fullNameByTag.put(TagFromName.StopTrim,"Stop Trim");
		fullNameByTag.put(TagFromName.RecommendedDisplayFrameRate,"Recommended Display Frame Rate");
		fullNameByTag.put(TagFromName.TransducerPosition,"Transducer Position");
		fullNameByTag.put(TagFromName.TransducerOrientation,"Transducer Orientation");
		fullNameByTag.put(TagFromName.AnatomicStructure,"Anatomic Structure");
		fullNameByTag.put(TagFromName.AnatomicRegionSequence,"Anatomic Region Sequence");
		fullNameByTag.put(TagFromName.AnatomicRegionModifierSequence,"Anatomic Region Modifier Sequence");
		fullNameByTag.put(TagFromName.PrimaryAnatomicStructureSequence,"Primary Anatomic Structure Sequence");
		fullNameByTag.put(TagFromName.AnatomicStructureSpaceOrRegionSequence,"Anatomic Structure, Space or Region Sequence");
		fullNameByTag.put(TagFromName.PrimaryAnatomicStructureModifierSequence,"Primary Anatomic Structure Modifier Sequence");
		fullNameByTag.put(TagFromName.TransducerPositionSequence,"Transducer Position Sequence");
		fullNameByTag.put(TagFromName.TransducerPositionModifierSequence,"Transducer Position Modifier Sequence");
		fullNameByTag.put(TagFromName.TransducerOrientationSequence,"Transducer Orientation Sequence");
		fullNameByTag.put(TagFromName.TransducerOrientationModifierSequence,"Transducer Orientation Modifier Sequence");
		fullNameByTag.put(TagFromName.AnatomicStructureSpaceOrRegionCodeSequenceTrial,"Anatomic Structure Space Or Region Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.AnatomicPortalOfEntranceCodeSequenceTrial,"Anatomic Portal Of Entrance Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.AnatomicApproachDirectionCodeSequenceTrial,"Anatomic Approach Direction Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.AnatomicPerspectiveDescriptionTrial,"Anatomic Perspective Description (Trial)");
		fullNameByTag.put(TagFromName.AnatomicPerspectiveCodeSequenceTrial,"Anatomic Perspective Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.AnatomicLocationOfExaminingInstrumentDescriptionTrial,"Anatomic Location Of Examining Instrument Description (Trial)");
		fullNameByTag.put(TagFromName.AnatomicLocationOfExaminingInstrumentCodeSequenceTrial,"Anatomic Location Of Examining Instrument Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial,"Anatomic Structure Space Or Region Modifier Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.OnAxisBackgroundAnatomicStructureCodeSequenceTrial,"OnAxis Background Anatomic Structure Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.AlternateRepresentationSequence,"Alternate Representation Sequence");
		fullNameByTag.put(TagFromName.IrradiationEventUID,"Irradiation Event UID");
		fullNameByTag.put(TagFromName.SourceIrradiationEventSequence,"Source Irradiation Event Sequence");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalAdministrationEventUID,"Radiopharmaceutical Administration Event UID");
		fullNameByTag.put(TagFromName.IdentifyingComments,"Identifying Comments");
		fullNameByTag.put(TagFromName.FrameType,"Frame Type");
		fullNameByTag.put(TagFromName.ReferencedImageEvidenceSequence,"Referenced Image Evidence Sequence");
		fullNameByTag.put(TagFromName.ReferencedRawDataSequence,"Referenced Raw Data Sequence");
		fullNameByTag.put(TagFromName.CreatorVersionUID,"Creator-Version UID");
		fullNameByTag.put(TagFromName.DerivationImageSequence,"Derivation Image Sequence");
		fullNameByTag.put(TagFromName.SourceImageEvidenceSequence,"Source Image Evidence Sequence");
		fullNameByTag.put(TagFromName.PixelPresentation,"Pixel Presentation");
		fullNameByTag.put(TagFromName.VolumetricProperties,"Volumetric Properties");
		fullNameByTag.put(TagFromName.VolumeBasedCalculationTechnique,"Volume Based Calculation Technique");
		fullNameByTag.put(TagFromName.ComplexImageComponent,"Complex Image Component");
		fullNameByTag.put(TagFromName.AcquisitionContrast,"Acquisition Contrast");
		fullNameByTag.put(TagFromName.DerivationCodeSequence,"Derivation Code Sequence");
		fullNameByTag.put(TagFromName.ReferencedPresentationStateSequence,"Referenced Presentation State Sequence");
		fullNameByTag.put(TagFromName.ReferencedOtherPlaneSequence,"Referenced Other Plane Sequence");
		fullNameByTag.put(TagFromName.FrameDisplaySequence,"Frame Display Sequence");
		fullNameByTag.put(TagFromName.RecommendedDisplayFrameRateInFloat,"Recommended Display Frame Rate in Float");
		fullNameByTag.put(TagFromName.SkipFrameRangeFlag,"Skip Frame Range Flag");
		fullNameByTag.put(TagFromName.PatientName,"Patient's Name");
		fullNameByTag.put(TagFromName.PatientID,"Patient ID");
		fullNameByTag.put(TagFromName.IssuerOfPatientID,"Issuer of Patient ID");
		fullNameByTag.put(TagFromName.TypeOfPatientID,"Type of Patient ID");
		fullNameByTag.put(TagFromName.IssuerOfPatientIDQualifiersSequence,"Issuer of Patient ID Qualifiers Sequence");
		fullNameByTag.put(TagFromName.SourcePatientGroupIdentificationSequence,"Source Patient Group Identification Sequence");
		fullNameByTag.put(TagFromName.GroupOfPatientsIdentificationSequence,"Group of Patients Identification Sequence");
		fullNameByTag.put(TagFromName.SubjectRelativePositionInImage,"Subject Relative Position in Image");
		fullNameByTag.put(TagFromName.PatientBirthDate,"Patient's Birth Date");
		fullNameByTag.put(TagFromName.PatientBirthTime,"Patient's Birth Time");
		fullNameByTag.put(TagFromName.PatientSex,"Patient's Sex");
		fullNameByTag.put(TagFromName.PatientInsurancePlanCodeSequence,"Patient's Insurance Plan Code Sequence");
		fullNameByTag.put(TagFromName.PatientPrimaryLanguageCodeSequence,"Patient's Primary Language Code Sequence");
		fullNameByTag.put(TagFromName.PatientPrimaryLanguageModifierCodeSequence,"Patient's Primary Language Modifier Code Sequence");
		fullNameByTag.put(TagFromName.QualityControlSubject,"Quality Control Subject");
		fullNameByTag.put(TagFromName.QualityControlSubjectTypeCodeSequence,"Quality Control Subject Type Code Sequence");
		fullNameByTag.put(TagFromName.StrainDescription,"Strain Description");
		fullNameByTag.put(TagFromName.StrainNomenclature,"Strain Nomenclature");
		fullNameByTag.put(TagFromName.StrainStockNumber,"Strain Stock Number");
		fullNameByTag.put(TagFromName.StrainSourceRegistryCodeSequence,"Strain Source Registry Code Sequence");
		fullNameByTag.put(TagFromName.StrainStockSequence,"Strain Stock Sequence");
		fullNameByTag.put(TagFromName.StrainSource,"Strain Source");
		fullNameByTag.put(TagFromName.StrainAdditionalInformation,"Strain Additional Information");
		fullNameByTag.put(TagFromName.StrainCodeSequence,"Strain Code Sequence");
		fullNameByTag.put(TagFromName.GeneticModificationsSequence,"Genetic Modifications Sequence");
		fullNameByTag.put(TagFromName.GeneticModificationsDescription,"Genetic Modifications Description");
		fullNameByTag.put(TagFromName.GeneticModificationsNomenclature,"Genetic Modifications Nomenclature");
		fullNameByTag.put(TagFromName.GeneticModificationsCodeSequence,"Genetic Modifications Code Sequence");
		fullNameByTag.put(TagFromName.OtherPatientIDs,"Other Patient IDs");
		fullNameByTag.put(TagFromName.OtherPatientNames,"Other Patient Names");
		fullNameByTag.put(TagFromName.OtherPatientIDsSequence,"Other Patient IDs Sequence");
		fullNameByTag.put(TagFromName.PatientBirthName,"Patient's Birth Name");
		fullNameByTag.put(TagFromName.PatientAge,"Patient's Age");
		fullNameByTag.put(TagFromName.PatientSize,"Patient's Size");
		fullNameByTag.put(TagFromName.PatientSizeCodeSequence,"Patient's Size Code Sequence");
		fullNameByTag.put(TagFromName.PatientBodyMassIndex,"Patient's Body Mass Index");
		fullNameByTag.put(TagFromName.MeasuredAPDimension,"Measured AP Dimension");
		fullNameByTag.put(TagFromName.MeasuredLateralDimension,"Measured Lateral Dimension");
		fullNameByTag.put(TagFromName.PatientWeight,"Patient's Weight");
		fullNameByTag.put(TagFromName.PatientAddress,"Patient's Address");
		fullNameByTag.put(TagFromName.InsurancePlanIdentification,"Insurance Plan Identification");
		fullNameByTag.put(TagFromName.PatientMotherBirthName,"Patient's Mother's Birth Name");
		fullNameByTag.put(TagFromName.MilitaryRank,"Military Rank");
		fullNameByTag.put(TagFromName.BranchOfService,"Branch of Service");
		fullNameByTag.put(TagFromName.MedicalRecordLocator,"Medical Record Locator");
		fullNameByTag.put(TagFromName.ReferencedPatientPhotoSequence,"Referenced Patient Photo Sequence");
		fullNameByTag.put(TagFromName.MedicalAlerts,"Medical Alerts");
		fullNameByTag.put(TagFromName.Allergies,"Allergies");
		fullNameByTag.put(TagFromName.CountryOfResidence,"Country of Residence");
		fullNameByTag.put(TagFromName.RegionOfResidence,"Region of Residence");
		fullNameByTag.put(TagFromName.PatientTelephoneNumbers,"Patient's Telephone Numbers");
		fullNameByTag.put(TagFromName.PatientTelecomInformation,"Patient's Telecom Information");
		fullNameByTag.put(TagFromName.EthnicGroup,"Ethnic Group");
		fullNameByTag.put(TagFromName.Occupation,"Occupation");
		fullNameByTag.put(TagFromName.SmokingStatus,"Smoking Status");
		fullNameByTag.put(TagFromName.AdditionalPatientHistory,"Additional Patient History");
		fullNameByTag.put(TagFromName.PregnancyStatus,"Pregnancy Status");
		fullNameByTag.put(TagFromName.LastMenstrualDate,"Last Menstrual Date");
		fullNameByTag.put(TagFromName.PatientReligiousPreference,"Patient's Religious Preference");
		fullNameByTag.put(TagFromName.PatientSpeciesDescription,"Patient Species Description");
		fullNameByTag.put(TagFromName.PatientSpeciesCodeSequence,"Patient Species Code Sequence");
		fullNameByTag.put(TagFromName.PatientSexNeutered,"Patient's Sex Neutered");
		fullNameByTag.put(TagFromName.AnatomicalOrientationType,"Anatomical Orientation Type");
		fullNameByTag.put(TagFromName.PatientBreedDescription,"Patient Breed Description");
		fullNameByTag.put(TagFromName.PatientBreedCodeSequence,"Patient Breed Code Sequence");
		fullNameByTag.put(TagFromName.BreedRegistrationSequence,"Breed Registration Sequence");
		fullNameByTag.put(TagFromName.BreedRegistrationNumber,"Breed Registration Number");
		fullNameByTag.put(TagFromName.BreedRegistryCodeSequence,"Breed Registry Code Sequence");
		fullNameByTag.put(TagFromName.ResponsiblePerson,"Responsible Person");
		fullNameByTag.put(TagFromName.ResponsiblePersonRole,"Responsible Person Role");
		fullNameByTag.put(TagFromName.ResponsibleOrganization,"Responsible Organization");
		fullNameByTag.put(TagFromName.PatientComments,"Patient Comments");
		fullNameByTag.put(TagFromName.ExaminedBodyThickness,"ExaminedBodyThickness");
		fullNameByTag.put(TagFromName.ClinicalTrialSponsorName,"Clinical Trial Sponsor Name");
		fullNameByTag.put(TagFromName.ClinicalTrialProtocolID,"Clinical Trial Protocol ID");
		fullNameByTag.put(TagFromName.ClinicalTrialProtocolName,"Clinical Trial Protocol Name");
		fullNameByTag.put(TagFromName.ClinicalTrialSiteID,"Clinical Trial Site ID");
		fullNameByTag.put(TagFromName.ClinicalTrialSiteName,"Clinical Trial Site Name");
		fullNameByTag.put(TagFromName.ClinicalTrialSubjectID,"Clinical Trial Subject ID");
		fullNameByTag.put(TagFromName.ClinicalTrialSubjectReadingID,"Clinical Trial Subject Reading ID");
		fullNameByTag.put(TagFromName.ClinicalTrialTimePointID,"Clinical Trial Time Point ID");
		fullNameByTag.put(TagFromName.ClinicalTrialTimePointDescription,"Clinical Trial Time Point Description");
		fullNameByTag.put(TagFromName.LongitudinalTemporalOffsetFromEvent,"Longitudinal Temporal Offset from Event");
		fullNameByTag.put(TagFromName.LongitudinalTemporalEventType,"Longitudinal Temporal Event Type");
		fullNameByTag.put(TagFromName.ClinicalTrialCoordinatingCenterName,"Clinical Trial Coordinating Center Name");
		fullNameByTag.put(TagFromName.PatientIdentityRemoved,"Patient Identity Removed");
		fullNameByTag.put(TagFromName.DeidentificationMethod,"De-identification Method");
		fullNameByTag.put(TagFromName.DeidentificationMethodCodeSequence,"De-identification Method Code Sequence");
		fullNameByTag.put(TagFromName.ClinicalTrialSeriesID,"Clinical Trial Series ID");
		fullNameByTag.put(TagFromName.ClinicalTrialSeriesDescription,"Clinical Trial Series Description");
		fullNameByTag.put(TagFromName.ClinicalTrialProtocolEthicsCommitteeName,"Clinical Trial Protocol Ethics Committee Name");
		fullNameByTag.put(TagFromName.ClinicalTrialProtocolEthicsCommitteeApprovalNumber,"Clinical Trial Protocol Ethics Committee Approval Number");
		fullNameByTag.put(TagFromName.ConsentForClinicalTrialUseSequence,"Consent for Clinical Trial Use Sequence");
		fullNameByTag.put(TagFromName.DistributionType,"Distribution Type");
		fullNameByTag.put(TagFromName.ConsentForDistributionFlag,"Consent for Distribution Flag");
		fullNameByTag.put(TagFromName.EthicsCommitteeApprovalEffectivenessStartDate,"Ethics Committee Approval Effectiveness Start Date");
		fullNameByTag.put(TagFromName.EthicsCommitteeApprovalEffectivenessEndDate,"Ethics Committee Approval Effectiveness End Date");
		fullNameByTag.put(TagFromName.CADFileFormatRetired,"CAD File Format (Retired)");
		fullNameByTag.put(TagFromName.ComponentReferenceSystemRetired,"Component Reference System (Retired)");
		fullNameByTag.put(TagFromName.ComponentManufacturingProcedure,"Component Manufacturing Procedure");
		fullNameByTag.put(TagFromName.ComponentManufacturer,"Component Manufacturer");
		fullNameByTag.put(TagFromName.MaterialThickness,"Material Thickness");
		fullNameByTag.put(TagFromName.MaterialPipeDiameter,"Material Pipe Diameter");
		fullNameByTag.put(TagFromName.MaterialIsolationDiameter,"Material Isolation Diameter");
		fullNameByTag.put(TagFromName.MaterialGrade,"Material Grade");
		fullNameByTag.put(TagFromName.MaterialPropertiesDescription,"Material Properties Description");
		fullNameByTag.put(TagFromName.MaterialPropertiesFileFormatRetired,"Material Properties File Format (Retired)");
		fullNameByTag.put(TagFromName.MaterialNotes,"Material Notes");
		fullNameByTag.put(TagFromName.ComponentShape,"Component Shape");
		fullNameByTag.put(TagFromName.CurvatureType,"Curvature Type");
		fullNameByTag.put(TagFromName.OuterDiameter,"Outer Diameter");
		fullNameByTag.put(TagFromName.InnerDiameter,"Inner Diameter");
		fullNameByTag.put(TagFromName.ComponentWelderIDs,"Component Welder IDs");
		fullNameByTag.put(TagFromName.SecondaryApprovalStatus,"Secondary Approval Status");
		fullNameByTag.put(TagFromName.SecondaryReviewDate,"Secondary Review Date");
		fullNameByTag.put(TagFromName.SecondaryReviewTime,"Secondary Review Time");
		fullNameByTag.put(TagFromName.SecondaryReviewerName,"Secondary Reviewer Name");
		fullNameByTag.put(TagFromName.RepairID,"Repair ID");
		fullNameByTag.put(TagFromName.MultipleComponentApprovalSequence,"Multiple Component Approval Sequence");
		fullNameByTag.put(TagFromName.OtherApprovalStatus,"Other Approval Status");
		fullNameByTag.put(TagFromName.OtherSecondaryApprovalStatus,"Other Secondary Approval Status");
		fullNameByTag.put(TagFromName.ActualEnvironmentalConditions,"Actual Environmental Conditions");
		fullNameByTag.put(TagFromName.ExpiryDate,"Expiry Date");
		fullNameByTag.put(TagFromName.EnvironmentalConditions,"Environmental Conditions");
		fullNameByTag.put(TagFromName.EvaluatorSequence,"Evaluator Sequence");
		fullNameByTag.put(TagFromName.EvaluatorNumber,"Evaluator Number");
		fullNameByTag.put(TagFromName.EvaluatorName,"Evaluator Name");
		fullNameByTag.put(TagFromName.EvaluationAttempt,"Evaluation Attempt");
		fullNameByTag.put(TagFromName.IndicationSequence,"Indication Sequence");
		fullNameByTag.put(TagFromName.IndicationNumber,"Indication Number ");
		fullNameByTag.put(TagFromName.IndicationLabel,"Indication Label");
		fullNameByTag.put(TagFromName.IndicationDescription,"Indication Description");
		fullNameByTag.put(TagFromName.IndicationType,"Indication Type");
		fullNameByTag.put(TagFromName.IndicationDisposition,"Indication Disposition");
		fullNameByTag.put(TagFromName.IndicationROISequence,"Indication ROI Sequence");
		fullNameByTag.put(TagFromName.IndicationPhysicalPropertySequence,"Indication Physical Property Sequence");
		fullNameByTag.put(TagFromName.PropertyLabel,"Property Label");
		fullNameByTag.put(TagFromName.CoordinateSystemNumberOfAxes,"Coordinate System Number of Axes ");
		fullNameByTag.put(TagFromName.CoordinateSystemAxesSequence,"Coordinate System Axes Sequence");
		fullNameByTag.put(TagFromName.CoordinateSystemAxisDescription,"Coordinate System Axis Description");
		fullNameByTag.put(TagFromName.CoordinateSystemDataSetMapping,"Coordinate System Data Set Mapping");
		fullNameByTag.put(TagFromName.CoordinateSystemAxisNumber,"Coordinate System Axis Number");
		fullNameByTag.put(TagFromName.CoordinateSystemAxisType,"Coordinate System Axis Type");
		fullNameByTag.put(TagFromName.CoordinateSystemAxisUnits,"Coordinate System Axis Units");
		fullNameByTag.put(TagFromName.CoordinateSystemAxisValues,"Coordinate System Axis Values");
		fullNameByTag.put(TagFromName.CoordinateSystemTransformSequence,"Coordinate System Transform Sequence");
		fullNameByTag.put(TagFromName.TransformDescription,"Transform Description");
		fullNameByTag.put(TagFromName.TransformNumberOfAxes,"Transform Number of Axes");
		fullNameByTag.put(TagFromName.TransformOrderOfAxes,"Transform Order of Axes");
		fullNameByTag.put(TagFromName.TransformedAxisUnits,"Transformed Axis Units");
		fullNameByTag.put(TagFromName.CoordinateSystemTransformRotationAndScaleMatrix,"Coordinate System Transform Rotation and Scale Matrix");
		fullNameByTag.put(TagFromName.CoordinateSystemTransformTranslationMatrix,"Coordinate System Transform Translation Matrix");
		fullNameByTag.put(TagFromName.InternalDetectorFrameTime,"Internal Detector Frame Time");
		fullNameByTag.put(TagFromName.NumberOfFramesIntegrated,"Number of Frames Integrated");
		fullNameByTag.put(TagFromName.DetectorTemperatureSequence,"Detector Temperature Sequence");
		fullNameByTag.put(TagFromName.SensorName,"Sensor Name");
		fullNameByTag.put(TagFromName.HorizontalOffsetOfSensor,"Horizontal Offset of Sensor");
		fullNameByTag.put(TagFromName.VerticalOffsetOfSensor,"Vertical Offset of Sensor");
		fullNameByTag.put(TagFromName.SensorTemperature,"Sensor Temperature");
		fullNameByTag.put(TagFromName.DarkCurrentSequence,"Dark Current Sequence");
		fullNameByTag.put(TagFromName.DarkCurrentCounts,"Dark Current Counts");
		fullNameByTag.put(TagFromName.GainCorrectionReferenceSequence,"Gain Correction Reference Sequence");
		fullNameByTag.put(TagFromName.AirCounts,"Air Counts");
		fullNameByTag.put(TagFromName.KVUsedInGainCalibration,"KV Used in Gain Calibration");
		fullNameByTag.put(TagFromName.MAUsedInGainCalibration,"MA Used in Gain Calibration");
		fullNameByTag.put(TagFromName.NumberOfFramesUsedForIntegration,"Number of Frames Used for Integration");
		fullNameByTag.put(TagFromName.FilterMaterialUsedInGainCalibration,"Filter Material Used in Gain Calibration");
		fullNameByTag.put(TagFromName.FilterThicknessUsedInGainCalibration,"Filter Thickness Used in Gain Calibration");
		fullNameByTag.put(TagFromName.DateOfGainCalibration,"Date of Gain Calibration");
		fullNameByTag.put(TagFromName.TimeOfGainCalibration,"Time of Gain Calibration");
		fullNameByTag.put(TagFromName.BadPixelImage,"Bad Pixel Image");
		fullNameByTag.put(TagFromName.CalibrationNotes,"Calibration Notes");
		fullNameByTag.put(TagFromName.PulserEquipmentSequence,"Pulser Equipment Sequence");
		fullNameByTag.put(TagFromName.PulserType,"Pulser Type");
		fullNameByTag.put(TagFromName.PulserNotes,"Pulser Notes");
		fullNameByTag.put(TagFromName.ReceiverEquipmentSequence,"Receiver Equipment Sequence");
		fullNameByTag.put(TagFromName.AmplifierType,"Amplifier Type");
		fullNameByTag.put(TagFromName.ReceiverNotes,"Receiver Notes");
		fullNameByTag.put(TagFromName.PreAmplifierEquipmentSequence,"Pre-Amplifier Equipment Sequence");
		fullNameByTag.put(TagFromName.PreAmplifierNotes,"Pre-Amplifier Notes");
		fullNameByTag.put(TagFromName.TransmitTransducerSequence,"Transmit Transducer Sequence");
		fullNameByTag.put(TagFromName.ReceiveTransducerSequence,"Receive Transducer Sequence");
		fullNameByTag.put(TagFromName.NumberOfElements,"Number of Elements");
		fullNameByTag.put(TagFromName.ElementShape,"Element Shape");
		fullNameByTag.put(TagFromName.ElementDimensionA,"Element Dimension A");
		fullNameByTag.put(TagFromName.ElementDimensionB,"Element Dimension B");
		fullNameByTag.put(TagFromName.ElementPitchA,"Element Pitch A");
		fullNameByTag.put(TagFromName.MeasuredBeamDimensionA,"Measured Beam Dimension A");
		fullNameByTag.put(TagFromName.MeasuredBeamDimensionB,"Measured Beam Dimension B");
		fullNameByTag.put(TagFromName.LocationOfMeasuredBeamDiameter,"Location of Measured Beam Diameter");
		fullNameByTag.put(TagFromName.NominalFrequency,"Nominal Frequency");
		fullNameByTag.put(TagFromName.MeasuredCenterFrequency,"Measured Center Frequency");
		fullNameByTag.put(TagFromName.MeasuredBandwidth,"Measured Bandwidth");
		fullNameByTag.put(TagFromName.ElementPitchB,"Element Pitch B");
		fullNameByTag.put(TagFromName.PulserSettingsSequence,"Pulser Settings Sequence");
		fullNameByTag.put(TagFromName.PulseWidth,"Pulse Width");
		fullNameByTag.put(TagFromName.ExcitationFrequency,"Excitation Frequency");
		fullNameByTag.put(TagFromName.ModulationType,"Modulation Type");
		fullNameByTag.put(TagFromName.Damping,"Damping");
		fullNameByTag.put(TagFromName.ReceiverSettingsSequence,"Receiver Settings Sequence");
		fullNameByTag.put(TagFromName.AcquiredSoundpathLength,"Acquired Soundpath Length");
		fullNameByTag.put(TagFromName.AcquisitionCompressionType,"Acquisition Compression Type");
		fullNameByTag.put(TagFromName.AcquisitionSampleSize,"Acquisition Sample Size");
		fullNameByTag.put(TagFromName.RectifierSmoothing,"Rectifier Smoothing");
		fullNameByTag.put(TagFromName.DACSequence,"DAC Sequence");
		fullNameByTag.put(TagFromName.DACType,"DAC Type");
		fullNameByTag.put(TagFromName.DACGainPoints,"DAC Gain Points");
		fullNameByTag.put(TagFromName.DACTimePoints,"DAC Time Points");
		fullNameByTag.put(TagFromName.DACAmplitude,"DAC Amplitude");
		fullNameByTag.put(TagFromName.PreAmplifierSettingsSequence,"Pre-Amplifier Settings Sequence");
		fullNameByTag.put(TagFromName.TransmitTransducerSettingsSequence,"Transmit Transducer Settings Sequence");
		fullNameByTag.put(TagFromName.ReceiveTransducerSettingsSequence,"Receive Transducer Settings Sequence");
		fullNameByTag.put(TagFromName.IncidentAngle,"Incident Angle");
		fullNameByTag.put(TagFromName.CouplingTechnique,"Coupling Technique");
		fullNameByTag.put(TagFromName.CouplingMedium,"Coupling Medium");
		fullNameByTag.put(TagFromName.CouplingVelocity,"Coupling Velocity");
		fullNameByTag.put(TagFromName.ProbeCenterLocationX,"Probe Center Location X");
		fullNameByTag.put(TagFromName.ProbeCenterLocationZ,"Probe Center Location Z");
		fullNameByTag.put(TagFromName.SoundPathLength,"Sound Path Length");
		fullNameByTag.put(TagFromName.DelayLawIdentifier,"Delay Law Identifier");
		fullNameByTag.put(TagFromName.GateSettingsSequence,"Gate Settings Sequence");
		fullNameByTag.put(TagFromName.GateThreshold,"Gate Threshold");
		fullNameByTag.put(TagFromName.VelocityOfSound,"Velocity of Sound");
		fullNameByTag.put(TagFromName.CalibrationSettingsSequence,"Calibration Settings Sequence");
		fullNameByTag.put(TagFromName.CalibrationProcedure,"Calibration Procedure");
		fullNameByTag.put(TagFromName.ProcedureVersion,"Procedure Version");
		fullNameByTag.put(TagFromName.ProcedureCreationDate,"Procedure Creation Date");
		fullNameByTag.put(TagFromName.ProcedureExpirationDate,"Procedure Expiration Date");
		fullNameByTag.put(TagFromName.ProcedureLastModifiedDate,"Procedure Last Modified Date");
		fullNameByTag.put(TagFromName.CalibrationTime,"Calibration Time");
		fullNameByTag.put(TagFromName.CalibrationDate,"Calibration Date");
		fullNameByTag.put(TagFromName.ProbeDriveEquipmentSequence,"Probe Drive Equipment Sequence");
		fullNameByTag.put(TagFromName.DriveType,"Drive Type");
		fullNameByTag.put(TagFromName.ProbeDriveNotes,"Probe Drive Notes");
		fullNameByTag.put(TagFromName.DriveProbeSequence,"Drive Probe Sequence");
		fullNameByTag.put(TagFromName.ProbeInductance,"Probe Inductance");
		fullNameByTag.put(TagFromName.ProbeResistance,"Probe Resistance");
		fullNameByTag.put(TagFromName.ReceiveProbeSequence,"Receive Probe Sequence");
		fullNameByTag.put(TagFromName.ProbeDriveSettingsSequence,"Probe Drive Settings Sequence");
		fullNameByTag.put(TagFromName.BridgeResistors,"Bridge Resistors");
		fullNameByTag.put(TagFromName.ProbeOrientationAngle,"Probe Orientation Angle");
		fullNameByTag.put(TagFromName.UserSelectedGainY,"User Selected Gain Y");
		fullNameByTag.put(TagFromName.UserSelectedPhase,"User Selected Phase");
		fullNameByTag.put(TagFromName.UserSelectedOffsetX,"User Selected Offset X");
		fullNameByTag.put(TagFromName.UserSelectedOffsetY,"User Selected Offset Y");
		fullNameByTag.put(TagFromName.ChannelSettingsSequence,"Channel Settings Sequence");
		fullNameByTag.put(TagFromName.ChannelThreshold,"Channel Threshold");
		fullNameByTag.put(TagFromName.ScannerSettingsSequence,"Scanner Settings Sequence");
		fullNameByTag.put(TagFromName.ScanProcedure,"Scan Procedure");
		fullNameByTag.put(TagFromName.TranslationRateX,"Translation Rate X");
		fullNameByTag.put(TagFromName.TranslationRateY,"Translation Rate Y");
		fullNameByTag.put(TagFromName.ChannelOverlap,"Channel Overlap");
		fullNameByTag.put(TagFromName.ImageQualityIndicatorType,"Image Quality Indicator Type");
		fullNameByTag.put(TagFromName.ImageQualityIndicatorMaterial,"Image Quality Indicator Material");
		fullNameByTag.put(TagFromName.ImageQualityIndicatorSize,"Image Quality Indicator Size");
		fullNameByTag.put(TagFromName.LINACEnergy,"LINAC Energy");
		fullNameByTag.put(TagFromName.LINACOutput,"LINAC Output");
		fullNameByTag.put(TagFromName.ActiveAperture,"Active Aperture");
		fullNameByTag.put(TagFromName.TotalAperture,"Total Aperture");
		fullNameByTag.put(TagFromName.ApertureElevation,"Aperture Elevation");
		fullNameByTag.put(TagFromName.MainLobeAngle,"Main Lobe Angle");
		fullNameByTag.put(TagFromName.MainRoofAngle,"Main Roof Angle");
		fullNameByTag.put(TagFromName.ConnectorType,"Connector Type");
		fullNameByTag.put(TagFromName.WedgeModelNumber,"Wedge Model Number");
		fullNameByTag.put(TagFromName.WedgeAngleFloat,"Wedge Angle Float");
		fullNameByTag.put(TagFromName.WedgeRoofAngle,"Wedge Roof Angle");
		fullNameByTag.put(TagFromName.WedgeElement1Position,"Wedge Element 1 Position");
		fullNameByTag.put(TagFromName.WedgeMaterialVelocity,"Wedge Material Velocity");
		fullNameByTag.put(TagFromName.WedgeMaterial,"Wedge Material");
		fullNameByTag.put(TagFromName.WedgeOffsetZ,"Wedge Offset Z");
		fullNameByTag.put(TagFromName.WedgeOriginOffsetX,"Wedge Origin Offset X");
		fullNameByTag.put(TagFromName.WedgeTimeDelay,"Wedge Time Delay");
		fullNameByTag.put(TagFromName.WedgeName,"Wedge Name");
		fullNameByTag.put(TagFromName.WedgeManufacturerName,"Wedge Manufacturer Name");
		fullNameByTag.put(TagFromName.WedgeDescription,"Wedge Description");
		fullNameByTag.put(TagFromName.NominalBeamAngle,"Nominal Beam Angle");
		fullNameByTag.put(TagFromName.WedgeOffsetX,"Wedge Offset X");
		fullNameByTag.put(TagFromName.WedgeOffsetY,"Wedge Offset Y");
		fullNameByTag.put(TagFromName.WedgeTotalLength,"Wedge Total Length");
		fullNameByTag.put(TagFromName.WedgeInContactLength,"Wedge In Contact Length");
		fullNameByTag.put(TagFromName.WedgeFrontGap,"Wedge Front Gap");
		fullNameByTag.put(TagFromName.WedgeTotalHeight,"Wedge Total Height");
		fullNameByTag.put(TagFromName.WedgeFrontHeight,"Wedge Front Height");
		fullNameByTag.put(TagFromName.WedgeRearHeight,"Wedge Rear Height");
		fullNameByTag.put(TagFromName.WedgeTotalWidth,"Wedge Total Width");
		fullNameByTag.put(TagFromName.WedgeInContactWidth,"Wedge In Contact Width");
		fullNameByTag.put(TagFromName.WedgeChamferHeight,"Wedge Chamfer Height");
		fullNameByTag.put(TagFromName.WedgeCurve,"Wedge Curve");
		fullNameByTag.put(TagFromName.RadiusAlongWedge,"Radius Along the Wedge");
		fullNameByTag.put(TagFromName.ContrastBolusAgent,"Contrast/Bolus Agent");
		fullNameByTag.put(TagFromName.ContrastBolusAgentSequence,"Contrast/Bolus Agent Sequence");
		fullNameByTag.put(TagFromName.ContrastBolusT1Relaxivity,"Contrast/Bolus T1 Relaxivity");
		fullNameByTag.put(TagFromName.ContrastBolusAdministrationRouteSequence,"Contrast/Bolus Administration Route Sequence");
		fullNameByTag.put(TagFromName.BodyPartExamined,"Body Part Examined");
		fullNameByTag.put(TagFromName.ScanningSequence,"Scanning Sequence");
		fullNameByTag.put(TagFromName.SequenceVariant,"Sequence Variant");
		fullNameByTag.put(TagFromName.ScanOptions,"Scan Options");
		fullNameByTag.put(TagFromName.MRAcquisitionType,"MR Acquisition Type");
		fullNameByTag.put(TagFromName.SequenceName,"Sequence Name");
		fullNameByTag.put(TagFromName.AngioFlag,"Angio Flag");
		fullNameByTag.put(TagFromName.InterventionDrugInformationSequence,"Intervention Drug Information Sequence");
		fullNameByTag.put(TagFromName.InterventionDrugStopTime,"Intervention Drug Stop Time");
		fullNameByTag.put(TagFromName.InterventionDrugDose,"Intervention Drug Dose");
		fullNameByTag.put(TagFromName.InterventionDrugCodeSequence,"Intervention Drug Code Sequence");
		fullNameByTag.put(TagFromName.AdditionalDrugSequence,"Additional Drug Sequence");
		fullNameByTag.put(TagFromName.Radionuclide,"Radionuclide");
		fullNameByTag.put(TagFromName.Radiopharmaceutical,"Radiopharmaceutical");
		fullNameByTag.put(TagFromName.EnergyWindowCenterline,"Energy Window Centerline");
		fullNameByTag.put(TagFromName.EnergyWindowTotalWidth,"Energy Window Total Width");
		fullNameByTag.put(TagFromName.InterventionDrugName,"Intervention Drug Name");
		fullNameByTag.put(TagFromName.InterventionDrugStartTime,"Intervention Drug Start Time");
		fullNameByTag.put(TagFromName.InterventionSequence,"Intervention Sequence");
		fullNameByTag.put(TagFromName.TherapyType,"Therapy Type");
		fullNameByTag.put(TagFromName.InterventionStatus,"Intervention Status");
		fullNameByTag.put(TagFromName.TherapyDescription,"Therapy Description");
		fullNameByTag.put(TagFromName.InterventionDescription,"Intervention Description");
		fullNameByTag.put(TagFromName.CineRate,"Cine Rate");
		fullNameByTag.put(TagFromName.InitialCineRunState,"Initial Cine Run State");
		fullNameByTag.put(TagFromName.SliceThickness,"Slice Thickness");
		fullNameByTag.put(TagFromName.KVP,"KVP");
		fullNameByTag.put(TagFromName.CountsAccumulated,"Counts Accumulated");
		fullNameByTag.put(TagFromName.AcquisitionTerminationCondition,"Acquisition Termination Condition");
		fullNameByTag.put(TagFromName.EffectiveDuration,"Effective Duration");
		fullNameByTag.put(TagFromName.AcquisitionStartCondition,"Acquisition Start Condition");
		fullNameByTag.put(TagFromName.AcquisitionStartConditionData,"Acquisition Start Condition Data");
		fullNameByTag.put(TagFromName.AcquisitionTerminationConditionData,"Acquisition Termination Condition Data");
		fullNameByTag.put(TagFromName.RepetitionTime,"Repetition Time");
		fullNameByTag.put(TagFromName.EchoTime,"Echo Time");
		fullNameByTag.put(TagFromName.InversionTime,"Inversion Time");
		fullNameByTag.put(TagFromName.NumberOfAverages,"Number of Averages");
		fullNameByTag.put(TagFromName.ImagingFrequency,"Imaging Frequency");
		fullNameByTag.put(TagFromName.ImagedNucleus,"Imaged Nucleus");
		fullNameByTag.put(TagFromName.EchoNumbers,"Echo Number(s)");
		fullNameByTag.put(TagFromName.MagneticFieldStrength,"Magnetic Field Strength");
		fullNameByTag.put(TagFromName.SpacingBetweenSlices,"Spacing Between Slices");
		fullNameByTag.put(TagFromName.NumberOfPhaseEncodingSteps,"Number of Phase Encoding Steps");
		fullNameByTag.put(TagFromName.DataCollectionDiameter,"Data Collection Diameter");
		fullNameByTag.put(TagFromName.EchoTrainLength,"Echo Train Length");
		fullNameByTag.put(TagFromName.PercentSampling,"Percent Sampling");
		fullNameByTag.put(TagFromName.PercentPhaseFieldOfView,"Percent Phase Field of View");
		fullNameByTag.put(TagFromName.PixelBandwidth,"Pixel Bandwidth");
		fullNameByTag.put(TagFromName.DeviceSerialNumber,"Device Serial Number");
		fullNameByTag.put(TagFromName.DeviceUID,"Device UID");
		fullNameByTag.put(TagFromName.DeviceID,"Device ID");
		fullNameByTag.put(TagFromName.PlateID,"Plate ID");
		fullNameByTag.put(TagFromName.GeneratorID,"Generator ID");
		fullNameByTag.put(TagFromName.GridID,"Grid ID");
		fullNameByTag.put(TagFromName.CassetteID,"Cassette ID");
		fullNameByTag.put(TagFromName.GantryID,"Gantry ID");
		fullNameByTag.put(TagFromName.UniqueDeviceIdentifier,"Unique Device Identifier");
		fullNameByTag.put(TagFromName.UDISequence,"UDI Sequence");
		fullNameByTag.put(TagFromName.SecondaryCaptureDeviceID,"Secondary Capture Device ID");
		fullNameByTag.put(TagFromName.HardcopyCreationDeviceID,"Hardcopy Creation Device ID");
		fullNameByTag.put(TagFromName.DateOfSecondaryCapture,"Date of Secondary Capture");
		fullNameByTag.put(TagFromName.TimeOfSecondaryCapture,"Time of Secondary Capture");
		fullNameByTag.put(TagFromName.SecondaryCaptureDeviceManufacturer,"Secondary Capture Device Manufacturer");
		fullNameByTag.put(TagFromName.HardcopyDeviceManufacturer,"Hardcopy Device Manufacturer");
		fullNameByTag.put(TagFromName.SecondaryCaptureDeviceManufacturerModelName,"Secondary Capture Device Manufacturer's Model Name");
		fullNameByTag.put(TagFromName.SecondaryCaptureDeviceSoftwareVersions,"Secondary Capture Device Software Versions");
		fullNameByTag.put(TagFromName.HardcopyDeviceSoftwareVersion,"Hardcopy Device Software Version");
		fullNameByTag.put(TagFromName.HardcopyDeviceManufacturerModelName,"Hardcopy Device Manufacturer's Model Name");
		fullNameByTag.put(TagFromName.SoftwareVersions,"Software Version(s)");
		fullNameByTag.put(TagFromName.VideoImageFormatAcquired,"Video Image Format Acquired");
		fullNameByTag.put(TagFromName.DigitalImageFormatAcquired,"Digital Image Format Acquired");
		fullNameByTag.put(TagFromName.ProtocolName,"Protocol Name");
		fullNameByTag.put(TagFromName.ContrastBolusRoute,"Contrast/Bolus Route");
		fullNameByTag.put(TagFromName.ContrastBolusVolume,"Contrast/Bolus Volume");
		fullNameByTag.put(TagFromName.ContrastBolusStartTime,"Contrast/Bolus Start Time");
		fullNameByTag.put(TagFromName.ContrastBolusStopTime,"Contrast/Bolus Stop Time");
		fullNameByTag.put(TagFromName.ContrastBolusTotalDose,"Contrast/Bolus Total Dose");
		fullNameByTag.put(TagFromName.SyringeCounts,"Syringe Counts");
		fullNameByTag.put(TagFromName.ContrastFlowRate,"Contrast Flow Rate");
		fullNameByTag.put(TagFromName.ContrastFlowDuration,"Contrast Flow Duration");
		fullNameByTag.put(TagFromName.ContrastBolusIngredient,"Contrast/Bolus Ingredient");
		fullNameByTag.put(TagFromName.ContrastBolusIngredientConcentration,"Contrast/Bolus Ingredient Concentration");
		fullNameByTag.put(TagFromName.SpatialResolution,"Spatial Resolution");
		fullNameByTag.put(TagFromName.TriggerTime,"Trigger Time");
		fullNameByTag.put(TagFromName.TriggerSourceOrType,"Trigger Source or Type");
		fullNameByTag.put(TagFromName.NominalInterval,"Nominal Interval");
		fullNameByTag.put(TagFromName.FrameTime,"Frame Time");
		fullNameByTag.put(TagFromName.CardiacFramingType,"Cardiac Framing Type");
		fullNameByTag.put(TagFromName.FrameTimeVector,"Frame Time Vector");
		fullNameByTag.put(TagFromName.FrameDelay,"Frame Delay");
		fullNameByTag.put(TagFromName.ImageTriggerDelay,"Image Trigger Delay");
		fullNameByTag.put(TagFromName.MultiplexGroupTimeOffset,"Multiplex Group Time Offset");
		fullNameByTag.put(TagFromName.TriggerTimeOffset,"Trigger Time Offset");
		fullNameByTag.put(TagFromName.SynchronizationTrigger,"Synchronization Trigger");
		fullNameByTag.put(TagFromName.SynchronizationChannel,"Synchronization Channel");
		fullNameByTag.put(TagFromName.TriggerSamplePosition,"Trigger Sample Position");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalRoute,"Radiopharmaceutical Route");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalVolume,"Radiopharmaceutical Volume");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalStartTime,"Radiopharmaceutical Start Time");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalStopTime,"Radiopharmaceutical Stop Time");
		fullNameByTag.put(TagFromName.RadionuclideTotalDose,"Radionuclide Total Dose");
		fullNameByTag.put(TagFromName.RadionuclideHalfLife,"Radionuclide Half Life");
		fullNameByTag.put(TagFromName.RadionuclidePositronFraction,"Radionuclide Positron Fraction");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalSpecificActivity,"Radiopharmaceutical Specific Activity");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalStartDateTime,"Radiopharmaceutical Start DateTime");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalStopDateTime,"Radiopharmaceutical Stop DateTime");
		fullNameByTag.put(TagFromName.BeatRejectionFlag,"Beat Rejection Flag");
		fullNameByTag.put(TagFromName.LowRRValue,"Low R-R Value");
		fullNameByTag.put(TagFromName.HighRRValue,"High R-R Value");
		fullNameByTag.put(TagFromName.IntervalsAcquired,"Intervals Acquired");
		fullNameByTag.put(TagFromName.IntervalsRejected,"Intervals Rejected");
		fullNameByTag.put(TagFromName.PVCRejection,"PVC Rejection");
		fullNameByTag.put(TagFromName.SkipBeats,"Skip Beats");
		fullNameByTag.put(TagFromName.HeartRate,"Heart Rate");
		fullNameByTag.put(TagFromName.CardiacNumberOfImages,"Cardiac Number of Images");
		fullNameByTag.put(TagFromName.TriggerWindow,"Trigger Window");
		fullNameByTag.put(TagFromName.ReconstructionDiameter,"Reconstruction Diameter");
		fullNameByTag.put(TagFromName.DistanceSourceToDetector,"Distance Source to Detector");
		fullNameByTag.put(TagFromName.DistanceSourceToPatient,"Distance Source to Patient");
		fullNameByTag.put(TagFromName.EstimatedRadiographicMagnificationFactor,"Estimated Radiographic Magnification Factor");
		fullNameByTag.put(TagFromName.GantryDetectorTilt,"Gantry/Detector Tilt");
		fullNameByTag.put(TagFromName.GantryDetectorSlew,"Gantry/Detector Slew");
		fullNameByTag.put(TagFromName.TableHeight,"Table Height");
		fullNameByTag.put(TagFromName.TableTraverse,"Table Traverse");
		fullNameByTag.put(TagFromName.TableMotion,"Table Motion");
		fullNameByTag.put(TagFromName.TableVerticalIncrement,"Table Vertical Increment");
		fullNameByTag.put(TagFromName.TableLateralIncrement,"Table Lateral Increment");
		fullNameByTag.put(TagFromName.TableLongitudinalIncrement,"Table Longitudinal Increment");
		fullNameByTag.put(TagFromName.TableAngle,"Table Angle");
		fullNameByTag.put(TagFromName.TableType,"Table Type");
		fullNameByTag.put(TagFromName.RotationDirection,"Rotation Direction");
		fullNameByTag.put(TagFromName.AngularPosition,"Angular Position");
		fullNameByTag.put(TagFromName.RadialPosition,"Radial Position");
		fullNameByTag.put(TagFromName.ScanArc,"Scan Arc");
		fullNameByTag.put(TagFromName.AngularStep,"Angular Step");
		fullNameByTag.put(TagFromName.CenterOfRotationOffset,"Center of Rotation Offset");
		fullNameByTag.put(TagFromName.RotationOffset,"Rotation Offset");
		fullNameByTag.put(TagFromName.FieldOfViewShape,"Field of View Shape");
		fullNameByTag.put(TagFromName.FieldOfViewDimensions,"Field of View Dimension(s)");
		fullNameByTag.put(TagFromName.ExposureTime,"Exposure Time");
		fullNameByTag.put(TagFromName.XRayTubeCurrent,"X-Ray Tube Current");
		fullNameByTag.put(TagFromName.Exposure,"Exposure");
		fullNameByTag.put(TagFromName.ExposureInuAs,"Exposure in uAs");
		fullNameByTag.put(TagFromName.AveragePulseWidth,"Average Pulse Width");
		fullNameByTag.put(TagFromName.RadiationSetting,"Radiation Setting");
		fullNameByTag.put(TagFromName.RectificationType,"Rectification Type");
		fullNameByTag.put(TagFromName.RadiationMode,"Radiation Mode");
		fullNameByTag.put(TagFromName.ImageAndFluoroscopyAreaDoseProduct,"Image and Fluoroscopy Area Dose Product");
		fullNameByTag.put(TagFromName.FilterType,"Filter Type");
		fullNameByTag.put(TagFromName.TypeOfFilters,"Type of Filters");
		fullNameByTag.put(TagFromName.IntensifierSize,"Intensifier Size");
		fullNameByTag.put(TagFromName.ImagerPixelSpacing,"Imager Pixel Spacing");
		fullNameByTag.put(TagFromName.Grid,"Grid");
		fullNameByTag.put(TagFromName.GeneratorPower,"Generator Power");
		fullNameByTag.put(TagFromName.CollimatorGridName,"Collimator/grid Name");
		fullNameByTag.put(TagFromName.CollimatorType,"Collimator Type");
		fullNameByTag.put(TagFromName.FocalDistance,"Focal Distance");
		fullNameByTag.put(TagFromName.XFocusCenter,"X Focus Center");
		fullNameByTag.put(TagFromName.YFocusCenter,"Y Focus Center");
		fullNameByTag.put(TagFromName.FocalSpots,"Focal Spot(s)");
		fullNameByTag.put(TagFromName.AnodeTargetMaterial,"Anode Target Material");
		fullNameByTag.put(TagFromName.BodyPartThickness,"Body Part Thickness");
		fullNameByTag.put(TagFromName.CompressionForce,"Compression Force");
		fullNameByTag.put(TagFromName.CompressionPressure,"Compression Pressure");
		fullNameByTag.put(TagFromName.PaddleDescription,"Paddle Description");
		fullNameByTag.put(TagFromName.CompressionContactArea,"Compression Contact Area");
		fullNameByTag.put(TagFromName.DateOfLastCalibration,"Date of Last Calibration");
		fullNameByTag.put(TagFromName.TimeOfLastCalibration,"Time of Last Calibration");
		fullNameByTag.put(TagFromName.DateTimeOfLastCalibration,"DateTime of Last Calibration");
		fullNameByTag.put(TagFromName.ConvolutionKernel,"Convolution Kernel");
		fullNameByTag.put(TagFromName.UpperLowerPixelValues,"Upper/Lower Pixel Values");
		fullNameByTag.put(TagFromName.ActualFrameDuration,"Actual Frame Duration");
		fullNameByTag.put(TagFromName.CountRate,"Count Rate");
		fullNameByTag.put(TagFromName.PreferredPlaybackSequencing,"Preferred Playback Sequencing");
		fullNameByTag.put(TagFromName.ReceiveCoilName,"Receive Coil Name");
		fullNameByTag.put(TagFromName.TransmitCoilName,"Transmit Coil Name");
		fullNameByTag.put(TagFromName.PlateType,"Plate Type");
		fullNameByTag.put(TagFromName.PhosphorType,"Phosphor Type");
		fullNameByTag.put(TagFromName.WaterEquivalentDiameter,"Water Equivalent Diameter");
		fullNameByTag.put(TagFromName.WaterEquivalentDiameterCalculationMethodCodeSequence,"Water Equivalent Diameter Calculation Method Code Sequence");
		fullNameByTag.put(TagFromName.ScanVelocity,"Scan Velocity");
		fullNameByTag.put(TagFromName.WholeBodyTechnique,"Whole Body Technique");
		fullNameByTag.put(TagFromName.ScanLength,"Scan Length");
		fullNameByTag.put(TagFromName.AcquisitionMatrix,"Acquisition Matrix");
		fullNameByTag.put(TagFromName.InPlanePhaseEncodingDirection,"In-plane Phase Encoding Direction");
		fullNameByTag.put(TagFromName.FlipAngle,"Flip Angle");
		fullNameByTag.put(TagFromName.VariableFlipAngleFlag,"Variable Flip Angle Flag");
		fullNameByTag.put(TagFromName.SAR,"SAR");
		fullNameByTag.put(TagFromName.dBdt,"dB/dt");
		fullNameByTag.put(TagFromName.B1rms,"B1rms");
		fullNameByTag.put(TagFromName.AcquisitionDeviceProcessingDescription,"Acquisition Device Processing Description");
		fullNameByTag.put(TagFromName.AcquisitionDeviceProcessingCode,"Acquisition Device Processing Code");
		fullNameByTag.put(TagFromName.CassetteOrientation,"Cassette Orientation");
		fullNameByTag.put(TagFromName.CassetteSize,"Cassette Size");
		fullNameByTag.put(TagFromName.ExposuresOnPlate,"Exposures on Plate");
		fullNameByTag.put(TagFromName.RelativeXRayExposure,"Relative X-Ray Exposure");
		fullNameByTag.put(TagFromName.ExposureIndex,"Exposure Index");
		fullNameByTag.put(TagFromName.TargetExposureIndex,"Target Exposure Index");
		fullNameByTag.put(TagFromName.DeviationIndex,"Deviation Index");
		fullNameByTag.put(TagFromName.ColumnAngulation,"Column Angulation");
		fullNameByTag.put(TagFromName.TomoLayerHeight,"Tomo Layer Height");
		fullNameByTag.put(TagFromName.TomoAngle,"Tomo Angle");
		fullNameByTag.put(TagFromName.TomoTime,"Tomo Time");
		fullNameByTag.put(TagFromName.TomoType,"Tomo Type");
		fullNameByTag.put(TagFromName.TomoClass,"Tomo Class");
		fullNameByTag.put(TagFromName.NumberOfTomosynthesisSourceImages,"Number of Tomosynthesis Source Images");
		fullNameByTag.put(TagFromName.PositionerMotion,"Positioner Motion");
		fullNameByTag.put(TagFromName.PositionerType,"Positioner Type");
		fullNameByTag.put(TagFromName.PositionerPrimaryAngle,"Positioner Primary Angle");
		fullNameByTag.put(TagFromName.PositionerSecondaryAngle,"Positioner Secondary Angle");
		fullNameByTag.put(TagFromName.PositionerPrimaryAngleIncrement,"Positioner Primary Angle Increment");
		fullNameByTag.put(TagFromName.PositionerSecondaryAngleIncrement,"Positioner Secondary Angle Increment");
		fullNameByTag.put(TagFromName.DetectorPrimaryAngle,"Detector Primary Angle");
		fullNameByTag.put(TagFromName.DetectorSecondaryAngle,"Detector Secondary Angle");
		fullNameByTag.put(TagFromName.ShutterShape,"Shutter Shape");
		fullNameByTag.put(TagFromName.ShutterLeftVerticalEdge,"Shutter Left Vertical Edge");
		fullNameByTag.put(TagFromName.ShutterRightVerticalEdge,"Shutter Right Vertical Edge");
		fullNameByTag.put(TagFromName.ShutterUpperHorizontalEdge,"Shutter Upper Horizontal Edge");
		fullNameByTag.put(TagFromName.ShutterLowerHorizontalEdge,"Shutter Lower Horizontal Edge");
		fullNameByTag.put(TagFromName.CenterOfCircularShutter,"Center of Circular Shutter");
		fullNameByTag.put(TagFromName.RadiusOfCircularShutter,"Radius of Circular Shutter");
		fullNameByTag.put(TagFromName.VerticesOfThePolygonalShutter,"Vertices of the Polygonal Shutter");
		fullNameByTag.put(TagFromName.ShutterPresentationValue,"Shutter Presentation Value");
		fullNameByTag.put(TagFromName.ShutterOverlayGroup,"Shutter Overlay Group");
		fullNameByTag.put(TagFromName.ShutterPresentationColorCIELabValue,"Shutter Presentation Color CIELab Value");
		fullNameByTag.put(TagFromName.CollimatorShape,"Collimator Shape");
		fullNameByTag.put(TagFromName.CollimatorLeftVerticalEdge,"Collimator Left Vertical Edge");
		fullNameByTag.put(TagFromName.CollimatorRightVerticalEdge,"Collimator Right Vertical Edge");
		fullNameByTag.put(TagFromName.CollimatorUpperHorizontalEdge,"Collimator Upper Horizontal Edge");
		fullNameByTag.put(TagFromName.CollimatorLowerHorizontalEdge,"Collimator Lower Horizontal Edge");
		fullNameByTag.put(TagFromName.CenterOfCircularCollimator,"Center of Circular Collimator");
		fullNameByTag.put(TagFromName.RadiusOfCircularCollimator,"Radius of Circular Collimator");
		fullNameByTag.put(TagFromName.VerticesOfThePolygonalCollimator,"Vertices of the Polygonal Collimator");
		fullNameByTag.put(TagFromName.AcquisitionTimeSynchronized,"Acquisition Time Synchronized");
		fullNameByTag.put(TagFromName.TimeSource,"Time Source");
		fullNameByTag.put(TagFromName.TimeDistributionProtocol,"Time Distribution Protocol");
		fullNameByTag.put(TagFromName.NTPSourceAddress,"NTP Source Address");
		fullNameByTag.put(TagFromName.PageNumberVector,"Page Number Vector");
		fullNameByTag.put(TagFromName.FrameLabelVector,"Frame Label Vector");
		fullNameByTag.put(TagFromName.FramePrimaryAngleVector,"Frame Primary Angle Vector");
		fullNameByTag.put(TagFromName.FrameSecondaryAngleVector,"Frame Secondary Angle Vector");
		fullNameByTag.put(TagFromName.SliceLocationVector,"Slice Location Vector");
		fullNameByTag.put(TagFromName.DisplayWindowLabelVector,"Display Window Label Vector");
		fullNameByTag.put(TagFromName.NominalScannedPixelSpacing,"Nominal Scanned Pixel Spacing");
		fullNameByTag.put(TagFromName.DigitizingDeviceTransportDirection,"Digitizing Device Transport Direction");
		fullNameByTag.put(TagFromName.RotationOfScannedFilm,"Rotation of Scanned Film");
		fullNameByTag.put(TagFromName.BiopsyTargetSequence,"Biopsy Target Sequence");
		fullNameByTag.put(TagFromName.TargetUID,"Target UID");
		fullNameByTag.put(TagFromName.LocalizingCursorPosition,"Localizing Cursor Position");
		fullNameByTag.put(TagFromName.CalculatedTargetPosition,"Calculated Target Position");
		fullNameByTag.put(TagFromName.TargetLabel,"Target Label");
		fullNameByTag.put(TagFromName.DisplayedZValue,"Displayed Z Value");
		fullNameByTag.put(TagFromName.IVUSAcquisition,"IVUS Acquisition");
		fullNameByTag.put(TagFromName.IVUSPullbackRate,"IVUS Pullback Rate");
		fullNameByTag.put(TagFromName.IVUSGatedRate,"IVUS Gated Rate");
		fullNameByTag.put(TagFromName.IVUSPullbackStartFrameNumber,"IVUS Pullback Start Frame Number");
		fullNameByTag.put(TagFromName.IVUSPullbackStopFrameNumber,"IVUS Pullback Stop Frame Number");
		fullNameByTag.put(TagFromName.LesionNumber,"Lesion Number");
		fullNameByTag.put(TagFromName.AcquisitionComments,"Acquisition Comments");
		fullNameByTag.put(TagFromName.OutputPower,"Output Power");
		fullNameByTag.put(TagFromName.TransducerData,"Transducer Data");
		fullNameByTag.put(TagFromName.FocusDepth,"Focus Depth");
		fullNameByTag.put(TagFromName.ProcessingFunction,"Processing Function");
		fullNameByTag.put(TagFromName.PostprocessingFunction,"Postprocessing Function");
		fullNameByTag.put(TagFromName.MechanicalIndex,"Mechanical Index");
		fullNameByTag.put(TagFromName.BoneThermalIndex,"Bone Thermal Index");
		fullNameByTag.put(TagFromName.CranialThermalIndex,"Cranial Thermal Index");
		fullNameByTag.put(TagFromName.SoftTissueThermalIndex,"Soft Tissue Thermal Index");
		fullNameByTag.put(TagFromName.SoftTissueFocusThermalIndex,"Soft Tissue-focus Thermal Index");
		fullNameByTag.put(TagFromName.SoftTissueSurfaceThermalIndex,"Soft Tissue-surface Thermal Index");
		fullNameByTag.put(TagFromName.DynamicRange,"Dynamic Range");
		fullNameByTag.put(TagFromName.TotalGain,"Total Gain");
		fullNameByTag.put(TagFromName.DepthOfScanField,"Depth of Scan Field");
		fullNameByTag.put(TagFromName.PatientPosition,"Patient Position");
		fullNameByTag.put(TagFromName.ViewPosition,"View Position");
		fullNameByTag.put(TagFromName.ProjectionEponymousNameCodeSequence,"Projection Eponymous Name Code Sequence");
		fullNameByTag.put(TagFromName.ImageTransformationMatrix,"Image Transformation Matrix");
		fullNameByTag.put(TagFromName.ImageTranslationVector,"Image Translation Vector");
		fullNameByTag.put(TagFromName.Sensitivity,"Sensitivity");
		fullNameByTag.put(TagFromName.SequenceOfUltrasoundRegions,"Sequence of Ultrasound Regions");
		fullNameByTag.put(TagFromName.RegionSpatialFormat,"Region Spatial Format");
		fullNameByTag.put(TagFromName.RegionDataType,"Region Data Type");
		fullNameByTag.put(TagFromName.RegionFlags,"Region Flags");
		fullNameByTag.put(TagFromName.RegionLocationMinX0,"Region Location Min X0");
		fullNameByTag.put(TagFromName.RegionLocationMinY0,"Region Location Min Y0");
		fullNameByTag.put(TagFromName.RegionLocationMaxX1,"Region Location Max X1");
		fullNameByTag.put(TagFromName.RegionLocationMaxY1,"Region Location Max Y1");
		fullNameByTag.put(TagFromName.ReferencePixelX0,"Reference Pixel X0");
		fullNameByTag.put(TagFromName.ReferencePixelY0,"Reference Pixel Y0");
		fullNameByTag.put(TagFromName.PhysicalUnitsXDirection,"Physical Units X Direction");
		fullNameByTag.put(TagFromName.PhysicalUnitsYDirection,"Physical Units Y Direction");
		fullNameByTag.put(TagFromName.ReferencePixelPhysicalValueX,"Reference Pixel Physical Value X");
		fullNameByTag.put(TagFromName.ReferencePixelPhysicalValueY,"Reference Pixel Physical Value Y");
		fullNameByTag.put(TagFromName.PhysicalDeltaX,"Physical Delta X");
		fullNameByTag.put(TagFromName.PhysicalDeltaY,"Physical Delta Y");
		fullNameByTag.put(TagFromName.TransducerFrequency,"Transducer Frequency");
		fullNameByTag.put(TagFromName.TransducerType,"Transducer Type");
		fullNameByTag.put(TagFromName.PulseRepetitionFrequency,"Pulse Repetition Frequency");
		fullNameByTag.put(TagFromName.DopplerCorrectionAngle,"Doppler Correction Angle");
		fullNameByTag.put(TagFromName.SteeringAngle,"Steering Angle");
		fullNameByTag.put(TagFromName.DopplerSampleVolumeXPositionRetired,"Doppler Sample Volume X Position (Retired)");
		fullNameByTag.put(TagFromName.DopplerSampleVolumeXPosition,"Doppler Sample Volume X Position");
		fullNameByTag.put(TagFromName.DopplerSampleVolumeYPositionRetired,"Doppler Sample Volume Y Position (Retired)");
		fullNameByTag.put(TagFromName.DopplerSampleVolumeYPosition,"Doppler Sample Volume Y Position");
		fullNameByTag.put(TagFromName.TMLinePositionX0Retired,"TM-Line Position X0 (Retired)");
		fullNameByTag.put(TagFromName.TMLinePositionX0,"TM-Line Position X0");
		fullNameByTag.put(TagFromName.TMLinePositionY0Retired,"TM-Line Position Y0 (Retired)");
		fullNameByTag.put(TagFromName.TMLinePositionY0,"TM-Line Position Y0");
		fullNameByTag.put(TagFromName.TMLinePositionX1Retired,"TM-Line Position X1 (Retired)");
		fullNameByTag.put(TagFromName.TMLinePositionX1,"TM-Line Position X1");
		fullNameByTag.put(TagFromName.TMLinePositionY1Retired,"TM-Line Position Y1 (Retired)");
		fullNameByTag.put(TagFromName.TMLinePositionY1,"TM-Line Position Y1");
		fullNameByTag.put(TagFromName.PixelComponentOrganization,"Pixel Component Organization");
		fullNameByTag.put(TagFromName.PixelComponentMask,"Pixel Component Mask");
		fullNameByTag.put(TagFromName.PixelComponentRangeStart,"Pixel Component Range Start");
		fullNameByTag.put(TagFromName.PixelComponentRangeStop,"Pixel Component Range Stop");
		fullNameByTag.put(TagFromName.PixelComponentPhysicalUnits,"Pixel Component Physical Units");
		fullNameByTag.put(TagFromName.PixelComponentDataType,"Pixel Component Data Type");
		fullNameByTag.put(TagFromName.NumberOfTableBreakPoints,"Number of Table Break Points");
		fullNameByTag.put(TagFromName.TableOfXBreakPoints,"Table of X Break Points");
		fullNameByTag.put(TagFromName.TableOfYBreakPoints,"Table of Y Break Points");
		fullNameByTag.put(TagFromName.NumberOfTableEntries,"Number of Table Entries");
		fullNameByTag.put(TagFromName.TableOfPixelValues,"Table of Pixel Values");
		fullNameByTag.put(TagFromName.TableOfParameterValues,"Table of Parameter Values");
		fullNameByTag.put(TagFromName.RWaveTimeVector,"R Wave Time Vector");
		fullNameByTag.put(TagFromName.DetectorConditionsNominalFlag,"Detector Conditions Nominal Flag");
		fullNameByTag.put(TagFromName.DetectorTemperature,"Detector Temperature");
		fullNameByTag.put(TagFromName.DetectorType,"Detector Type");
		fullNameByTag.put(TagFromName.DetectorConfiguration,"Detector Configuration");
		fullNameByTag.put(TagFromName.DetectorDescription,"Detector Description");
		fullNameByTag.put(TagFromName.DetectorMode,"Detector Mode");
		fullNameByTag.put(TagFromName.DetectorID,"Detector ID");
		fullNameByTag.put(TagFromName.DateOfLastDetectorCalibration,"Date of Last Detector Calibration ");
		fullNameByTag.put(TagFromName.TimeOfLastDetectorCalibration,"Time of Last Detector Calibration");
		fullNameByTag.put(TagFromName.ExposuresOnDetectorSinceLastCalibration,"Exposures on Detector Since Last Calibration");
		fullNameByTag.put(TagFromName.ExposuresOnDetectorSinceManufactured,"Exposures on Detector Since Manufactured");
		fullNameByTag.put(TagFromName.DetectorTimeSinceLastExposure,"Detector Time Since Last Exposure");
		fullNameByTag.put(TagFromName.DetectorActiveTime,"Detector Active Time");
		fullNameByTag.put(TagFromName.DetectorActivationOffsetFromExposure,"Detector Activation Offset From Exposure");
		fullNameByTag.put(TagFromName.DetectorBinning,"Detector Binning");
		fullNameByTag.put(TagFromName.DetectorElementPhysicalSize,"Detector Element Physical Size");
		fullNameByTag.put(TagFromName.DetectorElementSpacing,"Detector Element Spacing");
		fullNameByTag.put(TagFromName.DetectorActiveShape,"Detector Active Shape");
		fullNameByTag.put(TagFromName.DetectorActiveDimensions,"Detector Active Dimension(s)");
		fullNameByTag.put(TagFromName.DetectorActiveOrigin,"Detector Active Origin");
		fullNameByTag.put(TagFromName.DetectorManufacturerName,"Detector Manufacturer Name");
		fullNameByTag.put(TagFromName.DetectorManufacturerModelName,"Detector Manufacturer's Model Name");
		fullNameByTag.put(TagFromName.FieldOfViewOrigin,"Field of View Origin");
		fullNameByTag.put(TagFromName.FieldOfViewRotation,"Field of View Rotation");
		fullNameByTag.put(TagFromName.FieldOfViewHorizontalFlip,"Field of View Horizontal Flip");
		fullNameByTag.put(TagFromName.PixelDataAreaOriginRelativeToFOV,"Pixel Data Area Origin Relative To FOV");
		fullNameByTag.put(TagFromName.PixelDataAreaRotationAngleRelativeToFOV,"Pixel Data Area Rotation Angle Relative To FOV");
		fullNameByTag.put(TagFromName.GridAbsorbingMaterial,"Grid Absorbing Material");
		fullNameByTag.put(TagFromName.GridSpacingMaterial,"Grid Spacing Material");
		fullNameByTag.put(TagFromName.GridThickness,"Grid Thickness");
		fullNameByTag.put(TagFromName.GridPitch,"Grid Pitch");
		fullNameByTag.put(TagFromName.GridAspectRatio,"Grid Aspect Ratio");
		fullNameByTag.put(TagFromName.GridPeriod,"Grid Period");
		fullNameByTag.put(TagFromName.GridFocalDistance,"Grid Focal Distance");
		fullNameByTag.put(TagFromName.FilterMaterial,"Filter Material");
		fullNameByTag.put(TagFromName.FilterThicknessMinimum,"Filter Thickness Minimum");
		fullNameByTag.put(TagFromName.FilterThicknessMaximum,"Filter Thickness Maximum");
		fullNameByTag.put(TagFromName.FilterBeamPathLengthMinimum,"Filter Beam Path Length Minimum");
		fullNameByTag.put(TagFromName.FilterBeamPathLengthMaximum,"Filter Beam Path Length Maximum");
		fullNameByTag.put(TagFromName.ExposureControlMode,"Exposure Control Mode");
		fullNameByTag.put(TagFromName.ExposureControlModeDescription,"Exposure Control Mode Description");
		fullNameByTag.put(TagFromName.ExposureStatus,"Exposure Status");
		fullNameByTag.put(TagFromName.PhototimerSetting,"Phototimer Setting");
		fullNameByTag.put(TagFromName.ExposureTimeInuS,"Exposure Time in uS");
		fullNameByTag.put(TagFromName.XRayTubeCurrentInuA,"X-Ray Tube Current in uA");
		fullNameByTag.put(TagFromName.ContentQualification,"Content Qualification");
		fullNameByTag.put(TagFromName.PulseSequenceName,"Pulse Sequence Name");
		fullNameByTag.put(TagFromName.MRImagingModifierSequence,"MR Imaging Modifier Sequence");
		fullNameByTag.put(TagFromName.EchoPulseSequence,"Echo Pulse Sequence");
		fullNameByTag.put(TagFromName.InversionRecovery,"Inversion Recovery");
		fullNameByTag.put(TagFromName.FlowCompensation,"Flow Compensation");
		fullNameByTag.put(TagFromName.MultipleSpinEcho,"Multiple Spin Echo");
		fullNameByTag.put(TagFromName.MultiPlanarExcitation,"Multi-planar Excitation");
		fullNameByTag.put(TagFromName.PhaseContrast,"Phase Contrast");
		fullNameByTag.put(TagFromName.TimeOfFlightContrast,"Time of Flight Contrast");
		fullNameByTag.put(TagFromName.Spoiling,"Spoiling");
		fullNameByTag.put(TagFromName.SteadyStatePulseSequence,"Steady State Pulse Sequence");
		fullNameByTag.put(TagFromName.EchoPlanarPulseSequence,"Echo Planar Pulse Sequence");
		fullNameByTag.put(TagFromName.TagAngleFirstAxis,"Tag Angle First Axis");
		fullNameByTag.put(TagFromName.MagnetizationTransfer,"Magnetization Transfer");
		fullNameByTag.put(TagFromName.T2Preparation,"T2 Preparation");
		fullNameByTag.put(TagFromName.BloodSignalNulling,"Blood Signal Nulling");
		fullNameByTag.put(TagFromName.SaturationRecovery,"Saturation Recovery");
		fullNameByTag.put(TagFromName.SpectrallySelectedSuppression,"Spectrally Selected Suppression");
		fullNameByTag.put(TagFromName.SpectrallySelectedExcitation,"Spectrally Selected Excitation");
		fullNameByTag.put(TagFromName.SpatialPresaturation,"Spatial Pre-saturation");
		fullNameByTag.put(TagFromName.Tagging,"Tagging");
		fullNameByTag.put(TagFromName.OversamplingPhase,"Oversampling Phase");
		fullNameByTag.put(TagFromName.TagSpacingFirstDimension,"Tag Spacing First Dimension");
		fullNameByTag.put(TagFromName.GeometryOfKSpaceTraversal,"Geometry of k-Space Traversal");
		fullNameByTag.put(TagFromName.SegmentedKSpaceTraversal,"Segmented k-Space Traversal");
		fullNameByTag.put(TagFromName.RectilinearPhaseEncodeReordering,"Rectilinear Phase Encode Reordering");
		fullNameByTag.put(TagFromName.TagThickness,"Tag Thickness");
		fullNameByTag.put(TagFromName.PartialFourierDirection,"Partial Fourier Direction");
		fullNameByTag.put(TagFromName.CardiacSynchronizationTechnique,"Cardiac Synchronization Technique");
		fullNameByTag.put(TagFromName.ReceiveCoilManufacturerName,"Receive Coil Manufacturer Name");
		fullNameByTag.put(TagFromName.MRReceiveCoilSequence,"MR Receive Coil Sequence");
		fullNameByTag.put(TagFromName.ReceiveCoilType,"Receive Coil Type ");
		fullNameByTag.put(TagFromName.QuadratureReceiveCoil,"Quadrature Receive Coil ");
		fullNameByTag.put(TagFromName.MultiCoilDefinitionSequence,"Multi-Coil Definition Sequence");
		fullNameByTag.put(TagFromName.MultiCoilConfiguration,"Multi-Coil Configuration ");
		fullNameByTag.put(TagFromName.MultiCoilElementName,"Multi-Coil Element Name");
		fullNameByTag.put(TagFromName.MultiCoilElementUsed,"Multi-Coil Element Used");
		fullNameByTag.put(TagFromName.MRTransmitCoilSequence,"MR Transmit Coil Sequence");
		fullNameByTag.put(TagFromName.TransmitCoilManufacturerName,"Transmit Coil Manufacturer Name");
		fullNameByTag.put(TagFromName.TransmitCoilType,"Transmit Coil Type");
		fullNameByTag.put(TagFromName.SpectralWidth,"Spectral Width");
		fullNameByTag.put(TagFromName.ChemicalShiftReference,"Chemical Shift Reference");
		fullNameByTag.put(TagFromName.VolumeLocalizationTechnique,"Volume Localization Technique");
		fullNameByTag.put(TagFromName.MRAcquisitionFrequencyEncodingSteps,"MR Acquisition Frequency Encoding Steps");
		fullNameByTag.put(TagFromName.Decoupling,"De-coupling");
		fullNameByTag.put(TagFromName.DecoupledNucleus,"De-coupled Nucleus");
		fullNameByTag.put(TagFromName.DecouplingFrequency,"De-coupling Frequency");
		fullNameByTag.put(TagFromName.DecouplingMethod,"De-coupling Method");
		fullNameByTag.put(TagFromName.DecouplingChemicalShiftReference,"De-coupling Chemical Shift Reference");
		fullNameByTag.put(TagFromName.KSpaceFiltering,"k-space Filtering");
		fullNameByTag.put(TagFromName.TimeDomainFiltering,"Time Domain Filtering");
		fullNameByTag.put(TagFromName.NumberOfZeroFills,"Number of Zero Fills");
		fullNameByTag.put(TagFromName.BaselineCorrection,"Baseline Correction");
		fullNameByTag.put(TagFromName.ParallelReductionFactorInPlane,"Parallel Reduction Factor In-plane");
		fullNameByTag.put(TagFromName.CardiacRRIntervalSpecified,"Cardiac R-R Interval Specified");
		fullNameByTag.put(TagFromName.AcquisitionDuration,"Acquisition Duration");
		fullNameByTag.put(TagFromName.FrameAcquisitionDateTime,"Frame Acquisition DateTime");
		fullNameByTag.put(TagFromName.DiffusionDirectionality,"Diffusion Directionality");
		fullNameByTag.put(TagFromName.DiffusionGradientDirectionSequence,"Diffusion Gradient Direction Sequence");
		fullNameByTag.put(TagFromName.ParallelAcquisition,"Parallel Acquisition");
		fullNameByTag.put(TagFromName.ParallelAcquisitionTechnique,"Parallel Acquisition Technique");
		fullNameByTag.put(TagFromName.InversionTimes,"Inversion Times");
		fullNameByTag.put(TagFromName.MetaboliteMapDescription,"Metabolite Map Description");
		fullNameByTag.put(TagFromName.PartialFourier,"Partial Fourier");
		fullNameByTag.put(TagFromName.EffectiveEchoTime,"Effective Echo Time");
		fullNameByTag.put(TagFromName.MetaboliteMapCodeSequence,"Metabolite MapCode Sequence");
		fullNameByTag.put(TagFromName.ChemicalShiftSequence,"Chemical Shift Sequence");
		fullNameByTag.put(TagFromName.CardiacSignalSource,"Cardiac Signal Source");
		fullNameByTag.put(TagFromName.DiffusionBValue,"Diffusion b-value");
		fullNameByTag.put(TagFromName.DiffusionGradientOrientation,"Diffusion Gradient Orientation");
		fullNameByTag.put(TagFromName.VelocityEncodingDirection,"Velocity Encoding Direction");
		fullNameByTag.put(TagFromName.VelocityEncodingMinimumValue,"Velocity Encoding Minimum Value");
		fullNameByTag.put(TagFromName.VelocityEncodingAcquisitionSequence,"Velocity Encoding Acquisition Sequence");
		fullNameByTag.put(TagFromName.NumberOfKSpaceTrajectories,"Number of k-Space Trajectories");
		fullNameByTag.put(TagFromName.CoverageOfKSpace,"Coverage of k-Space");
		fullNameByTag.put(TagFromName.SpectroscopyAcquisitionPhaseRows,"Spectroscopy Acquisition Phase Rows");
		fullNameByTag.put(TagFromName.ParallelReductionFactorInPlaneRetired,"Parallel Reduction Factor In-plane (Retired)");
		fullNameByTag.put(TagFromName.TransmitterFrequency,"Transmitter Frequency");
		fullNameByTag.put(TagFromName.ResonantNucleus,"Resonant Nucleus");
		fullNameByTag.put(TagFromName.FrequencyCorrection,"Frequency Correction");
		fullNameByTag.put(TagFromName.MRSpectroscopyFOVGeometrySequence,"MR Spectroscopy FOV/Geometry Sequence");
		fullNameByTag.put(TagFromName.SlabThickness,"Slab Thickness");
		fullNameByTag.put(TagFromName.SlabOrientation,"Slab Orientation");
		fullNameByTag.put(TagFromName.MidSlabPosition,"Mid Slab Position");
		fullNameByTag.put(TagFromName.MRSpatialSaturationSequence,"MR Spatial Saturation Sequence");
		fullNameByTag.put(TagFromName.MRTimingAndRelatedParametersSequence,"MR Timing and Related Parameters Sequence");
		fullNameByTag.put(TagFromName.MREchoSequence,"MR Echo Sequence");
		fullNameByTag.put(TagFromName.MRModifierSequence,"MR Modifier Sequence");
		fullNameByTag.put(TagFromName.MRDiffusionSequence,"MR Diffusion Sequence");
		fullNameByTag.put(TagFromName.CardiacSynchronizationSequence,"Cardiac Synchronization Sequence");
		fullNameByTag.put(TagFromName.MRAveragesSequence,"MR Averages Sequence");
		fullNameByTag.put(TagFromName.MRFOVGeometrySequence,"MR FOV/Geometry Sequence");
		fullNameByTag.put(TagFromName.VolumeLocalizationSequence,"Volume Localization Sequence");
		fullNameByTag.put(TagFromName.SpectroscopyAcquisitionDataColumns,"Spectroscopy Acquisition Data Columns");
		fullNameByTag.put(TagFromName.DiffusionAnisotropyType,"Diffusion Anisotropy Type");
		fullNameByTag.put(TagFromName.FrameReferenceDateTime,"Frame Reference DateTime");
		fullNameByTag.put(TagFromName.MRMetaboliteMapSequence,"MR Metabolite Map Sequence");
		fullNameByTag.put(TagFromName.ParallelReductionFactorOutOfPlane,"Parallel Reduction Factor out-of-plane");
		fullNameByTag.put(TagFromName.SpectroscopyAcquisitionOutOfPlanePhaseSteps,"Spectroscopy Acquisition Out-of-plane Phase Steps");
		fullNameByTag.put(TagFromName.BulkMotionStatus,"Bulk Motion Status");
		fullNameByTag.put(TagFromName.ParallelReductionFactorSecondInPlane,"Parallel Reduction Factor Second In-plane");
		fullNameByTag.put(TagFromName.CardiacBeatRejectionTechnique,"Cardiac Beat Rejection Technique");
		fullNameByTag.put(TagFromName.RespiratoryMotionCompensationTechnique,"Respiratory Motion Compensation Technique");
		fullNameByTag.put(TagFromName.RespiratorySignalSource,"Respiratory Signal Source");
		fullNameByTag.put(TagFromName.BulkMotionCompensationTechnique,"Bulk Motion Compensation Technique");
		fullNameByTag.put(TagFromName.BulkMotionSignalSource,"Bulk Motion Signal Source");
		fullNameByTag.put(TagFromName.ApplicableSafetyStandardAgency,"Applicable Safety Standard Agency");
		fullNameByTag.put(TagFromName.ApplicableSafetyStandardDescription,"Applicable Safety Standard Description");
		fullNameByTag.put(TagFromName.OperatingModeSequence,"Operating Mode Sequence");
		fullNameByTag.put(TagFromName.OperatingModeType,"Operating Mode Type");
		fullNameByTag.put(TagFromName.OperatingMode,"Operating Mode");
		fullNameByTag.put(TagFromName.SpecificAbsorptionRateDefinition,"Specific Absorption Rate Definition");
		fullNameByTag.put(TagFromName.GradientOutputType,"Gradient Output Type");
		fullNameByTag.put(TagFromName.SpecificAbsorptionRateValue,"Specific Absorption Rate Value");
		fullNameByTag.put(TagFromName.GradientOutput,"Gradient Output");
		fullNameByTag.put(TagFromName.FlowCompensationDirection,"Flow Compensation Direction");
		fullNameByTag.put(TagFromName.TaggingDelay,"Tagging Delay");
		fullNameByTag.put(TagFromName.RespiratoryMotionCompensationTechniqueDescription,"Respiratory Motion Compensation Technique Description");
		fullNameByTag.put(TagFromName.RespiratorySignalSourceID,"Respiratory Signal Source ID");
		fullNameByTag.put(TagFromName.ChemicalShiftMinimumIntegrationLimitInHz,"Chemical Shift Minimum Integration Limit in Hz");
		fullNameByTag.put(TagFromName.ChemicalShiftMaximumIntegrationLimitInHz,"Chemical Shift Maximum Integration Limit in Hz");
		fullNameByTag.put(TagFromName.MRVelocityEncodingSequence,"MR Velocity Encoding Sequence");
		fullNameByTag.put(TagFromName.FirstOrderPhaseCorrection,"First Order Phase Correction");
		fullNameByTag.put(TagFromName.WaterReferencedPhaseCorrection,"Water Referenced Phase Correction");
		fullNameByTag.put(TagFromName.MRSpectroscopyAcquisitionType,"MR Spectroscopy Acquisition Type");
		fullNameByTag.put(TagFromName.RespiratoryCyclePosition,"Respiratory Cycle Position");
		fullNameByTag.put(TagFromName.VelocityEncodingMaximumValue,"Velocity Encoding Maximum Value");
		fullNameByTag.put(TagFromName.TagSpacingSecondDimension,"Tag Spacing Second Dimension");
		fullNameByTag.put(TagFromName.TagAngleSecondAxis,"Tag Angle Second Axis");
		fullNameByTag.put(TagFromName.FrameAcquisitionDuration,"Frame Acquisition Duration");
		fullNameByTag.put(TagFromName.MRImageFrameTypeSequence,"MR Image Frame Type Sequence");
		fullNameByTag.put(TagFromName.MRSpectroscopyFrameTypeSequence,"MR Spectroscopy Frame Type Sequence");
		fullNameByTag.put(TagFromName.MRAcquisitionPhaseEncodingStepsInPlane,"MR Acquisition Phase Encoding Steps in-plane");
		fullNameByTag.put(TagFromName.MRAcquisitionPhaseEncodingStepsOutOfPlane,"MR Acquisition Phase Encoding Steps out-of-plane");
		fullNameByTag.put(TagFromName.SpectroscopyAcquisitionPhaseColumns,"Spectroscopy Acquisition Phase Columns");
		fullNameByTag.put(TagFromName.CardiacCyclePosition,"Cardiac Cycle Position");
		fullNameByTag.put(TagFromName.SpecificAbsorptionRateSequence,"Specific Absorption Rate Sequence");
		fullNameByTag.put(TagFromName.RFEchoTrainLength,"RF Echo Train Length");
		fullNameByTag.put(TagFromName.GradientEchoTrainLength,"Gradient Echo Train Length");
		fullNameByTag.put(TagFromName.ArterialSpinLabelingContrast,"Arterial Spin Labeling Contrast");
		fullNameByTag.put(TagFromName.MRArterialSpinLabelingSequence,"MR Arterial Spin Labeling Sequence");
		fullNameByTag.put(TagFromName.ASLTechniqueDescription,"ASL Technique Description");
		fullNameByTag.put(TagFromName.ASLSlabNumber,"ASL Slab Number");
		fullNameByTag.put(TagFromName.ASLSlabThickness,"ASL Slab Thickness");
		fullNameByTag.put(TagFromName.ASLSlabOrientation,"ASL Slab Orientation");
		fullNameByTag.put(TagFromName.ASLMidSlabPosition,"ASL Mid Slab Position");
		fullNameByTag.put(TagFromName.ASLContext,"ASL Context");
		fullNameByTag.put(TagFromName.ASLPulseTrainDuration,"ASL Pulse Train Duration");
		fullNameByTag.put(TagFromName.ASLCrusherFlag,"ASL Crusher Flag");
		fullNameByTag.put(TagFromName.ASLCrusherFlowLimit,"ASL Crusher Flow Limit");
		fullNameByTag.put(TagFromName.ASLCrusherDescription,"ASL Crusher Description");
		fullNameByTag.put(TagFromName.ASLBolusCutoffFlag,"ASL Bolus Cut-off Flag");
		fullNameByTag.put(TagFromName.ASLBolusCutoffTimingSequence,"ASL Bolus Cut-off Timing Sequence");
		fullNameByTag.put(TagFromName.ASLBolusCutoffTechnique,"ASL Bolus Cut-off Technique");
		fullNameByTag.put(TagFromName.ASLBolusCutoffDelayTime,"ASL Bolus Cut-off Delay Time");
		fullNameByTag.put(TagFromName.ASLSlabSequence,"ASL Slab Sequence");
		fullNameByTag.put(TagFromName.ChemicalShiftMinimumIntegrationLimitInppm,"Chemical Shift Minimum Integration Limit in ppm");
		fullNameByTag.put(TagFromName.ChemicalShiftMaximumIntegrationLimitInppm,"Chemical Shift Maximum Integration Limit in ppm");
		fullNameByTag.put(TagFromName.WaterReferenceAcquisition,"Water Reference Acquisition");
		fullNameByTag.put(TagFromName.EchoPeakPosition,"Echo Peak Position");
		fullNameByTag.put(TagFromName.CTAcquisitionTypeSequence,"CT Acquisition Type Sequence");
		fullNameByTag.put(TagFromName.AcquisitionType,"Acquisition Type");
		fullNameByTag.put(TagFromName.TubeAngle,"Tube Angle");
		fullNameByTag.put(TagFromName.CTAcquisitionDetailsSequence,"CT Acquisition Details Sequence");
		fullNameByTag.put(TagFromName.RevolutionTime,"Revolution Time");
		fullNameByTag.put(TagFromName.SingleCollimationWidth,"Single Collimation Width");
		fullNameByTag.put(TagFromName.TotalCollimationWidth,"Total Collimation Width");
		fullNameByTag.put(TagFromName.CTTableDynamicsSequence,"CT Table Dynamics Sequence");
		fullNameByTag.put(TagFromName.TableSpeed,"Table Speed");
		fullNameByTag.put(TagFromName.TableFeedPerRotation,"Table Feed per Rotation");
		fullNameByTag.put(TagFromName.SpiralPitchFactor,"Spiral Pitch Factor");
		fullNameByTag.put(TagFromName.CTGeometrySequence,"CT Geometry Sequence");
		fullNameByTag.put(TagFromName.DataCollectionCenterPatient,"Data Collection Center (Patient)");
		fullNameByTag.put(TagFromName.CTReconstructionSequence,"CT Reconstruction Sequence");
		fullNameByTag.put(TagFromName.ReconstructionAlgorithm,"Reconstruction Algorithm");
		fullNameByTag.put(TagFromName.ConvolutionKernelGroup,"Convolution Kernel Group");
		fullNameByTag.put(TagFromName.ReconstructionFieldOfView,"Reconstruction Field of View");
		fullNameByTag.put(TagFromName.ReconstructionTargetCenterPatient,"Reconstruction Target Center (Patient)");
		fullNameByTag.put(TagFromName.ReconstructionAngle,"Reconstruction Angle");
		fullNameByTag.put(TagFromName.ImageFilter,"Image Filter");
		fullNameByTag.put(TagFromName.CTExposureSequence,"CT Exposure Sequence");
		fullNameByTag.put(TagFromName.ReconstructionPixelSpacing,"Reconstruction Pixel Spacing");
		fullNameByTag.put(TagFromName.ExposureModulationType,"Exposure Modulation Type");
		fullNameByTag.put(TagFromName.EstimatedDoseSaving,"Estimated Dose Saving");
		fullNameByTag.put(TagFromName.CTXRayDetailsSequence,"CT X-Ray Details Sequence");
		fullNameByTag.put(TagFromName.CTPositionSequence,"CT Position Sequence");
		fullNameByTag.put(TagFromName.TablePosition,"Table Position");
		fullNameByTag.put(TagFromName.ExposureTimeInms,"Exposure Time in ms");
		fullNameByTag.put(TagFromName.CTImageFrameTypeSequence,"CT Image Frame Type Sequence");
		fullNameByTag.put(TagFromName.XRayTubeCurrentInmA,"X-Ray Tube Current in mA");
		fullNameByTag.put(TagFromName.ExposureInmAs,"Exposure in mAs");
		fullNameByTag.put(TagFromName.ConstantVolumeFlag,"Constant Volume Flag");
		fullNameByTag.put(TagFromName.FluoroscopyFlag,"Fluoroscopy Flag");
		fullNameByTag.put(TagFromName.DistanceSourceToDataCollectionCenter,"Distance Source to Data Collection Center");
		fullNameByTag.put(TagFromName.ContrastBolusAgentNumber,"Contrast/Bolus Agent Number");
		fullNameByTag.put(TagFromName.ContrastBolusIngredientCodeSequence,"Contrast/Bolus Ingredient Code Sequence");
		fullNameByTag.put(TagFromName.ContrastAdministrationProfileSequence,"Contrast Administration Profile Sequence");
		fullNameByTag.put(TagFromName.ContrastBolusUsageSequence,"Contrast/Bolus Usage Sequence");
		fullNameByTag.put(TagFromName.ContrastBolusAgentAdministered,"Contrast/Bolus Agent Administered");
		fullNameByTag.put(TagFromName.ContrastBolusAgentDetected,"Contrast/Bolus Agent Detected");
		fullNameByTag.put(TagFromName.ContrastBolusAgentPhase,"Contrast/Bolus Agent Phase");
		fullNameByTag.put(TagFromName.CTDIvol,"CTDIvol");
		fullNameByTag.put(TagFromName.CTDIPhantomTypeCodeSequence,"CTDI Phantom Type Code Sequence");
		fullNameByTag.put(TagFromName.CalciumScoringMassFactorPatient,"Calcium Scoring Mass Factor Patient");
		fullNameByTag.put(TagFromName.CalciumScoringMassFactorDevice,"Calcium Scoring Mass Factor Device");
		fullNameByTag.put(TagFromName.EnergyWeightingFactor,"Energy Weighting Factor");
		fullNameByTag.put(TagFromName.CTAdditionalXRaySourceSequence,"CT Additional X-Ray Source Sequence");
		fullNameByTag.put(TagFromName.ProjectionPixelCalibrationSequence,"Projection Pixel Calibration Sequence");
		fullNameByTag.put(TagFromName.DistanceSourceToIsocenter,"Distance Source to Isocenter");
		fullNameByTag.put(TagFromName.DistanceObjectToTableTop,"Distance Object to Table Top");
		fullNameByTag.put(TagFromName.ObjectPixelSpacingInCenterOfBeam,"Object Pixel Spacing in Center of Beam");
		fullNameByTag.put(TagFromName.PositionerPositionSequence,"Positioner Position Sequence");
		fullNameByTag.put(TagFromName.TablePositionSequence,"Table Position Sequence");
		fullNameByTag.put(TagFromName.CollimatorShapeSequence,"Collimator Shape Sequence");
		fullNameByTag.put(TagFromName.PlanesInAcquisition,"Planes in Acquisition");
		fullNameByTag.put(TagFromName.XAXRFFrameCharacteristicsSequence,"XA/XRF Frame Characteristics Sequence");
		fullNameByTag.put(TagFromName.FrameAcquisitionSequence,"Frame Acquisition Sequence");
		fullNameByTag.put(TagFromName.XRayReceptorType,"X-Ray Receptor Type");
		fullNameByTag.put(TagFromName.AcquisitionProtocolName,"Acquisition Protocol Name");
		fullNameByTag.put(TagFromName.AcquisitionProtocolDescription,"Acquisition Protocol Description");
		fullNameByTag.put(TagFromName.ContrastBolusIngredientOpaque,"Contrast/Bolus Ingredient Opaque");
		fullNameByTag.put(TagFromName.DistanceReceptorPlaneToDetectorHousing,"Distance Receptor Plane to Detector Housing");
		fullNameByTag.put(TagFromName.IntensifierActiveShape,"Intensifier Active Shape");
		fullNameByTag.put(TagFromName.IntensifierActiveDimensions,"Intensifier Active Dimension(s)");
		fullNameByTag.put(TagFromName.PhysicalDetectorSize,"Physical Detector Size");
		fullNameByTag.put(TagFromName.PositionOfIsocenterProjection,"Position of Isocenter Projection");
		fullNameByTag.put(TagFromName.FieldOfViewSequence,"Field of View Sequence");
		fullNameByTag.put(TagFromName.FieldOfViewDescription,"Field of View Description");
		fullNameByTag.put(TagFromName.ExposureControlSensingRegionsSequence,"Exposure Control Sensing Regions Sequence");
		fullNameByTag.put(TagFromName.ExposureControlSensingRegionShape,"Exposure Control Sensing Region Shape");
		fullNameByTag.put(TagFromName.ExposureControlSensingRegionLeftVerticalEdge,"Exposure Control Sensing Region Left Vertical Edge");
		fullNameByTag.put(TagFromName.ExposureControlSensingRegionRightVerticalEdge,"Exposure Control Sensing Region Right Vertical Edge");
		fullNameByTag.put(TagFromName.ExposureControlSensingRegionUpperHorizontalEdge,"Exposure Control Sensing Region Upper Horizontal Edge");
		fullNameByTag.put(TagFromName.ExposureControlSensingRegionLowerHorizontalEdge,"Exposure Control Sensing Region Lower Horizontal Edge");
		fullNameByTag.put(TagFromName.CenterOfCircularExposureControlSensingRegion,"Center of Circular Exposure Control Sensing Region");
		fullNameByTag.put(TagFromName.RadiusOfCircularExposureControlSensingRegion,"Radius of Circular Exposure Control Sensing Region");
		fullNameByTag.put(TagFromName.VerticesOfThePolygonalExposureControlSensingRegion,"Vertices of the Polygonal Exposure Control Sensing Region");
		fullNameByTag.put(TagFromName.ColumnAngulationPatient,"Column Angulation (Patient)");
		fullNameByTag.put(TagFromName.BeamAngle,"Beam Angle");
		fullNameByTag.put(TagFromName.FrameDetectorParametersSequence,"Frame Detector Parameters Sequence");
		fullNameByTag.put(TagFromName.CalculatedAnatomyThickness,"Calculated Anatomy Thickness");
		fullNameByTag.put(TagFromName.CalibrationSequence,"Calibration Sequence");
		fullNameByTag.put(TagFromName.ObjectThicknessSequence,"Object Thickness Sequence");
		fullNameByTag.put(TagFromName.PlaneIdentification,"Plane Identification");
		fullNameByTag.put(TagFromName.FieldOfViewDimensionsInFloat,"Field of View Dimension(s) in Float");
		fullNameByTag.put(TagFromName.IsocenterReferenceSystemSequence,"Isocenter Reference System Sequence");
		fullNameByTag.put(TagFromName.PositionerIsocenterPrimaryAngle,"Positioner Isocenter Primary Angle");
		fullNameByTag.put(TagFromName.PositionerIsocenterSecondaryAngle,"Positioner Isocenter Secondary Angle");
		fullNameByTag.put(TagFromName.PositionerIsocenterDetectorRotationAngle,"Positioner Isocenter Detector Rotation Angle");
		fullNameByTag.put(TagFromName.TableXPositionToIsocenter,"Table X Position to Isocenter");
		fullNameByTag.put(TagFromName.TableYPositionToIsocenter,"Table Y Position to Isocenter");
		fullNameByTag.put(TagFromName.TableZPositionToIsocenter,"Table Z Position to Isocenter");
		fullNameByTag.put(TagFromName.TableHorizontalRotationAngle,"Table Horizontal Rotation Angle");
		fullNameByTag.put(TagFromName.TableHeadTiltAngle,"Table Head Tilt Angle");
		fullNameByTag.put(TagFromName.TableCradleTiltAngle,"Table Cradle Tilt Angle");
		fullNameByTag.put(TagFromName.FrameDisplayShutterSequence,"Frame Display Shutter Sequence");
		fullNameByTag.put(TagFromName.AcquiredImageAreaDoseProduct,"Acquired Image Area Dose Product");
		fullNameByTag.put(TagFromName.CArmPositionerTabletopRelationship,"C-arm Positioner Tabletop Relationship");
		fullNameByTag.put(TagFromName.XRayGeometrySequence,"X-Ray Geometry Sequence");
		fullNameByTag.put(TagFromName.IrradiationEventIdentificationSequence,"Irradiation Event Identification Sequence");
		fullNameByTag.put(TagFromName.XRay3DFrameTypeSequence,"X-Ray 3D Frame Type Sequence");
		fullNameByTag.put(TagFromName.ContributingSourcesSequence,"Contributing Sources Sequence");
		fullNameByTag.put(TagFromName.XRay3DAcquisitionSequence,"X-Ray 3D Acquisition Sequence");
		fullNameByTag.put(TagFromName.PrimaryPositionerScanArc,"Primary Positioner Scan Arc");
		fullNameByTag.put(TagFromName.SecondaryPositionerScanArc,"Secondary Positioner Scan Arc");
		fullNameByTag.put(TagFromName.PrimaryPositionerScanStartAngle,"Primary Positioner Scan Start Angle");
		fullNameByTag.put(TagFromName.SecondaryPositionerScanStartAngle,"Secondary Positioner Scan Start Angle");
		fullNameByTag.put(TagFromName.PrimaryPositionerIncrement,"Primary Positioner Increment");
		fullNameByTag.put(TagFromName.SecondaryPositionerIncrement,"Secondary Positioner Increment");
		fullNameByTag.put(TagFromName.StartAcquisitionDateTime,"Start Acquisition DateTime");
		fullNameByTag.put(TagFromName.EndAcquisitionDateTime,"End Acquisition DateTime");
		fullNameByTag.put(TagFromName.PrimaryPositionerIncrementSign,"Primary Positioner Increment Sign");
		fullNameByTag.put(TagFromName.SecondaryPositionerIncrementSign,"Secondary Positioner Increment Sign");
		fullNameByTag.put(TagFromName.ApplicationName,"Application Name");
		fullNameByTag.put(TagFromName.ApplicationVersion,"Application Version");
		fullNameByTag.put(TagFromName.ApplicationManufacturer,"Application Manufacturer");
		fullNameByTag.put(TagFromName.AlgorithmType,"Algorithm Type");
		fullNameByTag.put(TagFromName.AlgorithmDescription,"Algorithm Description");
		fullNameByTag.put(TagFromName.XRay3DReconstructionSequence,"X-Ray 3D Reconstruction Sequence");
		fullNameByTag.put(TagFromName.ReconstructionDescription,"Reconstruction Description");
		fullNameByTag.put(TagFromName.PerProjectionAcquisitionSequence,"Per Projection Acquisition Sequence");
		fullNameByTag.put(TagFromName.DetectorPositionSequence,"Detector Position Sequence");
		fullNameByTag.put(TagFromName.XRayAcquisitionDoseSequence,"X-Ray Acquisition Dose Sequence");
		fullNameByTag.put(TagFromName.XRaySourceIsocenterPrimaryAngle,"X-Ray Source Isocenter Primary Angle");
		fullNameByTag.put(TagFromName.XRaySourceIsocenterSecondaryAngle,"X-Ray Source Isocenter Secondary Angle");
		fullNameByTag.put(TagFromName.BreastSupportIsocenterPrimaryAngle,"Breast Support Isocenter Primary Angle");
		fullNameByTag.put(TagFromName.BreastSupportIsocenterSecondaryAngle,"Breast Support Isocenter Secondary Angle");
		fullNameByTag.put(TagFromName.BreastSupportXPositionToIsocenter,"Breast Support X Position to Isocenter");
		fullNameByTag.put(TagFromName.BreastSupportYPositionToIsocenter,"Breast Support Y Position to Isocenter");
		fullNameByTag.put(TagFromName.BreastSupportZPositionToIsocenter,"Breast Support Z Position to Isocenter");
		fullNameByTag.put(TagFromName.DetectorIsocenterPrimaryAngle,"Detector Isocenter Primary Angle");
		fullNameByTag.put(TagFromName.DetectorIsocenterSecondaryAngle,"Detector Isocenter Secondary Angle");
		fullNameByTag.put(TagFromName.DetectorXPositionToIsocenter,"Detector X Position to Isocenter");
		fullNameByTag.put(TagFromName.DetectorYPositionToIsocenter,"Detector Y Position to Isocenter");
		fullNameByTag.put(TagFromName.DetectorZPositionToIsocenter,"Detector Z Position to Isocenter");
		fullNameByTag.put(TagFromName.XRayGridSequence,"X-Ray Grid Sequence");
		fullNameByTag.put(TagFromName.XRayFilterSequence,"X-Ray Filter Sequence");
		fullNameByTag.put(TagFromName.DetectorActiveAreaTLHCPosition,"Detector Active Area TLHC Position");
		fullNameByTag.put(TagFromName.DetectorActiveAreaOrientation,"Detector Active Area Orientation");
		fullNameByTag.put(TagFromName.PositionerPrimaryAngleDirection,"Positioner Primary Angle Direction");
		fullNameByTag.put(TagFromName.DiffusionBMatrixSequence,"Diffusion b-matrix Sequence");
		fullNameByTag.put(TagFromName.DiffusionBValueXX,"Diffusion b-value XX");
		fullNameByTag.put(TagFromName.DiffusionBValueXY,"Diffusion b-value XY");
		fullNameByTag.put(TagFromName.DiffusionBValueXZ,"Diffusion b-value XZ");
		fullNameByTag.put(TagFromName.DiffusionBValueYY,"Diffusion b-value YY");
		fullNameByTag.put(TagFromName.DiffusionBValueYZ,"Diffusion b-value YZ");
		fullNameByTag.put(TagFromName.DiffusionBValueZZ,"Diffusion b-value ZZ");
		fullNameByTag.put(TagFromName.FunctionalMRSequence,"Functional MR Sequence");
		fullNameByTag.put(TagFromName.FunctionalSettlingPhaseFramesPresent,"Functional Settling Phase Frames Present");
		fullNameByTag.put(TagFromName.FunctionalSyncPulse,"Functional Sync Pulse");
		fullNameByTag.put(TagFromName.SettlingPhaseFrame,"Settling Phase Frame");
		fullNameByTag.put(TagFromName.DecayCorrectionDateTime,"Decay Correction DateTime");
		fullNameByTag.put(TagFromName.StartDensityThreshold,"Start Density Threshold");
		fullNameByTag.put(TagFromName.StartRelativeDensityDifferenceThreshold,"Start Relative Density Difference Threshold");
		fullNameByTag.put(TagFromName.StartCardiacTriggerCountThreshold,"Start Cardiac Trigger Count Threshold");
		fullNameByTag.put(TagFromName.StartRespiratoryTriggerCountThreshold,"Start Respiratory Trigger Count Threshold");
		fullNameByTag.put(TagFromName.TerminationCountsThreshold,"Termination Counts Threshold");
		fullNameByTag.put(TagFromName.TerminationDensityThreshold,"Termination Density Threshold");
		fullNameByTag.put(TagFromName.TerminationRelativeDensityThreshold,"Termination Relative Density Threshold");
		fullNameByTag.put(TagFromName.TerminationTimeThreshold,"Termination Time Threshold");
		fullNameByTag.put(TagFromName.TerminationCardiacTriggerCountThreshold,"Termination Cardiac Trigger Count Threshold");
		fullNameByTag.put(TagFromName.TerminationRespiratoryTriggerCountThreshold,"Termination Respiratory Trigger Count Threshold");
		fullNameByTag.put(TagFromName.DetectorGeometry,"Detector Geometry");
		fullNameByTag.put(TagFromName.TransverseDetectorSeparation,"Transverse Detector Separation");
		fullNameByTag.put(TagFromName.AxialDetectorDimension,"Axial Detector Dimension");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalAgentNumber,"Radiopharmaceutical Agent Number");
		fullNameByTag.put(TagFromName.PETFrameAcquisitionSequence,"PET Frame Acquisition Sequence");
		fullNameByTag.put(TagFromName.PETDetectorMotionDetailsSequence,"PET Detector Motion Details Sequence");
		fullNameByTag.put(TagFromName.PETTableDynamicsSequence,"PET Table Dynamics Sequence");
		fullNameByTag.put(TagFromName.PETPositionSequence,"PET Position Sequence");
		fullNameByTag.put(TagFromName.PETFrameCorrectionFactorsSequence,"PET Frame Correction Factors Sequence");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalUsageSequence,"Radiopharmaceutical Usage Sequence");
		fullNameByTag.put(TagFromName.AttenuationCorrectionSource,"Attenuation Correction Source");
		fullNameByTag.put(TagFromName.NumberOfIterations,"Number of Iterations");
		fullNameByTag.put(TagFromName.NumberOfSubsets,"Number of Subsets");
		fullNameByTag.put(TagFromName.PETReconstructionSequence,"PET Reconstruction Sequence");
		fullNameByTag.put(TagFromName.PETFrameTypeSequence,"PET Frame Type Sequence");
		fullNameByTag.put(TagFromName.TimeOfFlightInformationUsed,"Time of Flight Information Used");
		fullNameByTag.put(TagFromName.ReconstructionType,"Reconstruction Type");
		fullNameByTag.put(TagFromName.DecayCorrected,"Decay Corrected");
		fullNameByTag.put(TagFromName.AttenuationCorrected,"Attenuation Corrected");
		fullNameByTag.put(TagFromName.ScatterCorrected,"Scatter Corrected");
		fullNameByTag.put(TagFromName.DeadTimeCorrected,"Dead Time Corrected");
		fullNameByTag.put(TagFromName.GantryMotionCorrected,"Gantry Motion Corrected");
		fullNameByTag.put(TagFromName.PatientMotionCorrected,"Patient Motion Corrected");
		fullNameByTag.put(TagFromName.CountLossNormalizationCorrected,"Count Loss Normalization Corrected");
		fullNameByTag.put(TagFromName.RandomsCorrected,"Randoms Corrected");
		fullNameByTag.put(TagFromName.NonUniformRadialSamplingCorrected,"Non-uniform Radial Sampling Corrected");
		fullNameByTag.put(TagFromName.SensitivityCalibrated,"Sensitivity Calibrated");
		fullNameByTag.put(TagFromName.DetectorNormalizationCorrection,"Detector Normalization Correction");
		fullNameByTag.put(TagFromName.IterativeReconstructionMethod,"Iterative Reconstruction Method");
		fullNameByTag.put(TagFromName.AttenuationCorrectionTemporalRelationship,"Attenuation Correction Temporal Relationship");
		fullNameByTag.put(TagFromName.PatientPhysiologicalStateSequence,"Patient Physiological State Sequence");
		fullNameByTag.put(TagFromName.PatientPhysiologicalStateCodeSequence,"Patient Physiological State Code Sequence");
		fullNameByTag.put(TagFromName.DepthsOfFocus,"Depth(s) of Focus");
		fullNameByTag.put(TagFromName.ExcludedIntervalsSequence,"Excluded Intervals Sequence");
		fullNameByTag.put(TagFromName.ExclusionStartDateTime,"Exclusion Start DateTime");
		fullNameByTag.put(TagFromName.ExclusionDuration,"Exclusion Duration");
		fullNameByTag.put(TagFromName.USImageDescriptionSequence,"US Image Description Sequence");
		fullNameByTag.put(TagFromName.ImageDataTypeSequence,"Image Data Type Sequence");
		fullNameByTag.put(TagFromName.DataType,"Data Type");
		fullNameByTag.put(TagFromName.TransducerScanPatternCodeSequence,"Transducer Scan Pattern Code Sequence");
		fullNameByTag.put(TagFromName.AliasedDataType,"Aliased Data Type");
		fullNameByTag.put(TagFromName.PositionMeasuringDeviceUsed,"Position Measuring Device Used");
		fullNameByTag.put(TagFromName.TransducerGeometryCodeSequence,"Transducer Geometry Code Sequence");
		fullNameByTag.put(TagFromName.TransducerBeamSteeringCodeSequence,"Transducer Beam Steering Code Sequence");
		fullNameByTag.put(TagFromName.TransducerApplicationCodeSequence,"Transducer Application Code Sequence");
		fullNameByTag.put(TagFromName.ZeroVelocityPixelValue,"Zero Velocity Pixel Value");
		fullNameByTag.put(TagFromName.ReferenceLocationLabel,"Reference Location Label");
		fullNameByTag.put(TagFromName.ReferenceLocationDescription,"Reference Location Description");
		fullNameByTag.put(TagFromName.ReferenceBasisCodeSequence,"Reference Basis Code Sequence");
		fullNameByTag.put(TagFromName.ReferenceGeometryCodeSequence,"Reference Geometry Code Sequence");
		fullNameByTag.put(TagFromName.OffsetDistance,"Offset Distance");
		fullNameByTag.put(TagFromName.OffsetDirection,"Offset Direction");
		fullNameByTag.put(TagFromName.PotentialScheduledProtocolCodeSequence,"Potential Scheduled Protocol Code Sequence");
		fullNameByTag.put(TagFromName.PotentialRequestedProcedureCodeSequence,"Potential Requested Procedure Code Sequence");
		fullNameByTag.put(TagFromName.PotentialReasonsForProcedure,"Potential Reasons for Procedure");
		fullNameByTag.put(TagFromName.PotentialReasonsForProcedureCodeSequence,"Potential Reasons for Procedure Code Sequence");
		fullNameByTag.put(TagFromName.PotentialDiagnosticTasks,"Potential Diagnostic Tasks");
		fullNameByTag.put(TagFromName.ContraindicationsCodeSequence,"Contraindications Code Sequence");
		fullNameByTag.put(TagFromName.ReferencedDefinedProtocolSequence,"Referenced Defined Protocol Sequence");
		fullNameByTag.put(TagFromName.ReferencedPerformedProtocolSequence,"Referenced Performed Protocol Sequence");
		fullNameByTag.put(TagFromName.PredecessorProtocolSequence,"Predecessor Protocol Sequence");
		fullNameByTag.put(TagFromName.ProtocolPlanningInformation,"Protocol Planning Information");
		fullNameByTag.put(TagFromName.ProtocolDesignRationale,"Protocol Design Rationale");
		fullNameByTag.put(TagFromName.PatientSpecificationSequence,"Patient Specification Sequence");
		fullNameByTag.put(TagFromName.ModelSpecificationSequence,"Model Specification Sequence");
		fullNameByTag.put(TagFromName.ParametersSpecificationSequence,"Parameters Specification Sequence");
		fullNameByTag.put(TagFromName.InstructionSequence,"Instruction Sequence");
		fullNameByTag.put(TagFromName.InstructionIndex,"Instruction Index");
		fullNameByTag.put(TagFromName.InstructionText,"Instruction Text");
		fullNameByTag.put(TagFromName.InstructionDescription,"Instruction Description");
		fullNameByTag.put(TagFromName.InstructionPerformedFlag,"Instruction Performed Flag");
		fullNameByTag.put(TagFromName.InstructionPerformedDateTime,"Instruction Performed DateTime");
		fullNameByTag.put(TagFromName.InstructionPerformanceComment,"Instruction Performance Comment");
		fullNameByTag.put(TagFromName.PatientPositioningInstructionSequence,"Patient Positioning Instruction Sequence");
		fullNameByTag.put(TagFromName.PositioningMethodCodeSequence,"Positioning Method Code Sequence");
		fullNameByTag.put(TagFromName.PositioningLandmarkSequence,"Positioning Landmark Sequence");
		fullNameByTag.put(TagFromName.TargetFrameOfReferenceUID,"Target Frame of Reference UID");
		fullNameByTag.put(TagFromName.AcquisitionProtocolElementSpecificationSequence,"Acquisition Protocol Element Specification Sequence");
		fullNameByTag.put(TagFromName.AcquisitionProtocolElementSequence,"Acquisition Protocol Element Sequence");
		fullNameByTag.put(TagFromName.ProtocolElementNumber,"Protocol Element Number");
		fullNameByTag.put(TagFromName.ProtocolElementName,"Protocol Element Name");
		fullNameByTag.put(TagFromName.ProtocolElementCharacteristicsSummary,"Protocol Element Characteristics Summary");
		fullNameByTag.put(TagFromName.ProtocolElementPurpose,"Protocol Element Purpose");
		fullNameByTag.put(TagFromName.AcquisitionMotion,"Acquisition Motion");
		fullNameByTag.put(TagFromName.AcquisitionStartLocationSequence,"Acquisition Start Location Sequence");
		fullNameByTag.put(TagFromName.AcquisitionEndLocationSequence,"Acquisition End Location Sequence");
		fullNameByTag.put(TagFromName.ReconstructionProtocolElementSpecificationSequence,"Reconstruction Protocol Element Specification Sequence");
		fullNameByTag.put(TagFromName.ReconstructionProtocolElementSequence,"Reconstruction Protocol Element Sequence");
		fullNameByTag.put(TagFromName.StorageProtocolElementSpecificationSequence,"Storage Protocol Element Specification Sequence");
		fullNameByTag.put(TagFromName.StorageProtocolElementSequence,"Storage Protocol Element Sequence");
		fullNameByTag.put(TagFromName.RequestedSeriesDescription,"Requested Series Description");
		fullNameByTag.put(TagFromName.SourceAcquisitionProtocolElementNumber,"Source Acquisition Protocol Element Number");
		fullNameByTag.put(TagFromName.SourceAcquisitionBeamNumber,"Source Acquisition Beam Number");
		fullNameByTag.put(TagFromName.SourceReconstructionProtocolElementNumber,"Source Reconstruction Protocol Element Number");
		fullNameByTag.put(TagFromName.ReconstructionStartLocationSequence,"Reconstruction Start Location Sequence");
		fullNameByTag.put(TagFromName.ReconstructionEndLocationSequence,"Reconstruction End Location Sequence");
		fullNameByTag.put(TagFromName.ReconstructionAlgorithmSequence,"Reconstruction Algorithm Sequence");
		fullNameByTag.put(TagFromName.ReconstructionTargetCenterLocationSequence,"Reconstruction Target Center Location Sequence");
		fullNameByTag.put(TagFromName.ImageFilterDescription,"Image Filter Description");
		fullNameByTag.put(TagFromName.CTDIvolNotificationTrigger,"CTDIvol Notification Trigger");
		fullNameByTag.put(TagFromName.DLPNotificationTrigger,"DLP Notification Trigger");
		fullNameByTag.put(TagFromName.AutoKVPSelectionType,"Auto KVP Selection Type");
		fullNameByTag.put(TagFromName.AutoKVPUpperBound,"Auto KVP Upper Bound");
		fullNameByTag.put(TagFromName.AutoKVPLowerBound,"Auto KVP Lower Bound");
		fullNameByTag.put(TagFromName.ProtocolDefinedPatientPosition,"Protocol Defined Patient Position");
		fullNameByTag.put(TagFromName.ContributingEquipmentSequence,"Contributing Equipment Sequence");
		fullNameByTag.put(TagFromName.ContributionDateTime,"Contribution DateTime");
		fullNameByTag.put(TagFromName.ContributionDescription,"Contribution Description");
		fullNameByTag.put(TagFromName.StudyInstanceUID,"Study Instance UID");
		fullNameByTag.put(TagFromName.SeriesInstanceUID,"Series Instance UID");
		fullNameByTag.put(TagFromName.StudyID,"Study ID");
		fullNameByTag.put(TagFromName.SeriesNumber,"Series Number");
		fullNameByTag.put(TagFromName.AcquisitionNumber,"Acquisition Number");
		fullNameByTag.put(TagFromName.InstanceNumber,"Instance Number");
		fullNameByTag.put(TagFromName.IsotopeNumber,"Isotope Number");
		fullNameByTag.put(TagFromName.PhaseNumber,"Phase Number");
		fullNameByTag.put(TagFromName.IntervalNumber,"Interval Number");
		fullNameByTag.put(TagFromName.TimeSlotNumber,"Time Slot Number");
		fullNameByTag.put(TagFromName.AngleNumber,"Angle Number");
		fullNameByTag.put(TagFromName.ItemNumber,"Item Number");
		fullNameByTag.put(TagFromName.PatientOrientation,"Patient Orientation");
		fullNameByTag.put(TagFromName.OverlayNumber,"Overlay Number");
		fullNameByTag.put(TagFromName.CurveNumber,"Curve Number");
		fullNameByTag.put(TagFromName.LUTNumber,"LUT Number");
		fullNameByTag.put(TagFromName.ImagePosition,"Image Position");
		fullNameByTag.put(TagFromName.ImagePositionPatient,"Image Position (Patient)");
		fullNameByTag.put(TagFromName.ImageOrientation,"Image Orientation");
		fullNameByTag.put(TagFromName.ImageOrientationPatient,"Image Orientation (Patient)");
		fullNameByTag.put(TagFromName.Location,"Location");
		fullNameByTag.put(TagFromName.FrameOfReferenceUID,"Frame of Reference UID");
		fullNameByTag.put(TagFromName.Laterality,"Laterality");
		fullNameByTag.put(TagFromName.ImageLaterality,"Image Laterality");
		fullNameByTag.put(TagFromName.ImageGeometryType,"Image Geometry Type");
		fullNameByTag.put(TagFromName.MaskingImage,"Masking Image");
		fullNameByTag.put(TagFromName.ReportNumber,"Report Number");
		fullNameByTag.put(TagFromName.TemporalPositionIdentifier,"Temporal Position Identifier");
		fullNameByTag.put(TagFromName.NumberOfTemporalPositions,"Number of Temporal Positions");
		fullNameByTag.put(TagFromName.TemporalResolution,"Temporal Resolution");
		fullNameByTag.put(TagFromName.SynchronizationFrameOfReferenceUID,"Synchronization Frame of Reference UID");
		fullNameByTag.put(TagFromName.SOPInstanceUIDOfConcatenationSource,"SOP Instance UID of Concatenation Source");
		fullNameByTag.put(TagFromName.SeriesInStudy,"Series in Study");
		fullNameByTag.put(TagFromName.AcquisitionsInSeries,"Acquisitions in Series");
		fullNameByTag.put(TagFromName.ImagesInAcquisition,"Images in Acquisition");
		fullNameByTag.put(TagFromName.ImagesInSeries,"Images in Series");
		fullNameByTag.put(TagFromName.AcquisitionsInStudy,"Acquisitions in Study");
		fullNameByTag.put(TagFromName.ImagesInStudy,"Images in Study");
		fullNameByTag.put(TagFromName.Reference,"Reference");
		fullNameByTag.put(TagFromName.TargetPositionReferenceIndicator,"Target Position Reference Indicator");
		fullNameByTag.put(TagFromName.PositionReferenceIndicator,"Position Reference Indicator");
		fullNameByTag.put(TagFromName.SliceLocation,"Slice Location");
		fullNameByTag.put(TagFromName.OtherStudyNumbers,"Other Study Numbers");
		fullNameByTag.put(TagFromName.NumberOfPatientRelatedStudies,"Number of Patient Related Studies");
		fullNameByTag.put(TagFromName.NumberOfPatientRelatedSeries,"Number of Patient Related Series");
		fullNameByTag.put(TagFromName.NumberOfPatientRelatedInstances,"Number of Patient Related Instances");
		fullNameByTag.put(TagFromName.NumberOfStudyRelatedSeries,"Number of Study Related Series");
		fullNameByTag.put(TagFromName.NumberOfStudyRelatedInstances,"Number of Study Related Instances");
		fullNameByTag.put(TagFromName.NumberOfSeriesRelatedInstances,"Number of Series Related Instances");
		fullNameByTag.put(TagFromName.SourceImageID,"Source Image IDs");
		fullNameByTag.put(TagFromName.ModifyingDeviceID,"Modifying Device ID");
		fullNameByTag.put(TagFromName.ModifiedImageID,"Modified Image ID");
		fullNameByTag.put(TagFromName.ModifiedImageDate,"Modified Image Date");
		fullNameByTag.put(TagFromName.ModifyingDeviceManufacturer,"Modifying Device Manufacturer");
		fullNameByTag.put(TagFromName.ModifiedImageTime,"Modified Image Time");
		fullNameByTag.put(TagFromName.ModifiedImageDescription,"Modified Image Description");
		fullNameByTag.put(TagFromName.ImageComments,"Image Comments");
		fullNameByTag.put(TagFromName.OriginalImageIdentification,"Original Image Identification");
		fullNameByTag.put(TagFromName.OriginalImageIdentificationNomenclature,"Original Image Identification Nomenclature");
		fullNameByTag.put(TagFromName.StackID,"Stack ID");
		fullNameByTag.put(TagFromName.InStackPositionNumber,"In-Stack Position Number");
		fullNameByTag.put(TagFromName.FrameAnatomySequence,"Frame Anatomy Sequence");
		fullNameByTag.put(TagFromName.FrameLaterality,"Frame Laterality");
		fullNameByTag.put(TagFromName.FrameContentSequence,"Frame Content Sequence");
		fullNameByTag.put(TagFromName.PlanePositionSequence,"Plane Position Sequence");
		fullNameByTag.put(TagFromName.PlaneOrientationSequence,"Plane Orientation Sequence");
		fullNameByTag.put(TagFromName.TemporalPositionIndex,"Temporal Position Index");
		fullNameByTag.put(TagFromName.NominalCardiacTriggerDelayTime,"Nominal Cardiac Trigger Delay Time");
		fullNameByTag.put(TagFromName.NominalCardiacTriggerTimePriorToRPeak,"Nominal Cardiac Trigger Time Prior To R-Peak");
		fullNameByTag.put(TagFromName.ActualCardiacTriggerTimePriorToRPeak,"Actual Cardiac Trigger Time Prior To R-Peak");
		fullNameByTag.put(TagFromName.FrameAcquisitionNumber,"Frame Acquisition Number");
		fullNameByTag.put(TagFromName.DimensionIndexValues,"Dimension Index Values");
		fullNameByTag.put(TagFromName.FrameComments,"Frame Comments");
		fullNameByTag.put(TagFromName.ConcatenationUID,"Concatenation UID");
		fullNameByTag.put(TagFromName.InConcatenationNumber,"In-concatenation Number");
		fullNameByTag.put(TagFromName.InConcatenationTotalNumber,"In-concatenation Total Number");
		fullNameByTag.put(TagFromName.DimensionOrganizationUID,"Dimension Organization UID");
		fullNameByTag.put(TagFromName.DimensionIndexPointer,"Dimension Index Pointer");
		fullNameByTag.put(TagFromName.FunctionalGroupPointer,"Functional Group Pointer");
		fullNameByTag.put(TagFromName.UnassignedSharedConvertedAttributesSequence,"Unassigned Shared Converted Attributes Sequence");
		fullNameByTag.put(TagFromName.UnassignedPerFrameConvertedAttributesSequence,"Unassigned Per-Frame Converted Attributes Sequence");
		fullNameByTag.put(TagFromName.ConversionSourceAttributesSequence,"Conversion Source Attributes Sequence");
		fullNameByTag.put(TagFromName.DimensionIndexPrivateCreator,"Dimension Index Private Creator");
		fullNameByTag.put(TagFromName.DimensionOrganizationSequence,"Dimension Organization Sequence");
		fullNameByTag.put(TagFromName.DimensionIndexSequence,"Dimension Index Sequence");
		fullNameByTag.put(TagFromName.ConcatenationFrameOffsetNumber,"Concatenation Frame Offset Number");
		fullNameByTag.put(TagFromName.FunctionalGroupPrivateCreator,"Functional Group Private Creator");
		fullNameByTag.put(TagFromName.NominalPercentageOfCardiacPhase,"Nominal Percentage of Cardiac Phase");
		fullNameByTag.put(TagFromName.NominalPercentageOfRespiratoryPhase,"Nominal Percentage of Respiratory Phase");
		fullNameByTag.put(TagFromName.StartingRespiratoryAmplitude,"Starting Respiratory Amplitude");
		fullNameByTag.put(TagFromName.StartingRespiratoryPhase,"Starting Respiratory Phase");
		fullNameByTag.put(TagFromName.EndingRespiratoryAmplitude,"Ending Respiratory Amplitude");
		fullNameByTag.put(TagFromName.EndingRespiratoryPhase,"Ending Respiratory Phase");
		fullNameByTag.put(TagFromName.RespiratoryTriggerType,"Respiratory Trigger Type");
		fullNameByTag.put(TagFromName.RRIntervalTimeNominal,"R-R Interval Time Nominal");
		fullNameByTag.put(TagFromName.ActualCardiacTriggerDelayTime,"Actual Cardiac Trigger Delay Time");
		fullNameByTag.put(TagFromName.RespiratorySynchronizationSequence,"Respiratory Synchronization Sequence");
		fullNameByTag.put(TagFromName.RespiratoryIntervalTime,"Respiratory Interval Time");
		fullNameByTag.put(TagFromName.NominalRespiratoryTriggerDelayTime,"Nominal Respiratory Trigger Delay Time");
		fullNameByTag.put(TagFromName.RespiratoryTriggerDelayThreshold,"Respiratory Trigger Delay Threshold");
		fullNameByTag.put(TagFromName.ActualRespiratoryTriggerDelayTime,"Actual Respiratory Trigger Delay Time");
		fullNameByTag.put(TagFromName.ImagePositionVolume,"Image Position (Volume)");
		fullNameByTag.put(TagFromName.ImageOrientationVolume,"Image Orientation (Volume)");
		fullNameByTag.put(TagFromName.UltrasoundAcquisitionGeometry,"Ultrasound Acquisition Geometry");
		fullNameByTag.put(TagFromName.ApexPosition,"Apex Position");
		fullNameByTag.put(TagFromName.VolumeToTransducerMappingMatrix,"Volume to Transducer Mapping Matrix");
		fullNameByTag.put(TagFromName.VolumeToTableMappingMatrix,"Volume to Table Mapping Matrix");
		fullNameByTag.put(TagFromName.VolumeToTransducerRelationship,"Volume to Transducer Relationship");
		fullNameByTag.put(TagFromName.PatientFrameOfReferenceSource,"Patient Frame of Reference Source");
		fullNameByTag.put(TagFromName.TemporalPositionTimeOffset,"Temporal Position Time Offset");
		fullNameByTag.put(TagFromName.PlanePositionVolumeSequence,"Plane Position (Volume) Sequence");
		fullNameByTag.put(TagFromName.PlaneOrientationVolumeSequence,"Plane Orientation (Volume) Sequence");
		fullNameByTag.put(TagFromName.TemporalPositionSequence,"Temporal Position Sequence");
		fullNameByTag.put(TagFromName.DimensionOrganizationType,"Dimension Organization Type");
		fullNameByTag.put(TagFromName.VolumeFrameOfReferenceUID,"Volume Frame of Reference UID");
		fullNameByTag.put(TagFromName.TableFrameOfReferenceUID,"Table Frame of Reference UID");
		fullNameByTag.put(TagFromName.DimensionDescriptionLabel,"Dimension Description Label");
		fullNameByTag.put(TagFromName.PatientOrientationInFrameSequence,"Patient Orientation in Frame Sequence");
		fullNameByTag.put(TagFromName.FrameLabel,"Frame Label");
		fullNameByTag.put(TagFromName.AcquisitionIndex,"Acquisition Index");
		fullNameByTag.put(TagFromName.ContributingSOPInstancesReferenceSequence,"Contributing SOP Instances Reference Sequence");
		fullNameByTag.put(TagFromName.ReconstructionIndex,"Reconstruction Index");
		fullNameByTag.put(TagFromName.LightPathFilterPassThroughWavelength,"Light Path Filter Pass-Through Wavelength");
		fullNameByTag.put(TagFromName.LightPathFilterPassBand,"Light Path Filter Pass Band");
		fullNameByTag.put(TagFromName.ImagePathFilterPassThroughWavelength,"Image Path Filter Pass-Through Wavelength");
		fullNameByTag.put(TagFromName.ImagePathFilterPassBand,"Image Path Filter Pass Band");
		fullNameByTag.put(TagFromName.PatientEyeMovementCommanded,"Patient Eye Movement Commanded");
		fullNameByTag.put(TagFromName.PatientEyeMovementCommandCodeSequence,"Patient Eye Movement Command Code Sequence");
		fullNameByTag.put(TagFromName.SphericalLensPower,"Spherical Lens Power");
		fullNameByTag.put(TagFromName.CylinderLensPower,"Cylinder Lens Power");
		fullNameByTag.put(TagFromName.CylinderAxis,"Cylinder Axis");
		fullNameByTag.put(TagFromName.EmmetropicMagnification,"Emmetropic Magnification");
		fullNameByTag.put(TagFromName.IntraOcularPressure,"Intra Ocular Pressure");
		fullNameByTag.put(TagFromName.HorizontalFieldOfView,"Horizontal Field of View");
		fullNameByTag.put(TagFromName.PupilDilated,"Pupil Dilated");
		fullNameByTag.put(TagFromName.DegreeOfDilation,"Degree of Dilation");
		fullNameByTag.put(TagFromName.StereoBaselineAngle,"Stereo Baseline Angle");
		fullNameByTag.put(TagFromName.StereoBaselineDisplacement,"Stereo Baseline Displacement");
		fullNameByTag.put(TagFromName.StereoHorizontalPixelOffset,"Stereo Horizontal Pixel Offset");
		fullNameByTag.put(TagFromName.StereoVerticalPixelOffset,"Stereo Vertical Pixel Offset");
		fullNameByTag.put(TagFromName.StereoRotation,"Stereo Rotation");
		fullNameByTag.put(TagFromName.AcquisitionDeviceTypeCodeSequence,"Acquisition Device Type Code Sequence");
		fullNameByTag.put(TagFromName.IlluminationTypeCodeSequence,"Illumination Type Code Sequence");
		fullNameByTag.put(TagFromName.LightPathFilterTypeStackCodeSequence,"Light Path Filter Type Stack Code Sequence");
		fullNameByTag.put(TagFromName.ImagePathFilterTypeStackCodeSequence,"Image Path Filter Type Stack Code Sequence");
		fullNameByTag.put(TagFromName.LensesCodeSequence,"Lenses Code Sequence");
		fullNameByTag.put(TagFromName.ChannelDescriptionCodeSequence,"Channel Description Code Sequence");
		fullNameByTag.put(TagFromName.RefractiveStateSequence,"Refractive State Sequence");
		fullNameByTag.put(TagFromName.MydriaticAgentCodeSequence,"Mydriatic Agent Code Sequence");
		fullNameByTag.put(TagFromName.RelativeImagePositionCodeSequence,"Relative Image Position Code Sequence");
		fullNameByTag.put(TagFromName.CameraAngleOfView,"Camera Angle of View");
		fullNameByTag.put(TagFromName.StereoPairsSequence,"Stereo Pairs Sequence");
		fullNameByTag.put(TagFromName.LeftImageSequence,"Left Image Sequence");
		fullNameByTag.put(TagFromName.RightImageSequence,"Right Image Sequence");
		fullNameByTag.put(TagFromName.StereoPairsPresent,"Stereo Pairs Present");
		fullNameByTag.put(TagFromName.AxialLengthOfTheEye,"Axial Length of the Eye");
		fullNameByTag.put(TagFromName.OphthalmicFrameLocationSequence,"Ophthalmic Frame Location Sequence");
		fullNameByTag.put(TagFromName.ReferenceCoordinates,"Reference Coordinates");
		fullNameByTag.put(TagFromName.DepthSpatialResolution,"Depth Spatial Resolution");
		fullNameByTag.put(TagFromName.MaximumDepthDistortion,"Maximum Depth Distortion");
		fullNameByTag.put(TagFromName.AlongScanSpatialResolution,"Along-scan Spatial Resolution");
		fullNameByTag.put(TagFromName.MaximumAlongScanDistortion,"Maximum Along-scan Distortion");
		fullNameByTag.put(TagFromName.OphthalmicImageOrientation,"Ophthalmic Image Orientation");
		fullNameByTag.put(TagFromName.DepthOfTransverseImage,"Depth of Transverse Image");
		fullNameByTag.put(TagFromName.MydriaticAgentConcentrationUnitsSequence,"Mydriatic Agent Concentration Units Sequence");
		fullNameByTag.put(TagFromName.AcrossScanSpatialResolution,"Across-scan Spatial Resolution");
		fullNameByTag.put(TagFromName.MaximumAcrossScanDistortion,"Maximum Across-scan Distortion");
		fullNameByTag.put(TagFromName.MydriaticAgentConcentration,"Mydriatic Agent Concentration");
		fullNameByTag.put(TagFromName.IlluminationWaveLength,"Illumination Wave Length");
		fullNameByTag.put(TagFromName.IlluminationPower,"Illumination Power");
		fullNameByTag.put(TagFromName.IlluminationBandwidth,"Illumination Bandwidth");
		fullNameByTag.put(TagFromName.MydriaticAgentSequence,"Mydriatic Agent Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialMeasurementsRightEyeSequence,"Ophthalmic Axial Measurements Right Eye Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialMeasurementsLeftEyeSequence,"Ophthalmic Axial Measurements Left Eye Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialMeasurementsDeviceType,"Ophthalmic Axial Measurements Device Type");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsType,"Ophthalmic Axial Length Measurements Type");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthSequence,"Ophthalmic Axial Length Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLength,"Ophthalmic Axial Length");
		fullNameByTag.put(TagFromName.LensStatusCodeSequence,"Lens Status Code Sequence");
		fullNameByTag.put(TagFromName.VitreousStatusCodeSequence,"Vitreous Status Code Sequence");
		fullNameByTag.put(TagFromName.IOLFormulaCodeSequence,"IOL Formula Code Sequence");
		fullNameByTag.put(TagFromName.IOLFormulaDetail,"IOL Formula Detail");
		fullNameByTag.put(TagFromName.KeratometerIndex,"Keratometer Index");
		fullNameByTag.put(TagFromName.SourceOfOphthalmicAxialLengthCodeSequence,"Source of Ophthalmic Axial Length Code Sequence");
		fullNameByTag.put(TagFromName.TargetRefraction,"Target Refraction");
		fullNameByTag.put(TagFromName.RefractiveProcedureOccurred,"Refractive Procedure Occurred");
		fullNameByTag.put(TagFromName.RefractiveSurgeryTypeCodeSequence,"Refractive Surgery Type Code Sequence");
		fullNameByTag.put(TagFromName.OphthalmicUltrasoundMethodCodeSequence,"Ophthalmic Ultrasound Method Code Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSequence,"Ophthalmic Axial Length Measurements Sequence");
		fullNameByTag.put(TagFromName.IOLPower,"IOL Power");
		fullNameByTag.put(TagFromName.PredictedRefractiveError,"Predicted Refractive Error");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthVelocity,"Ophthalmic Axial Length Velocity");
		fullNameByTag.put(TagFromName.LensStatusDescription,"Lens Status Description");
		fullNameByTag.put(TagFromName.VitreousStatusDescription,"Vitreous Status Description");
		fullNameByTag.put(TagFromName.IOLPowerSequence,"IOL Power Sequence");
		fullNameByTag.put(TagFromName.LensConstantSequence,"Lens Constant Sequence");
		fullNameByTag.put(TagFromName.IOLManufacturer,"IOL Manufacturer");
		fullNameByTag.put(TagFromName.LensConstantDescription,"Lens Constant Description");
		fullNameByTag.put(TagFromName.ImplantName,"Implant Name");
		fullNameByTag.put(TagFromName.KeratometryMeasurementTypeCodeSequence,"Keratometry Measurement Type Code Sequence");
		fullNameByTag.put(TagFromName.ImplantPartNumber,"Implant Part Number");
		fullNameByTag.put(TagFromName.ReferencedOphthalmicAxialMeasurementsSequence,"Referenced Ophthalmic Axial Measurements Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence,"Ophthalmic Axial Length Measurements Segment Name Code Sequence");
		fullNameByTag.put(TagFromName.RefractiveErrorBeforeRefractiveSurgeryCodeSequence,"Refractive Error Before Refractive Surgery Code Sequence");
		fullNameByTag.put(TagFromName.IOLPowerForExactEmmetropia,"IOL Power For Exact Emmetropia");
		fullNameByTag.put(TagFromName.IOLPowerForExactTargetRefraction,"IOL Power For Exact Target Refraction");
		fullNameByTag.put(TagFromName.AnteriorChamberDepthDefinitionCodeSequence,"Anterior Chamber Depth Definition Code Sequence");
		fullNameByTag.put(TagFromName.LensThicknessSequence,"Lens Thickness Sequence");
		fullNameByTag.put(TagFromName.AnteriorChamberDepthSequence,"Anterior Chamber Depth Sequence");
		fullNameByTag.put(TagFromName.LensThickness,"Lens Thickness");
		fullNameByTag.put(TagFromName.AnteriorChamberDepth,"Anterior Chamber Depth");
		fullNameByTag.put(TagFromName.SourceOfLensThicknessDataCodeSequence,"Source of Lens Thickness Data Code Sequence");
		fullNameByTag.put(TagFromName.SourceOfAnteriorChamberDepthDataCodeSequence,"Source of Anterior Chamber Depth Data Code Sequence");
		fullNameByTag.put(TagFromName.SourceOfRefractiveMeasurementsSequence,"Source of Refractive Measurements Sequence");
		fullNameByTag.put(TagFromName.SourceOfRefractiveMeasurementsCodeSequence,"Source of Refractive Measurements Code Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementModified,"Ophthalmic Axial Length Measurement Modified");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthDataSourceCodeSequence,"Ophthalmic Axial Length Data Source Code Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthAcquisitionMethodCodeSequence,"Ophthalmic Axial Length Acquisition Method Code Sequence");
		fullNameByTag.put(TagFromName.SignalToNoiseRatio,"Signal to Noise Ratio");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthDataSourceDescription,"Ophthalmic Axial Length Data Source Description");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsTotalLengthSequence,"Ophthalmic Axial Length Measurements Total Length Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsSegmentalLengthSequence,"Ophthalmic Axial Length Measurements Segmental Length Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthMeasurementsLengthSummationSequence,"Ophthalmic Axial Length Measurements Length Summation Sequence");
		fullNameByTag.put(TagFromName.UltrasoundOphthalmicAxialLengthMeasurementsSequence,"Ultrasound Ophthalmic Axial Length Measurements Sequence");
		fullNameByTag.put(TagFromName.OpticalOphthalmicAxialLengthMeasurementsSequence,"Optical Ophthalmic Axial Length Measurements Sequence");
		fullNameByTag.put(TagFromName.UltrasoundSelectedOphthalmicAxialLengthSequence,"Ultrasound Selected Ophthalmic Axial Length Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthSelectionMethodCodeSequence,"Ophthalmic Axial Length Selection Method Code Sequence");
		fullNameByTag.put(TagFromName.OpticalSelectedOphthalmicAxialLengthSequence,"Optical Selected Ophthalmic Axial Length Sequence");
		fullNameByTag.put(TagFromName.SelectedSegmentalOphthalmicAxialLengthSequence,"Selected Segmental Ophthalmic Axial Length Sequence");
		fullNameByTag.put(TagFromName.SelectedTotalOphthalmicAxialLengthSequence,"Selected Total Ophthalmic Axial Length Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricSequence,"Ophthalmic Axial Length Quality Metric Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricTypeCodeSequence,"Ophthalmic Axial Length Quality Metric Type Code Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthQualityMetricTypeDescription,"Ophthalmic Axial Length Quality Metric Type Description");
		fullNameByTag.put(TagFromName.IntraocularLensCalculationsRightEyeSequence,"Intraocular Lens Calculations Right Eye Sequence");
		fullNameByTag.put(TagFromName.IntraocularLensCalculationsLeftEyeSequence,"Intraocular Lens Calculations Left Eye Sequence");
		fullNameByTag.put(TagFromName.ReferencedOphthalmicAxialLengthMeasurementQCImageSequence,"Referenced Ophthalmic Axial Length Measurement QC Image Sequence");
		fullNameByTag.put(TagFromName.OphthalmicMappingDeviceType,"Ophthalmic Mapping Device Type");
		fullNameByTag.put(TagFromName.AcquisitionMethodCodeSequence,"Acquisition Method Code Sequence");
		fullNameByTag.put(TagFromName.AcquisitionMethodAlgorithmSequence,"Acquisition Method Algorithm Sequence");
		fullNameByTag.put(TagFromName.OphthalmicThicknessMapTypeCodeSequence,"Ophthalmic Thickness Map Type Code Sequence");
		fullNameByTag.put(TagFromName.OphthalmicThicknessMappingNormalsSequence,"Ophthalmic Thickness Mapping Normals Sequence");
		fullNameByTag.put(TagFromName.RetinalThicknessDefinitionCodeSequence,"Retinal Thickness Definition Code Sequence");
		fullNameByTag.put(TagFromName.PixelValueMappingToCodedConceptSequence,"Pixel Value Mapping to Coded Concept Sequence");
		fullNameByTag.put(TagFromName.MappedPixelValue,"Mapped Pixel Value");
		fullNameByTag.put(TagFromName.PixelValueMappingExplanation,"Pixel Value Mapping Explanation");
		fullNameByTag.put(TagFromName.OphthalmicThicknessMapQualityThresholdSequence,"Ophthalmic Thickness Map Quality Threshold Sequence");
		fullNameByTag.put(TagFromName.OphthalmicThicknessMapThresholdQualityRating,"Ophthalmic Thickness Map Threshold Quality Rating");
		fullNameByTag.put(TagFromName.AnatomicStructureReferencePoint,"Anatomic Structure Reference Point");
		fullNameByTag.put(TagFromName.RegistrationToLocalizerSequence,"Registration to Localizer Sequence");
		fullNameByTag.put(TagFromName.RegisteredLocalizerUnits,"Registered Localizer Units");
		fullNameByTag.put(TagFromName.RegisteredLocalizerTopLeftHandCorner,"Registered Localizer Top Left Hand Corner");
		fullNameByTag.put(TagFromName.RegisteredLocalizerBottomRightHandCorner,"Registered Localizer Bottom Right Hand Corner");
		fullNameByTag.put(TagFromName.OphthalmicThicknessMapQualityRatingSequence,"Ophthalmic Thickness Map Quality Rating Sequence");
		fullNameByTag.put(TagFromName.RelevantOPTAttributesSequence,"Relevant OPT Attributes Sequence");
		fullNameByTag.put(TagFromName.TransformationMethodCodeSequence,"Transformation Method Code Sequence");
		fullNameByTag.put(TagFromName.TransformationAlgorithmSequence,"Transformation Algorithm Sequence");
		fullNameByTag.put(TagFromName.OphthalmicAxialLengthMethod,"Ophthalmic Axial Length Method");
		fullNameByTag.put(TagFromName.OphthalmicFOV,"Ophthalmic FOV");
		fullNameByTag.put(TagFromName.TwoDimensionalToThreeDimensionalMapSequence,"Two Dimensional to Three Dimensional Map Sequence");
		fullNameByTag.put(TagFromName.WideFieldOphthalmicPhotographyQualityRatingSequence,"Wide Field Ophthalmic Photography Quality Rating Sequence");
		fullNameByTag.put(TagFromName.WideFieldOphthalmicPhotographyQualityThresholdSequence,"Wide Field Ophthalmic Photography Quality Threshold Sequence");
		fullNameByTag.put(TagFromName.WideFieldOphthalmicPhotographyThresholdQualityRating,"Wide Field Ophthalmic Photography  Threshold Quality Rating");
		fullNameByTag.put(TagFromName.XCoordinatesCenterPixelViewAngle,"X Coordinates Center Pixel View Angle");
		fullNameByTag.put(TagFromName.YCoordinatesCenterPixelViewAngle,"Y Coordinates Center Pixel View Angle");
		fullNameByTag.put(TagFromName.NumberOfMapPoints,"Number of Map Points");
		fullNameByTag.put(TagFromName.TwoDimensionalToThreeDimensionalMapData,"Two Dimensional to Three Dimensional Map Data");
		fullNameByTag.put(TagFromName.DerivationAlgorithmSequence,"Derivation Algorithm Sequence");
		fullNameByTag.put(TagFromName.OphthalmicImageTypeCodeSequence,"Ophthalmic Image Type Code Sequence");
		fullNameByTag.put(TagFromName.OphthalmicImageTypeDescription,"Ophthalmic Image Type Description");
		fullNameByTag.put(TagFromName.ScanPatternTypeCodeSequence,"Scan Pattern Type Code Sequence");
		fullNameByTag.put(TagFromName.ReferencedSurfaceMeshIdentificationSequence,"Referenced Surface Mesh Identification Sequence");
		fullNameByTag.put(TagFromName.OphthalmicVolumetricPropertiesFlag,"Ophthalmic Volumetric Properties Flag");
		fullNameByTag.put(TagFromName.OphthalmicAnatomicReferencePointXCoordinate,"Ophthalmic Anatomic Reference Point X-Coordinate");
		fullNameByTag.put(TagFromName.OphthalmicAnatomicReferencePointYCoordinate,"Ophthalmic Anatomic Reference Point Y-Coordinate");
		fullNameByTag.put(TagFromName.OphthalmicEnFaceImageQualityRatingSequence,"Ophthalmic En Face Image Quality Rating Sequence");
		fullNameByTag.put(TagFromName.QualityThreshold,"Quality Threshold");
		fullNameByTag.put(TagFromName.OCTBscanAnalysisAcquisitionParametersSequence,"OCT B-scan Analysis Acquisition Parameters Sequence");
		fullNameByTag.put(TagFromName.NumberofBscansPerFrame,"Number of B-scans Per Frame");
		fullNameByTag.put(TagFromName.BscanSlabThickness,"B-scan Slab Thickness");
		fullNameByTag.put(TagFromName.DistanceBetweenBscanSlabs,"Distance Between B-scan Slabs");
		fullNameByTag.put(TagFromName.BscanCycleTime,"B-scan Cycle Time");
		fullNameByTag.put(TagFromName.BscanCycleTimeVector,"B-scan Cycle Time Vector");
		fullNameByTag.put(TagFromName.AscanRate,"A-scan Rate");
		fullNameByTag.put(TagFromName.BscanRate,"B-scan Rate");
		fullNameByTag.put(TagFromName.SurfaceMeshZPixelOffset,"Surface Mesh Z-Pixel Offset");
		fullNameByTag.put(TagFromName.VisualFieldHorizontalExtent,"Visual Field Horizontal Extent");
		fullNameByTag.put(TagFromName.VisualFieldVerticalExtent,"Visual Field Vertical Extent");
		fullNameByTag.put(TagFromName.VisualFieldShape,"Visual Field Shape");
		fullNameByTag.put(TagFromName.ScreeningTestModeCodeSequence,"Screening Test Mode Code Sequence");
		fullNameByTag.put(TagFromName.MaximumStimulusLuminance,"Maximum Stimulus Luminance");
		fullNameByTag.put(TagFromName.BackgroundLuminance,"Background Luminance");
		fullNameByTag.put(TagFromName.StimulusColorCodeSequence,"Stimulus Color Code Sequence");
		fullNameByTag.put(TagFromName.BackgroundIlluminationColorCodeSequence,"Background Illumination Color Code Sequence");
		fullNameByTag.put(TagFromName.StimulusArea,"Stimulus Area");
		fullNameByTag.put(TagFromName.StimulusPresentationTime,"Stimulus Presentation Time");
		fullNameByTag.put(TagFromName.FixationSequence,"Fixation Sequence");
		fullNameByTag.put(TagFromName.FixationMonitoringCodeSequence,"Fixation Monitoring Code Sequence");
		fullNameByTag.put(TagFromName.VisualFieldCatchTrialSequence,"Visual Field Catch Trial Sequence");
		fullNameByTag.put(TagFromName.FixationCheckedQuantity,"Fixation Checked Quantity");
		fullNameByTag.put(TagFromName.PatientNotProperlyFixatedQuantity,"Patient Not Properly Fixated Quantity");
		fullNameByTag.put(TagFromName.PresentedVisualStimuliDataFlag,"Presented Visual Stimuli Data Flag");
		fullNameByTag.put(TagFromName.NumberOfVisualStimuli,"Number of Visual Stimuli");
		fullNameByTag.put(TagFromName.ExcessiveFixationLossesDataFlag,"Excessive Fixation Losses Data Flag");
		fullNameByTag.put(TagFromName.ExcessiveFixationLosses,"Excessive Fixation Losses");
		fullNameByTag.put(TagFromName.StimuliRetestingQuantity,"Stimuli Retesting Quantity");
		fullNameByTag.put(TagFromName.CommentsOnPatientPerformanceOfVisualField,"Comments on Patient's Performance of Visual Field");
		fullNameByTag.put(TagFromName.FalseNegativesEstimateFlag,"False Negatives Estimate Flag");
		fullNameByTag.put(TagFromName.FalseNegativesEstimate,"False Negatives Estimate");
		fullNameByTag.put(TagFromName.NegativeCatchTrialsQuantity,"Negative Catch Trials Quantity");
		fullNameByTag.put(TagFromName.FalseNegativesQuantity,"False Negatives Quantity");
		fullNameByTag.put(TagFromName.ExcessiveFalseNegativesDataFlag,"Excessive False Negatives Data Flag");
		fullNameByTag.put(TagFromName.ExcessiveFalseNegatives,"Excessive False Negatives");
		fullNameByTag.put(TagFromName.FalsePositivesEstimateFlag,"False Positives Estimate Flag");
		fullNameByTag.put(TagFromName.FalsePositivesEstimate,"False Positives Estimate");
		fullNameByTag.put(TagFromName.CatchTrialsDataFlag,"Catch Trials Data Flag");
		fullNameByTag.put(TagFromName.PositiveCatchTrialsQuantity,"Positive Catch Trials Quantity");
		fullNameByTag.put(TagFromName.TestPointNormalsDataFlag,"Test Point Normals Data Flag");
		fullNameByTag.put(TagFromName.TestPointNormalsSequence,"Test Point Normals Sequence");
		fullNameByTag.put(TagFromName.GlobalDeviationProbabilityNormalsFlag,"Global Deviation Probability Normals Flag");
		fullNameByTag.put(TagFromName.FalsePositivesQuantity,"False Positives Quantity");
		fullNameByTag.put(TagFromName.ExcessiveFalsePositivesDataFlag,"Excessive False Positives Data Flag");
		fullNameByTag.put(TagFromName.ExcessiveFalsePositives,"Excessive False Positives");
		fullNameByTag.put(TagFromName.VisualFieldTestNormalsFlag,"Visual Field Test Normals Flag");
		fullNameByTag.put(TagFromName.ResultsNormalsSequence,"Results Normals Sequence");
		fullNameByTag.put(TagFromName.AgeCorrectedSensitivityDeviationAlgorithmSequence,"Age Corrected Sensitivity Deviation Algorithm Sequence");
		fullNameByTag.put(TagFromName.GlobalDeviationFromNormal,"Global Deviation From Normal");
		fullNameByTag.put(TagFromName.GeneralizedDefectSensitivityDeviationAlgorithmSequence,"Generalized Defect Sensitivity Deviation Algorithm Sequence");
		fullNameByTag.put(TagFromName.LocalizedDeviationFromNormal,"Localized Deviation From Normal");
		fullNameByTag.put(TagFromName.PatientReliabilityIndicator,"Patient Reliability Indicator");
		fullNameByTag.put(TagFromName.VisualFieldMeanSensitivity,"Visual Field Mean Sensitivity");
		fullNameByTag.put(TagFromName.GlobalDeviationProbability,"Global Deviation Probability");
		fullNameByTag.put(TagFromName.LocalDeviationProbabilityNormalsFlag,"Local Deviation Probability Normals Flag");
		fullNameByTag.put(TagFromName.LocalizedDeviationProbability,"Localized Deviation Probability");
		fullNameByTag.put(TagFromName.ShortTermFluctuationCalculated,"Short Term Fluctuation Calculated");
		fullNameByTag.put(TagFromName.ShortTermFluctuation,"Short Term Fluctuation");
		fullNameByTag.put(TagFromName.ShortTermFluctuationProbabilityCalculated,"Short Term Fluctuation Probability Calculated");
		fullNameByTag.put(TagFromName.ShortTermFluctuationProbability,"Short Term Fluctuation Probability");
		fullNameByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalCalculated,"Corrected Localized Deviation From Normal Calculated");
		fullNameByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormal,"Corrected Localized Deviation From Normal");
		fullNameByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalProbabilityCalculated,"Corrected Localized Deviation From Normal Probability Calculated");
		fullNameByTag.put(TagFromName.CorrectedLocalizedDeviationFromNormalProbability,"Corrected Localized Deviation From Normal Probability");
		fullNameByTag.put(TagFromName.GlobalDeviationProbabilitySequence,"Global Deviation Probability Sequence");
		fullNameByTag.put(TagFromName.LocalizedDeviationProbabilitySequence,"Localized Deviation Probability Sequence");
		fullNameByTag.put(TagFromName.FovealSensitivityMeasured,"Foveal Sensitivity Measured");
		fullNameByTag.put(TagFromName.FovealSensitivity,"Foveal Sensitivity");
		fullNameByTag.put(TagFromName.VisualFieldTestDuration,"Visual Field Test Duration");
		fullNameByTag.put(TagFromName.VisualFieldTestPointSequence,"Visual Field Test Point Sequence");
		fullNameByTag.put(TagFromName.VisualFieldTestPointXCoordinate,"Visual Field Test Point X-Coordinate");
		fullNameByTag.put(TagFromName.VisualFieldTestPointYCoordinate,"Visual Field Test Point Y-Coordinate");
		fullNameByTag.put(TagFromName.AgeCorrectedSensitivityDeviationValue,"Age Corrected Sensitivity Deviation Value");
		fullNameByTag.put(TagFromName.StimulusResults,"Stimulus Results");
		fullNameByTag.put(TagFromName.SensitivityValue,"Sensitivity Value");
		fullNameByTag.put(TagFromName.RetestStimulusSeen,"Retest Stimulus Seen");
		fullNameByTag.put(TagFromName.RetestSensitivityValue,"Retest Sensitivity Value");
		fullNameByTag.put(TagFromName.VisualFieldTestPointNormalsSequence,"Visual Field Test Point Normals Sequence");
		fullNameByTag.put(TagFromName.QuantifiedDefect,"Quantified Defect");
		fullNameByTag.put(TagFromName.AgeCorrectedSensitivityDeviationProbabilityValue,"Age Corrected Sensitivity Deviation Probability Value");
		fullNameByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationFlag,"Generalized Defect Corrected Sensitivity Deviation Flag");
		fullNameByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationValue,"Generalized Defect Corrected Sensitivity Deviation Value");
		fullNameByTag.put(TagFromName.GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue,"Generalized Defect Corrected Sensitivity Deviation Probability Value");
		fullNameByTag.put(TagFromName.MinimumSensitivityValue,"Minimum Sensitivity Value");
		fullNameByTag.put(TagFromName.BlindSpotLocalized,"Blind Spot Localized");
		fullNameByTag.put(TagFromName.BlindSpotXCoordinate,"Blind Spot X-Coordinate");
		fullNameByTag.put(TagFromName.BlindSpotYCoordinate,"Blind Spot Y-Coordinate");
		fullNameByTag.put(TagFromName.VisualAcuityMeasurementSequence,"Visual Acuity Measurement Sequence");
		fullNameByTag.put(TagFromName.RefractiveParametersUsedOnPatientSequence,"Refractive Parameters Used on Patient Sequence");
		fullNameByTag.put(TagFromName.MeasurementLaterality,"Measurement Laterality");
		fullNameByTag.put(TagFromName.OphthalmicPatientClinicalInformationLeftEyeSequence,"Ophthalmic Patient Clinical Information Left Eye Sequence");
		fullNameByTag.put(TagFromName.OphthalmicPatientClinicalInformationRightEyeSequence,"Ophthalmic Patient Clinical Information Right Eye Sequence");
		fullNameByTag.put(TagFromName.FovealPointNormativeDataFlag,"Foveal Point Normative Data Flag");
		fullNameByTag.put(TagFromName.FovealPointProbabilityValue,"Foveal Point Probability Value");
		fullNameByTag.put(TagFromName.ScreeningBaselineMeasured,"Screening Baseline Measured");
		fullNameByTag.put(TagFromName.ScreeningBaselineMeasuredSequence,"Screening Baseline Measured Sequence");
		fullNameByTag.put(TagFromName.ScreeningBaselineType,"Screening Baseline Type");
		fullNameByTag.put(TagFromName.ScreeningBaselineValue,"Screening Baseline Value");
		fullNameByTag.put(TagFromName.AlgorithmSource,"Algorithm Source");
		fullNameByTag.put(TagFromName.DataSetName,"Data Set Name");
		fullNameByTag.put(TagFromName.DataSetVersion,"Data Set Version");
		fullNameByTag.put(TagFromName.DataSetSource,"Data Set Source");
		fullNameByTag.put(TagFromName.DataSetDescription,"Data Set Description");
		fullNameByTag.put(TagFromName.VisualFieldTestReliabilityGlobalIndexSequence,"Visual Field Test Reliability Global Index Sequence");
		fullNameByTag.put(TagFromName.VisualFieldGlobalResultsIndexSequence,"Visual Field Global Results Index Sequence");
		fullNameByTag.put(TagFromName.DataObservationSequence,"Data Observation Sequence");
		fullNameByTag.put(TagFromName.IndexNormalsFlag,"Index Normals Flag");
		fullNameByTag.put(TagFromName.IndexProbability,"Index Probability");
		fullNameByTag.put(TagFromName.IndexProbabilitySequence,"Index Probability Sequence");
		fullNameByTag.put(TagFromName.SamplesPerPixel,"Samples per Pixel");
		fullNameByTag.put(TagFromName.SamplesPerPixelUsed,"Samples per Pixel Used");
		fullNameByTag.put(TagFromName.PhotometricInterpretation,"Photometric Interpretation");
		fullNameByTag.put(TagFromName.ImageDimensions,"Image Dimensions");
		fullNameByTag.put(TagFromName.PlanarConfiguration,"Planar Configuration");
		fullNameByTag.put(TagFromName.NumberOfFrames,"Number of Frames");
		fullNameByTag.put(TagFromName.FrameIncrementPointer,"Frame Increment Pointer");
		fullNameByTag.put(TagFromName.FrameDimensionPointer,"Frame Dimension Pointer");
		fullNameByTag.put(TagFromName.Rows,"Rows");
		fullNameByTag.put(TagFromName.Columns,"Columns");
		fullNameByTag.put(TagFromName.Planes,"Planes");
		fullNameByTag.put(TagFromName.UltrasoundColorDataPresent,"Ultrasound Color Data Present");
		fullNameByTag.put(TagFromName.PixelSpacing,"Pixel Spacing");
		fullNameByTag.put(TagFromName.ZoomFactor,"Zoom Factor");
		fullNameByTag.put(TagFromName.ZoomCenter,"Zoom Center");
		fullNameByTag.put(TagFromName.PixelAspectRatio,"Pixel Aspect Ratio");
		fullNameByTag.put(TagFromName.ImageFormat,"Image Format");
		fullNameByTag.put(TagFromName.ManipulatedImage,"Manipulated Image");
		fullNameByTag.put(TagFromName.CorrectedImage,"Corrected Image");
		fullNameByTag.put(TagFromName.CompressionRecognitionCode,"Compression Recognition Code");
		fullNameByTag.put(TagFromName.CompressionCode,"Compression Code");
		fullNameByTag.put(TagFromName.CompressionOriginator,"Compression Originator");
		fullNameByTag.put(TagFromName.CompressionLabel,"Compression Label");
		fullNameByTag.put(TagFromName.CompressionDescription,"Compression Description");
		fullNameByTag.put(TagFromName.CompressionSequence,"Compression Sequence");
		fullNameByTag.put(TagFromName.CompressionStepPointers,"Compression Step Pointers");
		fullNameByTag.put(TagFromName.RepeatInterval,"Repeat Interval");
		fullNameByTag.put(TagFromName.BitsGrouped,"Bits Grouped");
		fullNameByTag.put(TagFromName.PerimeterTable,"Perimeter Table");
		fullNameByTag.put(TagFromName.PerimeterValue,"Perimeter Value");
		fullNameByTag.put(TagFromName.PredictorRows,"Predictor Rows");
		fullNameByTag.put(TagFromName.PredictorColumns,"Predictor Columns");
		fullNameByTag.put(TagFromName.PredictorConstants,"Predictor Constants");
		fullNameByTag.put(TagFromName.BlockedPixels,"Blocked Pixels");
		fullNameByTag.put(TagFromName.BlockRows,"Block Rows");
		fullNameByTag.put(TagFromName.BlockColumns,"Block Columns");
		fullNameByTag.put(TagFromName.RowOverlap,"Row Overlap");
		fullNameByTag.put(TagFromName.ColumnOverlap,"Column Overlap");
		fullNameByTag.put(TagFromName.BitsAllocated,"Bits Allocated");
		fullNameByTag.put(TagFromName.BitsStored,"Bits Stored");
		fullNameByTag.put(TagFromName.HighBit,"High Bit");
		fullNameByTag.put(TagFromName.PixelRepresentation,"Pixel Representation");
		fullNameByTag.put(TagFromName.SmallestValidPixelValue,"Smallest Valid Pixel Value");
		fullNameByTag.put(TagFromName.LargestValidPixelValue,"Largest Valid Pixel Value");
		fullNameByTag.put(TagFromName.SmallestImagePixelValue,"Smallest Image Pixel Value");
		fullNameByTag.put(TagFromName.LargestImagePixelValue,"Largest Image Pixel Value");
		fullNameByTag.put(TagFromName.SmallestPixelValueInSeries,"Smallest Pixel Value in Series");
		fullNameByTag.put(TagFromName.LargestPixelValueInSeries,"Largest Pixel Value in Series");
		fullNameByTag.put(TagFromName.SmallestImagePixelValueInPlane,"Smallest Image Pixel Value in Plane");
		fullNameByTag.put(TagFromName.LargestImagePixelValueInPlane,"Largest Image Pixel Value in Plane");
		fullNameByTag.put(TagFromName.PixelPaddingValue,"Pixel Padding Value");
		fullNameByTag.put(TagFromName.PixelPaddingRangeLimit,"Pixel Padding Range Limit");
		fullNameByTag.put(TagFromName.FloatPixelPaddingValue,"Float Pixel Padding Value");
		fullNameByTag.put(TagFromName.DoubleFloatPixelPaddingValue,"Double Float Pixel Padding Value");
		fullNameByTag.put(TagFromName.FloatPixelPaddingRangeLimit,"Float Pixel Padding Range Limit");
		fullNameByTag.put(TagFromName.DoubleFloatPixelPaddingRangeLimit,"Double Float Pixel Padding Range Limit");
		fullNameByTag.put(TagFromName.ImageLocation,"Image Location");
		fullNameByTag.put(TagFromName.QualityControlImage,"Quality Control Image");
		fullNameByTag.put(TagFromName.BurnedInAnnotation,"Burned In Annotation");
		fullNameByTag.put(TagFromName.RecognizableVisualFeatures,"Recognizable Visual Features");
		fullNameByTag.put(TagFromName.LongitudinalTemporalInformationModified,"Longitudinal Temporal Information Modified");
		fullNameByTag.put(TagFromName.ReferencedColorPaletteInstanceUID,"Referenced Color Palette Instance UID");
		fullNameByTag.put(TagFromName.TransformLabel,"Transform Label");
		fullNameByTag.put(TagFromName.TransformVersionNumber,"Transform Version Number");
		fullNameByTag.put(TagFromName.NumberOfTransformSteps,"Number of Transform Steps");
		fullNameByTag.put(TagFromName.SequenceOfCompressedData,"Sequence of Compressed Data");
		fullNameByTag.put(TagFromName.DetailsOfCoefficients,"Details of Coefficients");
		fullNameByTag.put(TagFromName.DCTLabel,"DCT Label");
		fullNameByTag.put(TagFromName.DataBlockDescription,"Data Block Description");
		fullNameByTag.put(TagFromName.DataBlock,"Data Block");
		fullNameByTag.put(TagFromName.NormalizationFactorFormat,"Normalization Factor Format");
		fullNameByTag.put(TagFromName.ZonalMapNumberFormat,"Zonal Map Number Format");
		fullNameByTag.put(TagFromName.ZonalMapLocation,"Zonal Map Location");
		fullNameByTag.put(TagFromName.ZonalMapFormat,"Zonal Map Format");
		fullNameByTag.put(TagFromName.AdaptiveMapFormat,"Adaptive Map Format");
		fullNameByTag.put(TagFromName.CodeNumberFormat,"Code Number Format");
		fullNameByTag.put(TagFromName.PixelSpacingCalibrationType,"Pixel Spacing Calibration Type");
		fullNameByTag.put(TagFromName.PixelSpacingCalibrationDescription,"Pixel Spacing Calibration Description");
		fullNameByTag.put(TagFromName.PixelIntensityRelationship,"Pixel Intensity Relationship");
		fullNameByTag.put(TagFromName.PixelIntensityRelationshipSign,"Pixel Intensity Relationship Sign");
		fullNameByTag.put(TagFromName.WindowCenter,"Window Center");
		fullNameByTag.put(TagFromName.WindowWidth,"Window Width");
		fullNameByTag.put(TagFromName.RescaleIntercept,"Rescale Intercept");
		fullNameByTag.put(TagFromName.RescaleSlope,"Rescale Slope");
		fullNameByTag.put(TagFromName.RescaleType,"Rescale Type");
		fullNameByTag.put(TagFromName.WindowCenterWidthExplanation,"Window Center & Width Explanation");
		fullNameByTag.put(TagFromName.VOILUTFunction,"VOI LUT Function");
		fullNameByTag.put(TagFromName.GrayScale,"Gray Scale");
		fullNameByTag.put(TagFromName.RecommendedViewingMode,"Recommended Viewing Mode");
		fullNameByTag.put(TagFromName.GrayLookupTableDescriptor,"Gray Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.RedPaletteColorLookupTableDescriptor,"Red Palette Color Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.GreenPaletteColorLookupTableDescriptor,"Green Palette Color Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.BluePaletteColorLookupTableDescriptor,"Blue Palette Color Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.AlphaPaletteColorLookupTableDescriptor,"Alpha Palette Color Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.LargeRedPaletteColorLookupTableDescriptor,"Large Red Palette Color Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.LargeGreenPaletteColorLookupTableDescriptor,"Large Green Palette Color Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.LargeBluePaletteColorLookupTableDescriptor,"Large Blue Palette Color Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.PaletteColorLookupTableUID,"Palette Color Lookup Table UID");
		fullNameByTag.put(TagFromName.GrayLookupTableData,"Gray Lookup Table Data");
		fullNameByTag.put(TagFromName.RedPaletteColorLookupTableData,"Red Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.GreenPaletteColorLookupTableData,"Green Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.BluePaletteColorLookupTableData,"Blue Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.AlphaPaletteColorLookupTableData,"Alpha Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.LargeRedPaletteColorLookupTableData,"Large Red Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.LargeGreenPaletteColorLookupTableData,"Large Green Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.LargeBluePaletteColorLookupTableData,"Large Blue Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.LargePaletteColorLookupTableUID,"Large Palette Color Lookup Table UID");
		fullNameByTag.put(TagFromName.SegmentedRedPaletteColorLookupTableData,"Segmented Red Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.SegmentedGreenPaletteColorLookupTableData,"Segmented Green Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.SegmentedBluePaletteColorLookupTableData,"Segmented Blue Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.SegmentedAlphaPaletteColorLookupTableData,"Segmented Alpha Palette Color Lookup Table Data");
		fullNameByTag.put(TagFromName.StoredValueColorRangeSequence,"Stored Value Color Range Sequence");
		fullNameByTag.put(TagFromName.MinimumStoredValueMapped,"Minimum Stored Value Mappe");
		fullNameByTag.put(TagFromName.MaximumStoredValueMapped,"Maximum Stored Value Mapped");
		fullNameByTag.put(TagFromName.BreastImplantPresent,"Breast Implant Present");
		fullNameByTag.put(TagFromName.PartialView,"Partial View");
		fullNameByTag.put(TagFromName.PartialViewDescription,"Partial View Description");
		fullNameByTag.put(TagFromName.PartialViewCodeSequence,"Partial View Code Sequence");
		fullNameByTag.put(TagFromName.SpatialLocationsPreserved,"Spatial Locations Preserved");
		fullNameByTag.put(TagFromName.DataFrameAssignmentSequence,"Data Frame Assignment Sequence");
		fullNameByTag.put(TagFromName.DataPathAssignment,"Data Path Assignment");
		fullNameByTag.put(TagFromName.BitsMappedToColorLookupTable,"Bits Mapped to Color Lookup Table");
		fullNameByTag.put(TagFromName.BlendingLUT1Sequence,"Blending LUT 1 Sequence");
		fullNameByTag.put(TagFromName.BlendingLUT1TransferFunction,"Blending LUT 1 Transfer Function");
		fullNameByTag.put(TagFromName.BlendingWeightConstant,"Blending Weight Constant");
		fullNameByTag.put(TagFromName.BlendingLookupTableDescriptor,"Blending Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.BlendingLookupTableData,"Blending Lookup Table Data");
		fullNameByTag.put(TagFromName.EnhancedPaletteColorLookupTableSequence,"Enhanced Palette Color Lookup Table Sequence");
		fullNameByTag.put(TagFromName.BlendingLUT2Sequence,"Blending LUT 2 Sequence");
		fullNameByTag.put(TagFromName.BlendingLUT2TransferFunction,"Blending LUT 2 Transfer Function");
		fullNameByTag.put(TagFromName.DataPathID,"Data Path ID");
		fullNameByTag.put(TagFromName.RGBLUTTransferFunction,"RGB LUT Transfer Function");
		fullNameByTag.put(TagFromName.AlphaLUTTransferFunction,"Alpha LUT Transfer Function");
		fullNameByTag.put(TagFromName.ICCProfile,"ICC Profile");
		fullNameByTag.put(TagFromName.ColorSpace,"Color Space");
		fullNameByTag.put(TagFromName.LossyImageCompression,"Lossy Image Compression");
		fullNameByTag.put(TagFromName.LossyImageCompressionRatio,"Lossy Image Compression Ratio");
		fullNameByTag.put(TagFromName.LossyImageCompressionMethod,"Lossy Image Compression Method");
		fullNameByTag.put(TagFromName.ModalityLUTSequence,"Modality LUT Sequence");
		fullNameByTag.put(TagFromName.LUTDescriptor,"LUT Descriptor");
		fullNameByTag.put(TagFromName.LUTExplanation,"LUT Explanation");
		fullNameByTag.put(TagFromName.ModalityLUTType,"Modality LUT Type");
		fullNameByTag.put(TagFromName.LUTData,"LUT Data");
		fullNameByTag.put(TagFromName.VOILUTSequence,"VOI LUT Sequence");
		fullNameByTag.put(TagFromName.SoftcopyVOILUTSequence,"Softcopy VOI LUT Sequence");
		fullNameByTag.put(TagFromName.ImagePresentationComments,"Image Presentation Comments");
		fullNameByTag.put(TagFromName.BiPlaneAcquisitionSequence,"Bi-Plane Acquisition Sequence");
		fullNameByTag.put(TagFromName.RepresentativeFrameNumber,"Representative Frame Number");
		fullNameByTag.put(TagFromName.FrameNumbersOfInterest,"Frame Numbers of Interest (FOI)");
		fullNameByTag.put(TagFromName.FrameOfInterestDescription,"Frame of Interest Description");
		fullNameByTag.put(TagFromName.FrameOfInterestType,"Frame of Interest Type");
		fullNameByTag.put(TagFromName.MaskPointers,"Mask Pointer(s)");
		fullNameByTag.put(TagFromName.RWavePointer,"R Wave Pointer");
		fullNameByTag.put(TagFromName.MaskSubtractionSequence,"Mask Subtraction Sequence");
		fullNameByTag.put(TagFromName.MaskOperation,"Mask Operation");
		fullNameByTag.put(TagFromName.ApplicableFrameRange,"Applicable Frame Range");
		fullNameByTag.put(TagFromName.MaskFrameNumbers,"Mask Frame Numbers");
		fullNameByTag.put(TagFromName.ContrastFrameAveraging,"Contrast Frame Averaging");
		fullNameByTag.put(TagFromName.MaskSubPixelShift,"Mask Sub-pixel Shift");
		fullNameByTag.put(TagFromName.TIDOffset,"TID Offset");
		fullNameByTag.put(TagFromName.MaskOperationExplanation,"Mask Operation Explanation");
		fullNameByTag.put(TagFromName.EquipmentAdministratorSequence,"Equipment Administrator Sequence");
		fullNameByTag.put(TagFromName.NumberOfDisplaySubsystems,"Number of Display Subsystems");
		fullNameByTag.put(TagFromName.CurrentConfigurationID,"Current Configuration ID");
		fullNameByTag.put(TagFromName.DisplaySystemID,"Display Subsystem ID");
		fullNameByTag.put(TagFromName.DisplaySubsystemName,"Display Subsystem Name");
		fullNameByTag.put(TagFromName.DisplaySubsystemDescription,"Display Subsystem Description");
		fullNameByTag.put(TagFromName.SystemStatus,"System Status");
		fullNameByTag.put(TagFromName.SystemStatusComment,"System Status Comment");
		fullNameByTag.put(TagFromName.TargetLuminanceCharacteristicsSequence,"Target Luminance Characteristics Sequence");
		fullNameByTag.put(TagFromName.LuminanceCharacteristicsID,"Luminance Characteristics ID");
		fullNameByTag.put(TagFromName.DisplaySubsystemConfigurationSequence,"Display Subsystem Configuration Sequence");
		fullNameByTag.put(TagFromName.ConfigurationID,"Configuration ID");
		fullNameByTag.put(TagFromName.ConfigurationName,"Configuration Name");
		fullNameByTag.put(TagFromName.ConfigurationDescription,"Configuration Description");
		fullNameByTag.put(TagFromName.ReferencedTargetLuminanceCharacteristicsID,"Referenced Target Luminance Characteristics ID");
		fullNameByTag.put(TagFromName.QAResultsSequence,"QA Results Sequence");
		fullNameByTag.put(TagFromName.DisplaySubsystemQAResultsSequence,"Display Subsystem QA Results Sequence");
		fullNameByTag.put(TagFromName.ConfigurationQAResultsSequence,"Configuration QA Results Sequence");
		fullNameByTag.put(TagFromName.MeasurementEquipmentSequence,"Measurement Equipment Sequence");
		fullNameByTag.put(TagFromName.MeasurementFunctions,"Measurement Functions");
		fullNameByTag.put(TagFromName.MeasurementEquipmentType,"Measurement Equipment Type");
		fullNameByTag.put(TagFromName.VisualEvaluationResultSequence,"Visual Evaluation Result Sequence");
		fullNameByTag.put(TagFromName.DisplayCalibrationResultSequence,"Display Calibration Result Sequence");
		fullNameByTag.put(TagFromName.DDLValue,"DDL Value");
		fullNameByTag.put(TagFromName.CIExyWhitePoint,"CIExy White Point");
		fullNameByTag.put(TagFromName.DisplayFunctionType,"Display Function Type");
		fullNameByTag.put(TagFromName.GammaValue,"Gamma Value");
		fullNameByTag.put(TagFromName.NumberOfLuminancePoints,"Number of Luminance Points");
		fullNameByTag.put(TagFromName.LuminanceResponseSequence,"Luminance Response Sequence");
		fullNameByTag.put(TagFromName.TargetMinimumLuminance,"Target Minimum Luminance");
		fullNameByTag.put(TagFromName.TargetMaximumLuminance,"Target Maximum Luminance");
		fullNameByTag.put(TagFromName.LuminanceValue,"Luminance Value");
		fullNameByTag.put(TagFromName.LuminanceResponseDescription,"Luminance Response Description");
		fullNameByTag.put(TagFromName.WhitePointFlag,"White Point Flag");
		fullNameByTag.put(TagFromName.DisplayDeviceTypeCodeSequence,"Display Device Type Code Sequence");
		fullNameByTag.put(TagFromName.DisplaySubsystemSequence,"Display Subsystem Sequence");
		fullNameByTag.put(TagFromName.LuminanceResultSequence,"Luminance Result Sequence");
		fullNameByTag.put(TagFromName.AmbientLightValueSource,"Ambient Light Value Source");
		fullNameByTag.put(TagFromName.MeasuredCharacteristics,"Measured Characteristics");
		fullNameByTag.put(TagFromName.LuminanceUniformityResultSequence,"Luminance Uniformity Result Sequence");
		fullNameByTag.put(TagFromName.VisualEvaluationTestSequence,"Visual Evaluation Test Sequence");
		fullNameByTag.put(TagFromName.TestResult,"Test Result");
		fullNameByTag.put(TagFromName.TestResultComment,"Test Result Comment");
		fullNameByTag.put(TagFromName.TestImageValidation,"Test Image Validation");
		fullNameByTag.put(TagFromName.TestPatternCodeSequence,"Test Pattern Code Sequence");
		fullNameByTag.put(TagFromName.MeasurementPatternCodeSequence,"Measurement Pattern Code Sequence");
		fullNameByTag.put(TagFromName.VisualEvaluationMethodCodeSequence,"Visual Evaluation Method Code Sequence");
		fullNameByTag.put(TagFromName.PixelDataProviderURL,"Pixel Data Provider URL");
		fullNameByTag.put(TagFromName.DataPointRows,"Data Point Rows");
		fullNameByTag.put(TagFromName.DataPointColumns,"Data Point Columns");
		fullNameByTag.put(TagFromName.SignalDomainColumns,"Signal Domain Columns");
		fullNameByTag.put(TagFromName.LargestMonochromePixelValue,"Largest Monochrome Pixel Value");
		fullNameByTag.put(TagFromName.DataRepresentation,"Data Representation");
		fullNameByTag.put(TagFromName.PixelMeasuresSequence,"Pixel Measures Sequence");
		fullNameByTag.put(TagFromName.FrameVOILUTSequence,"Frame VOI LUT Sequence");
		fullNameByTag.put(TagFromName.PixelValueTransformationSequence,"Pixel Value Transformation Sequence");
		fullNameByTag.put(TagFromName.SignalDomainRows,"Signal Domain Rows");
		fullNameByTag.put(TagFromName.DisplayFilterPercentage,"Display Filter Percentage");
		fullNameByTag.put(TagFromName.FramePixelShiftSequence,"Frame Pixel Shift Sequence");
		fullNameByTag.put(TagFromName.SubtractionItemID,"Subtraction Item ID");
		fullNameByTag.put(TagFromName.PixelIntensityRelationshipLUTSequence,"Pixel Intensity Relationship LUT Sequence");
		fullNameByTag.put(TagFromName.FramePixelDataPropertiesSequence,"Frame Pixel Data Properties Sequence");
		fullNameByTag.put(TagFromName.GeometricalProperties,"Geometrical Properties");
		fullNameByTag.put(TagFromName.GeometricMaximumDistortion,"Geometric Maximum Distortion");
		fullNameByTag.put(TagFromName.ImageProcessingApplied,"Image Processing Applied");
		fullNameByTag.put(TagFromName.MaskSelectionMode,"Mask Selection Mode");
		fullNameByTag.put(TagFromName.LUTFunction,"LUT Function");
		fullNameByTag.put(TagFromName.MaskVisibilityPercentage,"Mask Visibility Percentage");
		fullNameByTag.put(TagFromName.PixelShiftSequence,"Pixel Shift Sequence");
		fullNameByTag.put(TagFromName.RegionPixelShiftSequence,"Region Pixel Shift Sequence");
		fullNameByTag.put(TagFromName.VerticesOfTheRegion,"Vertices of the Region");
		fullNameByTag.put(TagFromName.MultiFramePresentationSequence,"Multi-frame Presentation Sequence");
		fullNameByTag.put(TagFromName.PixelShiftFrameRange,"Pixel Shift Frame Range");
		fullNameByTag.put(TagFromName.LUTFrameRange,"LUT Frame Range");
		fullNameByTag.put(TagFromName.ImageToEquipmentMappingMatrix,"Image to Equipment Mapping Matrix");
		fullNameByTag.put(TagFromName.EquipmentCoordinateSystemIdentification,"Equipment Coordinate System Identification");
		fullNameByTag.put(TagFromName.StudyStatusID,"Study Status ID");
		fullNameByTag.put(TagFromName.StudyPriorityID,"Study Priority ID");
		fullNameByTag.put(TagFromName.StudyIDIssuer,"Study ID Issuer");
		fullNameByTag.put(TagFromName.StudyVerifiedDate,"Study Verified Date");
		fullNameByTag.put(TagFromName.StudyVerifiedTime,"Study Verified Time");
		fullNameByTag.put(TagFromName.StudyReadDate,"Study Read Date");
		fullNameByTag.put(TagFromName.StudyReadTime,"Study Read Time");
		fullNameByTag.put(TagFromName.ScheduledStudyStartDate,"Scheduled Study Start Date");
		fullNameByTag.put(TagFromName.ScheduledStudyStartTime,"Scheduled Study Start Time");
		fullNameByTag.put(TagFromName.ScheduledStudyStopDate,"Scheduled Study Stop Date");
		fullNameByTag.put(TagFromName.ScheduledStudyStopTime,"Scheduled Study Stop Time");
		fullNameByTag.put(TagFromName.ScheduledStudyLocation,"Scheduled Study Location");
		fullNameByTag.put(TagFromName.ScheduledStudyLocationAETitle,"Scheduled Study Location AE Title");
		fullNameByTag.put(TagFromName.ReasonForStudy,"Reason for Study");
		fullNameByTag.put(TagFromName.RequestingPhysicianIdentificationSequence,"Requesting Physician Identification Sequence");
		fullNameByTag.put(TagFromName.RequestingPhysician,"Requesting Physician");
		fullNameByTag.put(TagFromName.RequestingService,"Requesting Service");
		fullNameByTag.put(TagFromName.RequestingServiceCodeSequence,"Requesting Service Code Sequence");
		fullNameByTag.put(TagFromName.StudyArrivalDate,"Study Arrival Date");
		fullNameByTag.put(TagFromName.StudyArrivalTime,"Study Arrival Time");
		fullNameByTag.put(TagFromName.StudyCompletionDate,"Study Completion Date");
		fullNameByTag.put(TagFromName.StudyCompletionTime,"Study Completion Time");
		fullNameByTag.put(TagFromName.StudyComponentStatusID,"Study Component Status ID");
		fullNameByTag.put(TagFromName.RequestedProcedureDescription,"Requested Procedure Description");
		fullNameByTag.put(TagFromName.RequestedProcedureCodeSequence,"Requested Procedure Code Sequence");
		fullNameByTag.put(TagFromName.RequestedContrastAgent,"Requested Contrast Agent");
		fullNameByTag.put(TagFromName.StudyComments,"Study Comments");
		fullNameByTag.put(TagFromName.ReferencedPatientAliasSequence,"Referenced Patient Alias Sequence");
		fullNameByTag.put(TagFromName.VisitStatusID,"Visit Status ID");
		fullNameByTag.put(TagFromName.AdmissionID,"Admission ID");
		fullNameByTag.put(TagFromName.IssuerOfAdmissionID,"Issuer of Admission ID");
		fullNameByTag.put(TagFromName.IssuerOfAdmissionIDSequence,"Issuer of Admission ID Sequence");
		fullNameByTag.put(TagFromName.RouteOfAdmissions,"Route of Admissions");
		fullNameByTag.put(TagFromName.ScheduledAdmissionDate,"Scheduled Admission Date");
		fullNameByTag.put(TagFromName.ScheduledAdmissionTime,"Scheduled Admission Time");
		fullNameByTag.put(TagFromName.ScheduledDischargeDate,"Scheduled Discharge Date");
		fullNameByTag.put(TagFromName.ScheduledDischargeTime,"Scheduled Discharge Time");
		fullNameByTag.put(TagFromName.ScheduledPatientInstitutionResidence,"Scheduled Patient Institution Residence");
		fullNameByTag.put(TagFromName.AdmittingDate,"Admitting Date");
		fullNameByTag.put(TagFromName.AdmittingTime,"Admitting Time");
		fullNameByTag.put(TagFromName.DischargeDate,"Discharge Date");
		fullNameByTag.put(TagFromName.DischargeTime,"Discharge Time");
		fullNameByTag.put(TagFromName.DischargeDiagnosisDescription,"Discharge Diagnosis Description");
		fullNameByTag.put(TagFromName.DischargeDiagnosisCodeSequence,"Discharge Diagnosis Code Sequence");
		fullNameByTag.put(TagFromName.SpecialNeeds,"Special Needs");
		fullNameByTag.put(TagFromName.ServiceEpisodeID,"Service Episode ID");
		fullNameByTag.put(TagFromName.IssuerOfServiceEpisodeID,"Issuer of Service Episode ID");
		fullNameByTag.put(TagFromName.ServiceEpisodeDescription,"Service Episode Description");
		fullNameByTag.put(TagFromName.IssuerOfServiceEpisodeIDSequence,"Issuer of Service Episode ID Sequence");
		fullNameByTag.put(TagFromName.PertinentDocumentsSequence,"Pertinent Documents Sequence");
		fullNameByTag.put(TagFromName.PertinentResourcesSequence,"Pertinent Resources Sequence");
		fullNameByTag.put(TagFromName.ResourceDescription,"Resource Description");
		fullNameByTag.put(TagFromName.CurrentPatientLocation,"Current Patient Location");
		fullNameByTag.put(TagFromName.PatientInstitutionResidence,"Patient's Institution Residence");
		fullNameByTag.put(TagFromName.PatientState,"Patient State");
		fullNameByTag.put(TagFromName.PatientClinicalTrialParticipationSequence,"Patient Clinical Trial Participation Sequence");
		fullNameByTag.put(TagFromName.VisitComments,"Visit Comments");
		fullNameByTag.put(TagFromName.WaveformOriginality,"Waveform Originality");
		fullNameByTag.put(TagFromName.NumberOfWaveformChannels,"Number of Waveform Channels");
		fullNameByTag.put(TagFromName.NumberOfWaveformSamples,"Number of Waveform Samples");
		fullNameByTag.put(TagFromName.SamplingFrequency,"Sampling Frequency");
		fullNameByTag.put(TagFromName.MultiplexGroupLabel,"Multiplex Group Label");
		fullNameByTag.put(TagFromName.ChannelDefinitionSequence,"Channel Definition Sequence");
		fullNameByTag.put(TagFromName.WaveformChannelNumber,"Waveform Channel Number");
		fullNameByTag.put(TagFromName.ChannelLabel,"Channel Label");
		fullNameByTag.put(TagFromName.ChannelStatus,"Channel Status");
		fullNameByTag.put(TagFromName.ChannelSourceSequence,"Channel Source Sequence");
		fullNameByTag.put(TagFromName.ChannelSourceModifiersSequence,"Channel Source Modifiers Sequence");
		fullNameByTag.put(TagFromName.SourceWaveformSequence,"Source Waveform Sequence");
		fullNameByTag.put(TagFromName.ChannelDerivationDescription,"Channel Derivation Description");
		fullNameByTag.put(TagFromName.ChannelSensitivity,"Channel Sensitivity");
		fullNameByTag.put(TagFromName.ChannelSensitivityUnitsSequence,"Channel Sensitivity Units Sequence");
		fullNameByTag.put(TagFromName.ChannelSensitivityCorrectionFactor,"Channel Sensitivity Correction Factor");
		fullNameByTag.put(TagFromName.ChannelBaseline,"Channel Baseline");
		fullNameByTag.put(TagFromName.ChannelTimeSkew,"Channel Time Skew");
		fullNameByTag.put(TagFromName.ChannelSampleSkew,"Channel Sample Skew");
		fullNameByTag.put(TagFromName.ChannelOffset,"Channel Offset");
		fullNameByTag.put(TagFromName.WaveformBitsStored,"Waveform Bits Stored");
		fullNameByTag.put(TagFromName.FilterLowFrequency,"Filter Low Frequency");
		fullNameByTag.put(TagFromName.FilterHighFrequency,"Filter High Frequency");
		fullNameByTag.put(TagFromName.NotchFilterFrequency,"Notch Filter Frequency");
		fullNameByTag.put(TagFromName.NotchFilterBandwidth,"Notch Filter Bandwidth");
		fullNameByTag.put(TagFromName.WaveformDataDisplayScale,"Waveform Data Display Scale");
		fullNameByTag.put(TagFromName.WaveformDisplayBackgroundCIELabValue,"Waveform Display Background CIELab Value");
		fullNameByTag.put(TagFromName.WaveformPresentationGroupSequence,"Waveform Presentation Group Sequence");
		fullNameByTag.put(TagFromName.PresentationGroupNumber,"Presentation Group Number");
		fullNameByTag.put(TagFromName.ChannelDisplaySequence,"Channel Display Sequence");
		fullNameByTag.put(TagFromName.ChannelRecommendedDisplayCIELabValue,"Channel Recommended Display CIELab Value");
		fullNameByTag.put(TagFromName.ChannelPosition,"Channel Position");
		fullNameByTag.put(TagFromName.DisplayShadingFlag,"Display Shading Flag");
		fullNameByTag.put(TagFromName.FractionalChannelDisplayScale,"Fractional Channel Display Scale");
		fullNameByTag.put(TagFromName.AbsoluteChannelDisplayScale,"Absolute Channel Display Scale");
		fullNameByTag.put(TagFromName.MultiplexedAudioChannelsDescriptionCodeSequence,"Multiplexed Audio Channels Description Code Sequence");
		fullNameByTag.put(TagFromName.ChannelIdentificationCode,"Channel Identification Code");
		fullNameByTag.put(TagFromName.ChannelMode,"Channel Mode");
		fullNameByTag.put(TagFromName.ScheduledStationAETitle,"Scheduled Station AE Title");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepStartDate,"Scheduled Procedure Step Start Date");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepStartTime,"Scheduled Procedure Step Start Time");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepEndDate,"Scheduled Procedure Step End Date");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepEndTime,"Scheduled Procedure Step End Time");
		fullNameByTag.put(TagFromName.ScheduledPerformingPhysicianName,"Scheduled Performing Physician's Name");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepDescription,"Scheduled Procedure Step Description");
		fullNameByTag.put(TagFromName.ScheduledProtocolCodeSequence,"Scheduled Protocol Code Sequence");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepID,"Scheduled Procedure Step ID");
		fullNameByTag.put(TagFromName.StageCodeSequence,"Stage Code Sequence");
		fullNameByTag.put(TagFromName.ScheduledPerformingPhysicianIdentificationSequence,"Scheduled Performing Physician Identification Sequence");
		fullNameByTag.put(TagFromName.ScheduledStationName,"Scheduled Station Name");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepLocation,"Scheduled Procedure Step Location");
		fullNameByTag.put(TagFromName.PreMedication,"Pre-Medication");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepStatus,"Scheduled Procedure Step Status");
		fullNameByTag.put(TagFromName.OrderPlacerIdentifierSequence,"Order Placer Identifier Sequence");
		fullNameByTag.put(TagFromName.OrderFillerIdentifierSequence,"Order Filler Identifier Sequence");
		fullNameByTag.put(TagFromName.LocalNamespaceEntityID,"Local Namespace Entity ID");
		fullNameByTag.put(TagFromName.UniversalEntityID,"Universal Entity ID");
		fullNameByTag.put(TagFromName.UniversalEntityIDType,"Universal Entity ID Type");
		fullNameByTag.put(TagFromName.IdentifierTypeCode,"Identifier Type Code");
		fullNameByTag.put(TagFromName.AssigningFacilitySequence,"Assigning Facility Sequence");
		fullNameByTag.put(TagFromName.AssigningJurisdictionCodeSequence,"Assigning Jurisdiction Code Sequence");
		fullNameByTag.put(TagFromName.AssigningAgencyOrDepartmentCodeSequence,"Assigning Agency or Department Code Sequence");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepSequence,"Scheduled Procedure Step Sequence");
		fullNameByTag.put(TagFromName.ReferencedNonImageCompositeSOPInstanceSequence,"Referenced Non-Image Composite SOP Instance Sequence");
		fullNameByTag.put(TagFromName.PerformedStationAETitle,"Performed Station AE Title");
		fullNameByTag.put(TagFromName.PerformedStationName,"Performed Station Name");
		fullNameByTag.put(TagFromName.PerformedLocation,"Performed Location");
		fullNameByTag.put(TagFromName.PerformedProcedureStepStartDate,"Performed Procedure Step Start Date");
		fullNameByTag.put(TagFromName.PerformedProcedureStepStartTime,"Performed Procedure Step Start Time");
		fullNameByTag.put(TagFromName.PerformedProcedureStepEndDate,"Performed Procedure Step End Date");
		fullNameByTag.put(TagFromName.PerformedProcedureStepEndTime,"Performed Procedure Step End Time");
		fullNameByTag.put(TagFromName.PerformedProcedureStepStatus,"Performed Procedure Step Status");
		fullNameByTag.put(TagFromName.PerformedProcedureStepID,"Performed Procedure Step ID");
		fullNameByTag.put(TagFromName.PerformedProcedureStepDescription,"Performed Procedure Step Description");
		fullNameByTag.put(TagFromName.PerformedProcedureTypeDescription,"Performed Procedure Type Description");
		fullNameByTag.put(TagFromName.PerformedProtocolCodeSequence,"Performed Protocol Code Sequence");
		fullNameByTag.put(TagFromName.PerformedProtocolType,"Performed Protocol Type");
		fullNameByTag.put(TagFromName.ScheduledStepAttributesSequence,"Scheduled Step Attributes Sequence");
		fullNameByTag.put(TagFromName.RequestAttributesSequence,"Request Attributes Sequence");
		fullNameByTag.put(TagFromName.CommentsOnThePerformedProcedureStep,"Comments on the Performed Procedure Step");
		fullNameByTag.put(TagFromName.PerformedProcedureStepDiscontinuationReasonCodeSequence,"Performed Procedure Step Discontinuation Reason Code Sequence");
		fullNameByTag.put(TagFromName.QuantitySequence,"Quantity Sequence");
		fullNameByTag.put(TagFromName.Quantity,"Quantity");
		fullNameByTag.put(TagFromName.MeasuringUnitsSequence,"Measuring Units Sequence");
		fullNameByTag.put(TagFromName.BillingItemSequence,"Billing Item Sequence");
		fullNameByTag.put(TagFromName.TotalTimeOfFluoroscopy,"Total Time of Fluoroscopy");
		fullNameByTag.put(TagFromName.TotalNumberOfExposures,"Total Number of Exposures");
		fullNameByTag.put(TagFromName.EntranceDose,"Entrance Dose");
		fullNameByTag.put(TagFromName.ExposedArea,"Exposed Area");
		fullNameByTag.put(TagFromName.DistanceSourceToEntrance,"Distance Source to Entrance");
		fullNameByTag.put(TagFromName.DistanceSourceToSupport,"Distance Source to Support");
		fullNameByTag.put(TagFromName.ExposureDoseSequence,"Exposure Dose Sequence");
		fullNameByTag.put(TagFromName.CommentsOnRadiationDose,"Comments on Radiation Dose");
		fullNameByTag.put(TagFromName.XRayOutput,"X-Ray Output");
		fullNameByTag.put(TagFromName.HalfValueLayer,"Half Value Layer");
		fullNameByTag.put(TagFromName.OrganDose,"Organ Dose");
		fullNameByTag.put(TagFromName.OrganExposed,"Organ Exposed");
		fullNameByTag.put(TagFromName.BillingProcedureStepSequence,"Billing Procedure Step Sequence");
		fullNameByTag.put(TagFromName.FilmConsumptionSequence,"Film Consumption Sequence");
		fullNameByTag.put(TagFromName.BillingSuppliesAndDevicesSequence,"Billing Supplies and Devices Sequence");
		fullNameByTag.put(TagFromName.ReferencedProcedureStepSequence,"Referenced Procedure Step Sequence");
		fullNameByTag.put(TagFromName.PerformedSeriesSequence,"Performed Series Sequence");
		fullNameByTag.put(TagFromName.CommentsOnTheScheduledProcedureStep,"Comments on the Scheduled Procedure Step");
		fullNameByTag.put(TagFromName.ProtocolContextSequence,"Protocol Context Sequence");
		fullNameByTag.put(TagFromName.ContentItemModifierSequence,"Content Item Modifier Sequence");
		fullNameByTag.put(TagFromName.ScheduledSpecimenSequence,"Scheduled Specimen Sequence");
		fullNameByTag.put(TagFromName.SpecimenAccessionNumber,"Specimen Accession Number");
		fullNameByTag.put(TagFromName.ContainerIdentifier,"Container Identifier");
		fullNameByTag.put(TagFromName.IssuerOfTheContainerIdentifierSequence,"Issuer of the Container Identifier Sequence");
		fullNameByTag.put(TagFromName.AlternateContainerIdentifierSequence,"Alternate Container Identifier Sequence");
		fullNameByTag.put(TagFromName.ContainerTypeCodeSequence,"Container Type Code Sequence");
		fullNameByTag.put(TagFromName.ContainerDescription,"Container Description");
		fullNameByTag.put(TagFromName.ContainerComponentSequence,"Container Component Sequence");
		fullNameByTag.put(TagFromName.SpecimenSequence,"Specimen Sequence");
		fullNameByTag.put(TagFromName.SpecimenIdentifier,"Specimen Identifier");
		fullNameByTag.put(TagFromName.SpecimenDescriptionSequenceTrial,"Specimen Description Sequence (Trial)");
		fullNameByTag.put(TagFromName.SpecimenDescriptionTrial,"Specimen Description (Trial)");
		fullNameByTag.put(TagFromName.SpecimenUID,"Specimen UID");
		fullNameByTag.put(TagFromName.AcquisitionContextSequence,"Acquisition Context Sequence");
		fullNameByTag.put(TagFromName.AcquisitionContextDescription,"Acquisition Context Description");
		fullNameByTag.put(TagFromName.SpecimenDescriptionSequence,"Specimen Description Sequence");
		fullNameByTag.put(TagFromName.IssuerOfTheSpecimenIdentifierSequence,"Issuer of the Specimen Identifier Sequence");
		fullNameByTag.put(TagFromName.SpecimenTypeCodeSequence,"Specimen Type Code Sequence");
		fullNameByTag.put(TagFromName.SpecimenShortDescription,"Specimen Short Description");
		fullNameByTag.put(TagFromName.SpecimenDetailedDescription,"Specimen Detailed Description");
		fullNameByTag.put(TagFromName.SpecimenPreparationSequence,"Specimen Preparation Sequence");
		fullNameByTag.put(TagFromName.SpecimenPreparationStepContentItemSequence,"Specimen Preparation Step Content Item Sequence");
		fullNameByTag.put(TagFromName.SpecimenLocalizationContentItemSequence,"Specimen Localization Content Item Sequence");
		fullNameByTag.put(TagFromName.SlideIdentifier,"Slide Identifier");
		fullNameByTag.put(TagFromName.WholeSlideMicroscopyImageFrameTypeSequence,"Whole Slide Microscopy Image Frame Type Sequence");
		fullNameByTag.put(TagFromName.ImageCenterPointCoordinatesSequence,"Image Center Point Coordinates Sequence");
		fullNameByTag.put(TagFromName.XOffsetInSlideCoordinateSystem,"X Offset in Slide Coordinate System");
		fullNameByTag.put(TagFromName.YOffsetInSlideCoordinateSystem,"Y Offset in Slide Coordinate System");
		fullNameByTag.put(TagFromName.ZOffsetInSlideCoordinateSystem,"Z Offset in Slide Coordinate System");
		fullNameByTag.put(TagFromName.PixelSpacingSequence,"Pixel Spacing Sequence");
		fullNameByTag.put(TagFromName.CoordinateSystemAxisCodeSequence,"Coordinate System Axis Code Sequence");
		fullNameByTag.put(TagFromName.MeasurementUnitsCodeSequence,"Measurement Units Code Sequence");
		fullNameByTag.put(TagFromName.VitalStainCodeSequenceTrial,"Vital Stain Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.RequestedProcedureID,"Requested Procedure ID");
		fullNameByTag.put(TagFromName.ReasonForTheRequestedProcedure,"Reason for the Requested Procedure");
		fullNameByTag.put(TagFromName.RequestedProcedurePriority,"Requested Procedure Priority");
		fullNameByTag.put(TagFromName.PatientTransportArrangements,"Patient Transport Arrangements");
		fullNameByTag.put(TagFromName.RequestedProcedureLocation,"Requested Procedure Location");
		fullNameByTag.put(TagFromName.PlacerOrderNumberProcedure,"Placer Order Number / Procedure");
		fullNameByTag.put(TagFromName.FillerOrderNumberProcedure,"Filler Order Number / Procedure");
		fullNameByTag.put(TagFromName.ConfidentialityCode,"Confidentiality Code");
		fullNameByTag.put(TagFromName.ReportingPriority,"Reporting Priority");
		fullNameByTag.put(TagFromName.ReasonForRequestedProcedureCodeSequence,"Reason for Requested Procedure Code Sequence");
		fullNameByTag.put(TagFromName.NamesOfIntendedRecipientsOfResults,"Names of Intended Recipients of Results");
		fullNameByTag.put(TagFromName.IntendedRecipientsOfResultsIdentificationSequence,"Intended Recipients of Results Identification Sequence");
		fullNameByTag.put(TagFromName.ReasonForPerformedProcedureCodeSequence,"Reason For Performed Procedure Code Sequence");
		fullNameByTag.put(TagFromName.RequestedProcedureDescriptionTrial,"Requested Procedure Description (Trial)");
		fullNameByTag.put(TagFromName.PersonIdentificationCodeSequence,"Person Identification Code Sequence");
		fullNameByTag.put(TagFromName.PersonAddress,"Person's Address");
		fullNameByTag.put(TagFromName.PersonTelephoneNumbers,"Person's Telephone Numbers");
		fullNameByTag.put(TagFromName.PersonTelecomInformation,"Person's Telecom Information");
		fullNameByTag.put(TagFromName.RequestedProcedureComments,"Requested Procedure Comments");
		fullNameByTag.put(TagFromName.ReasonForTheImagingServiceRequest,"Reason for the Imaging Service Request");
		fullNameByTag.put(TagFromName.IssueDateOfImagingServiceRequest,"Issue Date of Imaging Service Request");
		fullNameByTag.put(TagFromName.IssueTimeOfImagingServiceRequest,"Issue Time of Imaging Service Request");
		fullNameByTag.put(TagFromName.PlacerOrderNumberImagingServiceRequestRetired,"Placer Order Number / Imaging Service Request (Retired)");
		fullNameByTag.put(TagFromName.FillerOrderNumberImagingServiceRequestRetired,"Filler Order Number / Imaging Service Request (Retired)");
		fullNameByTag.put(TagFromName.OrderEnteredBy,"Order Entered By");
		fullNameByTag.put(TagFromName.OrderEntererLocation,"Order Enterer's Location");
		fullNameByTag.put(TagFromName.OrderCallbackPhoneNumber,"Order Callback Phone Number");
		fullNameByTag.put(TagFromName.OrderCallbackTelecomInformation,"Order Callback Telecom Information");
		fullNameByTag.put(TagFromName.PlacerOrderNumberImagingServiceRequest,"Placer Order Number / Imaging Service Request");
		fullNameByTag.put(TagFromName.FillerOrderNumberImagingServiceRequest,"Filler Order Number / Imaging Service Request");
		fullNameByTag.put(TagFromName.ImagingServiceRequestComments,"Imaging Service Request Comments");
		fullNameByTag.put(TagFromName.ConfidentialityConstraintOnPatientDataDescription,"Confidentiality Constraint on Patient Data Description");
		fullNameByTag.put(TagFromName.GeneralPurposeScheduledProcedureStepStatus,"General Purpose Scheduled Procedure Step Status");
		fullNameByTag.put(TagFromName.GeneralPurposePerformedProcedureStepStatus,"General Purpose Performed Procedure Step Status");
		fullNameByTag.put(TagFromName.GeneralPurposeScheduledProcedureStepPriority,"General Purpose Scheduled Procedure Step Priority");
		fullNameByTag.put(TagFromName.ScheduledProcessingApplicationsCodeSequence,"Scheduled Processing Applications Code Sequence");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepStartDateTime,"Scheduled Procedure Step Start DateTime");
		fullNameByTag.put(TagFromName.MultipleCopiesFlag,"Multiple Copies Flag");
		fullNameByTag.put(TagFromName.PerformedProcessingApplicationsCodeSequence,"Performed Processing Applications Code Sequence");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepExpirationDateTime,"Scheduled Procedure Step Expiration DateTime");
		fullNameByTag.put(TagFromName.HumanPerformerCodeSequence,"Human Performer Code Sequence");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepModificationDateTime,"Scheduled Procedure Step Modification DateTime");
		fullNameByTag.put(TagFromName.ExpectedCompletionDateTime,"Expected Completion DateTime");
		fullNameByTag.put(TagFromName.ResultingGeneralPurposePerformedProcedureStepsSequence,"Resulting General Purpose Performed Procedure Steps Sequence");
		fullNameByTag.put(TagFromName.ReferencedGeneralPurposeScheduledProcedureStepSequence,"Referenced General Purpose Scheduled Procedure Step Sequence");
		fullNameByTag.put(TagFromName.ScheduledWorkitemCodeSequence,"Scheduled Workitem Code Sequence");
		fullNameByTag.put(TagFromName.PerformedWorkitemCodeSequence,"Performed Workitem Code Sequence");
		fullNameByTag.put(TagFromName.InputAvailabilityFlag,"Input Availability Flag");
		fullNameByTag.put(TagFromName.InputInformationSequence,"Input Information Sequence");
		fullNameByTag.put(TagFromName.RelevantInformationSequence,"Relevant Information Sequence");
		fullNameByTag.put(TagFromName.ReferencedGeneralPurposeScheduledProcedureStepTransactionUID,"Referenced General Purpose Scheduled Procedure Step Transaction UID");
		fullNameByTag.put(TagFromName.ScheduledStationNameCodeSequence,"Scheduled Station Name Code Sequence");
		fullNameByTag.put(TagFromName.ScheduledStationClassCodeSequence,"Scheduled Station Class Code Sequence");
		fullNameByTag.put(TagFromName.ScheduledStationGeographicLocationCodeSequence,"Scheduled Station Geographic Location Code Sequence");
		fullNameByTag.put(TagFromName.PerformedStationNameCodeSequence,"Performed Station Name Code Sequence");
		fullNameByTag.put(TagFromName.PerformedStationClassCodeSequence,"Performed Station Class Code Sequence");
		fullNameByTag.put(TagFromName.PerformedStationGeographicLocationCodeSequence,"Performed Station Geographic Location Code Sequence");
		fullNameByTag.put(TagFromName.RequestedSubsequentWorkitemCodeSequence,"Requested Subsequent Workitem Code Sequence");
		fullNameByTag.put(TagFromName.NonDICOMOutputCodeSequence,"Non-DICOM Output Code Sequence");
		fullNameByTag.put(TagFromName.OutputInformationSequence,"Output Information Sequence");
		fullNameByTag.put(TagFromName.ScheduledHumanPerformersSequence,"Scheduled Human Performers Sequence");
		fullNameByTag.put(TagFromName.ActualHumanPerformersSequence,"Actual Human Performers Sequence");
		fullNameByTag.put(TagFromName.HumanPerformerOrganization,"Human Performer's Organization");
		fullNameByTag.put(TagFromName.HumanPerformerName,"Human Performer's Name");
		fullNameByTag.put(TagFromName.RawDataHandling,"Raw Data Handling");
		fullNameByTag.put(TagFromName.InputReadinessState,"Input Readiness State");
		fullNameByTag.put(TagFromName.PerformedProcedureStepStartDateTime,"Performed Procedure Step Start DateTime");
		fullNameByTag.put(TagFromName.PerformedProcedureStepEndDateTime,"Performed Procedure Step End DateTime");
		fullNameByTag.put(TagFromName.ProcedureStepCancellationDateTime,"Procedure Step Cancellation DateTime");
		fullNameByTag.put(TagFromName.OutputDestinationSequence,"Output Destination Sequence");
		fullNameByTag.put(TagFromName.DICOMStorageSequence,"DICOM Storage Sequence");
		fullNameByTag.put(TagFromName.STOWRSStorageSequence,"STOW-RS Storage Sequence");
		fullNameByTag.put(TagFromName.StorageURL,"Storage URL");
		fullNameByTag.put(TagFromName.XDSStorageSequence,"XDS Storage Sequence");
		fullNameByTag.put(TagFromName.EntranceDoseInmGy,"Entrance Dose in mGy");
		fullNameByTag.put(TagFromName.EntranceDoseDerivation,"Entrance Dose Derivation");
		fullNameByTag.put(TagFromName.ParametricMapFrameTypeSequence,"Parametric Map Frame Type Sequence");
		fullNameByTag.put(TagFromName.ReferencedImageRealWorldValueMappingSequence,"Referenced Image Real World Value Mapping Sequence");
		fullNameByTag.put(TagFromName.RealWorldValueMappingSequence,"Real World Value Mapping Sequence");
		fullNameByTag.put(TagFromName.PixelValueMappingCodeSequence,"Pixel Value Mapping Code Sequence");
		fullNameByTag.put(TagFromName.LUTLabel,"LUT Label");
		fullNameByTag.put(TagFromName.RealWorldValueLastValueMapped,"Real World Value Last Value Mapped");
		fullNameByTag.put(TagFromName.RealWorldValueLUTData,"Real World Value LUT Data");
		fullNameByTag.put(TagFromName.DoubleFloatRealWorldValueLastValueMapped,"Double Float Real World Value Last Value Mapped");
		fullNameByTag.put(TagFromName.DoubleFloatRealWorldValueFirstValueMapped,"Double Float Real World Value First Value Mapped");
		fullNameByTag.put(TagFromName.RealWorldValueFirstValueMapped,"Real World Value First Value Mapped");
		fullNameByTag.put(TagFromName.QuantityDefinitionSequence,"Quantity Definition Sequence");
		fullNameByTag.put(TagFromName.RealWorldValueIntercept,"Real World Value Intercept");
		fullNameByTag.put(TagFromName.RealWorldValueSlope,"Real World Value Slope");
		fullNameByTag.put(TagFromName.FindingsFlagTrial,"Findings Flag (Trial)");
		fullNameByTag.put(TagFromName.RelationshipType,"Relationship Type");
		fullNameByTag.put(TagFromName.FindingsSequenceTrial,"Findings Sequence (Trial)");
		fullNameByTag.put(TagFromName.FindingsGroupUIDTrial,"Findings Group UID (Trial)");
		fullNameByTag.put(TagFromName.ReferencedFindingsGroupUIDTrial,"Referenced Findings Group UID (Trial)");
		fullNameByTag.put(TagFromName.FindingsGroupRecordingDateTrial,"Findings Group Recording Date (Trial)");
		fullNameByTag.put(TagFromName.FindingsGroupRecordingTimeTrial,"Findings Group Recording Time (Trial)");
		fullNameByTag.put(TagFromName.FindingsSourceCategoryCodeSequenceTrial,"Findings Source Category Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.VerifyingOrganization,"Verifying Organization");
		fullNameByTag.put(TagFromName.DocumentingOrganizationIdentifierCodeSequenceTrial,"Documenting Organization Identifier Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.VerificationDateTime,"Verification DateTime");
		fullNameByTag.put(TagFromName.ObservationDateTime,"Observation DateTime");
		fullNameByTag.put(TagFromName.ValueType,"Value Type");
		fullNameByTag.put(TagFromName.ConceptNameCodeSequence,"Concept Name Code Sequence");
		fullNameByTag.put(TagFromName.MeasurementPrecisionDescriptionTrial,"Measurement Precision Description (Trial)");
		fullNameByTag.put(TagFromName.ContinuityOfContent,"Continuity Of Content");
		fullNameByTag.put(TagFromName.UrgencyOrPriorityAlertsTrial,"Urgency or Priority Alerts (Trial)");
		fullNameByTag.put(TagFromName.SequencingIndicatorTrial,"Sequencing Indicator (Trial)");
		fullNameByTag.put(TagFromName.DocumentIdentifierCodeSequenceTrial,"Document Identifier Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.DocumentAuthorTrial,"Document Author (Trial)");
		fullNameByTag.put(TagFromName.DocumentAuthorIdentifierCodeSequenceTrial,"Document Author Identifier Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.IdentifierCodeSequenceTrial,"Identifier Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.VerifyingObserverSequence,"Verifying Observer Sequence");
		fullNameByTag.put(TagFromName.ObjectBinaryIdentifierTrial,"Object Binary Identifier (Trial)");
		fullNameByTag.put(TagFromName.VerifyingObserverName,"Verifying Observer Name");
		fullNameByTag.put(TagFromName.DocumentingObserverIdentifierCodeSequenceTrial,"Documenting Observer Identifier Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.AuthorObserverSequence,"Author Observer Sequence");
		fullNameByTag.put(TagFromName.ParticipantSequence,"Participant Sequence");
		fullNameByTag.put(TagFromName.CustodialOrganizationSequence,"Custodial Organization Sequence");
		fullNameByTag.put(TagFromName.ParticipationType,"Participation Type");
		fullNameByTag.put(TagFromName.ParticipationDateTime,"Participation DateTime");
		fullNameByTag.put(TagFromName.ObserverType,"Observer Type");
		fullNameByTag.put(TagFromName.ProcedureIdentifierCodeSequenceTrial,"Procedure Identifier Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.VerifyingObserverIdentificationCodeSequence,"Verifying Observer Identification Code Sequence");
		fullNameByTag.put(TagFromName.ObjectDirectoryBinaryIdentifierTrial,"Object Directory Binary Identifier (Trial)");
		fullNameByTag.put(TagFromName.EquivalentCDADocumentSequence,"Equivalent CDA Document Sequence");
		fullNameByTag.put(TagFromName.ReferencedWaveformChannels,"Referenced Waveform Channels");
		fullNameByTag.put(TagFromName.DateOfDocumentOrVerbalTransactionTrial,"Date of Document or Verbal Transaction (Trial)");
		fullNameByTag.put(TagFromName.TimeOfDocumentCreationOrVerbalTransactionTrial,"Time of Document Creation or Verbal Transaction (Trial)");
		fullNameByTag.put(TagFromName.DateTime,"DateTime");
		fullNameByTag.put(TagFromName.Date,"Date");
		fullNameByTag.put(TagFromName.Time,"Time");
		fullNameByTag.put(TagFromName.PersonName,"Person Name");
		fullNameByTag.put(TagFromName.UID,"UID");
		fullNameByTag.put(TagFromName.ReportStatusIDTrial,"Report Status ID (Trial)");
		fullNameByTag.put(TagFromName.TemporalRangeType,"Temporal Range Type");
		fullNameByTag.put(TagFromName.ReferencedSamplePositions,"Referenced Sample Positions");
		fullNameByTag.put(TagFromName.ReferencedFrameNumbers,"Referenced Frame Numbers");
		fullNameByTag.put(TagFromName.ReferencedTimeOffsets,"Referenced Time Offsets");
		fullNameByTag.put(TagFromName.ReferencedDateTime,"Referenced DateTime");
		fullNameByTag.put(TagFromName.TextValue,"Text Value");
		fullNameByTag.put(TagFromName.FloatingPointValue,"Floating Point Value");
		fullNameByTag.put(TagFromName.RationalNumeratorValue,"Rational Numerator Value");
		fullNameByTag.put(TagFromName.RationalDenominatorValue,"Rational Denominator Value");
		fullNameByTag.put(TagFromName.ObservationCategoryCodeSequenceTrial,"Observation Category Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.ConceptCodeSequence,"Concept Code Sequence");
		fullNameByTag.put(TagFromName.BibliographicCitationTrial,"Bibliographic Citation (Trial)");
		fullNameByTag.put(TagFromName.PurposeOfReferenceCodeSequence,"Purpose of Reference Code Sequence");
		fullNameByTag.put(TagFromName.ObservationUID,"Observation UID");
		fullNameByTag.put(TagFromName.ReferencedObservationUIDTrial,"Referenced Observation UID (Trial)");
		fullNameByTag.put(TagFromName.ReferencedObservationClassTrial,"Referenced Observation Class (Trial)");
		fullNameByTag.put(TagFromName.ReferencedObjectObservationClassTrial,"Referenced Object Observation Class (Trial)");
		fullNameByTag.put(TagFromName.AnnotationGroupNumber,"Annotation Group Number");
		fullNameByTag.put(TagFromName.ObservationDateTrial,"Observation Date (Trial)");
		fullNameByTag.put(TagFromName.ObservationTimeTrial,"Observation Time (Trial)");
		fullNameByTag.put(TagFromName.MeasurementAutomationTrial,"Measurement Automation (Trial)");
		fullNameByTag.put(TagFromName.ModifierCodeSequence,"Modifier Code Sequence");
		fullNameByTag.put(TagFromName.IdentificationDescriptionTrial,"Identification Description (Trial)");
		fullNameByTag.put(TagFromName.CoordinatesSetGeometricTypeTrial,"Coordinates Set Geometric Type (Trial)");
		fullNameByTag.put(TagFromName.AlgorithmCodeSequenceTrial,"Algorithm Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.AlgorithmDescriptionTrial,"Algorithm Description (Trial)");
		fullNameByTag.put(TagFromName.PixelCoordinatesSetTrial,"Pixel Coordinates Set (Trial)");
		fullNameByTag.put(TagFromName.MeasuredValueSequence,"Measured Value Sequence");
		fullNameByTag.put(TagFromName.NumericValueQualifierCodeSequence,"Numeric Value Qualifier Code Sequence");
		fullNameByTag.put(TagFromName.CurrentObserverTrial,"Current Observer (Trial)");
		fullNameByTag.put(TagFromName.NumericValue,"Numeric Value");
		fullNameByTag.put(TagFromName.ReferencedAccessionSequenceTrial,"Referenced Accession Sequence (Trial)");
		fullNameByTag.put(TagFromName.ReportStatusCommentTrial,"Report Status Comment (Trial)");
		fullNameByTag.put(TagFromName.ProcedureContextSequenceTrial,"Procedure Context Sequence (Trial)");
		fullNameByTag.put(TagFromName.VerbalSourceTrial,"Verbal Source (Trial)");
		fullNameByTag.put(TagFromName.AddressTrial,"Address (Trial)");
		fullNameByTag.put(TagFromName.TelephoneNumberTrial,"Telephone Number (Trial)");
		fullNameByTag.put(TagFromName.VerbalSourceIdentifierCodeSequenceTrial,"Verbal Source Identifier Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.PredecessorDocumentsSequence,"Predecessor Documents Sequence");
		fullNameByTag.put(TagFromName.ReferencedRequestSequence,"Referenced Request Sequence");
		fullNameByTag.put(TagFromName.PerformedProcedureCodeSequence,"Performed Procedure Code Sequence");
		fullNameByTag.put(TagFromName.CurrentRequestedProcedureEvidenceSequence,"Current Requested Procedure Evidence Sequence");
		fullNameByTag.put(TagFromName.ReportDetailSequenceTrial,"Report Detail Sequence (Trial)");
		fullNameByTag.put(TagFromName.PertinentOtherEvidenceSequence,"Pertinent Other Evidence Sequence");
		fullNameByTag.put(TagFromName.HL7StructuredDocumentReferenceSequence,"HL7 Structured Document Reference Sequence");
		fullNameByTag.put(TagFromName.ObservationSubjectUIDTrial,"Observation Subject UID (Trial)");
		fullNameByTag.put(TagFromName.ObservationSubjectClassTrial,"Observation Subject Class (Trial)");
		fullNameByTag.put(TagFromName.ObservationSubjectTypeCodeSequenceTrial,"Observation Subject Type Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.CompletionFlag,"Completion Flag");
		fullNameByTag.put(TagFromName.CompletionFlagDescription,"Completion Flag Description");
		fullNameByTag.put(TagFromName.VerificationFlag,"Verification Flag");
		fullNameByTag.put(TagFromName.ArchiveRequested,"Archive Requested");
		fullNameByTag.put(TagFromName.PreliminaryFlag,"Preliminary Flag");
		fullNameByTag.put(TagFromName.ContentTemplateSequence,"Content Template Sequence");
		fullNameByTag.put(TagFromName.IdenticalDocumentsSequence,"Identical Documents Sequence");
		fullNameByTag.put(TagFromName.ObservationSubjectContextFlagTrial,"Observation Subject Context Flag (Trial)");
		fullNameByTag.put(TagFromName.ObserverContextFlagTrial,"Observer Context Flag (Trial)");
		fullNameByTag.put(TagFromName.ProcedureContextFlagTrial,"Procedure Context Flag (Trial)");
		fullNameByTag.put(TagFromName.ContentSequence,"Content Sequence");
		fullNameByTag.put(TagFromName.RelationshipSequenceTrial,"Relationship Sequence (Trial)");
		fullNameByTag.put(TagFromName.RelationshipTypeCodeSequenceTrial,"Relationship Type Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.LanguageCodeSequenceTrial,"Language Code Sequence (Trial)");
		fullNameByTag.put(TagFromName.UniformResourceLocatorTrial,"Uniform Resource Locator (Trial)");
		fullNameByTag.put(TagFromName.WaveformAnnotationSequence,"Waveform Annotation Sequence");
		fullNameByTag.put(TagFromName.TemplateIdentifier,"Template Identifier");
		fullNameByTag.put(TagFromName.TemplateVersion,"Template Version");
		fullNameByTag.put(TagFromName.TemplateLocalVersion,"Template Local Version");
		fullNameByTag.put(TagFromName.TemplateExtensionFlag,"Template Extension Flag");
		fullNameByTag.put(TagFromName.TemplateExtensionOrganizationUID,"Template Extension Organization UID");
		fullNameByTag.put(TagFromName.TemplateExtensionCreatorUID,"Template Extension Creator UID");
		fullNameByTag.put(TagFromName.ReferencedContentItemIdentifier,"Referenced Content Item Identifier");
		fullNameByTag.put(TagFromName.HL7InstanceIdentifier,"HL7 Instance Identifier");
		fullNameByTag.put(TagFromName.HL7DocumentEffectiveTime,"HL7 Document Effective Time");
		fullNameByTag.put(TagFromName.HL7DocumentTypeCodeSequence,"HL7 Document Type Code Sequence");
		fullNameByTag.put(TagFromName.DocumentClassCodeSequence,"Document Class Code Sequence");
		fullNameByTag.put(TagFromName.RetrieveURI,"Retrieve URI");
		fullNameByTag.put(TagFromName.RetrieveLocationUID,"Retrieve Location UID");
		fullNameByTag.put(TagFromName.TypeOfInstances,"Type of Instances");
		fullNameByTag.put(TagFromName.DICOMRetrievalSequence,"DICOM Retrieval Sequence");
		fullNameByTag.put(TagFromName.DICOMMediaRetrievalSequence,"DICOM Media Retrieval Sequence");
		fullNameByTag.put(TagFromName.WADORetrievalSequence,"WADO Retrieval Sequence");
		fullNameByTag.put(TagFromName.XDSRetrievalSequence,"XDS Retrieval Sequence");
		fullNameByTag.put(TagFromName.WADORSRetrievalSequence,"WADO-RS Retrieval Sequence");
		fullNameByTag.put(TagFromName.RepositoryUniqueID,"Repository Unique ID");
		fullNameByTag.put(TagFromName.HomeCommunityID,"Home Community ID");
		fullNameByTag.put(TagFromName.DocumentTitle,"Document Title");
		fullNameByTag.put(TagFromName.EncapsulatedDocument,"Encapsulated Document");
		fullNameByTag.put(TagFromName.MIMETypeOfEncapsulatedDocument,"MIME Type of Encapsulated Document");
		fullNameByTag.put(TagFromName.SourceInstanceSequence,"Source Instance Sequence");
		fullNameByTag.put(TagFromName.ListOfMIMETypes,"List of MIME Types");
		fullNameByTag.put(TagFromName.ProductPackageIdentifier,"Product Package Identifier");
		fullNameByTag.put(TagFromName.SubstanceAdministrationApproval,"Substance Administration Approval");
		fullNameByTag.put(TagFromName.ApprovalStatusFurtherDescription,"Approval Status Further Description");
		fullNameByTag.put(TagFromName.ApprovalStatusDateTime,"Approval Status DateTime");
		fullNameByTag.put(TagFromName.ProductTypeCodeSequence,"Product Type Code Sequence");
		fullNameByTag.put(TagFromName.ProductName,"Product Name");
		fullNameByTag.put(TagFromName.ProductDescription,"Product Description");
		fullNameByTag.put(TagFromName.ProductLotIdentifier,"Product Lot Identifier");
		fullNameByTag.put(TagFromName.ProductExpirationDateTime,"Product Expiration DateTime");
		fullNameByTag.put(TagFromName.SubstanceAdministrationDateTime,"Substance Administration DateTime");
		fullNameByTag.put(TagFromName.SubstanceAdministrationNotes,"Substance Administration Notes");
		fullNameByTag.put(TagFromName.SubstanceAdministrationDeviceID,"Substance Administration Device ID");
		fullNameByTag.put(TagFromName.ProductParameterSequence,"Product Parameter Sequence");
		fullNameByTag.put(TagFromName.SubstanceAdministrationParameterSequence,"Substance Administration Parameter Sequence");
		fullNameByTag.put(TagFromName.ApprovalSequence,"Approval Sequence");
		fullNameByTag.put(TagFromName.AssertionCodeSequence,"Assertion Code Sequence");
		fullNameByTag.put(TagFromName.AssertionUID,"Assertion UID");
		fullNameByTag.put(TagFromName.AsserterIdentificationSequence,"Asserter Identification Sequence");
		fullNameByTag.put(TagFromName.AssertionDateTime,"Assertion DateTime");
		fullNameByTag.put(TagFromName.AssertionExpirationDateTime,"Assertion Expiration DateTime");
		fullNameByTag.put(TagFromName.AssertionComments,"Assertion Comments");
		fullNameByTag.put(TagFromName.RelatedAssertionSequence,"Related Assertion Sequence");
		fullNameByTag.put(TagFromName.ReferencedAssertionUID,"Referenced Assertion UID");
		fullNameByTag.put(TagFromName.ApprovalSubjectSequence,"Approval Subject Sequence");
		fullNameByTag.put(TagFromName.OrganizationalRoleCodeSequence,"Organizational Role Code Sequence");
		fullNameByTag.put(TagFromName.LensDescription,"Lens Description");
		fullNameByTag.put(TagFromName.RightLensSequence,"Right Lens Sequence");
		fullNameByTag.put(TagFromName.LeftLensSequence,"Left Lens Sequence");
		fullNameByTag.put(TagFromName.UnspecifiedLateralityLensSequence,"Unspecified Laterality Lens Sequence");
		fullNameByTag.put(TagFromName.CylinderSequence,"Cylinder Sequence");
		fullNameByTag.put(TagFromName.PrismSequence,"Prism Sequence");
		fullNameByTag.put(TagFromName.HorizontalPrismPower,"Horizontal Prism Power");
		fullNameByTag.put(TagFromName.HorizontalPrismBase,"Horizontal Prism Base");
		fullNameByTag.put(TagFromName.VerticalPrismPower,"Vertical Prism Power");
		fullNameByTag.put(TagFromName.VerticalPrismBase,"Vertical Prism Base");
		fullNameByTag.put(TagFromName.LensSegmentType,"Lens Segment Type");
		fullNameByTag.put(TagFromName.OpticalTransmittance,"Optical Transmittance");
		fullNameByTag.put(TagFromName.ChannelWidth,"Channel Width");
		fullNameByTag.put(TagFromName.PupilSize,"Pupil Size");
		fullNameByTag.put(TagFromName.CornealSize,"Corneal Size");
		fullNameByTag.put(TagFromName.AutorefractionRightEyeSequence,"Autorefraction Right Eye Sequence");
		fullNameByTag.put(TagFromName.AutorefractionLeftEyeSequence,"Autorefraction Left Eye Sequence");
		fullNameByTag.put(TagFromName.DistancePupillaryDistance,"Distance Pupillary Distance");
		fullNameByTag.put(TagFromName.NearPupillaryDistance,"Near Pupillary Distance");
		fullNameByTag.put(TagFromName.IntermediatePupillaryDistance,"Intermediate Pupillary Distance");
		fullNameByTag.put(TagFromName.OtherPupillaryDistance,"Other Pupillary Distance");
		fullNameByTag.put(TagFromName.KeratometryRightEyeSequence,"Keratometry Right Eye Sequence");
		fullNameByTag.put(TagFromName.KeratometryLeftEyeSequence,"Keratometry Left Eye Sequence");
		fullNameByTag.put(TagFromName.SteepKeratometricAxisSequence,"Steep Keratometric Axis Sequence");
		fullNameByTag.put(TagFromName.RadiusOfCurvature,"Radius of Curvature");
		fullNameByTag.put(TagFromName.KeratometricPower,"Keratometric Power");
		fullNameByTag.put(TagFromName.KeratometricAxis,"Keratometric Axis");
		fullNameByTag.put(TagFromName.FlatKeratometricAxisSequence,"Flat Keratometric Axis Sequence");
		fullNameByTag.put(TagFromName.BackgroundColor,"Background Color");
		fullNameByTag.put(TagFromName.Optotype,"Optotype");
		fullNameByTag.put(TagFromName.OptotypePresentation,"Optotype Presentation");
		fullNameByTag.put(TagFromName.SubjectiveRefractionRightEyeSequence,"Subjective Refraction Right Eye Sequence");
		fullNameByTag.put(TagFromName.SubjectiveRefractionLeftEyeSequence,"Subjective Refraction Left Eye Sequence");
		fullNameByTag.put(TagFromName.AddNearSequence,"Add Near Sequence");
		fullNameByTag.put(TagFromName.AddIntermediateSequence,"Add Intermediate Sequence");
		fullNameByTag.put(TagFromName.AddOtherSequence,"Add Other Sequence");
		fullNameByTag.put(TagFromName.AddPower,"Add Power");
		fullNameByTag.put(TagFromName.ViewingDistance,"Viewing Distance");
		fullNameByTag.put(TagFromName.VisualAcuityTypeCodeSequence,"Visual Acuity Type Code Sequence");
		fullNameByTag.put(TagFromName.VisualAcuityRightEyeSequence,"Visual Acuity Right Eye Sequence");
		fullNameByTag.put(TagFromName.VisualAcuityLeftEyeSequence,"Visual Acuity Left Eye Sequence");
		fullNameByTag.put(TagFromName.VisualAcuityBothEyesOpenSequence,"Visual Acuity Both Eyes Open Sequence");
		fullNameByTag.put(TagFromName.ViewingDistanceType,"Viewing Distance Type");
		fullNameByTag.put(TagFromName.VisualAcuityModifiers,"Visual Acuity Modifiers");
		fullNameByTag.put(TagFromName.DecimalVisualAcuity,"Decimal Visual Acuity");
		fullNameByTag.put(TagFromName.OptotypeDetailedDefinition,"Optotype Detailed Definition");
		fullNameByTag.put(TagFromName.ReferencedRefractiveMeasurementsSequence,"Referenced Refractive Measurements Sequence");
		fullNameByTag.put(TagFromName.SpherePower,"Sphere Power");
		fullNameByTag.put(TagFromName.CylinderPower,"Cylinder Power");
		fullNameByTag.put(TagFromName.CornealTopographySurface,"Corneal Topography Surface");
		fullNameByTag.put(TagFromName.CornealVertexLocation,"Corneal Vertex Location");
		fullNameByTag.put(TagFromName.PupilCentroidXCoordinate,"Pupil Centroid X-Coordinate");
		fullNameByTag.put(TagFromName.PupilCentroidYCoordinate,"Pupil Centroid Y-Coordinate");
		fullNameByTag.put(TagFromName.EquivalentPupilRadius,"Equivalent Pupil Radius");
		fullNameByTag.put(TagFromName.CornealTopographyMapTypeCodeSequence,"Corneal Topography Map Type Code Sequence");
		fullNameByTag.put(TagFromName.VerticesOfTheOutlineOfPupil,"Vertices of the Outline of Pupil");
		fullNameByTag.put(TagFromName.CornealTopographyMappingNormalsSequence,"Corneal Topography Mapping Normals Sequence");
		fullNameByTag.put(TagFromName.MaximumCornealCurvatureSequence,"Maximum Corneal Curvature Sequence");
		fullNameByTag.put(TagFromName.MaximumCornealCurvature,"Maximum Corneal Curvature");
		fullNameByTag.put(TagFromName.MaximumCornealCurvatureLocation,"Maximum Corneal Curvature Location");
		fullNameByTag.put(TagFromName.MinimumKeratometricSequence,"Minimum Keratometric Sequence");
		fullNameByTag.put(TagFromName.SimulatedKeratometricCylinderSequence,"Simulated Keratometric Cylinder Sequence");
		fullNameByTag.put(TagFromName.AverageCornealPower,"Average Corneal Power");
		fullNameByTag.put(TagFromName.CornealISValue,"Corneal I-S Value");
		fullNameByTag.put(TagFromName.AnalyzedArea,"Analyzed Area");
		fullNameByTag.put(TagFromName.SurfaceRegularityIndex,"Surface Regularity Index");
		fullNameByTag.put(TagFromName.SurfaceAsymmetryIndex,"Surface Asymmetry Index");
		fullNameByTag.put(TagFromName.CornealEccentricityIndex,"Corneal Eccentricity Index");
		fullNameByTag.put(TagFromName.KeratoconusPredictionIndex,"Keratoconus Prediction Index");
		fullNameByTag.put(TagFromName.DecimalPotentialVisualAcuity,"Decimal Potential Visual Acuity");
		fullNameByTag.put(TagFromName.CornealTopographyMapQualityEvaluation,"Corneal Topography Map Quality Evaluation");
		fullNameByTag.put(TagFromName.SourceImageCornealProcessedDataSequence,"Source Image Corneal Processed Data Sequence");
		fullNameByTag.put(TagFromName.CornealPointLocation,"Corneal Point Location");
		fullNameByTag.put(TagFromName.CornealPointEstimated,"Corneal Point Estimated");
		fullNameByTag.put(TagFromName.AxialPower,"Axial Power");
		fullNameByTag.put(TagFromName.TangentialPower,"Tangential Power");
		fullNameByTag.put(TagFromName.RefractivePower,"Refractive Power");
		fullNameByTag.put(TagFromName.RelativeElevation,"Relative Elevation");
		fullNameByTag.put(TagFromName.CornealWavefront,"Corneal Wavefront");
		fullNameByTag.put(TagFromName.ImagedVolumeWidth,"Imaged Volume Width");
		fullNameByTag.put(TagFromName.ImagedVolumeHeight,"Imaged Volume Height");
		fullNameByTag.put(TagFromName.ImagedVolumeDepth,"Imaged Volume Depth");
		fullNameByTag.put(TagFromName.TotalPixelMatrixColumns,"Total Pixel Matrix Columns");
		fullNameByTag.put(TagFromName.TotalPixelMatrixRows,"Total Pixel Matrix Rows");
		fullNameByTag.put(TagFromName.TotalPixelMatrixOriginSequence,"Total Pixel Matrix Origin Sequence");
		fullNameByTag.put(TagFromName.SpecimenLabelInImage,"Specimen Label in Image");
		fullNameByTag.put(TagFromName.FocusMethod,"Focus Method");
		fullNameByTag.put(TagFromName.ExtendedDepthOfField,"Extended Depth of Field");
		fullNameByTag.put(TagFromName.NumberOfFocalPlanes,"Number of Focal Planes");
		fullNameByTag.put(TagFromName.DistanceBetweenFocalPlanes,"Distance Between Focal Planes");
		fullNameByTag.put(TagFromName.RecommendedAbsentPixelCIELabValue,"Recommended Absent Pixel CIELab Value");
		fullNameByTag.put(TagFromName.IlluminatorTypeCodeSequence,"Illuminator Type Code Sequence");
		fullNameByTag.put(TagFromName.ImageOrientationSlide,"Image Orientation (Slide)");
		fullNameByTag.put(TagFromName.OpticalPathSequence,"Optical Path Sequence");
		fullNameByTag.put(TagFromName.OpticalPathIdentifier,"Optical Path Identifier");
		fullNameByTag.put(TagFromName.OpticalPathDescription,"Optical Path Description");
		fullNameByTag.put(TagFromName.IlluminationColorCodeSequence,"Illumination Color Code Sequence");
		fullNameByTag.put(TagFromName.SpecimenReferenceSequence,"Specimen Reference Sequence");
		fullNameByTag.put(TagFromName.CondenserLensPower,"Condenser Lens Power");
		fullNameByTag.put(TagFromName.ObjectiveLensPower,"Objective Lens Power");
		fullNameByTag.put(TagFromName.ObjectiveLensNumericalAperture,"Objective Lens Numerical Aperture");
		fullNameByTag.put(TagFromName.PaletteColorLookupTableSequence,"Palette Color Lookup Table Sequence");
		fullNameByTag.put(TagFromName.ReferencedImageNavigationSequence,"Referenced Image Navigation Sequence");
		fullNameByTag.put(TagFromName.TopLeftHandCornerOfLocalizerArea,"Top Left Hand Corner of Localizer Area");
		fullNameByTag.put(TagFromName.BottomRightHandCornerOfLocalizerArea,"Bottom Right Hand Corner of Localizer Area");
		fullNameByTag.put(TagFromName.OpticalPathIdentificationSequence,"Optical Path Identification Sequence");
		fullNameByTag.put(TagFromName.PlanePositionSlideSequence,"Plane Position (Slide) Sequence");
		fullNameByTag.put(TagFromName.ColumnPositionInTotalImagePixelMatrix,"Column Position In Total Image Pixel Matrix");
		fullNameByTag.put(TagFromName.RowPositionInTotalImagePixelMatrix,"Row Position In Total Image Pixel Matrix");
		fullNameByTag.put(TagFromName.PixelOriginInterpretation,"Pixel Origin Interpretation");
		fullNameByTag.put(TagFromName.NumberOfOpticalPaths,"Number of Optical Paths");
		fullNameByTag.put(TagFromName.TotalPixelMatrixFocalPlanes,"Total Pixel Matrix Focal Planes");
		fullNameByTag.put(TagFromName.CalibrationImage,"Calibration Image");
		fullNameByTag.put(TagFromName.DeviceSequence,"Device Sequence");
		fullNameByTag.put(TagFromName.ContainerComponentTypeCodeSequence,"Container Component Type Code Sequence");
		fullNameByTag.put(TagFromName.ContainerComponentThickness,"Container Component Thickness");
		fullNameByTag.put(TagFromName.DeviceLength,"Device Length");
		fullNameByTag.put(TagFromName.ContainerComponentWidth,"Container Component Width");
		fullNameByTag.put(TagFromName.DeviceDiameter,"Device Diameter");
		fullNameByTag.put(TagFromName.DeviceDiameterUnits,"Device Diameter Units");
		fullNameByTag.put(TagFromName.DeviceVolume,"Device Volume");
		fullNameByTag.put(TagFromName.InterMarkerDistance,"Inter-Marker Distance");
		fullNameByTag.put(TagFromName.ContainerComponentMaterial,"Container Component Material");
		fullNameByTag.put(TagFromName.ContainerComponentID,"Container Component ID");
		fullNameByTag.put(TagFromName.ContainerComponentLength,"Container Component Length");
		fullNameByTag.put(TagFromName.ContainerComponentDiameter,"Container Component Diameter");
		fullNameByTag.put(TagFromName.ContainerComponentDescription,"Container Component Description");
		fullNameByTag.put(TagFromName.DeviceDescription,"Device Description");
		fullNameByTag.put(TagFromName.ContrastBolusIngredientPercentByVolume,"Contrast/Bolus Ingredient Percent by Volume");
		fullNameByTag.put(TagFromName.OCTFocalDistance,"OCT Focal Distance");
		fullNameByTag.put(TagFromName.BeamSpotSize,"Beam Spot Size");
		fullNameByTag.put(TagFromName.EffectiveRefractiveIndex,"Effective Refractive Index");
		fullNameByTag.put(TagFromName.OCTAcquisitionDomain,"OCT Acquisition Domain");
		fullNameByTag.put(TagFromName.OCTOpticalCenterWavelength,"OCT Optical Center Wavelength");
		fullNameByTag.put(TagFromName.AxialResolution,"Axial Resolution");
		fullNameByTag.put(TagFromName.RangingDepth,"Ranging Depth");
		fullNameByTag.put(TagFromName.ALineRate,"A line Rate");
		fullNameByTag.put(TagFromName.ALinesPerFrame,"A lines Per Frame");
		fullNameByTag.put(TagFromName.CatheterRotationalRate,"Catheter Rotational Rate");
		fullNameByTag.put(TagFromName.ALinePixelSpacing,"A line Pixel Spacing");
		fullNameByTag.put(TagFromName.ModeOfPercutaneousAccessSequence,"Mode of Percutaneous Access Sequence");
		fullNameByTag.put(TagFromName.IntravascularOCTFrameTypeSequence,"Intravascular OCT Frame Type Sequence");
		fullNameByTag.put(TagFromName.OCTZOffsetApplied,"OCT Z Offset Applied");
		fullNameByTag.put(TagFromName.IntravascularFrameContentSequence,"Intravascular Frame Content Sequence");
		fullNameByTag.put(TagFromName.IntravascularLongitudinalDistance,"Intravascular Longitudinal Distance");
		fullNameByTag.put(TagFromName.IntravascularOCTFrameContentSequence,"Intravascular OCT Frame Content Sequence");
		fullNameByTag.put(TagFromName.OCTZOffsetCorrection,"OCT Z Offset Correction");
		fullNameByTag.put(TagFromName.CatheterDirectionOfRotation,"Catheter Direction of Rotation");
		fullNameByTag.put(TagFromName.SeamLineLocation,"Seam Line Location");
		fullNameByTag.put(TagFromName.FirstALineLocation,"First A line Location");
		fullNameByTag.put(TagFromName.SeamLineIndex,"Seam Line Index");
		fullNameByTag.put(TagFromName.NumberOfPaddedALines,"Number of Padded A lines");
		fullNameByTag.put(TagFromName.InterpolationType,"Interpolation Type");
		fullNameByTag.put(TagFromName.RefractiveIndexApplied,"Refractive Index Applied");
		fullNameByTag.put(TagFromName.EnergyWindowVector,"Energy Window Vector");
		fullNameByTag.put(TagFromName.NumberOfEnergyWindows,"Number of Energy Windows");
		fullNameByTag.put(TagFromName.EnergyWindowInformationSequence,"Energy Window Information Sequence");
		fullNameByTag.put(TagFromName.EnergyWindowRangeSequence,"Energy Window Range Sequence");
		fullNameByTag.put(TagFromName.EnergyWindowLowerLimit,"Energy Window Lower Limit");
		fullNameByTag.put(TagFromName.EnergyWindowUpperLimit,"Energy Window Upper Limit");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalInformationSequence,"Radiopharmaceutical Information Sequence");
		fullNameByTag.put(TagFromName.ResidualSyringeCounts,"Residual Syringe Counts");
		fullNameByTag.put(TagFromName.EnergyWindowName,"Energy Window Name");
		fullNameByTag.put(TagFromName.DetectorVector,"Detector Vector");
		fullNameByTag.put(TagFromName.NumberOfDetectors,"Number of Detectors");
		fullNameByTag.put(TagFromName.DetectorInformationSequence,"Detector Information Sequence");
		fullNameByTag.put(TagFromName.PhaseVector,"Phase Vector");
		fullNameByTag.put(TagFromName.NumberOfPhases,"Number of Phases");
		fullNameByTag.put(TagFromName.PhaseInformationSequence,"Phase Information Sequence");
		fullNameByTag.put(TagFromName.NumberOfFramesInPhase,"Number of Frames in Phase");
		fullNameByTag.put(TagFromName.PhaseDelay,"Phase Delay");
		fullNameByTag.put(TagFromName.PauseBetweenFrames,"Pause Between Frames");
		fullNameByTag.put(TagFromName.PhaseDescription,"Phase Description");
		fullNameByTag.put(TagFromName.RotationVector,"Rotation Vector");
		fullNameByTag.put(TagFromName.NumberOfRotations,"Number of Rotations");
		fullNameByTag.put(TagFromName.RotationInformationSequence,"Rotation Information Sequence");
		fullNameByTag.put(TagFromName.NumberOfFramesInRotation,"Number of Frames in Rotation");
		fullNameByTag.put(TagFromName.RRIntervalVector,"R-R Interval Vector");
		fullNameByTag.put(TagFromName.NumberOfRRIntervals,"Number of R-R Intervals");
		fullNameByTag.put(TagFromName.GatedInformationSequence,"Gated Information Sequence");
		fullNameByTag.put(TagFromName.DataInformationSequence,"Data Information Sequence");
		fullNameByTag.put(TagFromName.TimeSlotVector,"Time Slot Vector");
		fullNameByTag.put(TagFromName.NumberOfTimeSlots,"Number of Time Slots");
		fullNameByTag.put(TagFromName.TimeSlotInformationSequence,"Time Slot Information Sequence");
		fullNameByTag.put(TagFromName.TimeSlotTime,"Time Slot Time");
		fullNameByTag.put(TagFromName.SliceVector,"Slice Vector");
		fullNameByTag.put(TagFromName.NumberOfSlices,"Number of Slices");
		fullNameByTag.put(TagFromName.AngularViewVector,"Angular View Vector");
		fullNameByTag.put(TagFromName.TimeSliceVector,"Time Slice Vector");
		fullNameByTag.put(TagFromName.NumberOfTimeSlices,"Number of Time Slices");
		fullNameByTag.put(TagFromName.StartAngle,"Start Angle");
		fullNameByTag.put(TagFromName.TypeOfDetectorMotion,"Type of Detector Motion");
		fullNameByTag.put(TagFromName.TriggerVector,"Trigger Vector");
		fullNameByTag.put(TagFromName.NumberOfTriggersInPhase,"Number of Triggers in Phase");
		fullNameByTag.put(TagFromName.ViewCodeSequence,"View Code Sequence");
		fullNameByTag.put(TagFromName.ViewModifierCodeSequence,"View Modifier Code Sequence");
		fullNameByTag.put(TagFromName.RadionuclideCodeSequence,"Radionuclide Code Sequence");
		fullNameByTag.put(TagFromName.AdministrationRouteCodeSequence,"Administration Route Code Sequence");
		fullNameByTag.put(TagFromName.RadiopharmaceuticalCodeSequence,"Radiopharmaceutical Code Sequence");
		fullNameByTag.put(TagFromName.CalibrationDataSequence,"Calibration Data Sequence");
		fullNameByTag.put(TagFromName.EnergyWindowNumber,"Energy Window Number");
		fullNameByTag.put(TagFromName.ImageID,"Image ID");
		fullNameByTag.put(TagFromName.PatientOrientationCodeSequence,"Patient Orientation Code Sequence");
		fullNameByTag.put(TagFromName.PatientOrientationModifierCodeSequence,"Patient Orientation Modifier Code Sequence");
		fullNameByTag.put(TagFromName.PatientGantryRelationshipCodeSequence,"Patient Gantry Relationship Code Sequence");
		fullNameByTag.put(TagFromName.SliceProgressionDirection,"Slice Progression Direction");
		fullNameByTag.put(TagFromName.ScanProgressionDirection,"Scan Progression Direction");
		fullNameByTag.put(TagFromName.SeriesType,"Series Type");
		fullNameByTag.put(TagFromName.Units,"Units");
		fullNameByTag.put(TagFromName.CountsSource,"Counts Source");
		fullNameByTag.put(TagFromName.ReprojectionMethod,"Reprojection Method");
		fullNameByTag.put(TagFromName.SUVType,"SUV Type");
		fullNameByTag.put(TagFromName.RandomsCorrectionMethod,"Randoms Correction Method");
		fullNameByTag.put(TagFromName.AttenuationCorrectionMethod,"Attenuation Correction Method");
		fullNameByTag.put(TagFromName.DecayCorrection,"Decay Correction");
		fullNameByTag.put(TagFromName.ReconstructionMethod,"Reconstruction Method");
		fullNameByTag.put(TagFromName.DetectorLinesOfResponseUsed,"Detector Lines of Response Used");
		fullNameByTag.put(TagFromName.ScatterCorrectionMethod,"Scatter Correction Method");
		fullNameByTag.put(TagFromName.AxialAcceptance,"Axial Acceptance");
		fullNameByTag.put(TagFromName.AxialMash,"Axial Mash");
		fullNameByTag.put(TagFromName.TransverseMash,"Transverse Mash");
		fullNameByTag.put(TagFromName.DetectorElementSize,"Detector Element Size");
		fullNameByTag.put(TagFromName.CoincidenceWindowWidth,"Coincidence Window Width");
		fullNameByTag.put(TagFromName.SecondaryCountsType,"Secondary Counts Type");
		fullNameByTag.put(TagFromName.FrameReferenceTime,"Frame Reference Time");
		fullNameByTag.put(TagFromName.PrimaryPromptsCountsAccumulated,"Primary (Prompts) Counts Accumulated");
		fullNameByTag.put(TagFromName.SecondaryCountsAccumulated,"Secondary Counts Accumulated");
		fullNameByTag.put(TagFromName.SliceSensitivityFactor,"Slice Sensitivity Factor");
		fullNameByTag.put(TagFromName.DecayFactor,"Decay Factor");
		fullNameByTag.put(TagFromName.DoseCalibrationFactor,"Dose Calibration Factor");
		fullNameByTag.put(TagFromName.ScatterFractionFactor,"Scatter Fraction Factor");
		fullNameByTag.put(TagFromName.DeadTimeFactor,"Dead Time Factor");
		fullNameByTag.put(TagFromName.ImageIndex,"Image Index");
		fullNameByTag.put(TagFromName.CountsIncluded,"Counts Included");
		fullNameByTag.put(TagFromName.DeadTimeCorrectionFlag,"Dead Time Correction Flag");
		fullNameByTag.put(TagFromName.HistogramSequence,"Histogram Sequence");
		fullNameByTag.put(TagFromName.HistogramNumberOfBins,"Histogram Number of Bins");
		fullNameByTag.put(TagFromName.HistogramFirstBinValue,"Histogram First Bin Value");
		fullNameByTag.put(TagFromName.HistogramLastBinValue,"Histogram Last Bin Value");
		fullNameByTag.put(TagFromName.HistogramBinWidth,"Histogram Bin Width");
		fullNameByTag.put(TagFromName.HistogramExplanation,"Histogram Explanation");
		fullNameByTag.put(TagFromName.HistogramData,"Histogram Data");
		fullNameByTag.put(TagFromName.SegmentationType,"Segmentation Type");
		fullNameByTag.put(TagFromName.SegmentSequence,"Segment Sequence");
		fullNameByTag.put(TagFromName.SegmentedPropertyCategoryCodeSequence,"Segmented Property Category Code Sequence");
		fullNameByTag.put(TagFromName.SegmentNumber,"Segment Number");
		fullNameByTag.put(TagFromName.SegmentLabel,"Segment Label");
		fullNameByTag.put(TagFromName.SegmentDescription,"Segment Description");
		fullNameByTag.put(TagFromName.SegmentationAlgorithmIdentificationSequence,"Segmentation Algorithm Identification Sequence");
		fullNameByTag.put(TagFromName.SegmentAlgorithmType,"Segment Algorithm Type");
		fullNameByTag.put(TagFromName.SegmentAlgorithmName,"Segment Algorithm Name");
		fullNameByTag.put(TagFromName.SegmentIdentificationSequence,"Segment Identification Sequence");
		fullNameByTag.put(TagFromName.ReferencedSegmentNumber,"Referenced Segment Number");
		fullNameByTag.put(TagFromName.RecommendedDisplayGrayscaleValue,"Recommended Display Grayscale Value");
		fullNameByTag.put(TagFromName.RecommendedDisplayCIELabValue,"Recommended Display CIELab Value");
		fullNameByTag.put(TagFromName.MaximumFractionalValue,"Maximum Fractional Value");
		fullNameByTag.put(TagFromName.SegmentedPropertyTypeCodeSequence,"Segmented Property Type Code Sequence");
		fullNameByTag.put(TagFromName.SegmentationFractionalType,"Segmentation Fractional Type");
		fullNameByTag.put(TagFromName.SegmentedPropertyTypeModifierCodeSequence,"Segmented Property Type Modifier Code Sequence");
		fullNameByTag.put(TagFromName.UsedSegmentsSequence,"Used Segments Sequence");
		fullNameByTag.put(TagFromName.TrackingID,"Tracking ID");
		fullNameByTag.put(TagFromName.TrackingUID,"Tracking UID");
		fullNameByTag.put(TagFromName.DeformableRegistrationSequence,"Deformable Registration Sequence");
		fullNameByTag.put(TagFromName.SourceFrameOfReferenceUID,"Source Frame of Reference UID");
		fullNameByTag.put(TagFromName.DeformableRegistrationGridSequence,"Deformable Registration Grid Sequence");
		fullNameByTag.put(TagFromName.GridDimensions,"Grid Dimensions");
		fullNameByTag.put(TagFromName.GridResolution,"Grid Resolution");
		fullNameByTag.put(TagFromName.VectorGridData,"Vector Grid Data");
		fullNameByTag.put(TagFromName.PreDeformationMatrixRegistrationSequence,"Pre Deformation Matrix Registration Sequence");
		fullNameByTag.put(TagFromName.PostDeformationMatrixRegistrationSequence,"Post Deformation Matrix Registration Sequence");
		fullNameByTag.put(TagFromName.NumberOfSurfaces,"Number of Surfaces");
		fullNameByTag.put(TagFromName.SurfaceSequence,"Surface Sequence");
		fullNameByTag.put(TagFromName.SurfaceNumber,"Surface Number");
		fullNameByTag.put(TagFromName.SurfaceComments,"Surface Comments");
		fullNameByTag.put(TagFromName.SurfaceProcessing,"Surface Processing");
		fullNameByTag.put(TagFromName.SurfaceProcessingRatio,"Surface Processing Ratio");
		fullNameByTag.put(TagFromName.SurfaceProcessingDescription,"Surface Processing Description");
		fullNameByTag.put(TagFromName.RecommendedPresentationOpacity,"Recommended Presentation Opacity");
		fullNameByTag.put(TagFromName.RecommendedPresentationType,"Recommended Presentation Type");
		fullNameByTag.put(TagFromName.FiniteVolume,"Finite Volume");
		fullNameByTag.put(TagFromName.Manifold,"Manifold");
		fullNameByTag.put(TagFromName.SurfacePointsSequence,"Surface Points Sequence");
		fullNameByTag.put(TagFromName.SurfacePointsNormalsSequence,"Surface Points Normals Sequence");
		fullNameByTag.put(TagFromName.SurfaceMeshPrimitivesSequence,"Surface Mesh Primitives Sequence");
		fullNameByTag.put(TagFromName.NumberOfSurfacePoints,"Number of Surface Points");
		fullNameByTag.put(TagFromName.PointCoordinatesData,"Point Coordinates Data");
		fullNameByTag.put(TagFromName.PointPositionAccuracy,"Point Position Accuracy");
		fullNameByTag.put(TagFromName.MeanPointDistance,"Mean Point Distance");
		fullNameByTag.put(TagFromName.MaximumPointDistance,"Maximum Point Distance");
		fullNameByTag.put(TagFromName.PointsBoundingBoxCoordinates,"Points Bounding Box Coordinates");
		fullNameByTag.put(TagFromName.AxisOfRotation,"Axis of Rotation");
		fullNameByTag.put(TagFromName.CenterOfRotation,"Center of Rotation");
		fullNameByTag.put(TagFromName.NumberOfVectors,"Number of Vectors");
		fullNameByTag.put(TagFromName.VectorDimensionality,"Vector Dimensionality");
		fullNameByTag.put(TagFromName.VectorAccuracy,"Vector Accuracy");
		fullNameByTag.put(TagFromName.VectorCoordinateData,"Vector Coordinate Data");
		fullNameByTag.put(TagFromName.TrianglePointIndexList,"Triangle Point Index List");
		fullNameByTag.put(TagFromName.EdgePointIndexList,"Edge Point Index List");
		fullNameByTag.put(TagFromName.VertexPointIndexList,"Vertex Point Index List");
		fullNameByTag.put(TagFromName.TriangleStripSequence,"Triangle Strip Sequence");
		fullNameByTag.put(TagFromName.TriangleFanSequence,"Triangle Fan Sequence");
		fullNameByTag.put(TagFromName.LineSequence,"Line Sequence");
		fullNameByTag.put(TagFromName.PrimitivePointIndexList,"Primitive Point Index List");
		fullNameByTag.put(TagFromName.SurfaceCount,"Surface Count");
		fullNameByTag.put(TagFromName.ReferencedSurfaceSequence,"Referenced Surface Sequence");
		fullNameByTag.put(TagFromName.ReferencedSurfaceNumber,"Referenced Surface Number");
		fullNameByTag.put(TagFromName.SegmentSurfaceGenerationAlgorithmIdentificationSequence,"Segment Surface Generation Algorithm Identification Sequence");
		fullNameByTag.put(TagFromName.SegmentSurfaceSourceInstanceSequence,"Segment Surface Source Instance Sequence");
		fullNameByTag.put(TagFromName.AlgorithmFamilyCodeSequence,"Algorithm Family Code Sequence");
		fullNameByTag.put(TagFromName.AlgorithmNameCodeSequence,"Algorithm Name Code Sequence");
		fullNameByTag.put(TagFromName.AlgorithmVersion,"Algorithm Version");
		fullNameByTag.put(TagFromName.AlgorithmParameters,"Algorithm Parameters");
		fullNameByTag.put(TagFromName.FacetSequence,"Facet Sequence");
		fullNameByTag.put(TagFromName.SurfaceProcessingAlgorithmIdentificationSequence,"Surface Processing Algorithm Identification Sequence");
		fullNameByTag.put(TagFromName.AlgorithmName,"Algorithm Name");
		fullNameByTag.put(TagFromName.RecommendedPointRadius,"Recommended Point Radius");
		fullNameByTag.put(TagFromName.RecommendedLineThickness,"Recommended Line Thickness");
		fullNameByTag.put(TagFromName.LongPrimitivePointIndexList,"Long Primitive Point Index List");
		fullNameByTag.put(TagFromName.LongTrianglePointIndexList,"Long Triangle Point Index List");
		fullNameByTag.put(TagFromName.LongEdgePointIndexList,"Long Edge Point Index List");
		fullNameByTag.put(TagFromName.LongVertexPointIndexList,"Long Vertex Point Index List");
		fullNameByTag.put(TagFromName.TrackSetSequence,"Track Set Sequence");
		fullNameByTag.put(TagFromName.TrackSequence,"Track Sequence");
		fullNameByTag.put(TagFromName.RecommendedDisplayCIELabValueList,"Recommended Display CIELab Value List");
		fullNameByTag.put(TagFromName.TrackingAlgorithmIdentificationSequence,"Tracking Algorithm Identification Sequence");
		fullNameByTag.put(TagFromName.TrackSetNumber,"Track Set Number");
		fullNameByTag.put(TagFromName.TrackSetLabel,"Track Set Label");
		fullNameByTag.put(TagFromName.TrackSetDescription,"Track Set Description");
		fullNameByTag.put(TagFromName.TrackSetAnatomicalTypeCodeSequence,"Track Set Anatomical Type Code Sequence");
		fullNameByTag.put(TagFromName.MeasurementsSequence,"Measurements Sequence");
		fullNameByTag.put(TagFromName.TrackSetStatisticsSequence,"Track Set Statistics Sequence");
		fullNameByTag.put(TagFromName.FloatingPointValues,"Floating Point Values");
		fullNameByTag.put(TagFromName.TrackPointIndexList,"Track Point Index List");
		fullNameByTag.put(TagFromName.TrackStatisticsSequence,"Track Statistics Sequence");
		fullNameByTag.put(TagFromName.MeasurementValuesSequence,"Measurement Values Sequence");
		fullNameByTag.put(TagFromName.DiffusionAcquisitionCodeSequence,"Diffusion Acquisition Code Sequence");
		fullNameByTag.put(TagFromName.DiffusionModelCodeSequence,"Diffusion Model Code Sequence");
		fullNameByTag.put(TagFromName.ImplantSize,"Implant Size");
		fullNameByTag.put(TagFromName.ImplantTemplateVersion,"Implant Template Version");
		fullNameByTag.put(TagFromName.ReplacedImplantTemplateSequence,"Replaced Implant Template Sequence");
		fullNameByTag.put(TagFromName.ImplantType,"Implant Type");
		fullNameByTag.put(TagFromName.DerivationImplantTemplateSequence,"Derivation Implant Template Sequence ");
		fullNameByTag.put(TagFromName.OriginalImplantTemplateSequence,"Original Implant Template Sequence ");
		fullNameByTag.put(TagFromName.EffectiveDateTime,"Effective DateTime");
		fullNameByTag.put(TagFromName.ImplantTargetAnatomySequence,"Implant Target Anatomy Sequence");
		fullNameByTag.put(TagFromName.InformationFromManufacturerSequence,"Information From Manufacturer Sequence");
		fullNameByTag.put(TagFromName.NotificationFromManufacturerSequence,"Notification From Manufacturer Sequence");
		fullNameByTag.put(TagFromName.InformationIssueDateTime,"Information Issue DateTime");
		fullNameByTag.put(TagFromName.InformationSummary,"Information Summary");
		fullNameByTag.put(TagFromName.ImplantRegulatoryDisapprovalCodeSequence,"Implant Regulatory Disapproval Code Sequence");
		fullNameByTag.put(TagFromName.OverallTemplateSpatialTolerance,"Overall Template Spatial Tolerance");
		fullNameByTag.put(TagFromName.HPGLDocumentSequence,"HPGL Document Sequence");
		fullNameByTag.put(TagFromName.HPGLDocumentID,"HPGL Document ID");
		fullNameByTag.put(TagFromName.HPGLDocumentLabel,"HPGL Document Label");
		fullNameByTag.put(TagFromName.ViewOrientationCodeSequence,"View Orientation Code Sequence");
		fullNameByTag.put(TagFromName.ViewOrientationModifierCodeSequence,"View Orientation Modifier Code Sequence");
		fullNameByTag.put(TagFromName.HPGLDocumentScaling,"HPGL Document Scaling");
		fullNameByTag.put(TagFromName.HPGLDocument,"HPGL Document");
		fullNameByTag.put(TagFromName.HPGLContourPenNumber,"HPGL Contour Pen Number");
		fullNameByTag.put(TagFromName.HPGLPenSequence,"HPGL Pen Sequence");
		fullNameByTag.put(TagFromName.HPGLPenNumber,"HPGL Pen Number");
		fullNameByTag.put(TagFromName.HPGLPenLabel,"HPGL Pen Label");
		fullNameByTag.put(TagFromName.HPGLPenDescription,"HPGL Pen Description");
		fullNameByTag.put(TagFromName.RecommendedRotationPoint,"Recommended Rotation Point");
		fullNameByTag.put(TagFromName.BoundingRectangle,"Bounding Rectangle");
		fullNameByTag.put(TagFromName.ImplantTemplate3DModelSurfaceNumber,"Implant Template 3D Model Surface Number");
		fullNameByTag.put(TagFromName.SurfaceModelDescriptionSequence,"Surface Model Description Sequence");
		fullNameByTag.put(TagFromName.SurfaceModelLabel,"Surface Model Label");
		fullNameByTag.put(TagFromName.SurfaceModelScalingFactor,"Surface Model Scaling Factor");
		fullNameByTag.put(TagFromName.MaterialsCodeSequence,"Materials Code Sequence");
		fullNameByTag.put(TagFromName.CoatingMaterialsCodeSequence,"Coating Materials Code Sequence");
		fullNameByTag.put(TagFromName.ImplantTypeCodeSequence,"Implant Type Code Sequence");
		fullNameByTag.put(TagFromName.FixationMethodCodeSequence,"Fixation Method Code Sequence");
		fullNameByTag.put(TagFromName.MatingFeatureSetsSequence,"Mating Feature Sets Sequence");
		fullNameByTag.put(TagFromName.MatingFeatureSetID,"Mating Feature Set ID");
		fullNameByTag.put(TagFromName.MatingFeatureSetLabel,"Mating Feature Set Label");
		fullNameByTag.put(TagFromName.MatingFeatureSequence,"Mating Feature Sequence");
		fullNameByTag.put(TagFromName.MatingFeatureID,"Mating Feature ID");
		fullNameByTag.put(TagFromName.MatingFeatureDegreeOfFreedomSequence,"Mating Feature Degree of Freedom Sequence");
		fullNameByTag.put(TagFromName.DegreeOfFreedomID,"Degree of Freedom ID");
		fullNameByTag.put(TagFromName.DegreeOfFreedomType,"Degree of Freedom Type");
		fullNameByTag.put(TagFromName.TwoDMatingFeatureCoordinatesSequence,"2D Mating Feature Coordinates Sequence");
		fullNameByTag.put(TagFromName.ReferencedHPGLDocumentID,"Referenced HPGL Document ID");
		fullNameByTag.put(TagFromName.TwoDMatingPoint,"2D Mating Point");
		fullNameByTag.put(TagFromName.TwoDMatingAxes,"2D Mating Axes");
		fullNameByTag.put(TagFromName.TwoDDegreeOfFreedomSequence,"2D Degree of Freedom Sequence");
		fullNameByTag.put(TagFromName.ThreeDDegreeOfFreedomAxis,"3D Degree of Freedom Axis");
		fullNameByTag.put(TagFromName.RangeOfFreedom,"Range of Freedom");
		fullNameByTag.put(TagFromName.ThreeDMatingPoint,"3D Mating Point");
		fullNameByTag.put(TagFromName.ThreeDMatingAxes,"3D Mating Axes");
		fullNameByTag.put(TagFromName.TwoDDegreeOfFreedomAxis,"2D Degree of Freedom Axis");
		fullNameByTag.put(TagFromName.PlanningLandmarkPointSequence,"Planning Landmark Point Sequence");
		fullNameByTag.put(TagFromName.PlanningLandmarkLineSequence,"Planning Landmark Line Sequence");
		fullNameByTag.put(TagFromName.PlanningLandmarkPlaneSequence,"Planning Landmark Plane Sequence");
		fullNameByTag.put(TagFromName.PlanningLandmarkID,"Planning Landmark ID");
		fullNameByTag.put(TagFromName.PlanningLandmarkDescription,"Planning Landmark Description");
		fullNameByTag.put(TagFromName.PlanningLandmarkIdentificationCodeSequence,"Planning Landmark Identification Code Sequence");
		fullNameByTag.put(TagFromName.TwoDPointCoordinatesSequence,"2D Point Coordinates Sequence");
		fullNameByTag.put(TagFromName.TwoDPointCoordinates,"2D Point Coordinates");
		fullNameByTag.put(TagFromName.ThreeDPointCoordinates,"3D Point Coordinates");
		fullNameByTag.put(TagFromName.TwoDLineCoordinatesSequence,"2D Line Coordinates Sequence");
		fullNameByTag.put(TagFromName.TwoDLineCoordinates,"2D Line Coordinates");
		fullNameByTag.put(TagFromName.ThreeDLineCoordinates,"3D Line Coordinates");
		fullNameByTag.put(TagFromName.TwoDPlaneCoordinatesSequence,"2D Plane Coordinates Sequence");
		fullNameByTag.put(TagFromName.TwoDPlaneIntersection,"2D Plane Intersection");
		fullNameByTag.put(TagFromName.ThreeDPlaneOrigin,"3D Plane Origin");
		fullNameByTag.put(TagFromName.ThreeDPlaneNormal,"3D Plane Normal");
		fullNameByTag.put(TagFromName.ModelModification,"Model Modification");
		fullNameByTag.put(TagFromName.ModelMirroring,"Model Mirroring");
		fullNameByTag.put(TagFromName.ModelUsageCodeSequence,"Model Usage Code Sequence");
		fullNameByTag.put(TagFromName.GraphicAnnotationSequence,"Graphic Annotation Sequence");
		fullNameByTag.put(TagFromName.GraphicLayer,"Graphic Layer");
		fullNameByTag.put(TagFromName.BoundingBoxAnnotationUnits,"Bounding Box Annotation Units");
		fullNameByTag.put(TagFromName.AnchorPointAnnotationUnits,"Anchor Point Annotation Units");
		fullNameByTag.put(TagFromName.GraphicAnnotationUnits,"Graphic Annotation Units");
		fullNameByTag.put(TagFromName.UnformattedTextValue,"Unformatted Text Value");
		fullNameByTag.put(TagFromName.TextObjectSequence,"Text Object Sequence");
		fullNameByTag.put(TagFromName.GraphicObjectSequence,"Graphic Object Sequence");
		fullNameByTag.put(TagFromName.BoundingBoxTopLeftHandCorner,"Bounding Box Top Left Hand Corner");
		fullNameByTag.put(TagFromName.BoundingBoxBottomRightHandCorner,"Bounding Box Bottom Right Hand Corner");
		fullNameByTag.put(TagFromName.BoundingBoxTextHorizontalJustification,"Bounding Box Text Horizontal Justification");
		fullNameByTag.put(TagFromName.AnchorPoint,"Anchor Point");
		fullNameByTag.put(TagFromName.AnchorPointVisibility,"Anchor Point Visibility");
		fullNameByTag.put(TagFromName.GraphicDimensions,"Graphic Dimensions");
		fullNameByTag.put(TagFromName.NumberOfGraphicPoints,"Number of Graphic Points");
		fullNameByTag.put(TagFromName.GraphicData,"Graphic Data");
		fullNameByTag.put(TagFromName.GraphicType,"Graphic Type");
		fullNameByTag.put(TagFromName.GraphicFilled,"Graphic Filled");
		fullNameByTag.put(TagFromName.ImageRotationRetired,"Image Rotation (Retired)");
		fullNameByTag.put(TagFromName.ImageHorizontalFlip,"Image Horizontal Flip");
		fullNameByTag.put(TagFromName.ImageRotation,"Image Rotation");
		fullNameByTag.put(TagFromName.DisplayedAreaTopLeftHandCornerTrial,"Displayed Area Top Left Hand Corner (Trial)");
		fullNameByTag.put(TagFromName.DisplayedAreaBottomRightHandCornerTrial,"Displayed Area Bottom Right Hand Corner (Trial)");
		fullNameByTag.put(TagFromName.DisplayedAreaTopLeftHandCorner,"Displayed Area Top Left Hand Corner");
		fullNameByTag.put(TagFromName.DisplayedAreaBottomRightHandCorner,"Displayed Area Bottom Right Hand Corner");
		fullNameByTag.put(TagFromName.DisplayedAreaSelectionSequence,"Displayed Area Selection Sequence");
		fullNameByTag.put(TagFromName.GraphicLayerSequence,"Graphic Layer Sequence");
		fullNameByTag.put(TagFromName.GraphicLayerOrder,"Graphic Layer Order");
		fullNameByTag.put(TagFromName.GraphicLayerRecommendedDisplayGrayscaleValue,"Graphic Layer Recommended Display Grayscale Value");
		fullNameByTag.put(TagFromName.GraphicLayerRecommendedDisplayRGBValue,"Graphic Layer Recommended Display RGB Value");
		fullNameByTag.put(TagFromName.GraphicLayerDescription,"Graphic Layer Description");
		fullNameByTag.put(TagFromName.ContentLabel,"Content Label");
		fullNameByTag.put(TagFromName.ContentDescription,"Content Description");
		fullNameByTag.put(TagFromName.PresentationCreationDate,"Presentation Creation Date");
		fullNameByTag.put(TagFromName.PresentationCreationTime,"Presentation Creation Time");
		fullNameByTag.put(TagFromName.ContentCreatorName,"Content Creator's Name");
		fullNameByTag.put(TagFromName.ContentCreatorIdentificationCodeSequence,"Content Creator's Identification Code Sequence");
		fullNameByTag.put(TagFromName.AlternateContentDescriptionSequence,"Alternate Content Description Sequence");
		fullNameByTag.put(TagFromName.PresentationSizeMode,"Presentation Size Mode");
		fullNameByTag.put(TagFromName.PresentationPixelSpacing,"Presentation Pixel Spacing");
		fullNameByTag.put(TagFromName.PresentationPixelAspectRatio,"Presentation Pixel Aspect Ratio");
		fullNameByTag.put(TagFromName.PresentationPixelMagnificationRatio,"Presentation Pixel Magnification Ratio");
		fullNameByTag.put(TagFromName.GraphicGroupLabel,"Graphic Group Label");
		fullNameByTag.put(TagFromName.GraphicGroupDescription,"Graphic Group Description");
		fullNameByTag.put(TagFromName.CompoundGraphicSequence,"Compound Graphic Sequence");
		fullNameByTag.put(TagFromName.CompoundGraphicInstanceID,"Compound Graphic Instance ID");
		fullNameByTag.put(TagFromName.FontName,"Font Name");
		fullNameByTag.put(TagFromName.FontNameType,"Font Name Type");
		fullNameByTag.put(TagFromName.CSSFontName,"CSS Font Name");
		fullNameByTag.put(TagFromName.RotationAngle,"Rotation Angle");
		fullNameByTag.put(TagFromName.TextStyleSequence,"Text Style Sequence");
		fullNameByTag.put(TagFromName.LineStyleSequence,"Line Style Sequence");
		fullNameByTag.put(TagFromName.FillStyleSequence,"Fill Style Sequence");
		fullNameByTag.put(TagFromName.GraphicGroupSequence,"Graphic Group Sequence");
		fullNameByTag.put(TagFromName.TextColorCIELabValue,"Text Color CIELab Value");
		fullNameByTag.put(TagFromName.HorizontalAlignment,"Horizontal Alignment");
		fullNameByTag.put(TagFromName.VerticalAlignment,"Vertical Alignment");
		fullNameByTag.put(TagFromName.ShadowStyle,"Shadow Style");
		fullNameByTag.put(TagFromName.ShadowOffsetX,"Shadow Offset X");
		fullNameByTag.put(TagFromName.ShadowOffsetY,"Shadow Offset Y");
		fullNameByTag.put(TagFromName.ShadowColorCIELabValue,"Shadow Color CIELab Value");
		fullNameByTag.put(TagFromName.Underlined,"Underlined");
		fullNameByTag.put(TagFromName.Bold,"Bold");
		fullNameByTag.put(TagFromName.Italic,"Italic");
		fullNameByTag.put(TagFromName.PatternOnColorCIELabValue,"Pattern On Color CIELab Value");
		fullNameByTag.put(TagFromName.PatternOffColorCIELabValue,"Pattern Off Color CIELab Value");
		fullNameByTag.put(TagFromName.LineThickness,"Line Thickness");
		fullNameByTag.put(TagFromName.LineDashingStyle,"Line Dashing Style");
		fullNameByTag.put(TagFromName.LinePattern,"Line Pattern");
		fullNameByTag.put(TagFromName.FillPattern,"Fill Pattern");
		fullNameByTag.put(TagFromName.FillMode,"Fill Mode");
		fullNameByTag.put(TagFromName.ShadowOpacity,"Shadow Opacity");
		fullNameByTag.put(TagFromName.GapLength,"Gap Length");
		fullNameByTag.put(TagFromName.DiameterOfVisibility,"Diameter of Visibility");
		fullNameByTag.put(TagFromName.RotationPoint,"Rotation Point");
		fullNameByTag.put(TagFromName.TickAlignment,"Tick Alignment");
		fullNameByTag.put(TagFromName.ShowTickLabel,"Show Tick Label");
		fullNameByTag.put(TagFromName.TickLabelAlignment,"Tick Label Alignment");
		fullNameByTag.put(TagFromName.CompoundGraphicUnits,"Compound Graphic Units");
		fullNameByTag.put(TagFromName.PatternOnOpacity,"Pattern On Opacity");
		fullNameByTag.put(TagFromName.PatternOffOpacity,"Pattern Off Opacity");
		fullNameByTag.put(TagFromName.MajorTicksSequence,"Major Ticks Sequence");
		fullNameByTag.put(TagFromName.TickPosition,"Tick Position");
		fullNameByTag.put(TagFromName.TickLabel,"Tick Label");
		fullNameByTag.put(TagFromName.CompoundGraphicType,"Compound Graphic Type");
		fullNameByTag.put(TagFromName.GraphicGroupID,"Graphic Group ID");
		fullNameByTag.put(TagFromName.ShapeType,"Shape Type");
		fullNameByTag.put(TagFromName.RegistrationSequence,"Registration Sequence");
		fullNameByTag.put(TagFromName.MatrixRegistrationSequence,"Matrix Registration Sequence");
		fullNameByTag.put(TagFromName.MatrixSequence,"Matrix Sequence");
		fullNameByTag.put(TagFromName.FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix,"Frame of Reference to Displayed Coordinate System Transformation Matrix");
		fullNameByTag.put(TagFromName.FrameOfReferenceTransformationMatrixType,"Frame of Reference Transformation Matrix Type");
		fullNameByTag.put(TagFromName.RegistrationTypeCodeSequence,"Registration Type Code Sequence");
		fullNameByTag.put(TagFromName.FiducialDescription,"Fiducial Description");
		fullNameByTag.put(TagFromName.FiducialIdentifier,"Fiducial Identifier");
		fullNameByTag.put(TagFromName.FiducialIdentifierCodeSequence,"Fiducial Identifier Code Sequence");
		fullNameByTag.put(TagFromName.ContourUncertaintyRadius,"Contour Uncertainty Radius");
		fullNameByTag.put(TagFromName.UsedFiducialsSequence,"Used Fiducials Sequence");
		fullNameByTag.put(TagFromName.GraphicCoordinatesDataSequence,"Graphic Coordinates Data Sequence");
		fullNameByTag.put(TagFromName.FiducialUID,"Fiducial UID");
		fullNameByTag.put(TagFromName.ReferencedFiducialUID,"Referenced Fiducial UID");
		fullNameByTag.put(TagFromName.FiducialSetSequence,"Fiducial Set Sequence");
		fullNameByTag.put(TagFromName.FiducialSequence,"Fiducial Sequence");
		fullNameByTag.put(TagFromName.FiducialsPropertyCategoryCodeSequence,"Fiducials Property Category Code Sequence");
		fullNameByTag.put(TagFromName.GraphicLayerRecommendedDisplayCIELabValue,"Graphic Layer Recommended Display CIELab Value");
		fullNameByTag.put(TagFromName.BlendingSequence,"Blending Sequence");
		fullNameByTag.put(TagFromName.RelativeOpacity,"Relative Opacity");
		fullNameByTag.put(TagFromName.ReferencedSpatialRegistrationSequence,"Referenced Spatial Registration Sequence");
		fullNameByTag.put(TagFromName.BlendingPosition,"Blending Position");
		fullNameByTag.put(TagFromName.PresentationDisplayCollectionUID,"Presentation Display Collection UID");
		fullNameByTag.put(TagFromName.PresentationSequenceCollectionUID,"Presentation Sequence Collection UID");
		fullNameByTag.put(TagFromName.PresentationSequencePositionIndex,"Presentation Sequence Position Index");
		fullNameByTag.put(TagFromName.RenderedImageReferenceSequence,"Rendered Image Reference Sequence");
		fullNameByTag.put(TagFromName.VolumetricPresentationStateInputSequence,"Volumetric Presentation State Input Sequence");
		fullNameByTag.put(TagFromName.PresentationInputType,"Presentation Input Type");
		fullNameByTag.put(TagFromName.InputSequencePositionIndex,"Input Sequence Position Index");
		fullNameByTag.put(TagFromName.Crop,"Crop");
		fullNameByTag.put(TagFromName.CroppingSpecificationIndex,"Cropping Specification Index");
		fullNameByTag.put(TagFromName.CompositingMethod,"Compositing Method");
		fullNameByTag.put(TagFromName.VolumetricPresentationInputNumber,"Volumetric Presentation Input Number");
		fullNameByTag.put(TagFromName.ImageVolumeGeometry,"Image Volume Geometry");
		fullNameByTag.put(TagFromName.VolumetricPresentationInputSetUID,"Volumetric Presentation Input Set UID");
		fullNameByTag.put(TagFromName.VolumetricPresentationInputSetSequence,"Volumetric Presentation Input Set Sequence");
		fullNameByTag.put(TagFromName.GlobalCrop,"Global Crop");
		fullNameByTag.put(TagFromName.GlobalCroppingSpecificationIndex,"Global Cropping Specification Index");
		fullNameByTag.put(TagFromName.RenderingMethod,"Rendering Method");
		fullNameByTag.put(TagFromName.VolumeCroppingSequence,"Volume Cropping Sequence");
		fullNameByTag.put(TagFromName.VolumeCroppingMethod,"Volume Cropping Method");
		fullNameByTag.put(TagFromName.BoundingBoxCrop,"Bounding Box Crop");
		fullNameByTag.put(TagFromName.ObliqueCroppingPlaneSequence,"Oblique Cropping Plane Sequence");
		fullNameByTag.put(TagFromName.Plane,"Plane");
		fullNameByTag.put(TagFromName.PlaneNormal,"Plane Normal");
		fullNameByTag.put(TagFromName.CroppingSpecificationNumber,"Cropping Specification Number");
		fullNameByTag.put(TagFromName.MultiPlanarReconstructionStyle,"Multi-Planar Reconstruction Style");
		fullNameByTag.put(TagFromName.MPRThicknessType,"MPR Thickness Type");
		fullNameByTag.put(TagFromName.MPRSlabThickness,"MPR Slab Thickness");
		fullNameByTag.put(TagFromName.MPRTopLeftHandCorner,"MPR Top Left Hand Corner");
		fullNameByTag.put(TagFromName.MPRViewWidthDirection,"MPR View Width Direction");
		fullNameByTag.put(TagFromName.MPRViewWidth,"MPR View Width");
		fullNameByTag.put(TagFromName.NumberOfVolumetricCurvePoints,"Number of Volumetric Curve Points");
		fullNameByTag.put(TagFromName.VolumetricCurvePoints,"Volumetric Curve Points");
		fullNameByTag.put(TagFromName.MPRViewHeightDirection,"MPR View Height Direction");
		fullNameByTag.put(TagFromName.MPRViewHeight,"MPR View Height");
		fullNameByTag.put(TagFromName.RenderProjection,"Render Projection");
		fullNameByTag.put(TagFromName.ViewpointPosition,"Viewpoint Position");
		fullNameByTag.put(TagFromName.ViewpointLookAtPoint,"Viewpoint LookAt Point");
		fullNameByTag.put(TagFromName.ViewpointUpDirection,"Viewpoint Up Direction");
		fullNameByTag.put(TagFromName.RenderFieldOfView,"Render Field of View");
		fullNameByTag.put(TagFromName.SamplingStepSize,"Sampling Step Size");
		fullNameByTag.put(TagFromName.ShadingStyle,"Shading Style");
		fullNameByTag.put(TagFromName.AmbientReflectionIntensity,"Ambient Reflection Intensity");
		fullNameByTag.put(TagFromName.LightDirection,"Light Direction");
		fullNameByTag.put(TagFromName.DiffuseReflectionIntensity,"Diffuse Reflection Intensity");
		fullNameByTag.put(TagFromName.SpecularReflectionIntensity,"Specular Reflection Intensity");
		fullNameByTag.put(TagFromName.Shininess,"Shininess");
		fullNameByTag.put(TagFromName.PresentationStateClassificationComponentSequence,"Presentation State Classification Component Sequence");
		fullNameByTag.put(TagFromName.ComponentType,"Component Type");
		fullNameByTag.put(TagFromName.ComponentInputSequence,"Component Input Sequence");
		fullNameByTag.put(TagFromName.VolumetricPresentationInputIndex,"Volumetric Presentation Input Index");
		fullNameByTag.put(TagFromName.PresentationStateCompositorComponentSequence,"Presentation State Compositor Component Sequence");
		fullNameByTag.put(TagFromName.WeightingTransferFunctionSequence,"Weighting Transfer Function Sequence");
		fullNameByTag.put(TagFromName.WeightingLookupTableDescriptor,"Weighting Lookup Table Descriptor");
		fullNameByTag.put(TagFromName.WeightingLookupTableData,"Weighting Lookup Table Data");
		fullNameByTag.put(TagFromName.VolumetricAnnotationSequence,"Volumetric Annotation Sequence");
		fullNameByTag.put(TagFromName.ReferencedStructuredContextSequence,"Referenced Structured Context Sequence");
		fullNameByTag.put(TagFromName.ReferencedContentItem,"Referenced Content Item");
		fullNameByTag.put(TagFromName.VolumetricPresentationInputAnnotationSequence,"Volumetric Presentation Input Annotation Sequence");
		fullNameByTag.put(TagFromName.AnnotationClipping,"Annotation Clipping");
		fullNameByTag.put(TagFromName.PresentationAnimationStyle,"Presentation Animation Style");
		fullNameByTag.put(TagFromName.RecommendedAnimationRate,"Recommended Animation Rate");
		fullNameByTag.put(TagFromName.AnimationCurveSequence,"Animation Curve Sequence");
		fullNameByTag.put(TagFromName.AnimationStepSize,"Animation Step Size");
		fullNameByTag.put(TagFromName.SwivelRange,"Swivel Range");
		fullNameByTag.put(TagFromName.VolumetricCurveUpDirections,"Volumetric Curve Up Directions");
		fullNameByTag.put(TagFromName.VolumeStreamSequence,"Volume Stream Sequence");
		fullNameByTag.put(TagFromName.RGBATransferFunctionDescription,"RGBA Transfer Function Description");
		fullNameByTag.put(TagFromName.AdvancedBlendingSequence,"Advanced Blending Sequence");
		fullNameByTag.put(TagFromName.BlendingInputNumber,"Blending Input Number");
		fullNameByTag.put(TagFromName.BlendingDisplayInputSequence,"Blending Display Input Sequence");
		fullNameByTag.put(TagFromName.BlendingDisplaySequence,"Blending Display Sequence");
		fullNameByTag.put(TagFromName.BlendingMode,"Blending Mode");
		fullNameByTag.put(TagFromName.TimeSeriesBlending,"Time Series Blending");
		fullNameByTag.put(TagFromName.GeometryForDisplay,"Geometry for Display");
		fullNameByTag.put(TagFromName.ThresholdSequence,"Threshold Sequence");
		fullNameByTag.put(TagFromName.ThresholdValueSequence,"Threshold Value Sequence");
		fullNameByTag.put(TagFromName.ThresholdType,"Threshold Type");
		fullNameByTag.put(TagFromName.ThresholdValue,"Threshold Value");
		fullNameByTag.put(TagFromName.HangingProtocolName,"Hanging Protocol Name");
		fullNameByTag.put(TagFromName.HangingProtocolDescription,"Hanging Protocol Description");
		fullNameByTag.put(TagFromName.HangingProtocolLevel,"Hanging Protocol Level");
		fullNameByTag.put(TagFromName.HangingProtocolCreator,"Hanging Protocol Creator");
		fullNameByTag.put(TagFromName.HangingProtocolCreationDateTime,"Hanging Protocol Creation DateTime");
		fullNameByTag.put(TagFromName.HangingProtocolDefinitionSequence,"Hanging Protocol Definition Sequence");
		fullNameByTag.put(TagFromName.HangingProtocolUserIdentificationCodeSequence,"Hanging Protocol User Identification Code Sequence");
		fullNameByTag.put(TagFromName.HangingProtocolUserGroupName,"Hanging Protocol User Group Name");
		fullNameByTag.put(TagFromName.SourceHangingProtocolSequence,"Source Hanging Protocol Sequence");
		fullNameByTag.put(TagFromName.NumberOfPriorsReferenced,"Number of Priors Referenced");
		fullNameByTag.put(TagFromName.ImageSetsSequence,"Image Sets Sequence");
		fullNameByTag.put(TagFromName.ImageSetSelectorSequence,"Image Set Selector Sequence");
		fullNameByTag.put(TagFromName.ImageSetSelectorUsageFlag,"Image Set Selector Usage Flag");
		fullNameByTag.put(TagFromName.SelectorAttribute,"Selector Attribute");
		fullNameByTag.put(TagFromName.SelectorValueNumber,"Selector Value Number");
		fullNameByTag.put(TagFromName.TimeBasedImageSetsSequence,"Time Based Image Sets Sequence");
		fullNameByTag.put(TagFromName.ImageSetNumber,"Image Set Number");
		fullNameByTag.put(TagFromName.ImageSetSelectorCategory,"Image Set Selector Category");
		fullNameByTag.put(TagFromName.RelativeTime,"Relative Time");
		fullNameByTag.put(TagFromName.RelativeTimeUnits,"Relative Time Units");
		fullNameByTag.put(TagFromName.AbstractPriorValue,"Abstract Prior Value");
		fullNameByTag.put(TagFromName.AbstractPriorCodeSequence,"Abstract Prior Code Sequence");
		fullNameByTag.put(TagFromName.ImageSetLabel,"Image Set Label");
		fullNameByTag.put(TagFromName.SelectorAttributeVR,"Selector Attribute VR");
		fullNameByTag.put(TagFromName.SelectorSequencePointer,"Selector Sequence Pointer");
		fullNameByTag.put(TagFromName.SelectorSequencePointerPrivateCreator,"Selector Sequence Pointer Private Creator");
		fullNameByTag.put(TagFromName.SelectorAttributePrivateCreator,"Selector Attribute Private Creator");
		fullNameByTag.put(TagFromName.SelectorAEValue,"Selector AE Value");
		fullNameByTag.put(TagFromName.SelectorASValue,"Selector AS Value");
		fullNameByTag.put(TagFromName.SelectorATValue,"Selector AT Value");
		fullNameByTag.put(TagFromName.SelectorDAValue,"Selector DA Value");
		fullNameByTag.put(TagFromName.SelectorCSValue,"Selector CS Value");
		fullNameByTag.put(TagFromName.SelectorDTValue,"Selector DT Value");
		fullNameByTag.put(TagFromName.SelectorISValue,"Selector IS Value");
		fullNameByTag.put(TagFromName.SelectorOBValue,"Selector OB Value");
		fullNameByTag.put(TagFromName.SelectorLOValue,"Selector LO Value");
		fullNameByTag.put(TagFromName.SelectorOFValue,"Selector OF Value");
		fullNameByTag.put(TagFromName.SelectorLTValue,"Selector LT Value");
		fullNameByTag.put(TagFromName.SelectorOWValue,"Selector OW Value");
		fullNameByTag.put(TagFromName.SelectorPNValue,"Selector PN Value");
		fullNameByTag.put(TagFromName.SelectorTMValue,"Selector TM Value");
		fullNameByTag.put(TagFromName.SelectorSHValue,"Selector SH Value");
		fullNameByTag.put(TagFromName.SelectorUNValue,"Selector UN Value");
		fullNameByTag.put(TagFromName.SelectorSTValue,"Selector ST Value");
		fullNameByTag.put(TagFromName.SelectorUCValue,"Selector UC Value");
		fullNameByTag.put(TagFromName.SelectorUTValue,"Selector UT Value");
		fullNameByTag.put(TagFromName.SelectorURValue,"Selector UR Value");
		fullNameByTag.put(TagFromName.SelectorDSValue,"Selector DS Value");
		fullNameByTag.put(TagFromName.SelectorODValue,"Selector OD Value");
		fullNameByTag.put(TagFromName.SelectorFDValue,"Selector FD Value");
		fullNameByTag.put(TagFromName.SelectorOLValue,"Selector OL Value");
		fullNameByTag.put(TagFromName.SelectorFLValue,"Selector FL Value");
		fullNameByTag.put(TagFromName.SelectorULValue,"Selector UL Value");
		fullNameByTag.put(TagFromName.SelectorUSValue,"Selector US Value");
		fullNameByTag.put(TagFromName.SelectorSLValue,"Selector SL Value");
		fullNameByTag.put(TagFromName.SelectorSSValue,"Selector SS Value");
		fullNameByTag.put(TagFromName.SelectorUIValue,"Selector UI Value");
		fullNameByTag.put(TagFromName.SelectorCodeSequenceValue,"Selector Code Sequence Value");
		fullNameByTag.put(TagFromName.NumberOfScreens,"Number of Screens");
		fullNameByTag.put(TagFromName.NominalScreenDefinitionSequence,"Nominal Screen Definition Sequence");
		fullNameByTag.put(TagFromName.NumberOfVerticalPixels,"Number of Vertical Pixels");
		fullNameByTag.put(TagFromName.NumberOfHorizontalPixels,"Number of Horizontal Pixels");
		fullNameByTag.put(TagFromName.DisplayEnvironmentSpatialPosition,"Display Environment Spatial Position");
		fullNameByTag.put(TagFromName.ScreenMinimumGrayscaleBitDepth,"Screen Minimum Grayscale Bit Depth");
		fullNameByTag.put(TagFromName.ScreenMinimumColorBitDepth,"Screen Minimum Color Bit Depth");
		fullNameByTag.put(TagFromName.ApplicationMaximumRepaintTime,"Application Maximum Repaint Time");
		fullNameByTag.put(TagFromName.DisplaySetsSequence,"Display Sets Sequence");
		fullNameByTag.put(TagFromName.DisplaySetNumber,"Display Set Number");
		fullNameByTag.put(TagFromName.DisplaySetLabel,"Display Set Label");
		fullNameByTag.put(TagFromName.DisplaySetPresentationGroup,"Display Set Presentation Group");
		fullNameByTag.put(TagFromName.DisplaySetPresentationGroupDescription,"Display Set Presentation Group Description");
		fullNameByTag.put(TagFromName.PartialDataDisplayHandling,"Partial Data Display Handling");
		fullNameByTag.put(TagFromName.SynchronizedScrollingSequence,"Synchronized Scrolling Sequence");
		fullNameByTag.put(TagFromName.DisplaySetScrollingGroup,"Display Set Scrolling Group");
		fullNameByTag.put(TagFromName.NavigationIndicatorSequence,"Navigation Indicator Sequence");
		fullNameByTag.put(TagFromName.NavigationDisplaySet,"Navigation Display Set");
		fullNameByTag.put(TagFromName.ReferenceDisplaySets,"Reference Display Sets");
		fullNameByTag.put(TagFromName.ImageBoxesSequence,"Image Boxes Sequence");
		fullNameByTag.put(TagFromName.ImageBoxNumber,"Image Box Number");
		fullNameByTag.put(TagFromName.ImageBoxLayoutType,"Image Box Layout Type");
		fullNameByTag.put(TagFromName.ImageBoxTileHorizontalDimension,"Image Box Tile Horizontal Dimension");
		fullNameByTag.put(TagFromName.ImageBoxTileVerticalDimension,"Image Box Tile Vertical Dimension");
		fullNameByTag.put(TagFromName.ImageBoxScrollDirection,"Image Box Scroll Direction");
		fullNameByTag.put(TagFromName.ImageBoxSmallScrollType,"Image Box Small Scroll Type");
		fullNameByTag.put(TagFromName.ImageBoxSmallScrollAmount,"Image Box Small Scroll Amount");
		fullNameByTag.put(TagFromName.ImageBoxLargeScrollType,"Image Box Large Scroll Type");
		fullNameByTag.put(TagFromName.ImageBoxLargeScrollAmount,"Image Box Large Scroll Amount");
		fullNameByTag.put(TagFromName.ImageBoxOverlapPriority,"Image Box Overlap Priority");
		fullNameByTag.put(TagFromName.CineRelativeToRealTime,"Cine Relative to Real-Time");
		fullNameByTag.put(TagFromName.FilterOperationsSequence,"Filter Operations Sequence");
		fullNameByTag.put(TagFromName.FilterByCategory,"Filter-by Category");
		fullNameByTag.put(TagFromName.FilterByAttributePresence,"Filter-by Attribute Presence");
		fullNameByTag.put(TagFromName.FilterByOperator,"Filter-by Operator");
		fullNameByTag.put(TagFromName.StructuredDisplayBackgroundCIELabValue,"Structured Display Background CIELab Value");
		fullNameByTag.put(TagFromName.EmptyImageBoxCIELabValue,"Empty Image Box CIELab Value");
		fullNameByTag.put(TagFromName.StructuredDisplayImageBoxSequence,"Structured Display Image Box Sequence");
		fullNameByTag.put(TagFromName.StructuredDisplayTextBoxSequence,"Structured Display Text Box Sequence");
		fullNameByTag.put(TagFromName.ReferencedFirstFrameSequence,"Referenced First Frame Sequence");
		fullNameByTag.put(TagFromName.ImageBoxSynchronizationSequence,"Image Box Synchronization Sequence");
		fullNameByTag.put(TagFromName.SynchronizedImageBoxList,"Synchronized Image Box List");
		fullNameByTag.put(TagFromName.TypeOfSynchronization,"Type of Synchronization");
		fullNameByTag.put(TagFromName.BlendingOperationType,"Blending Operation Type");
		fullNameByTag.put(TagFromName.ReformattingOperationType,"Reformatting Operation Type");
		fullNameByTag.put(TagFromName.ReformattingThickness,"Reformatting Thickness");
		fullNameByTag.put(TagFromName.ReformattingInterval,"Reformatting Interval");
		fullNameByTag.put(TagFromName.ReformattingOperationInitialViewDirection,"Reformatting Operation Initial View Direction");
		fullNameByTag.put(TagFromName.ThreeDRenderingType,"3D Rendering Type");
		fullNameByTag.put(TagFromName.SortingOperationsSequence,"Sorting Operations Sequence");
		fullNameByTag.put(TagFromName.SortByCategory,"Sort-by Category");
		fullNameByTag.put(TagFromName.SortingDirection,"Sorting Direction");
		fullNameByTag.put(TagFromName.DisplaySetPatientOrientation,"Display Set Patient Orientation");
		fullNameByTag.put(TagFromName.VOIType,"VOI Type");
		fullNameByTag.put(TagFromName.PseudoColorType,"Pseudo-Color Type");
		fullNameByTag.put(TagFromName.PseudoColorPaletteInstanceReferenceSequence,"Pseudo-Color Palette Instance Reference Sequence");
		fullNameByTag.put(TagFromName.ShowGrayscaleInverted,"Show Grayscale Inverted");
		fullNameByTag.put(TagFromName.ShowImageTrueSizeFlag,"Show Image True Size Flag");
		fullNameByTag.put(TagFromName.ShowGraphicAnnotationFlag,"Show Graphic Annotation Flag");
		fullNameByTag.put(TagFromName.ShowPatientDemographicsFlag,"Show Patient Demographics Flag");
		fullNameByTag.put(TagFromName.ShowAcquisitionTechniquesFlag,"Show Acquisition Techniques Flag");
		fullNameByTag.put(TagFromName.DisplaySetHorizontalJustification,"Display Set Horizontal Justification");
		fullNameByTag.put(TagFromName.DisplaySetVerticalJustification,"Display Set Vertical Justification");
		fullNameByTag.put(TagFromName.ContinuationStartMeterset,"Continuation Start Meterset");
		fullNameByTag.put(TagFromName.ContinuationEndMeterset,"Continuation End Meterset");
		fullNameByTag.put(TagFromName.ProcedureStepState,"Procedure Step State");
		fullNameByTag.put(TagFromName.ProcedureStepProgressInformationSequence,"Procedure Step Progress Information Sequence");
		fullNameByTag.put(TagFromName.ProcedureStepProgress,"Procedure Step Progress");
		fullNameByTag.put(TagFromName.ProcedureStepProgressDescription,"Procedure Step Progress Description");
		fullNameByTag.put(TagFromName.ProcedureStepProgressParametersSequence,"Procedure Step Progress Parameters Sequence");
		fullNameByTag.put(TagFromName.ProcedureStepCommunicationsURISequence,"Procedure Step Communications URI Sequence");
		fullNameByTag.put(TagFromName.ContactURI,"Contact URI");
		fullNameByTag.put(TagFromName.ContactDisplayName,"Contact Display Name");
		fullNameByTag.put(TagFromName.ProcedureStepDiscontinuationReasonCodeSequence,"Procedure Step Discontinuation Reason Code Sequence");
		fullNameByTag.put(TagFromName.BeamTaskSequence,"Beam Task Sequence");
		fullNameByTag.put(TagFromName.BeamTaskType,"Beam Task Type");
		fullNameByTag.put(TagFromName.BeamOrderIndexTrial,"Beam Order Index (Trial)");
		fullNameByTag.put(TagFromName.AutosequenceFlag,"Autosequence Flag");
		fullNameByTag.put(TagFromName.TableTopVerticalAdjustedPosition,"Table Top Vertical Adjusted Position");
		fullNameByTag.put(TagFromName.TableTopLongitudinalAdjustedPosition,"Table Top Longitudinal Adjusted Position");
		fullNameByTag.put(TagFromName.TableTopLateralAdjustedPosition,"Table Top Lateral Adjusted Position");
		fullNameByTag.put(TagFromName.PatientSupportAdjustedAngle,"Patient Support Adjusted Angle");
		fullNameByTag.put(TagFromName.TableTopEccentricAdjustedAngle,"Table Top Eccentric Adjusted Angle");
		fullNameByTag.put(TagFromName.TableTopPitchAdjustedAngle,"Table Top Pitch Adjusted Angle");
		fullNameByTag.put(TagFromName.TableTopRollAdjustedAngle,"Table Top Roll Adjusted Angle");
		fullNameByTag.put(TagFromName.DeliveryVerificationImageSequence,"Delivery Verification Image Sequence");
		fullNameByTag.put(TagFromName.VerificationImageTiming,"Verification Image Timing");
		fullNameByTag.put(TagFromName.DoubleExposureFlag,"Double Exposure Flag");
		fullNameByTag.put(TagFromName.DoubleExposureOrdering,"Double Exposure Ordering");
		fullNameByTag.put(TagFromName.DoubleExposureMetersetTrial,"Double Exposure Meterset (Trial)");
		fullNameByTag.put(TagFromName.DoubleExposureFieldDeltaTrial,"Double Exposure Field Delta (Trial)");
		fullNameByTag.put(TagFromName.RelatedReferenceRTImageSequence,"Related Reference RT Image Sequence");
		fullNameByTag.put(TagFromName.GeneralMachineVerificationSequence,"General Machine Verification Sequence");
		fullNameByTag.put(TagFromName.ConventionalMachineVerificationSequence,"Conventional Machine Verification Sequence");
		fullNameByTag.put(TagFromName.IonMachineVerificationSequence,"Ion Machine Verification Sequence");
		fullNameByTag.put(TagFromName.FailedAttributesSequence,"Failed Attributes Sequence");
		fullNameByTag.put(TagFromName.OverriddenAttributesSequence,"Overridden Attributes Sequence");
		fullNameByTag.put(TagFromName.ConventionalControlPointVerificationSequence,"Conventional Control Point Verification Sequence");
		fullNameByTag.put(TagFromName.IonControlPointVerificationSequence,"Ion Control Point Verification Sequence");
		fullNameByTag.put(TagFromName.AttributeOccurrenceSequence,"Attribute Occurrence Sequence");
		fullNameByTag.put(TagFromName.AttributeOccurrencePointer,"Attribute Occurrence Pointer");
		fullNameByTag.put(TagFromName.AttributeItemSelector,"Attribute Item Selector");
		fullNameByTag.put(TagFromName.AttributeOccurrencePrivateCreator,"Attribute Occurrence Private Creator");
		fullNameByTag.put(TagFromName.SelectorSequencePointerItems,"Selector Sequence Pointer Items");
		fullNameByTag.put(TagFromName.ScheduledProcedureStepPriority,"Scheduled Procedure Step Priority");
		fullNameByTag.put(TagFromName.WorklistLabel,"Worklist Label");
		fullNameByTag.put(TagFromName.ProcedureStepLabel,"Procedure Step Label");
		fullNameByTag.put(TagFromName.ScheduledProcessingParametersSequence,"Scheduled Processing Parameters Sequence");
		fullNameByTag.put(TagFromName.PerformedProcessingParametersSequence,"Performed Processing Parameters Sequence");
		fullNameByTag.put(TagFromName.UnifiedProcedureStepPerformedProcedureSequence,"Unified Procedure Step Performed Procedure Sequence");
		fullNameByTag.put(TagFromName.RelatedProcedureStepSequence,"Related Procedure Step Sequence");
		fullNameByTag.put(TagFromName.ProcedureStepRelationshipType,"Procedure Step Relationship Type");
		fullNameByTag.put(TagFromName.ReplacedProcedureStepSequence,"Replaced Procedure Step Sequence");
		fullNameByTag.put(TagFromName.DeletionLock,"Deletion Lock");
		fullNameByTag.put(TagFromName.ReceivingAE,"Receiving AE");
		fullNameByTag.put(TagFromName.RequestingAE,"Requesting AE");
		fullNameByTag.put(TagFromName.ReasonForCancellation,"Reason for Cancellation");
		fullNameByTag.put(TagFromName.SCPStatus,"SCP Status");
		fullNameByTag.put(TagFromName.SubscriptionListStatus,"Subscription List Status");
		fullNameByTag.put(TagFromName.UnifiedProcedureStepListStatus,"Unified Procedure Step List Status");
		fullNameByTag.put(TagFromName.BeamOrderIndex,"Beam Order Index");
		fullNameByTag.put(TagFromName.DoubleExposureMeterset,"Double Exposure Meterset");
		fullNameByTag.put(TagFromName.DoubleExposureFieldDelta,"Double Exposure Field Delta");
		fullNameByTag.put(TagFromName.BrachyTaskSequence,"Brachy Task Sequence");
		fullNameByTag.put(TagFromName.ContinuationStartTotalReferenceAirKerma,"Continuation Start Total Reference Air Kerma ");
		fullNameByTag.put(TagFromName.ContinuationEndTotalReferenceAirKerma,"Continuation End Total Reference Air Kerma ");
		fullNameByTag.put(TagFromName.ContinuationPulseNumber,"Continuation Pulse Number");
		fullNameByTag.put(TagFromName.ChannelDeliveryOrderSequence,"Channel Delivery Order Sequence");
		fullNameByTag.put(TagFromName.ReferencedChannelNumber,"Referenced Channel Number");
		fullNameByTag.put(TagFromName.StartCumulativeTimeWeight,"Start Cumulative Time Weight");
		fullNameByTag.put(TagFromName.EndCumulativeTimeWeight,"End Cumulative Time Weight");
		fullNameByTag.put(TagFromName.OmittedChannelSequence,"Omitted Channel Sequence");
		fullNameByTag.put(TagFromName.ReasonForChannelOmission,"Reason for Channel Omission");
		fullNameByTag.put(TagFromName.ReasonForChannelOmissionDescription,"Reason for Channel Omission Description");
		fullNameByTag.put(TagFromName.ChannelDeliveryOrderIndex,"Channel Delivery Order Index");
		fullNameByTag.put(TagFromName.ChannelDeliveryContinuationSequence,"Channel Delivery Continuation Sequence");
		fullNameByTag.put(TagFromName.OmittedApplicationSetupSequence,"Omitted Application Setup Sequence");
		fullNameByTag.put(TagFromName.ImplantAssemblyTemplateName,"Implant Assembly Template Name");
		fullNameByTag.put(TagFromName.ImplantAssemblyTemplateIssuer,"Implant Assembly Template Issuer");
		fullNameByTag.put(TagFromName.ImplantAssemblyTemplateVersion,"Implant Assembly Template Version");
		fullNameByTag.put(TagFromName.ReplacedImplantAssemblyTemplateSequence,"Replaced Implant Assembly Template Sequence ");
		fullNameByTag.put(TagFromName.ImplantAssemblyTemplateType,"Implant Assembly Template Type");
		fullNameByTag.put(TagFromName.OriginalImplantAssemblyTemplateSequence,"Original Implant Assembly Template Sequence ");
		fullNameByTag.put(TagFromName.DerivationImplantAssemblyTemplateSequence,"Derivation Implant Assembly Template Sequence ");
		fullNameByTag.put(TagFromName.ImplantAssemblyTemplateTargetAnatomySequence,"Implant Assembly Template Target Anatomy Sequence");
		fullNameByTag.put(TagFromName.ProcedureTypeCodeSequence,"Procedure Type Code Sequence");
		fullNameByTag.put(TagFromName.SurgicalTechnique,"Surgical Technique ");
		fullNameByTag.put(TagFromName.ComponentTypesSequence,"Component Types Sequence");
		fullNameByTag.put(TagFromName.ComponentTypeCodeSequence,"Component Type Code Sequence");
		fullNameByTag.put(TagFromName.ExclusiveComponentType,"Exclusive Component Type");
		fullNameByTag.put(TagFromName.MandatoryComponentType,"Mandatory Component Type");
		fullNameByTag.put(TagFromName.ComponentSequence,"Component Sequence");
		fullNameByTag.put(TagFromName.ComponentID,"Component ID");
		fullNameByTag.put(TagFromName.ComponentAssemblySequence,"Component Assembly Sequence");
		fullNameByTag.put(TagFromName.Component1ReferencedID,"Component 1 Referenced ID");
		fullNameByTag.put(TagFromName.Component1ReferencedMatingFeatureSetID,"Component 1 Referenced Mating Feature Set ID");
		fullNameByTag.put(TagFromName.Component1ReferencedMatingFeatureID,"Component 1 Referenced Mating Feature ID");
		fullNameByTag.put(TagFromName.Component2ReferencedID,"Component 2 Referenced ID");
		fullNameByTag.put(TagFromName.Component2ReferencedMatingFeatureSetID,"Component 2 Referenced Mating Feature Set ID");
		fullNameByTag.put(TagFromName.Component2ReferencedMatingFeatureID,"Component 2 Referenced Mating Feature ID ");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupName,"Implant Template Group Name");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupDescription,"Implant Template Group Description");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupIssuer,"Implant Template Group Issuer");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupVersion,"Implant Template Group Version");
		fullNameByTag.put(TagFromName.ReplacedImplantTemplateGroupSequence,"Replaced Implant Template Group Sequence ");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupTargetAnatomySequence,"Implant Template Group Target Anatomy Sequence");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupMembersSequence,"Implant Template Group Members Sequence");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupMemberID,"Implant Template Group Member ID");
		fullNameByTag.put(TagFromName.ThreeDImplantTemplateGroupMemberMatchingPoint,"3D Implant Template Group Member Matching Point");
		fullNameByTag.put(TagFromName.ThreeDImplantTemplateGroupMemberMatchingAxes,"3D Implant Template Group Member Matching Axes");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupMemberMatching2DCoordinatesSequence,"Implant Template Group Member Matching 2D Coordinates Sequence");
		fullNameByTag.put(TagFromName.TwoDImplantTemplateGroupMemberMatchingPoint,"2D Implant Template Group Member Matching Point ");
		fullNameByTag.put(TagFromName.TwoDImplantTemplateGroupMemberMatchingAxes,"2D Implant Template Group Member Matching Axes");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionSequence,"Implant Template Group Variation Dimension Sequence");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionName,"Implant Template Group Variation Dimension Name");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionRankSequence,"Implant Template Group Variation Dimension Rank Sequence");
		fullNameByTag.put(TagFromName.ReferencedImplantTemplateGroupMemberID,"Referenced Implant Template Group Member ID");
		fullNameByTag.put(TagFromName.ImplantTemplateGroupVariationDimensionRank,"Implant Template Group Variation Dimension Rank");
		fullNameByTag.put(TagFromName.SurfaceScanAcquisitionTypeCodeSequence,"Surface Scan Acquisition Type Code Sequence");
		fullNameByTag.put(TagFromName.SurfaceScanModeCodeSequence,"Surface Scan Mode Code Sequence");
		fullNameByTag.put(TagFromName.RegistrationMethodCodeSequence,"Registration Method Code Sequence");
		fullNameByTag.put(TagFromName.ShotDurationTime,"Shot Duration Time");
		fullNameByTag.put(TagFromName.ShotOffsetTime,"Shot Offset Time");
		fullNameByTag.put(TagFromName.SurfacePointPresentationValueData,"Surface Point Presentation Value Data");
		fullNameByTag.put(TagFromName.SurfacePointColorCIELabValueData,"Surface Point Color CIELab Value Data");
		fullNameByTag.put(TagFromName.UVMappingSequence,"UV Mapping Sequence");
		fullNameByTag.put(TagFromName.TextureLabel,"Texture Label");
		fullNameByTag.put(TagFromName.UValueData,"U Value Data");
		fullNameByTag.put(TagFromName.VValueData,"V Value Data");
		fullNameByTag.put(TagFromName.ReferencedTextureSequence,"Referenced Texture Sequence");
		fullNameByTag.put(TagFromName.ReferencedSurfaceDataSequence,"Referenced Surface Data Sequence");
		fullNameByTag.put(TagFromName.AssessmentSummary,"Assessment Summary");
		fullNameByTag.put(TagFromName.AssessmentSummaryDescription,"Assessment Summary Description");
		fullNameByTag.put(TagFromName.AssessedSOPInstanceSequence,"Assessed SOP Instance Sequence");
		fullNameByTag.put(TagFromName.ReferencedComparisonSOPInstanceSequence,"Referenced Comparison SOP Instance Sequence");
		fullNameByTag.put(TagFromName.NumberOfAssessmentObservations,"Number of Assessment Observations");
		fullNameByTag.put(TagFromName.AssessmentObservationsSequence,"Assessment Observations Sequence");
		fullNameByTag.put(TagFromName.ObservationSignificance,"Observation Significance");
		fullNameByTag.put(TagFromName.ObservationDescription,"Observation Description");
		fullNameByTag.put(TagFromName.StructuredContraintObservationSequence,"Structured Constraint Observation Sequence");
		fullNameByTag.put(TagFromName.AssessedAttributeValueSequence,"Assessed Attribute Value Sequence");
		fullNameByTag.put(TagFromName.AssessmentSetID,"Assessment Set ID");
		fullNameByTag.put(TagFromName.AssessmentRequesterSequence,"Assessment Requester Sequence");
		fullNameByTag.put(TagFromName.SelectorAttributeName,"Selector Attribute Name");
		fullNameByTag.put(TagFromName.SelectorAttributeKeyword,"Selector Attribute Keyword");
		fullNameByTag.put(TagFromName.AssessmentTypeCodeSequence,"Assessment Type Code Sequence");
		fullNameByTag.put(TagFromName.ObservationBasisCodeSequence,"Observation Basis Code Sequence");
		fullNameByTag.put(TagFromName.AssessmentLabel,"Assessment Label");
		fullNameByTag.put(TagFromName.ConstraintType,"Constraint Type");
		fullNameByTag.put(TagFromName.SpecificationSelectionGuidance,"Specification Selection Guidance");
		fullNameByTag.put(TagFromName.ConstraintValueSequence,"Constraint Value Sequence");
		fullNameByTag.put(TagFromName.RecommendedDefaultValueSequence,"Recommended Default Value Sequence");
		fullNameByTag.put(TagFromName.ConstraintViolationSignificance,"Constraint Violation Significance ");
		fullNameByTag.put(TagFromName.ConstraintViolationCondition,"Constraint Violation Condition");
		fullNameByTag.put(TagFromName.ModifiableConstraintFlag,"Modifiable Constraint Flag");
		fullNameByTag.put(TagFromName.StorageMediaFileSetID,"Storage Media File-set ID");
		fullNameByTag.put(TagFromName.StorageMediaFileSetUID,"Storage Media File-set UID");
		fullNameByTag.put(TagFromName.IconImageSequence,"Icon Image Sequence");
		fullNameByTag.put(TagFromName.TopicTitle,"Topic Title");
		fullNameByTag.put(TagFromName.TopicSubject,"Topic Subject");
		fullNameByTag.put(TagFromName.TopicAuthor,"Topic Author");
		fullNameByTag.put(TagFromName.TopicKeywords,"Topic Keywords");
		fullNameByTag.put(TagFromName.SOPInstanceStatus,"SOP Instance Status");
		fullNameByTag.put(TagFromName.SOPAuthorizationDateTime,"SOP Authorization DateTime");
		fullNameByTag.put(TagFromName.SOPAuthorizationComment,"SOP Authorization Comment");
		fullNameByTag.put(TagFromName.AuthorizationEquipmentCertificationNumber,"Authorization Equipment Certification Number");
		fullNameByTag.put(TagFromName.MACIDNumber,"MAC ID Number");
		fullNameByTag.put(TagFromName.MACCalculationTransferSyntaxUID,"MAC Calculation Transfer Syntax UID");
		fullNameByTag.put(TagFromName.MACAlgorithm,"MAC Algorithm");
		fullNameByTag.put(TagFromName.DataElementsSigned,"Data Elements Signed");
		fullNameByTag.put(TagFromName.DigitalSignatureUID,"Digital Signature UID");
		fullNameByTag.put(TagFromName.DigitalSignatureDateTime,"Digital Signature DateTime");
		fullNameByTag.put(TagFromName.CertificateType,"Certificate Type");
		fullNameByTag.put(TagFromName.CertificateOfSigner,"Certificate of Signer");
		fullNameByTag.put(TagFromName.Signature,"Signature");
		fullNameByTag.put(TagFromName.CertifiedTimestampType,"Certified Timestamp Type");
		fullNameByTag.put(TagFromName.CertifiedTimestamp,"Certified Timestamp");
		fullNameByTag.put(TagFromName.DigitalSignaturePurposeCodeSequence,"Digital Signature Purpose Code Sequence");
		fullNameByTag.put(TagFromName.ReferencedDigitalSignatureSequence,"Referenced Digital Signature Sequence");
		fullNameByTag.put(TagFromName.ReferencedSOPInstanceMACSequence,"Referenced SOP Instance MAC Sequence");
		fullNameByTag.put(TagFromName.MAC,"MAC");
		fullNameByTag.put(TagFromName.EncryptedAttributesSequence,"Encrypted Attributes Sequence");
		fullNameByTag.put(TagFromName.EncryptedContentTransferSyntaxUID,"Encrypted Content Transfer Syntax UID");
		fullNameByTag.put(TagFromName.EncryptedContent,"Encrypted Content");
		fullNameByTag.put(TagFromName.ModifiedAttributesSequence,"Modified Attributes Sequence");
		fullNameByTag.put(TagFromName.OriginalAttributesSequence,"Original Attributes Sequence");
		fullNameByTag.put(TagFromName.AttributeModificationDateTime,"Attribute Modification DateTime");
		fullNameByTag.put(TagFromName.ModifyingSystem,"Modifying System");
		fullNameByTag.put(TagFromName.SourceOfPreviousValues,"Source of Previous Values");
		fullNameByTag.put(TagFromName.ReasonForTheAttributeModification,"Reason for the Attribute Modification");
		fullNameByTag.put(TagFromName.InstanceOriginStatus,"Instance Origin Status");
		fullNameByTag.put(TagFromName.ZonalMap,"Zonal Map");
		fullNameByTag.put(TagFromName.NumberOfCopies,"Number of Copies");
		fullNameByTag.put(TagFromName.PrinterConfigurationSequence,"Printer Configuration Sequence");
		fullNameByTag.put(TagFromName.PrintPriority,"Print Priority");
		fullNameByTag.put(TagFromName.MediumType,"Medium Type");
		fullNameByTag.put(TagFromName.FilmDestination,"Film Destination");
		fullNameByTag.put(TagFromName.FilmSessionLabel,"Film Session Label");
		fullNameByTag.put(TagFromName.MemoryAllocation,"Memory Allocation");
		fullNameByTag.put(TagFromName.MaximumMemoryAllocation,"Maximum Memory Allocation");
		fullNameByTag.put(TagFromName.ColorImagePrintingFlag,"Color Image Printing Flag");
		fullNameByTag.put(TagFromName.CollationFlag,"Collation Flag");
		fullNameByTag.put(TagFromName.AnnotationFlag,"Annotation Flag");
		fullNameByTag.put(TagFromName.ImageOverlayFlag,"Image Overlay Flag");
		fullNameByTag.put(TagFromName.PresentationLUTFlag,"Presentation LUT Flag");
		fullNameByTag.put(TagFromName.ImageBoxPresentationLUTFlag,"Image Box Presentation LUT Flag");
		fullNameByTag.put(TagFromName.MemoryBitDepth,"Memory Bit Depth");
		fullNameByTag.put(TagFromName.PrintingBitDepth,"Printing Bit Depth");
		fullNameByTag.put(TagFromName.MediaInstalledSequence,"Media Installed Sequence");
		fullNameByTag.put(TagFromName.OtherMediaAvailableSequence,"Other Media Available Sequence");
		fullNameByTag.put(TagFromName.SupportedImageDisplayFormatsSequence,"Supported Image Display Formats Sequence");
		fullNameByTag.put(TagFromName.ReferencedFilmBoxSequence,"Referenced Film Box Sequence");
		fullNameByTag.put(TagFromName.ReferencedStoredPrintSequence,"Referenced Stored Print Sequence");
		fullNameByTag.put(TagFromName.ImageDisplayFormat,"Image Display Format");
		fullNameByTag.put(TagFromName.AnnotationDisplayFormatID,"Annotation Display Format ID");
		fullNameByTag.put(TagFromName.FilmOrientation,"Film Orientation");
		fullNameByTag.put(TagFromName.FilmSizeID,"Film Size ID");
		fullNameByTag.put(TagFromName.PrinterResolutionID,"Printer Resolution ID");
		fullNameByTag.put(TagFromName.DefaultPrinterResolutionID,"Default Printer Resolution ID");
		fullNameByTag.put(TagFromName.MagnificationType,"Magnification Type");
		fullNameByTag.put(TagFromName.SmoothingType,"Smoothing Type");
		fullNameByTag.put(TagFromName.DefaultMagnificationType,"Default Magnification Type");
		fullNameByTag.put(TagFromName.OtherMagnificationTypesAvailable,"Other Magnification Types Available");
		fullNameByTag.put(TagFromName.DefaultSmoothingType,"Default Smoothing Type");
		fullNameByTag.put(TagFromName.OtherSmoothingTypesAvailable,"Other Smoothing Types Available");
		fullNameByTag.put(TagFromName.BorderDensity,"Border Density");
		fullNameByTag.put(TagFromName.EmptyImageDensity,"Empty Image Density");
		fullNameByTag.put(TagFromName.MinDensity,"Min Density");
		fullNameByTag.put(TagFromName.MaxDensity,"Max Density");
		fullNameByTag.put(TagFromName.Trim,"Trim");
		fullNameByTag.put(TagFromName.ConfigurationInformation,"Configuration Information");
		fullNameByTag.put(TagFromName.ConfigurationInformationDescription,"Configuration Information Description");
		fullNameByTag.put(TagFromName.MaximumCollatedFilms,"Maximum Collated Films");
		fullNameByTag.put(TagFromName.Illumination,"Illumination");
		fullNameByTag.put(TagFromName.ReflectedAmbientLight,"Reflected Ambient Light");
		fullNameByTag.put(TagFromName.PrinterPixelSpacing,"Printer Pixel Spacing");
		fullNameByTag.put(TagFromName.ReferencedFilmSessionSequence,"Referenced Film Session Sequence");
		fullNameByTag.put(TagFromName.ReferencedImageBoxSequence,"Referenced Image Box Sequence");
		fullNameByTag.put(TagFromName.ReferencedBasicAnnotationBoxSequence,"Referenced Basic Annotation Box Sequence");
		fullNameByTag.put(TagFromName.ImageBoxPosition,"Image Box Position");
		fullNameByTag.put(TagFromName.Polarity,"Polarity");
		fullNameByTag.put(TagFromName.RequestedImageSize,"Requested Image Size");
		fullNameByTag.put(TagFromName.RequestedDecimateCropBehavior,"Requested Decimate/Crop Behavior");
		fullNameByTag.put(TagFromName.RequestedResolutionID,"Requested Resolution ID");
		fullNameByTag.put(TagFromName.RequestedImageSizeFlag,"Requested Image Size Flag");
		fullNameByTag.put(TagFromName.DecimateCropResult,"Decimate/Crop Result");
		fullNameByTag.put(TagFromName.BasicGrayscaleImageSequence,"Basic Grayscale Image Sequence");
		fullNameByTag.put(TagFromName.BasicColorImageSequence,"Basic Color Image Sequence");
		fullNameByTag.put(TagFromName.ReferencedImageOverlayBoxSequence,"Referenced Image Overlay Box Sequence");
		fullNameByTag.put(TagFromName.ReferencedVOILUTBoxSequence,"Referenced VOI LUT Box Sequence");
		fullNameByTag.put(TagFromName.AnnotationPosition,"Annotation Position");
		fullNameByTag.put(TagFromName.TextString,"Text String");
		fullNameByTag.put(TagFromName.ReferencedOverlayPlaneSequence,"Referenced Overlay Plane Sequence");
		fullNameByTag.put(TagFromName.ReferencedOverlayPlaneGroups,"Referenced Overlay Plane Groups");
		fullNameByTag.put(TagFromName.OverlayPixelDataSequence,"Overlay Pixel Data Sequence");
		fullNameByTag.put(TagFromName.OverlayMagnificationType,"Overlay Magnification Type");
		fullNameByTag.put(TagFromName.OverlaySmoothingType,"Overlay Smoothing Type");
		fullNameByTag.put(TagFromName.OverlayOrImageMagnification,"Overlay or Image Magnification");
		fullNameByTag.put(TagFromName.MagnifyToNumberOfColumns,"Magnify to Number of Columns");
		fullNameByTag.put(TagFromName.OverlayForegroundDensity,"Overlay Foreground Density");
		fullNameByTag.put(TagFromName.OverlayBackgroundDensity,"Overlay Background Density");
		fullNameByTag.put(TagFromName.OverlayMode,"Overlay Mode");
		fullNameByTag.put(TagFromName.ThresholdDensity,"Threshold Density");
		fullNameByTag.put(TagFromName.ReferencedImageBoxSequenceRetired,"Referenced Image Box Sequence (Retired)");
		fullNameByTag.put(TagFromName.PresentationLUTSequence,"Presentation LUT Sequence");
		fullNameByTag.put(TagFromName.PresentationLUTShape,"Presentation LUT Shape");
		fullNameByTag.put(TagFromName.ReferencedPresentationLUTSequence,"Referenced Presentation LUT Sequence");
		fullNameByTag.put(TagFromName.PrintJobID,"Print Job ID");
		fullNameByTag.put(TagFromName.ExecutionStatus,"Execution Status");
		fullNameByTag.put(TagFromName.ExecutionStatusInfo,"Execution Status Info");
		fullNameByTag.put(TagFromName.CreationDate,"Creation Date");
		fullNameByTag.put(TagFromName.CreationTime,"Creation Time");
		fullNameByTag.put(TagFromName.Originator,"Originator");
		fullNameByTag.put(TagFromName.DestinationAE,"Destination AE");
		fullNameByTag.put(TagFromName.OwnerID,"OwnerID");
		fullNameByTag.put(TagFromName.NumberOfFilms,"Number of Films");
		fullNameByTag.put(TagFromName.ReferencedPrintJobSequencePullStoredPrint,"Referenced Print Job Sequence (Pull Stored Print)");
		fullNameByTag.put(TagFromName.PrinterStatus,"Printer Status");
		fullNameByTag.put(TagFromName.PrinterStatusInfo,"Printer Status Info");
		fullNameByTag.put(TagFromName.PrinterName,"Printer Name");
		fullNameByTag.put(TagFromName.PrintQueueID,"Print Queue ID");
		fullNameByTag.put(TagFromName.QueueStatus,"Queue Status");
		fullNameByTag.put(TagFromName.PrintJobDescriptionSequence,"Print Job Description Sequence");
		fullNameByTag.put(TagFromName.ReferencedPrintJobSequence,"Referenced Print Job Sequence");
		fullNameByTag.put(TagFromName.PrintManagementCapabilitiesSequence,"Print Management Capabilities Sequence");
		fullNameByTag.put(TagFromName.PrinterCharacteristicsSequence,"Printer Characteristics Sequence");
		fullNameByTag.put(TagFromName.FilmBoxContentSequence,"Film Box Content Sequence");
		fullNameByTag.put(TagFromName.ImageBoxContentSequence,"Image Box Content Sequence");
		fullNameByTag.put(TagFromName.AnnotationContentSequence,"Annotation Content Sequence");
		fullNameByTag.put(TagFromName.ImageOverlayBoxContentSequence,"Image Overlay Box Content Sequence");
		fullNameByTag.put(TagFromName.PresentationLUTContentSequence,"Presentation LUT Content Sequence");
		fullNameByTag.put(TagFromName.ProposedStudySequence,"Proposed Study Sequence");
		fullNameByTag.put(TagFromName.OriginalImageSequence,"Original Image Sequence");
		fullNameByTag.put(TagFromName.LabelUsingInformationExtractedFromInstances,"Label Using Information Extracted From Instances");
		fullNameByTag.put(TagFromName.LabelText,"Label Text");
		fullNameByTag.put(TagFromName.LabelStyleSelection,"Label Style Selection");
		fullNameByTag.put(TagFromName.MediaDisposition,"Media Disposition");
		fullNameByTag.put(TagFromName.BarcodeValue,"Barcode Value");
		fullNameByTag.put(TagFromName.BarcodeSymbology,"Barcode Symbology");
		fullNameByTag.put(TagFromName.AllowMediaSplitting,"Allow Media Splitting");
		fullNameByTag.put(TagFromName.IncludeNonDICOMObjects,"Include Non-DICOM Objects");
		fullNameByTag.put(TagFromName.IncludeDisplayApplication,"Include Display Application");
		fullNameByTag.put(TagFromName.PreserveCompositeInstancesAfterMediaCreation,"Preserve Composite Instances After Media Creation");
		fullNameByTag.put(TagFromName.TotalNumberOfPiecesOfMediaCreated,"Total Number of Pieces of Media Created");
		fullNameByTag.put(TagFromName.RequestedMediaApplicationProfile,"Requested Media Application Profile");
		fullNameByTag.put(TagFromName.ReferencedStorageMediaSequence,"Referenced Storage Media Sequence");
		fullNameByTag.put(TagFromName.FailureAttributes,"Failure Attributes");
		fullNameByTag.put(TagFromName.AllowLossyCompression,"Allow Lossy Compression");
		fullNameByTag.put(TagFromName.RequestPriority,"Request Priority");
		fullNameByTag.put(TagFromName.RTImageLabel,"RT Image Label");
		fullNameByTag.put(TagFromName.RTImageName,"RT Image Name");
		fullNameByTag.put(TagFromName.RTImageDescription,"RT Image Description");
		fullNameByTag.put(TagFromName.ReportedValuesOrigin,"Reported Values Origin");
		fullNameByTag.put(TagFromName.RTImagePlane,"RT Image Plane");
		fullNameByTag.put(TagFromName.XRayImageReceptorTranslation,"X-Ray Image Receptor Translation");
		fullNameByTag.put(TagFromName.XRayImageReceptorAngle,"X-Ray Image Receptor Angle");
		fullNameByTag.put(TagFromName.RTImageOrientation,"RTImageOrientation");
		fullNameByTag.put(TagFromName.ImagePlanePixelSpacing,"Image Plane Pixel Spacing");
		fullNameByTag.put(TagFromName.RTImagePosition,"RT Image Position");
		fullNameByTag.put(TagFromName.RadiationMachineName,"Radiation Machine Name");
		fullNameByTag.put(TagFromName.RadiationMachineSAD,"Radiation Machine SAD");
		fullNameByTag.put(TagFromName.RadiationMachineSSD,"Radiation Machine SSD");
		fullNameByTag.put(TagFromName.RTImageSID,"RT Image SID");
		fullNameByTag.put(TagFromName.SourceToReferenceObjectDistance,"Source to Reference Object Distance");
		fullNameByTag.put(TagFromName.FractionNumber,"Fraction Number");
		fullNameByTag.put(TagFromName.ExposureSequence,"Exposure Sequence");
		fullNameByTag.put(TagFromName.MetersetExposure,"Meterset Exposure");
		fullNameByTag.put(TagFromName.DiaphragmPosition,"Diaphragm Position");
		fullNameByTag.put(TagFromName.FluenceMapSequence,"Fluence Map Sequence");
		fullNameByTag.put(TagFromName.FluenceDataSource,"Fluence Data Source");
		fullNameByTag.put(TagFromName.FluenceDataScale,"Fluence Data Scale");
		fullNameByTag.put(TagFromName.PrimaryFluenceModeSequence,"Primary Fluence Mode Sequence");
		fullNameByTag.put(TagFromName.FluenceMode,"Fluence Mode");
		fullNameByTag.put(TagFromName.FluenceModeID,"Fluence Mode ID");
		fullNameByTag.put(TagFromName.DVHType,"DVH Type");
		fullNameByTag.put(TagFromName.DoseUnits,"Dose Units");
		fullNameByTag.put(TagFromName.DoseType,"Dose Type");
		fullNameByTag.put(TagFromName.SpatialTransformOfDose,"Spatial Transform of Dose");
		fullNameByTag.put(TagFromName.DoseComment,"Dose Comment");
		fullNameByTag.put(TagFromName.NormalizationPoint,"Normalization Point");
		fullNameByTag.put(TagFromName.DoseSummationType,"Dose Summation Type");
		fullNameByTag.put(TagFromName.GridFrameOffsetVector,"GridFrame Offset Vector");
		fullNameByTag.put(TagFromName.DoseGridScaling,"Dose Grid Scaling");
		fullNameByTag.put(TagFromName.RTDoseROISequence,"RT Dose ROI Sequence");
		fullNameByTag.put(TagFromName.DoseValue,"Dose Value");
		fullNameByTag.put(TagFromName.TissueHeterogeneityCorrection,"Tissue Heterogeneity Correction");
		fullNameByTag.put(TagFromName.DVHNormalizationPoint,"DVH Normalization Point");
		fullNameByTag.put(TagFromName.DVHNormalizationDoseValue,"DVH Normalization Dose Value");
		fullNameByTag.put(TagFromName.DVHSequence,"DVH Sequence");
		fullNameByTag.put(TagFromName.DVHDoseScaling,"DVH Dose Scaling");
		fullNameByTag.put(TagFromName.DVHVolumeUnits,"DVH Volume Units");
		fullNameByTag.put(TagFromName.DVHNumberOfBins,"DVH Number of Bins");
		fullNameByTag.put(TagFromName.DVHData,"DVH Data");
		fullNameByTag.put(TagFromName.DVHReferencedROISequence,"DVH Referenced ROI Sequence");
		fullNameByTag.put(TagFromName.DVHROIContributionType,"DVH ROI Contribution Type");
		fullNameByTag.put(TagFromName.DVHMinimumDose,"DVH Minimum Dose");
		fullNameByTag.put(TagFromName.DVHMaximumDose,"DVH Maximum Dose");
		fullNameByTag.put(TagFromName.DVHMeanDose,"DVH Mean Dose");
		fullNameByTag.put(TagFromName.StructureSetLabel,"Structure Set Label");
		fullNameByTag.put(TagFromName.StructureSetName,"Structure Set Name");
		fullNameByTag.put(TagFromName.StructureSetDescription,"Structure Set Description");
		fullNameByTag.put(TagFromName.StructureSetDate,"Structure Set Date");
		fullNameByTag.put(TagFromName.StructureSetTime,"Structure Set Time");
		fullNameByTag.put(TagFromName.ReferencedFrameOfReferenceSequence,"Referenced Frame of Reference Sequence");
		fullNameByTag.put(TagFromName.RTReferencedStudySequence,"RT Referenced Study Sequence");
		fullNameByTag.put(TagFromName.RTReferencedSeriesSequence,"RT Referenced Series Sequence");
		fullNameByTag.put(TagFromName.ContourImageSequence,"Contour Image Sequence");
		fullNameByTag.put(TagFromName.PredecessorStructureSetSequence,"Predecessor Structure Set Sequence");
		fullNameByTag.put(TagFromName.StructureSetROISequence,"Structure Set ROI Sequence");
		fullNameByTag.put(TagFromName.ROINumber,"ROI Number");
		fullNameByTag.put(TagFromName.ReferencedFrameOfReferenceUID,"Referenced Frame of Reference UID");
		fullNameByTag.put(TagFromName.ROIName,"ROI Name");
		fullNameByTag.put(TagFromName.ROIDescription,"ROI Description");
		fullNameByTag.put(TagFromName.ROIDisplayColor,"ROI Display Color");
		fullNameByTag.put(TagFromName.ROIVolume,"ROI Volume");
		fullNameByTag.put(TagFromName.RTRelatedROISequence,"RT Related ROI Sequence");
		fullNameByTag.put(TagFromName.RTROIRelationship,"RT ROI Relationship");
		fullNameByTag.put(TagFromName.ROIGenerationAlgorithm,"ROI Generation Algorithm");
		fullNameByTag.put(TagFromName.ROIGenerationDescription,"ROI Generation Description");
		fullNameByTag.put(TagFromName.ROIContourSequence,"ROI Contour Sequence");
		fullNameByTag.put(TagFromName.ContourSequence,"Contour Sequence");
		fullNameByTag.put(TagFromName.ContourGeometricType,"Contour Geometric Type");
		fullNameByTag.put(TagFromName.ContourSlabThickness,"Contour SlabT hickness");
		fullNameByTag.put(TagFromName.ContourOffsetVector,"Contour Offset Vector");
		fullNameByTag.put(TagFromName.NumberOfContourPoints,"Number of Contour Points");
		fullNameByTag.put(TagFromName.ContourNumber,"Contour Number");
		fullNameByTag.put(TagFromName.AttachedContours,"Attached Contours");
		fullNameByTag.put(TagFromName.ContourData,"Contour Data");
		fullNameByTag.put(TagFromName.RTROIObservationsSequence,"RT ROI Observations Sequence");
		fullNameByTag.put(TagFromName.ObservationNumber,"Observation Number");
		fullNameByTag.put(TagFromName.ReferencedROINumber,"Referenced ROI Number");
		fullNameByTag.put(TagFromName.ROIObservationLabel,"ROI Observation Label");
		fullNameByTag.put(TagFromName.RTROIIdentificationCodeSequence,"RT ROI Identification Code Sequence");
		fullNameByTag.put(TagFromName.ROIObservationDescription,"ROI Observation Description");
		fullNameByTag.put(TagFromName.RelatedRTROIObservationsSequence,"Related RT ROI Observations Sequence");
		fullNameByTag.put(TagFromName.RTROIInterpretedType,"RT ROI Interpreted Type");
		fullNameByTag.put(TagFromName.ROIInterpreter,"ROI Interpreter");
		fullNameByTag.put(TagFromName.ROIPhysicalPropertiesSequence,"ROI Physical Properties Sequence");
		fullNameByTag.put(TagFromName.ROIPhysicalProperty,"ROI Physical Property");
		fullNameByTag.put(TagFromName.ROIPhysicalPropertyValue,"ROI Physical Property Value");
		fullNameByTag.put(TagFromName.ROIElementalCompositionSequence,"ROI Elemental Composition Sequence");
		fullNameByTag.put(TagFromName.ROIElementalCompositionAtomicNumber,"ROI Elemental Composition Atomic Number");
		fullNameByTag.put(TagFromName.ROIElementalCompositionAtomicMassFraction,"ROI Elemental Composition Atomic Mass Fraction");
		fullNameByTag.put(TagFromName.AdditionalRTROIClassificationCodeSequence,"Additional RT ROI Classification Code Sequence");
		fullNameByTag.put(TagFromName.FrameOfReferenceRelationshipSequence,"Frame of Reference Relationship Sequence");
		fullNameByTag.put(TagFromName.RelatedFrameOfReferenceUID,"Related Frame of Reference UID");
		fullNameByTag.put(TagFromName.FrameOfReferenceTransformationType,"Frame of Reference Transformation Type");
		fullNameByTag.put(TagFromName.FrameOfReferenceTransformationMatrix,"Frame of Reference Transformation Matrix");
		fullNameByTag.put(TagFromName.FrameOfReferenceTransformationComment,"Frame of Reference Transformation Comment");
		fullNameByTag.put(TagFromName.MeasuredDoseReferenceSequence,"Measured Dose Reference Sequence");
		fullNameByTag.put(TagFromName.MeasuredDoseDescription,"Measured Dose Description");
		fullNameByTag.put(TagFromName.MeasuredDoseType,"Measured Dose Type");
		fullNameByTag.put(TagFromName.MeasuredDoseValue,"Measured Dose Value");
		fullNameByTag.put(TagFromName.TreatmentSessionBeamSequence,"Treatment Session Beam Sequence");
		fullNameByTag.put(TagFromName.TreatmentSessionIonBeamSequence,"Treatment Session Ion Beam Sequence");
		fullNameByTag.put(TagFromName.CurrentFractionNumber,"Current Fraction  Number");
		fullNameByTag.put(TagFromName.TreatmentControlPointDate,"Treatment Control Point Date");
		fullNameByTag.put(TagFromName.TreatmentControlPointTime,"Treatment Control Point Time");
		fullNameByTag.put(TagFromName.TreatmentTerminationStatus,"Treatment Termination Status");
		fullNameByTag.put(TagFromName.TreatmentTerminationCode,"Treatment Termination Code");
		fullNameByTag.put(TagFromName.TreatmentVerificationStatus,"Treatment Verification Status");
		fullNameByTag.put(TagFromName.ReferencedTreatmentRecordSequence,"Referenced Treatment Record Sequence");
		fullNameByTag.put(TagFromName.SpecifiedPrimaryMeterset,"Specified Primary Meterset");
		fullNameByTag.put(TagFromName.SpecifiedSecondaryMeterset,"Specified Secondary Meterset");
		fullNameByTag.put(TagFromName.DeliveredPrimaryMeterset,"Delivered Primary Meterset");
		fullNameByTag.put(TagFromName.DeliveredSecondaryMeterset,"Delivered Secondary Meterset");
		fullNameByTag.put(TagFromName.SpecifiedTreatmentTime,"Specified Treatment  Time");
		fullNameByTag.put(TagFromName.DeliveredTreatmentTime,"Delivered Treatment Time");
		fullNameByTag.put(TagFromName.ControlPointDeliverySequence,"Control Point Delivery Sequence");
		fullNameByTag.put(TagFromName.IonControlPointDeliverySequence,"Ion Control Point Delivery Sequence");
		fullNameByTag.put(TagFromName.SpecifiedMeterset,"Specified Meterset");
		fullNameByTag.put(TagFromName.DeliveredMeterset,"Delivered Meterset");
		fullNameByTag.put(TagFromName.MetersetRateSet,"Meterset Rate Set");
		fullNameByTag.put(TagFromName.MetersetRateDelivered,"Meterset Rate Delivered");
		fullNameByTag.put(TagFromName.ScanSpotMetersetsDelivered,"Scan Spot Metersets Delivered");
		fullNameByTag.put(TagFromName.DoseRateDelivered,"Dose Rate Delivered");
		fullNameByTag.put(TagFromName.TreatmentSummaryCalculatedDoseReferenceSequence,"Treatment Summary Calculated Dose Reference Sequence");
		fullNameByTag.put(TagFromName.CumulativeDoseToDoseReference,"Cumulative Dose to Dose Reference");
		fullNameByTag.put(TagFromName.FirstTreatmentDate,"First Treatment Date");
		fullNameByTag.put(TagFromName.MostRecentTreatmentDate,"Most Recent Treatment Date");
		fullNameByTag.put(TagFromName.NumberOfFractionsDelivered,"Number of Fractions Delivered");
		fullNameByTag.put(TagFromName.OverrideSequence,"Override Sequence");
		fullNameByTag.put(TagFromName.ParameterSequencePointer,"Parameter Sequence Pointer");
		fullNameByTag.put(TagFromName.OverrideParameterPointer,"Override Parameter Pointer");
		fullNameByTag.put(TagFromName.ParameterItemIndex,"Parameter Item Index");
		fullNameByTag.put(TagFromName.MeasuredDoseReferenceNumber,"Measured Dose Reference Number");
		fullNameByTag.put(TagFromName.ParameterPointer,"Parameter Pointer");
		fullNameByTag.put(TagFromName.OverrideReason,"Override Reason");
		fullNameByTag.put(TagFromName.ParameterValueNumber,"Parameter Value Number");
		fullNameByTag.put(TagFromName.CorrectedParameterSequence,"Corrected Parameter Sequence");
		fullNameByTag.put(TagFromName.CorrectionValue,"Correction Value");
		fullNameByTag.put(TagFromName.CalculatedDoseReferenceSequence,"Calculated Dose Reference Sequence");
		fullNameByTag.put(TagFromName.CalculatedDoseReferenceNumber,"Calculated Dose Reference Number");
		fullNameByTag.put(TagFromName.CalculatedDoseReferenceDescription,"Calculated Dose Reference Description");
		fullNameByTag.put(TagFromName.CalculatedDoseReferenceDoseValue,"Calculated Dose Reference Dose Value");
		fullNameByTag.put(TagFromName.StartMeterset,"Start Meterset");
		fullNameByTag.put(TagFromName.EndMeterset,"End Meterset");
		fullNameByTag.put(TagFromName.ReferencedMeasuredDoseReferenceSequence,"Referenced Measured Dose Reference Sequence");
		fullNameByTag.put(TagFromName.ReferencedMeasuredDoseReferenceNumber,"Referenced Measured Dose Reference Number");
		fullNameByTag.put(TagFromName.ReferencedCalculatedDoseReferenceSequence,"Referenced Calculated Dose Reference Sequence");
		fullNameByTag.put(TagFromName.ReferencedCalculatedDoseReferenceNumber,"Referenced Calculated Dose Reference Number");
		fullNameByTag.put(TagFromName.BeamLimitingDeviceLeafPairsSequence,"Beam Limiting Device Leaf Pairs Sequence");
		fullNameByTag.put(TagFromName.RecordedWedgeSequence,"Recorded Wedge Sequence");
		fullNameByTag.put(TagFromName.RecordedCompensatorSequence,"Recorded Compensator Sequence");
		fullNameByTag.put(TagFromName.RecordedBlockSequence,"Recorded Block Sequence");
		fullNameByTag.put(TagFromName.TreatmentSummaryMeasuredDoseReferenceSequence,"Treatment Summary Measured Dose Reference Sequence ");
		fullNameByTag.put(TagFromName.RecordedSnoutSequence,"Recorded Snout Sequence");
		fullNameByTag.put(TagFromName.RecordedRangeShifterSequence,"Recorded Range Shifter Sequence");
		fullNameByTag.put(TagFromName.RecordedLateralSpreadingDeviceSequence,"Recorded Lateral Spreading Device Sequence");
		fullNameByTag.put(TagFromName.RecordedRangeModulatorSequence,"Recorded Range Modulator Sequence");
		fullNameByTag.put(TagFromName.RecordedSourceSequence,"Recorded Source Sequence");
		fullNameByTag.put(TagFromName.SourceSerialNumber,"Source Serial Number");
		fullNameByTag.put(TagFromName.TreatmentSessionApplicationSetupSequence,"Treatment Session Application Setup Sequence");
		fullNameByTag.put(TagFromName.ApplicationSetupCheck,"Application Setup  Check");
		fullNameByTag.put(TagFromName.RecordedBrachyAccessoryDeviceSequence,"Recorded Brachy Accessory Device Sequence");
		fullNameByTag.put(TagFromName.ReferencedBrachyAccessoryDeviceNumber,"Referenced Brachy Accessory Device Number");
		fullNameByTag.put(TagFromName.RecordedChannelSequence,"Recorded Channel Sequence");
		fullNameByTag.put(TagFromName.SpecifiedChannelTotalTime,"Specified Channel Total Time");
		fullNameByTag.put(TagFromName.DeliveredChannelTotalTime,"Delivered Channel Total Time");
		fullNameByTag.put(TagFromName.SpecifiedNumberOfPulses,"Specified Number of Pulses");
		fullNameByTag.put(TagFromName.DeliveredNumberOfPulses,"Delivered Number of Pulses");
		fullNameByTag.put(TagFromName.SpecifiedPulseRepetitionInterval,"Specified Pulse Repetition Interval");
		fullNameByTag.put(TagFromName.DeliveredPulseRepetitionInterval,"Delivered Pulse Repetition Interval");
		fullNameByTag.put(TagFromName.RecordedSourceApplicatorSequence,"Recorded Source Applicator Sequence");
		fullNameByTag.put(TagFromName.ReferencedSourceApplicatorNumber,"Referenced Source Applicator Number");
		fullNameByTag.put(TagFromName.RecordedChannelShieldSequence,"Recorded Channel Shield Sequence");
		fullNameByTag.put(TagFromName.ReferencedChannelShieldNumber,"Referenced Channel Shield Number");
		fullNameByTag.put(TagFromName.BrachyControlPointDeliveredSequence,"Brachy Control Point Delivered Sequence");
		fullNameByTag.put(TagFromName.SafePositionExitDate,"Safe Position Exit Date");
		fullNameByTag.put(TagFromName.SafePositionExitTime,"Safe Position Exit Time");
		fullNameByTag.put(TagFromName.SafePositionReturnDate,"Safe Position Return  Date");
		fullNameByTag.put(TagFromName.SafePositionReturnTime,"Safe Position Return Time");
		fullNameByTag.put(TagFromName.PulseSpecificBrachyControlPointDeliveredSequence,"Pulse Specific Brachy Control Point Delivered Sequence");
		fullNameByTag.put(TagFromName.PulseNumber,"Pulse Number");
		fullNameByTag.put(TagFromName.BrachyPulseControlPointDeliveredSequence,"Brachy Pulse Control Point Delivered Sequence");
		fullNameByTag.put(TagFromName.CurrentTreatmentStatus,"Current Treatment  Status");
		fullNameByTag.put(TagFromName.TreatmentStatusComment,"Treatment Status Comment");
		fullNameByTag.put(TagFromName.FractionGroupSummarySequence,"Fraction Group Summary Sequence");
		fullNameByTag.put(TagFromName.ReferencedFractionNumber,"Referenced Fraction Number");
		fullNameByTag.put(TagFromName.FractionGroupType,"Fraction Group Type");
		fullNameByTag.put(TagFromName.BeamStopperPosition,"Beam Stopper Position");
		fullNameByTag.put(TagFromName.FractionStatusSummarySequence,"Fraction Status Summary Sequence");
		fullNameByTag.put(TagFromName.TreatmentDate,"Treatment Date");
		fullNameByTag.put(TagFromName.TreatmentTime,"Treatment Time");
		fullNameByTag.put(TagFromName.RTPlanLabel,"RT Plan Label");
		fullNameByTag.put(TagFromName.RTPlanName,"RT Plan Name");
		fullNameByTag.put(TagFromName.RTPlanDescription,"RT Plan Description");
		fullNameByTag.put(TagFromName.RTPlanDate,"RT Plan Date");
		fullNameByTag.put(TagFromName.RTPlanTime,"RT Plan Time");
		fullNameByTag.put(TagFromName.TreatmentProtocols,"Treatment Protocols");
		fullNameByTag.put(TagFromName.PlanIntent,"Plan Intent");
		fullNameByTag.put(TagFromName.TreatmentSites,"Treatment Sites");
		fullNameByTag.put(TagFromName.RTPlanGeometry,"RT Plan Geometry");
		fullNameByTag.put(TagFromName.PrescriptionDescription,"Prescription Description");
		fullNameByTag.put(TagFromName.DoseReferenceSequence,"Dose Reference Sequence");
		fullNameByTag.put(TagFromName.DoseReferenceNumber,"Dose Reference Number");
		fullNameByTag.put(TagFromName.DoseReferenceUID,"Dose Reference UID");
		fullNameByTag.put(TagFromName.DoseReferenceStructureType,"Dose Reference Structure Type");
		fullNameByTag.put(TagFromName.NominalBeamEnergyUnit,"Nominal Beam Energy Unit");
		fullNameByTag.put(TagFromName.DoseReferenceDescription,"Dose Reference Description");
		fullNameByTag.put(TagFromName.DoseReferencePointCoordinates,"Dose Reference Point Coordinates");
		fullNameByTag.put(TagFromName.NominalPriorDose,"Nominal Prior Dose");
		fullNameByTag.put(TagFromName.DoseReferenceType,"Dose Reference Type");
		fullNameByTag.put(TagFromName.ConstraintWeight,"Constraint Weight");
		fullNameByTag.put(TagFromName.DeliveryWarningDose,"Delivery Warning Dose");
		fullNameByTag.put(TagFromName.DeliveryMaximumDose,"Delivery Maximum Dose");
		fullNameByTag.put(TagFromName.TargetMinimumDose,"Target Minimum Dose");
		fullNameByTag.put(TagFromName.TargetPrescriptionDose,"Target Prescription Dose");
		fullNameByTag.put(TagFromName.TargetMaximumDose,"Target Maximum Dose");
		fullNameByTag.put(TagFromName.TargetUnderdoseVolumeFraction,"Target Underdose Volume Fraction");
		fullNameByTag.put(TagFromName.OrganAtRiskFullVolumeDose,"Organ at Risk Full-volume Dose");
		fullNameByTag.put(TagFromName.OrganAtRiskLimitDose,"Organ at Risk Limit Dose");
		fullNameByTag.put(TagFromName.OrganAtRiskMaximumDose,"Organ at Risk Maximum Dose");
		fullNameByTag.put(TagFromName.OrganAtRiskOverdoseVolumeFraction,"Organ at Risk Overdose Volume Fraction");
		fullNameByTag.put(TagFromName.ToleranceTableSequence,"Tolerance Table Sequence");
		fullNameByTag.put(TagFromName.ToleranceTableNumber,"Tolerance Table Number");
		fullNameByTag.put(TagFromName.ToleranceTableLabel,"Tolerance Table Label");
		fullNameByTag.put(TagFromName.GantryAngleTolerance,"Gantry Angle Tolerance");
		fullNameByTag.put(TagFromName.BeamLimitingDeviceAngleTolerance,"Beam Limiting Device Angle Tolerance");
		fullNameByTag.put(TagFromName.BeamLimitingDeviceToleranceSequence,"Beam Limiting Device Tolerance Sequence");
		fullNameByTag.put(TagFromName.BeamLimitingDevicePositionTolerance,"Beam Limiting Device Position Tolerance");
		fullNameByTag.put(TagFromName.SnoutPositionTolerance,"Snout Position Tolerance");
		fullNameByTag.put(TagFromName.PatientSupportAngleTolerance,"Patient Support Angle Tolerance");
		fullNameByTag.put(TagFromName.TableTopEccentricAngleTolerance,"Table Top Eccentric Angle Tolerance");
		fullNameByTag.put(TagFromName.TableTopPitchAngleTolerance,"Table Top Pitch Angle Tolerance");
		fullNameByTag.put(TagFromName.TableTopRollAngleTolerance,"Table Top Roll Angle Tolerance");
		fullNameByTag.put(TagFromName.TableTopVerticalPositionTolerance,"Table Top Vertical Position Tolerance");
		fullNameByTag.put(TagFromName.TableTopLongitudinalPositionTolerance,"Table Top Longitudinal Position Tolerance");
		fullNameByTag.put(TagFromName.TableTopLateralPositionTolerance,"Table Top Lateral Position Tolerance");
		fullNameByTag.put(TagFromName.RTPlanRelationship,"RT Plan Relationship");
		fullNameByTag.put(TagFromName.FractionGroupSequence,"Fraction Group Sequence");
		fullNameByTag.put(TagFromName.FractionGroupNumber,"Fraction Group Number");
		fullNameByTag.put(TagFromName.FractionGroupDescription,"Fraction Group Description");
		fullNameByTag.put(TagFromName.NumberOfFractionsPlanned,"Number of Fractions Planned");
		fullNameByTag.put(TagFromName.NumberOfFractionPatternDigitsPerDay,"Number of Fraction Pattern Digits Per Day");
		fullNameByTag.put(TagFromName.RepeatFractionCycleLength,"Repeat Fraction Cycle Length");
		fullNameByTag.put(TagFromName.FractionPattern,"Fraction Pattern");
		fullNameByTag.put(TagFromName.NumberOfBeams,"Number of Beams");
		fullNameByTag.put(TagFromName.BeamDoseSpecificationPoint,"Beam Dose Specification Point");
		fullNameByTag.put(TagFromName.ReferencedDoseReferenceUID,"Referenced Dose Reference UID");
		fullNameByTag.put(TagFromName.BeamDose,"Beam Dose");
		fullNameByTag.put(TagFromName.BeamMeterset,"Beam Meterset");
		fullNameByTag.put(TagFromName.BeamDosePointDepth,"Beam Dose Point Depth");
		fullNameByTag.put(TagFromName.BeamDosePointEquivalentDepth,"Beam Dose Point Equivalent Depth");
		fullNameByTag.put(TagFromName.BeamDosePointSSD,"Beam Dose Point SSD");
		fullNameByTag.put(TagFromName.BeamDoseMeaning,"Beam Dose Meaning");
		fullNameByTag.put(TagFromName.BeamDoseVerificationControlPointSequence,"Beam Dose Verification Control Point Sequence");
		fullNameByTag.put(TagFromName.AverageBeamDosePointDepth,"Average Beam Dose Point Depth");
		fullNameByTag.put(TagFromName.AverageBeamDosePointEquivalentDepth,"Average Beam Dose Point Equivalent Depth");
		fullNameByTag.put(TagFromName.AverageBeamDosePointSSD,"Average Beam Dose Point SSD");
		fullNameByTag.put(TagFromName.BeamDoseType,"Beam Dose Type");
		fullNameByTag.put(TagFromName.AlternateBeamDose,"Alternate Beam Dose");
		fullNameByTag.put(TagFromName.AlternateBeamDoseType,"Alternate Beam Dose Type");
		fullNameByTag.put(TagFromName.DepthValueAveragingFlag,"Depth Value Averaging Flag");
		fullNameByTag.put(TagFromName.BeamDosePointSourceToExternalContourDistance,"Beam Dose Point Source to External Contour Distance");
		fullNameByTag.put(TagFromName.NumberOfBrachyApplicationSetups,"Number of Brachy Application Setups");
		fullNameByTag.put(TagFromName.BrachyApplicationSetupDoseSpecificationPoint,"Brachy Application Setup Dose Specification Point");
		fullNameByTag.put(TagFromName.BrachyApplicationSetupDose,"Brachy Application Setup Dose");
		fullNameByTag.put(TagFromName.BeamSequence,"Beam Sequence");
		fullNameByTag.put(TagFromName.TreatmentMachineName,"Treatment Machine Name ");
		fullNameByTag.put(TagFromName.PrimaryDosimeterUnit,"Primary Dosimeter Unit");
		fullNameByTag.put(TagFromName.SourceAxisDistance,"Source-Axis Distance");
		fullNameByTag.put(TagFromName.BeamLimitingDeviceSequence,"Beam Limiting Device Sequence");
		fullNameByTag.put(TagFromName.RTBeamLimitingDeviceType,"RT Beam Limiting Device Type");
		fullNameByTag.put(TagFromName.SourceToBeamLimitingDeviceDistance,"Source to Beam Limiting Device Distance");
		fullNameByTag.put(TagFromName.IsocenterToBeamLimitingDeviceDistance,"Isocenter to Beam Limiting Device Distance");
		fullNameByTag.put(TagFromName.NumberOfLeafJawPairs,"Number of Leaf/Jaw Pairs");
		fullNameByTag.put(TagFromName.LeafPositionBoundaries,"Leaf Position Boundaries");
		fullNameByTag.put(TagFromName.BeamNumber,"Beam Number");
		fullNameByTag.put(TagFromName.BeamName,"Beam Name");
		fullNameByTag.put(TagFromName.BeamDescription,"Beam Description");
		fullNameByTag.put(TagFromName.BeamType,"Beam Type");
		fullNameByTag.put(TagFromName.BeamDeliveryDurationLimit,"Beam Delivery Duration Limit");
		fullNameByTag.put(TagFromName.RadiationType,"Radiation Type");
		fullNameByTag.put(TagFromName.HighDoseTechniqueType,"High-Dose Technique Type");
		fullNameByTag.put(TagFromName.ReferenceImageNumber,"Reference Image Number");
		fullNameByTag.put(TagFromName.PlannedVerificationImageSequence,"Planned Verification Image Sequence");
		fullNameByTag.put(TagFromName.ImagingDeviceSpecificAcquisitionParameters,"Imaging Device-Specific Acquisition Parameters");
		fullNameByTag.put(TagFromName.TreatmentDeliveryType,"Treatment Delivery Type");
		fullNameByTag.put(TagFromName.NumberOfWedges,"Number of Wedges");
		fullNameByTag.put(TagFromName.WedgeSequence,"Wedge Sequence");
		fullNameByTag.put(TagFromName.WedgeNumber,"Wedge Number");
		fullNameByTag.put(TagFromName.WedgeType,"Wedge Type");
		fullNameByTag.put(TagFromName.WedgeID,"Wedge ID");
		fullNameByTag.put(TagFromName.WedgeAngle,"Wedge Angle");
		fullNameByTag.put(TagFromName.WedgeFactor,"Wedge Factor");
		fullNameByTag.put(TagFromName.TotalWedgeTrayWaterEquivalentThickness,"Total Wedge Tray Water-Equivalent Thickness");
		fullNameByTag.put(TagFromName.WedgeOrientation,"Wedge Orientation");
		fullNameByTag.put(TagFromName.IsocenterToWedgeTrayDistance,"Isocenter to Wedge Tray Distance");
		fullNameByTag.put(TagFromName.SourceToWedgeTrayDistance,"Source to Wedge Tray Distance");
		fullNameByTag.put(TagFromName.WedgeThinEdgePosition,"Wedge Thin Edge Position");
		fullNameByTag.put(TagFromName.BolusID,"Bolus ID");
		fullNameByTag.put(TagFromName.BolusDescription,"Bolus Description");
		fullNameByTag.put(TagFromName.EffectiveWedgeAngle,"Effective Wedge Angle");
		fullNameByTag.put(TagFromName.NumberOfCompensators,"Number of Compensators");
		fullNameByTag.put(TagFromName.MaterialID,"Material ID");
		fullNameByTag.put(TagFromName.TotalCompensatorTrayFactor,"Total Compensator Tray Factor");
		fullNameByTag.put(TagFromName.CompensatorSequence,"Compensator Sequence");
		fullNameByTag.put(TagFromName.CompensatorNumber,"Compensator Number");
		fullNameByTag.put(TagFromName.CompensatorID,"Compensator ID");
		fullNameByTag.put(TagFromName.SourceToCompensatorTrayDistance,"Source to Compensator Tray Distance");
		fullNameByTag.put(TagFromName.CompensatorRows,"Compensator Rows");
		fullNameByTag.put(TagFromName.CompensatorColumns,"Compensator Columns");
		fullNameByTag.put(TagFromName.CompensatorPixelSpacing,"Compensator Pixel Spacing");
		fullNameByTag.put(TagFromName.CompensatorPosition,"Compensator Position");
		fullNameByTag.put(TagFromName.CompensatorTransmissionData,"Compensator Transmission Data");
		fullNameByTag.put(TagFromName.CompensatorThicknessData,"Compensator Thickness Data");
		fullNameByTag.put(TagFromName.NumberOfBoli,"Number of Boli");
		fullNameByTag.put(TagFromName.CompensatorType,"Compensator Type");
		fullNameByTag.put(TagFromName.CompensatorTrayID,"Compensator Tray ID");
		fullNameByTag.put(TagFromName.NumberOfBlocks,"Number of Blocks");
		fullNameByTag.put(TagFromName.TotalBlockTrayFactor,"Total Block Tray Factor");
		fullNameByTag.put(TagFromName.TotalBlockTrayWaterEquivalentThickness,"Total Block Tray Water-Equivalent Thickness");
		fullNameByTag.put(TagFromName.BlockSequence,"Block Sequence");
		fullNameByTag.put(TagFromName.BlockTrayID,"Block Tray ID");
		fullNameByTag.put(TagFromName.SourceToBlockTrayDistance,"Source to Block Tray Distance");
		fullNameByTag.put(TagFromName.IsocenterToBlockTrayDistance,"Isocenter to Block Tray Distance");
		fullNameByTag.put(TagFromName.BlockType,"Block Type");
		fullNameByTag.put(TagFromName.AccessoryCode,"Accessory Code");
		fullNameByTag.put(TagFromName.BlockDivergence,"Block Divergence");
		fullNameByTag.put(TagFromName.BlockMountingPosition,"Block Mounting Position");
		fullNameByTag.put(TagFromName.BlockNumber,"Block Number");
		fullNameByTag.put(TagFromName.BlockName,"Block Name");
		fullNameByTag.put(TagFromName.BlockThickness,"Block Thickness");
		fullNameByTag.put(TagFromName.BlockTransmission,"Block Transmission");
		fullNameByTag.put(TagFromName.BlockNumberOfPoints,"Block Number of Points");
		fullNameByTag.put(TagFromName.BlockData,"Block Data");
		fullNameByTag.put(TagFromName.ApplicatorSequence,"Applicator Sequence");
		fullNameByTag.put(TagFromName.ApplicatorID,"Applicator ID");
		fullNameByTag.put(TagFromName.ApplicatorType,"Applicator Type");
		fullNameByTag.put(TagFromName.ApplicatorDescription,"Applicator Description");
		fullNameByTag.put(TagFromName.CumulativeDoseReferenceCoefficient,"Cumulative Dose Reference Coefficient");
		fullNameByTag.put(TagFromName.FinalCumulativeMetersetWeight,"Final Cumulative Meterset Weight");
		fullNameByTag.put(TagFromName.NumberOfControlPoints,"Number of Control Points");
		fullNameByTag.put(TagFromName.ControlPointSequence,"Control Point Sequence");
		fullNameByTag.put(TagFromName.ControlPointIndex,"Control Point Index");
		fullNameByTag.put(TagFromName.NominalBeamEnergy,"Nominal Beam Energy");
		fullNameByTag.put(TagFromName.DoseRateSet,"Dose Rate Set");
		fullNameByTag.put(TagFromName.WedgePositionSequence,"Wedge Position Sequence");
		fullNameByTag.put(TagFromName.WedgePosition,"Wedge Position");
		fullNameByTag.put(TagFromName.BeamLimitingDevicePositionSequence,"Beam Limiting Device Position Sequence");
		fullNameByTag.put(TagFromName.LeafJawPositions,"Leaf Jaw Positions");
		fullNameByTag.put(TagFromName.GantryAngle,"Gantry Angle");
		fullNameByTag.put(TagFromName.GantryRotationDirection,"Gantry Rotation Direction");
		fullNameByTag.put(TagFromName.BeamLimitingDeviceAngle,"Beam Limiting Device Angle");
		fullNameByTag.put(TagFromName.BeamLimitingDeviceRotationDirection,"Beam Limiting Device Rotation Direction");
		fullNameByTag.put(TagFromName.PatientSupportAngle,"Patient Support Angle");
		fullNameByTag.put(TagFromName.PatientSupportRotationDirection,"Patient Support Rotation Direction");
		fullNameByTag.put(TagFromName.TableTopEccentricAxisDistance,"Table Top Eccentric Axis Distance");
		fullNameByTag.put(TagFromName.TableTopEccentricAngle,"Table Top Eccentric Angle");
		fullNameByTag.put(TagFromName.TableTopEccentricRotationDirection,"Table Top Eccentric Rotation Direction");
		fullNameByTag.put(TagFromName.TableTopVerticalPosition,"Table Top Vertical Position");
		fullNameByTag.put(TagFromName.TableTopLongitudinalPosition,"Table Top Longitudinal Position");
		fullNameByTag.put(TagFromName.TableTopLateralPosition,"Table Top Lateral Position");
		fullNameByTag.put(TagFromName.IsocenterPosition,"Isocenter Position");
		fullNameByTag.put(TagFromName.SurfaceEntryPoint,"Surface Entry Point");
		fullNameByTag.put(TagFromName.SourceToSurfaceDistance,"Source to Surface Distance");
		fullNameByTag.put(TagFromName.AverageBeamDosePointSourceToExternalContourDistance,"Average Beam Dose Point Source to External Contour Distance");
		fullNameByTag.put(TagFromName.SourceToExternalContourDistance,"Source to External Contour Distance");
		fullNameByTag.put(TagFromName.ExternalContourEntryPoint,"External Contour Entry Point");
		fullNameByTag.put(TagFromName.CumulativeMetersetWeight,"Cumulative Meterset Weight");
		fullNameByTag.put(TagFromName.TableTopPitchAngle,"Table Top Pitch Angle");
		fullNameByTag.put(TagFromName.TableTopPitchRotationDirection,"Table Top Pitch Rotation Direction");
		fullNameByTag.put(TagFromName.TableTopRollAngle,"Table Top Roll Angle");
		fullNameByTag.put(TagFromName.TableTopRollRotationDirection,"Table Top Roll Rotation Direction");
		fullNameByTag.put(TagFromName.HeadFixationAngle,"Head Fixation Angle");
		fullNameByTag.put(TagFromName.GantryPitchAngle,"Gantry Pitch Angle");
		fullNameByTag.put(TagFromName.GantryPitchRotationDirection,"Gantry Pitch Rotation Direction");
		fullNameByTag.put(TagFromName.GantryPitchAngleTolerance,"Gantry Pitch Angle Tolerance");
		fullNameByTag.put(TagFromName.PatientSetupSequence,"Patient Setup Sequence");
		fullNameByTag.put(TagFromName.PatientSetupNumber,"Patient Setup Number");
		fullNameByTag.put(TagFromName.PatientSetupLabel,"Patient Setup Label");
		fullNameByTag.put(TagFromName.PatientAdditionalPosition,"Patient Additional Position");
		fullNameByTag.put(TagFromName.FixationDeviceSequence,"Fixation Device Sequence");
		fullNameByTag.put(TagFromName.FixationDeviceType,"Fixation Device Type");
		fullNameByTag.put(TagFromName.FixationDeviceLabel,"Fixation Device Label");
		fullNameByTag.put(TagFromName.FixationDeviceDescription,"Fixation Device Description");
		fullNameByTag.put(TagFromName.FixationDevicePosition,"Fixation Device Position");
		fullNameByTag.put(TagFromName.FixationDevicePitchAngle,"Fixation Device Pitch Angle");
		fullNameByTag.put(TagFromName.FixationDeviceRollAngle,"Fixation Device Roll Angle");
		fullNameByTag.put(TagFromName.ShieldingDeviceSequence,"Shielding Device Sequence");
		fullNameByTag.put(TagFromName.ShieldingDeviceType,"Shielding Device Type");
		fullNameByTag.put(TagFromName.ShieldingDeviceLabel,"Shielding Device Label");
		fullNameByTag.put(TagFromName.ShieldingDeviceDescription,"Shielding Device Description");
		fullNameByTag.put(TagFromName.ShieldingDevicePosition,"Shielding Device Position");
		fullNameByTag.put(TagFromName.SetupTechnique,"Setup Technique");
		fullNameByTag.put(TagFromName.SetupTechniqueDescription,"Setup TechniqueDescription");
		fullNameByTag.put(TagFromName.SetupDeviceSequence,"Setup Device Sequence");
		fullNameByTag.put(TagFromName.SetupDeviceType,"Setup Device Type");
		fullNameByTag.put(TagFromName.SetupDeviceLabel,"Setup Device Label");
		fullNameByTag.put(TagFromName.SetupDeviceDescription,"Setup Device Description");
		fullNameByTag.put(TagFromName.SetupDeviceParameter,"Setup Device Parameter");
		fullNameByTag.put(TagFromName.SetupReferenceDescription,"Setup ReferenceDescription");
		fullNameByTag.put(TagFromName.TableTopVerticalSetupDisplacement,"Table Top Vertical Setup Displacement");
		fullNameByTag.put(TagFromName.TableTopLongitudinalSetupDisplacement,"Table Top Longitudinal Setup Displacement");
		fullNameByTag.put(TagFromName.TableTopLateralSetupDisplacement,"Table Top Lateral Setup Displacement");
		fullNameByTag.put(TagFromName.BrachyTreatmentTechnique,"Brachy Treatment Technique");
		fullNameByTag.put(TagFromName.BrachyTreatmentType,"Brachy Treatment Type");
		fullNameByTag.put(TagFromName.TreatmentMachineSequence,"Treatment Machine Sequence");
		fullNameByTag.put(TagFromName.SourceSequence,"Source Sequence");
		fullNameByTag.put(TagFromName.SourceNumber,"Source Number");
		fullNameByTag.put(TagFromName.SourceType,"Source Type");
		fullNameByTag.put(TagFromName.SourceManufacturer,"Source Manufacturer");
		fullNameByTag.put(TagFromName.ActiveSourceDiameter,"Active Source Diameter");
		fullNameByTag.put(TagFromName.ActiveSourceLength,"Active Source Length");
		fullNameByTag.put(TagFromName.SourceModelID,"Source Model ID");
		fullNameByTag.put(TagFromName.SourceDescription,"Source Description");
		fullNameByTag.put(TagFromName.SourceEncapsulationNominalThickness,"Source Encapsulation Nominal Thickness");
		fullNameByTag.put(TagFromName.SourceEncapsulationNominalTransmission,"Source Encapsulation Nominal Transmission");
		fullNameByTag.put(TagFromName.SourceIsotopeName,"Source IsotopeName");
		fullNameByTag.put(TagFromName.SourceIsotopeHalfLife,"Source Isotope Half Life");
		fullNameByTag.put(TagFromName.SourceStrengthUnits,"Source Strength Units");
		fullNameByTag.put(TagFromName.ReferenceAirKermaRate,"Reference Air Kerma Rate");
		fullNameByTag.put(TagFromName.SourceStrength,"Source Strength");
		fullNameByTag.put(TagFromName.SourceStrengthReferenceDate,"Source Strength Reference Date");
		fullNameByTag.put(TagFromName.SourceStrengthReferenceTime,"Source Strength Reference Time");
		fullNameByTag.put(TagFromName.ApplicationSetupSequence,"Application Setup Sequence");
		fullNameByTag.put(TagFromName.ApplicationSetupType,"Application Setup Type");
		fullNameByTag.put(TagFromName.ApplicationSetupNumber,"Application Setup Number");
		fullNameByTag.put(TagFromName.ApplicationSetupName,"Application Setup Name");
		fullNameByTag.put(TagFromName.ApplicationSetupManufacturer,"Application Setup Manufacturer");
		fullNameByTag.put(TagFromName.TemplateNumber,"Template Number");
		fullNameByTag.put(TagFromName.TemplateType,"Template Type");
		fullNameByTag.put(TagFromName.TemplateName,"Template Name");
		fullNameByTag.put(TagFromName.TotalReferenceAirKerma,"Total Reference Air Kerma");
		fullNameByTag.put(TagFromName.BrachyAccessoryDeviceSequence,"Brachy Accessory Device Sequence");
		fullNameByTag.put(TagFromName.BrachyAccessoryDeviceNumber,"Brachy Accessory Device Number");
		fullNameByTag.put(TagFromName.BrachyAccessoryDeviceID,"Brachy Accessory Device ID");
		fullNameByTag.put(TagFromName.BrachyAccessoryDeviceType,"Brachy Accessory Device Type");
		fullNameByTag.put(TagFromName.BrachyAccessoryDeviceName,"Brachy Accessory Device Name");
		fullNameByTag.put(TagFromName.BrachyAccessoryDeviceNominalThickness,"Brachy Accessory Device Nominal Thickness");
		fullNameByTag.put(TagFromName.BrachyAccessoryDeviceNominalTransmission,"Brachy Accessory Device Nominal Transmission");
		fullNameByTag.put(TagFromName.ChannelEffectiveLength,"Channel Effective Length");
		fullNameByTag.put(TagFromName.ChannelInnerLength,"Channel Inner Length");
		fullNameByTag.put(TagFromName.AfterloaderChannelID,"Afterloader Channel ID");
		fullNameByTag.put(TagFromName.SourceApplicatorTipLength,"Source Applicator Tip Length");
		fullNameByTag.put(TagFromName.ChannelSequence,"Channel Sequence");
		fullNameByTag.put(TagFromName.ChannelNumber,"Channel Number");
		fullNameByTag.put(TagFromName.ChannelLength,"Channel Length");
		fullNameByTag.put(TagFromName.ChannelTotalTime,"Channel Total Time");
		fullNameByTag.put(TagFromName.SourceMovementType,"Source Movement Type");
		fullNameByTag.put(TagFromName.NumberOfPulses,"Number of Pulses");
		fullNameByTag.put(TagFromName.PulseRepetitionInterval,"Pulse Repetition Interval");
		fullNameByTag.put(TagFromName.SourceApplicatorNumber,"Source Applicator Number");
		fullNameByTag.put(TagFromName.SourceApplicatorID,"Source Applicator ID");
		fullNameByTag.put(TagFromName.SourceApplicatorType,"Source Applicator Type");
		fullNameByTag.put(TagFromName.SourceApplicatorName,"Source Applicator Name");
		fullNameByTag.put(TagFromName.SourceApplicatorLength,"Source Applicator Length");
		fullNameByTag.put(TagFromName.SourceApplicatorManufacturer,"Source Applicator Manufacturer");
		fullNameByTag.put(TagFromName.SourceApplicatorWallNominalThickness,"Source Applicator Wall Nominal Thickness");
		fullNameByTag.put(TagFromName.SourceApplicatorWallNominalTransmission,"Source Applicator Wall Nominal Transmission");
		fullNameByTag.put(TagFromName.SourceApplicatorStepSize,"Source Applicator Step Size");
		fullNameByTag.put(TagFromName.TransferTubeNumber,"Transfer Tube Number");
		fullNameByTag.put(TagFromName.TransferTubeLength,"Transfer Tube Length");
		fullNameByTag.put(TagFromName.ChannelShieldSequence,"Channel Shield Sequence");
		fullNameByTag.put(TagFromName.ChannelShieldNumber,"Channel Shield Number");
		fullNameByTag.put(TagFromName.ChannelShieldID,"Channel Shield ID");
		fullNameByTag.put(TagFromName.ChannelShieldName,"Channel Shield Name");
		fullNameByTag.put(TagFromName.ChannelShieldNominalThickness,"Channel Shield Nominal Thickness");
		fullNameByTag.put(TagFromName.ChannelShieldNominalTransmission,"Channel Shield Nominal Transmission");
		fullNameByTag.put(TagFromName.FinalCumulativeTimeWeight,"Final Cumulative Time Weight");
		fullNameByTag.put(TagFromName.BrachyControlPointSequence,"Brachy Control Point Sequence");
		fullNameByTag.put(TagFromName.ControlPointRelativePosition,"Control Point Relative Position");
		fullNameByTag.put(TagFromName.ControlPoint3DPosition,"Control Point 3D Position");
		fullNameByTag.put(TagFromName.CumulativeTimeWeight,"Cumulative Time Weight");
		fullNameByTag.put(TagFromName.CompensatorDivergence,"Compensator Divergence");
		fullNameByTag.put(TagFromName.CompensatorMountingPosition,"Compensator Mounting Position");
		fullNameByTag.put(TagFromName.SourceToCompensatorDistance,"Source to Compensator Distance");
		fullNameByTag.put(TagFromName.TotalCompensatorTrayWaterEquivalentThickness,"Total Compensator Tray Water-Equivalent Thickness");
		fullNameByTag.put(TagFromName.IsocenterToCompensatorTrayDistance,"Isocenter to Compensator Tray Distance");
		fullNameByTag.put(TagFromName.CompensatorColumnOffset,"Compensator Column Offset");
		fullNameByTag.put(TagFromName.IsocenterToCompensatorDistances,"Isocenter to Compensator Distances");
		fullNameByTag.put(TagFromName.CompensatorRelativeStoppingPowerRatio,"Compensator Relative Stopping Power Ratio");
		fullNameByTag.put(TagFromName.CompensatorMillingToolDiameter,"Compensator Milling Tool Diameter");
		fullNameByTag.put(TagFromName.IonRangeCompensatorSequence,"Ion Range Compensator Sequence");
		fullNameByTag.put(TagFromName.CompensatorDescription,"Compensator Description");
		fullNameByTag.put(TagFromName.RadiationMassNumber,"Radiation Mass Number");
		fullNameByTag.put(TagFromName.RadiationAtomicNumber,"Radiation Atomic Number");
		fullNameByTag.put(TagFromName.RadiationChargeState,"Radiation Charge State");
		fullNameByTag.put(TagFromName.ScanMode,"Scan Mode");
		fullNameByTag.put(TagFromName.ModulatedScanModeType,"Modulated Scan Mode Type");
		fullNameByTag.put(TagFromName.VirtualSourceAxisDistances,"Virtual Source-Axis Distances");
		fullNameByTag.put(TagFromName.SnoutSequence,"Snout Sequence");
		fullNameByTag.put(TagFromName.SnoutPosition,"Snout Position");
		fullNameByTag.put(TagFromName.SnoutID,"Snout ID");
		fullNameByTag.put(TagFromName.NumberOfRangeShifters,"Number of Range Shifters");
		fullNameByTag.put(TagFromName.RangeShifterSequence,"Range Shifter Sequence");
		fullNameByTag.put(TagFromName.RangeShifterNumber,"Range Shifter Number");
		fullNameByTag.put(TagFromName.RangeShifterID,"Range Shifter ID");
		fullNameByTag.put(TagFromName.RangeShifterType,"Range Shifter Type");
		fullNameByTag.put(TagFromName.RangeShifterDescription,"Range Shifter Description");
		fullNameByTag.put(TagFromName.NumberOfLateralSpreadingDevices,"Number of Lateral Spreading Devices");
		fullNameByTag.put(TagFromName.LateralSpreadingDeviceSequence,"Lateral Spreading Device Sequence");
		fullNameByTag.put(TagFromName.LateralSpreadingDeviceNumber,"Lateral Spreading Device Number");
		fullNameByTag.put(TagFromName.LateralSpreadingDeviceID,"Lateral Spreading Device ID");
		fullNameByTag.put(TagFromName.LateralSpreadingDeviceType,"Lateral Spreading Device Type");
		fullNameByTag.put(TagFromName.LateralSpreadingDeviceDescription,"Lateral Spreading Device Description");
		fullNameByTag.put(TagFromName.LateralSpreadingDeviceWaterEquivalentThickness,"Lateral Spreading Device Water Equivalent Thickness");
		fullNameByTag.put(TagFromName.NumberOfRangeModulators,"Number of Range Modulators");
		fullNameByTag.put(TagFromName.RangeModulatorSequence,"Range Modulator Sequence");
		fullNameByTag.put(TagFromName.RangeModulatorNumber,"Range Modulator Number");
		fullNameByTag.put(TagFromName.RangeModulatorID,"Range Modulator ID");
		fullNameByTag.put(TagFromName.RangeModulatorType,"Range Modulator Type");
		fullNameByTag.put(TagFromName.RangeModulatorDescription,"Range Modulator Description");
		fullNameByTag.put(TagFromName.BeamCurrentModulationID,"Beam Current Modulation ID");
		fullNameByTag.put(TagFromName.PatientSupportType,"Patient Support Type");
		fullNameByTag.put(TagFromName.PatientSupportID,"Patient Support ID");
		fullNameByTag.put(TagFromName.PatientSupportAccessoryCode,"Patient Support Accessory Code");
		fullNameByTag.put(TagFromName.TrayAccessoryCode,"Tray Accessory Code");
		fullNameByTag.put(TagFromName.FixationLightAzimuthalAngle,"Fixation Light Azimuthal Angle");
		fullNameByTag.put(TagFromName.FixationLightPolarAngle,"Fixation Light Polar Angle");
		fullNameByTag.put(TagFromName.MetersetRate,"Meterset Rate");
		fullNameByTag.put(TagFromName.RangeShifterSettingsSequence,"Range Shifter Settings Sequence");
		fullNameByTag.put(TagFromName.RangeShifterSetting,"Range Shifter Setting");
		fullNameByTag.put(TagFromName.IsocenterToRangeShifterDistance,"Isocenter to Range Shifter Distance");
		fullNameByTag.put(TagFromName.RangeShifterWaterEquivalentThickness,"Range Shifter Water Equivalent Thickness");
		fullNameByTag.put(TagFromName.LateralSpreadingDeviceSettingsSequence,"Lateral Spreading Device Settings Sequence");
		fullNameByTag.put(TagFromName.LateralSpreadingDeviceSetting,"Lateral Spreading Device Setting");
		fullNameByTag.put(TagFromName.IsocenterToLateralSpreadingDeviceDistance,"Isocenter to Lateral Spreading Device Distance");
		fullNameByTag.put(TagFromName.RangeModulatorSettingsSequence,"Range Modulator Settings Sequence");
		fullNameByTag.put(TagFromName.RangeModulatorGatingStartValue,"Range Modulator Gating Start Value");
		fullNameByTag.put(TagFromName.RangeModulatorGatingStopValue,"Range Modulator Gating Stop Value");
		fullNameByTag.put(TagFromName.RangeModulatorGatingStartWaterEquivalentThickness,"Range Modulator Gating Start Water Equivalent Thickness");
		fullNameByTag.put(TagFromName.RangeModulatorGatingStopWaterEquivalentThickness,"Range Modulator Gating Stop Water Equivalent Thickness");
		fullNameByTag.put(TagFromName.IsocenterToRangeModulatorDistance,"Isocenter to Range Modulator Distance");
		fullNameByTag.put(TagFromName.ScanSpotTimeOffset,"Scan Spot Time Offset");
		fullNameByTag.put(TagFromName.ScanSpotTuneID,"Scan Spot Tune ID");
		fullNameByTag.put(TagFromName.ScanSpotPrescribedIndices,"Scan Spot Prescribed Indices");
		fullNameByTag.put(TagFromName.NumberOfScanSpotPositions,"Number of Scan Spot Positions");
		fullNameByTag.put(TagFromName.ScanSpotReordered,"Scan Spot Reordered");
		fullNameByTag.put(TagFromName.ScanSpotPositionMap,"Scan Spot Position Map");
		fullNameByTag.put(TagFromName.ScanSpotReorderingAllowed,"Scan Spot Reordering Allowed");
		fullNameByTag.put(TagFromName.ScanSpotMetersetWeights,"Scan Spot Meterset Weights");
		fullNameByTag.put(TagFromName.ScanningSpotSize,"Scanning Spot Size");
		fullNameByTag.put(TagFromName.NumberOfPaintings,"Number of Paintings");
		fullNameByTag.put(TagFromName.IonToleranceTableSequence,"Ion Tolerance Table Sequence");
		fullNameByTag.put(TagFromName.IonBeamSequence,"Ion Beam Sequence");
		fullNameByTag.put(TagFromName.IonBeamLimitingDeviceSequence,"Ion Beam Limiting Device Sequence");
		fullNameByTag.put(TagFromName.IonBlockSequence,"Ion Block Sequence");
		fullNameByTag.put(TagFromName.IonControlPointSequence,"Ion Control Point Sequence");
		fullNameByTag.put(TagFromName.IonWedgeSequence,"Ion Wedge Sequence");
		fullNameByTag.put(TagFromName.IonWedgePositionSequence,"Ion Wedge Position Sequence");
		fullNameByTag.put(TagFromName.ReferencedSetupImageSequence,"Referenced Setup Image Sequence");
		fullNameByTag.put(TagFromName.SetupImageComment,"Setup Image Comment");
		fullNameByTag.put(TagFromName.MotionSynchronizationSequence,"Motion Synchronization Sequence");
		fullNameByTag.put(TagFromName.ControlPointOrientation,"Control Point Orientation");
		fullNameByTag.put(TagFromName.GeneralAccessorySequence,"General Accessory Sequence");
		fullNameByTag.put(TagFromName.GeneralAccessoryID,"General Accessory ID");
		fullNameByTag.put(TagFromName.GeneralAccessoryDescription,"General Accessory Description");
		fullNameByTag.put(TagFromName.GeneralAccessoryType,"General Accessory Type");
		fullNameByTag.put(TagFromName.GeneralAccessoryNumber,"General Accessory Number");
		fullNameByTag.put(TagFromName.SourceToGeneralAccessoryDistance,"Source to General Accessory Distance");
		fullNameByTag.put(TagFromName.ApplicatorGeometrySequence,"Applicator Geometry Sequence");
		fullNameByTag.put(TagFromName.ApplicatorApertureShape,"Applicator Aperture Shape");
		fullNameByTag.put(TagFromName.ApplicatorOpening,"Applicator Opening");
		fullNameByTag.put(TagFromName.ApplicatorOpeningX,"Applicator Opening X");
		fullNameByTag.put(TagFromName.ApplicatorOpeningY,"Applicator Opening Y");
		fullNameByTag.put(TagFromName.SourceToApplicatorMountingPositionDistance,"Source to Applicator Mounting Position Distance");
		fullNameByTag.put(TagFromName.NumberOfBlockSlabItems,"Number of Block Slab Items");
		fullNameByTag.put(TagFromName.BlockSlabSequence,"Block Slab Sequence");
		fullNameByTag.put(TagFromName.BlockSlabThickness,"Block Slab Thickness");
		fullNameByTag.put(TagFromName.BlockSlabNumber,"Block Slab Number");
		fullNameByTag.put(TagFromName.DeviceMotionControlSequence,"Device Motion Control Sequence");
		fullNameByTag.put(TagFromName.DeviceMotionExecutionMode,"Device Motion Execution Mode");
		fullNameByTag.put(TagFromName.DeviceMotionObservationMode,"Device Motion Observation Mode");
		fullNameByTag.put(TagFromName.DeviceMotionParameterCodeSequence,"Device Motion Parameter Code Sequence");
		fullNameByTag.put(TagFromName.DistalDepthFraction,"Distal Depth Fraction");
		fullNameByTag.put(TagFromName.DistalDepth,"Distal Depth");
		fullNameByTag.put(TagFromName.NominalRangeModulatioFractions,"Nominal Range Modulation Fractions");
		fullNameByTag.put(TagFromName.NominalRangeModulatedRegionDepths,"Nominal Range Modulated Region Depths");
		fullNameByTag.put(TagFromName.DepthDoseParametersSequence,"Depth Dose Parameters Sequence");
		fullNameByTag.put(TagFromName.DeliveredDepthDoseParametersSequence,"Delivered Depth Dose Parameters Sequence");
		fullNameByTag.put(TagFromName.DeliveredDistalDepthFraction,"Delivered Distal Depth Fraction");
		fullNameByTag.put(TagFromName.DeliveredDistalDepth,"Delivered Distal Depth");
		fullNameByTag.put(TagFromName.DeliveredNominalRangeModulationFractions,"Delivered Nominal Range Modulation Fractions");
		fullNameByTag.put(TagFromName.DeliveredNominalRangeModulatedRegionDepths,"Delivered Nominal Range Modulated Region Depths");
		fullNameByTag.put(TagFromName.DeliveredReferenceDoseDefinition,"Delivered Reference Dose Definition");
		fullNameByTag.put(TagFromName.ReferenceDoseDefinition,"Reference Dose Definition");
		fullNameByTag.put(TagFromName.ReferencedRTPlanSequence,"Referenced RT Plan Sequence");
		fullNameByTag.put(TagFromName.ReferencedBeamSequence,"Referenced Beam Sequence");
		fullNameByTag.put(TagFromName.ReferencedBeamNumber,"Referenced Beam Number");
		fullNameByTag.put(TagFromName.ReferencedReferenceImageNumber,"Referenced Reference Image Number");
		fullNameByTag.put(TagFromName.StartCumulativeMetersetWeight,"Start Cumulative Meterset Weight");
		fullNameByTag.put(TagFromName.EndCumulativeMetersetWeight,"End Cumulative Meterset Weight");
		fullNameByTag.put(TagFromName.ReferencedBrachyApplicationSetupSequence,"Referenced Brachy Application Setup Sequence");
		fullNameByTag.put(TagFromName.ReferencedBrachyApplicationSetupNumber,"Referenced Brachy Application Setup Number");
		fullNameByTag.put(TagFromName.ReferencedSourceNumber,"Referenced Source Number");
		fullNameByTag.put(TagFromName.ReferencedFractionGroupSequence,"Referenced Fraction Group Sequence");
		fullNameByTag.put(TagFromName.ReferencedFractionGroupNumber,"Referenced Fraction Group Number");
		fullNameByTag.put(TagFromName.ReferencedVerificationImageSequence,"Referenced Verification Image Sequence");
		fullNameByTag.put(TagFromName.ReferencedReferenceImageSequence,"Referenced Reference Image Sequence");
		fullNameByTag.put(TagFromName.ReferencedDoseReferenceSequence,"Referenced Dose Reference Sequence");
		fullNameByTag.put(TagFromName.ReferencedDoseReferenceNumber,"Referenced Dose Reference Number");
		fullNameByTag.put(TagFromName.BrachyReferencedDoseReferenceSequence,"Brachy Referenced Dose Reference Sequence");
		fullNameByTag.put(TagFromName.ReferencedStructureSetSequence,"Referenced Structure Set Sequence");
		fullNameByTag.put(TagFromName.ReferencedPatientSetupNumber,"Referenced Patient Setup Number");
		fullNameByTag.put(TagFromName.ReferencedDoseSequence,"Referenced Dose Sequence");
		fullNameByTag.put(TagFromName.ReferencedToleranceTableNumber,"Referenced Tolerance Table Number");
		fullNameByTag.put(TagFromName.ReferencedBolusSequence,"Referenced Bolus Sequence");
		fullNameByTag.put(TagFromName.ReferencedWedgeNumber,"Referenced Wedge Number");
		fullNameByTag.put(TagFromName.ReferencedCompensatorNumber,"Referenced Compensator Number");
		fullNameByTag.put(TagFromName.ReferencedBlockNumber,"Referenced Block Number");
		fullNameByTag.put(TagFromName.ReferencedControlPointIndex,"Referenced Control Point Index");
		fullNameByTag.put(TagFromName.ReferencedControlPointSequence,"Referenced Control Point Sequence");
		fullNameByTag.put(TagFromName.ReferencedStartControlPointIndex,"Referenced Start Control Point Index");
		fullNameByTag.put(TagFromName.ReferencedStopControlPointIndex,"Referenced Stop Control Point Index");
		fullNameByTag.put(TagFromName.ReferencedRangeShifterNumber,"Referenced Range Shifter Number");
		fullNameByTag.put(TagFromName.ReferencedLateralSpreadingDeviceNumber,"Referenced Lateral Spreading Device Number");
		fullNameByTag.put(TagFromName.ReferencedRangeModulatorNumber,"Referenced Range Modulator Number");
		fullNameByTag.put(TagFromName.OmittedBeamTaskSequence,"Omitted Beam Task Sequence");
		fullNameByTag.put(TagFromName.ReasonForOmission,"Reason for Omission");
		fullNameByTag.put(TagFromName.ReasonForOmissionDescription,"Reason for Omission Description");
		fullNameByTag.put(TagFromName.ApprovalStatus,"Approval Status");
		fullNameByTag.put(TagFromName.ReviewDate,"Review Date");
		fullNameByTag.put(TagFromName.ReviewTime,"Review Time");
		fullNameByTag.put(TagFromName.ReviewerName,"Reviewer Name");
		fullNameByTag.put(TagFromName.Arbitrary,"Arbitrary");
		fullNameByTag.put(TagFromName.TextComments,"Text Comments");
		fullNameByTag.put(TagFromName.ResultsID,"Results ID");
		fullNameByTag.put(TagFromName.ResultsIDIssuer,"Results ID Issuer");
		fullNameByTag.put(TagFromName.ReferencedInterpretationSequence,"Referenced Interpretation Sequence");
		fullNameByTag.put(TagFromName.ReportProductionStatusTrial,"Report Production Status (Trial)");
		fullNameByTag.put(TagFromName.InterpretationRecordedDate,"Interpretation Recorded Date");
		fullNameByTag.put(TagFromName.InterpretationRecordedTime,"Interpretation Recorded Time");
		fullNameByTag.put(TagFromName.InterpretationRecorder,"Interpretation Recorder");
		fullNameByTag.put(TagFromName.ReferenceToRecordedSound,"Reference to Recorded Sound");
		fullNameByTag.put(TagFromName.InterpretationTranscriptionDate,"Interpretation Transcription Date");
		fullNameByTag.put(TagFromName.InterpretationTranscriptionTime,"Interpretation Transcription Time");
		fullNameByTag.put(TagFromName.InterpretationTranscriber,"Interpretation Transcriber");
		fullNameByTag.put(TagFromName.InterpretationText,"Interpretation Text");
		fullNameByTag.put(TagFromName.InterpretationAuthor,"Interpretation Author");
		fullNameByTag.put(TagFromName.InterpretationApproverSequence,"Interpretation Approver Sequence");
		fullNameByTag.put(TagFromName.InterpretationApprovalDate,"Interpretation Approval Date");
		fullNameByTag.put(TagFromName.InterpretationApprovalTime,"Interpretation Approval Time");
		fullNameByTag.put(TagFromName.PhysicianApprovingInterpretation,"Physician Approving Interpretation");
		fullNameByTag.put(TagFromName.InterpretationDiagnosisDescription,"Interpretation Diagnosis Description");
		fullNameByTag.put(TagFromName.InterpretationDiagnosisCodeSequence,"Interpretation Diagnosis Code Sequence");
		fullNameByTag.put(TagFromName.ResultsDistributionListSequence,"Results Distribution List Sequence");
		fullNameByTag.put(TagFromName.DistributionName,"Distribution Name");
		fullNameByTag.put(TagFromName.DistributionAddress,"Distribution Address");
		fullNameByTag.put(TagFromName.InterpretationID,"Interpretation ID");
		fullNameByTag.put(TagFromName.InterpretationIDIssuer,"Interpretation ID Issuer");
		fullNameByTag.put(TagFromName.InterpretationTypeID,"Interpretation Type ID");
		fullNameByTag.put(TagFromName.InterpretationStatusID,"Interpretation Status ID");
		fullNameByTag.put(TagFromName.Impressions,"Impressions");
		fullNameByTag.put(TagFromName.ResultsComments,"Results Comments");
		fullNameByTag.put(TagFromName.LowEnergyDetectors,"Low Energy Detectors");
		fullNameByTag.put(TagFromName.HighEnergyDetectors,"High Energy Detectors");
		fullNameByTag.put(TagFromName.DetectorGeometrySequence,"Detector Geometry Sequence");
		fullNameByTag.put(TagFromName.ThreatROIVoxelSequence,"Threat ROI Voxel Sequence");
		fullNameByTag.put(TagFromName.ThreatROIBase,"Threat ROI Base");
		fullNameByTag.put(TagFromName.ThreatROIExtents,"Threat ROI Extents");
		fullNameByTag.put(TagFromName.ThreatROIBitmap,"Threat ROI Bitmap");
		fullNameByTag.put(TagFromName.RouteSegmentID,"Route Segment ID");
		fullNameByTag.put(TagFromName.GantryType,"Gantry Type");
		fullNameByTag.put(TagFromName.OOIOwnerType,"OOI Owner Type");
		fullNameByTag.put(TagFromName.RouteSegmentSequence,"Route Segment Sequence");
		fullNameByTag.put(TagFromName.PotentialThreatObjectID,"Potential Threat Object ID");
		fullNameByTag.put(TagFromName.ThreatSequence,"Threat Sequence");
		fullNameByTag.put(TagFromName.ThreatCategory,"Threat Category");
		fullNameByTag.put(TagFromName.ThreatCategoryDescription,"Threat Category Description");
		fullNameByTag.put(TagFromName.ATDAbilityAssessment,"ATD Ability Assessment");
		fullNameByTag.put(TagFromName.ATDAssessmentFlag,"ATD Assessment Flag");
		fullNameByTag.put(TagFromName.ATDAssessmentProbability,"ATD Assessment Probability");
		fullNameByTag.put(TagFromName.Mass,"Mass");
		fullNameByTag.put(TagFromName.Density,"Density");
		fullNameByTag.put(TagFromName.ZEffective,"Z Effective");
		fullNameByTag.put(TagFromName.BoardingPassID,"Boarding Pass ID");
		fullNameByTag.put(TagFromName.CenterOfMass,"Center of Mass");
		fullNameByTag.put(TagFromName.CenterOfPTO,"Center of PTO");
		fullNameByTag.put(TagFromName.BoundingPolygon,"Bounding Polygon");
		fullNameByTag.put(TagFromName.RouteSegmentStartLocationID,"Route Segment Start Location ID");
		fullNameByTag.put(TagFromName.RouteSegmentEndLocationID,"Route Segment End Location ID");
		fullNameByTag.put(TagFromName.RouteSegmentLocationIDType,"Route Segment Location ID Type");
		fullNameByTag.put(TagFromName.AbortReason,"Abort Reason");
		fullNameByTag.put(TagFromName.VolumeOfPTO,"Volume of PTO");
		fullNameByTag.put(TagFromName.AbortFlag,"Abort Flag");
		fullNameByTag.put(TagFromName.RouteSegmentStartTime,"Route Segment Start Time");
		fullNameByTag.put(TagFromName.RouteSegmentEndTime,"Route Segment End Time");
		fullNameByTag.put(TagFromName.TDRType,"TDR Type");
		fullNameByTag.put(TagFromName.InternationalRouteSegment,"International Route Segment");
		fullNameByTag.put(TagFromName.ThreatDetectionAlgorithmAndVersion,"Threat Detection Algorithm and Version");
		fullNameByTag.put(TagFromName.AssignedLocation,"Assigned Location");
		fullNameByTag.put(TagFromName.AlarmDecisionTime,"Alarm Decision Time");
		fullNameByTag.put(TagFromName.AlarmDecision,"Alarm Decision");
		fullNameByTag.put(TagFromName.NumberOfTotalObjects,"Number of Total Objects");
		fullNameByTag.put(TagFromName.NumberOfAlarmObjects,"Number of Alarm Objects");
		fullNameByTag.put(TagFromName.PTORepresentationSequence,"PTO Representation Sequence");
		fullNameByTag.put(TagFromName.ATDAssessmentSequence,"ATD Assessment Sequence");
		fullNameByTag.put(TagFromName.TIPType,"TIP Type");
		fullNameByTag.put(TagFromName.DICOSVersion,"DICOS Version");
		fullNameByTag.put(TagFromName.OOIOwnerCreationTime,"OOI Owner Creation Time");
		fullNameByTag.put(TagFromName.OOIType,"OOI Type");
		fullNameByTag.put(TagFromName.OOISize,"OOI Size");
		fullNameByTag.put(TagFromName.AcquisitionStatus,"Acquisition Status");
		fullNameByTag.put(TagFromName.BasisMaterialsCodeSequence,"Basis Materials Code Sequence");
		fullNameByTag.put(TagFromName.PhantomType,"Phantom Type");
		fullNameByTag.put(TagFromName.OOIOwnerSequence,"OOI Owner Sequence");
		fullNameByTag.put(TagFromName.ScanType,"Scan Type");
		fullNameByTag.put(TagFromName.ItineraryID,"Itinerary ID");
		fullNameByTag.put(TagFromName.ItineraryIDType,"Itinerary ID Type");
		fullNameByTag.put(TagFromName.ItineraryIDAssigningAuthority,"Itinerary ID Assigning Authority");
		fullNameByTag.put(TagFromName.RouteID,"Route ID");
		fullNameByTag.put(TagFromName.RouteIDAssigningAuthority,"Route ID Assigning Authority");
		fullNameByTag.put(TagFromName.InboundArrivalType,"Inbound Arrival Type");
		fullNameByTag.put(TagFromName.CarrierID,"Carrier ID");
		fullNameByTag.put(TagFromName.CarrierIDAssigningAuthority,"Carrier ID Assigning Authority");
		fullNameByTag.put(TagFromName.SourceOrientation,"Source Orientation");
		fullNameByTag.put(TagFromName.SourcePosition,"Source Position");
		fullNameByTag.put(TagFromName.BeltHeight,"Belt Height");
		fullNameByTag.put(TagFromName.AlgorithmRoutingCodeSequence,"Algorithm Routing Code Sequence");
		fullNameByTag.put(TagFromName.TransportClassification,"Transport Classification");
		fullNameByTag.put(TagFromName.OOITypeDescriptor,"OOI Type Descriptor");
		fullNameByTag.put(TagFromName.TotalProcessingTime,"Total Processing Time");
		fullNameByTag.put(TagFromName.DetectorCalibrationData,"Detector Calibration Data");
		fullNameByTag.put(TagFromName.AdditionalScreeningPerformed,"Additional Screening Performed");
		fullNameByTag.put(TagFromName.AdditionalInspectionSelectionCriteria,"Additional Inspection Selection Criteria");
		fullNameByTag.put(TagFromName.AdditionalInspectionMethodSequence,"Additional Inspection Method Sequence");
		fullNameByTag.put(TagFromName.AITDeviceType,"AIT Device Type");
		fullNameByTag.put(TagFromName.QRMeasurementsSequence,"QR Measurements Sequence");
		fullNameByTag.put(TagFromName.TargetMaterialSequence,"Target Material Sequence");
		fullNameByTag.put(TagFromName.SNRThreshold,"SNR Threshold");
		fullNameByTag.put(TagFromName.ImageScaleRepresentation,"Image Scale Representation");
		fullNameByTag.put(TagFromName.ReferencedPTOSequence,"Referenced PTO Sequence");
		fullNameByTag.put(TagFromName.ReferencedTDRInstanceSequence,"Referenced TDR Instance Sequence");
		fullNameByTag.put(TagFromName.PTOLocationDescription,"PTO Location Description");
		fullNameByTag.put(TagFromName.AnomalyLocatorIndicatorSequence,"Anomaly Locator Indicator Sequence");
		fullNameByTag.put(TagFromName.AnomalyLocatorIndicator,"Anomaly Locator Indicator");
		fullNameByTag.put(TagFromName.PTORegionSequence,"PTO Region Sequence");
		fullNameByTag.put(TagFromName.InspectionSelectionCriteria,"Inspection Selection Criteria");
		fullNameByTag.put(TagFromName.SecondaryInspectionMethodSequence,"Secondary Inspection Method Sequence");
		fullNameByTag.put(TagFromName.PRCSToRCSOrientation,"PRCS to RCS Orientation");
		fullNameByTag.put(TagFromName.MACParametersSequence,"MAC Parameters Sequence");
		fullNameByTag.put(TagFromName.CurveDimensions,"Curve Dimensions");
		fullNameByTag.put(TagFromName.NumberOfPoints,"Number of Points");
		fullNameByTag.put(TagFromName.TypeOfData,"Type of Data");
		fullNameByTag.put(TagFromName.CurveDescription,"Curve Description");
		fullNameByTag.put(TagFromName.AxisUnits,"Axis Units");
		fullNameByTag.put(TagFromName.AxisLabels,"Axis Labels");
		fullNameByTag.put(TagFromName.DataValueRepresentation,"Data Value Representation");
		fullNameByTag.put(TagFromName.MinimumCoordinateValue,"Minimum Coordinate Value");
		fullNameByTag.put(TagFromName.MaximumCoordinateValue,"Maximum Coordinate Value");
		fullNameByTag.put(TagFromName.CurveRange,"Curve Range");
		fullNameByTag.put(TagFromName.CurveDataDescriptor,"Curve Data Descriptor");
		fullNameByTag.put(TagFromName.CoordinateStartValue,"Coordinate Start Value");
		fullNameByTag.put(TagFromName.CoordinateStepValue,"Coordinate Step Value");
		fullNameByTag.put(TagFromName.CurveActivationLayer,"Curve Activation Layer");
		fullNameByTag.put(TagFromName.AudioType,"Audio Type");
		fullNameByTag.put(TagFromName.AudioSampleFormat,"Audio Sample Format");
		fullNameByTag.put(TagFromName.NumberOfChannels,"Number of Channels");
		fullNameByTag.put(TagFromName.NumberOfSamples,"Number of Samples");
		fullNameByTag.put(TagFromName.SampleRate,"Sample Rate");
		fullNameByTag.put(TagFromName.TotalTime,"Total Time");
		fullNameByTag.put(TagFromName.AudioSampleData,"Audio Sample Data");
		fullNameByTag.put(TagFromName.AudioComments,"Audio Comments");
		fullNameByTag.put(TagFromName.CurveLabel,"Curve Label");
		fullNameByTag.put(TagFromName.CurveReferencedOverlaySequence,"Curve Referenced Overlay Sequence");
		fullNameByTag.put(TagFromName.CurveReferencedOverlayGroup,"Curve Referenced Overlay Group");
		fullNameByTag.put(TagFromName.CurveData,"Curve Data");
		fullNameByTag.put(TagFromName.SharedFunctionalGroupsSequence,"Shared Functional Groups Sequence");
		fullNameByTag.put(TagFromName.PerFrameFunctionalGroupsSequence,"Per-frame Functional Groups Sequence");
		fullNameByTag.put(TagFromName.WaveformSequence,"Waveform Sequence");
		fullNameByTag.put(TagFromName.ChannelMinimumValue,"Channel Minimum Value");
		fullNameByTag.put(TagFromName.ChannelMaximumValue,"Channel Maximum Value");
		fullNameByTag.put(TagFromName.WaveformBitsAllocated,"Waveform Bits Allocated");
		fullNameByTag.put(TagFromName.WaveformSampleInterpretation,"Waveform Sample Interpretation");
		fullNameByTag.put(TagFromName.WaveformPaddingValue,"Waveform Padding Value");
		fullNameByTag.put(TagFromName.WaveformData,"Waveform Data");
		fullNameByTag.put(TagFromName.FirstOrderPhaseCorrectionAngle,"First Order Phase Correction Angle");
		fullNameByTag.put(TagFromName.SpectroscopyData,"Spectroscopy Data");
		fullNameByTag.put(TagFromName.OverlayRows,"Overlay Rows");
		fullNameByTag.put(TagFromName.OverlayColumns,"Overlay Columns");
		fullNameByTag.put(TagFromName.OverlayPlanes,"Overlay Planes");
		fullNameByTag.put(TagFromName.NumberOfFramesInOverlay,"Number of Frames in Overlay");
		fullNameByTag.put(TagFromName.OverlayDescription,"Overlay Description");
		fullNameByTag.put(TagFromName.OverlayType,"Overlay Type");
		fullNameByTag.put(TagFromName.OverlaySubtype,"Overlay Subtype");
		fullNameByTag.put(TagFromName.OverlayOrigin,"Overlay Origin");
		fullNameByTag.put(TagFromName.ImageFrameOrigin,"Image Frame Origin");
		fullNameByTag.put(TagFromName.OverlayPlaneOrigin,"OverlayPlane Origin");
		fullNameByTag.put(TagFromName.OverlayCompressionCode,"Overlay Compression Code");
		fullNameByTag.put(TagFromName.OverlayCompressionOriginator,"Overlay Compression Originator");
		fullNameByTag.put(TagFromName.OverlayCompressionLabel,"Overlay Compression Label");
		fullNameByTag.put(TagFromName.OverlayCompressionDescription,"Overlay Compression Description");
		fullNameByTag.put(TagFromName.OverlayCompressionStepPointers,"Overlay Compression Step Pointers");
		fullNameByTag.put(TagFromName.OverlayRepeatInterval,"Overlay Repeat Interval");
		fullNameByTag.put(TagFromName.OverlayBitsGrouped,"Overlay Bits Grouped");
		fullNameByTag.put(TagFromName.OverlayBitsAllocated,"Overlay Bits Allocated");
		fullNameByTag.put(TagFromName.OverlayBitPosition,"Overlay Bit Position");
		fullNameByTag.put(TagFromName.OverlayFormat,"Overlay Format");
		fullNameByTag.put(TagFromName.OverlayLocation,"Overlay Location");
		fullNameByTag.put(TagFromName.OverlayCodeLabel,"Overlay Code Label");
		fullNameByTag.put(TagFromName.OverlayNumberOfTables,"Overlay Number of Tables");
		fullNameByTag.put(TagFromName.OverlayCodeTableLocation,"Overlay Code Table Location");
		fullNameByTag.put(TagFromName.OverlayBitsForCodeWord,"Overlay Bits For Code Word");
		fullNameByTag.put(TagFromName.OverlayActivationLayer,"Overlay Activation Layer");
		fullNameByTag.put(TagFromName.OverlayDescriptorGray,"Overlay Descriptor - Gray");
		fullNameByTag.put(TagFromName.OverlayDescriptorRed,"Overlay Descriptor - Red");
		fullNameByTag.put(TagFromName.OverlayDescriptorGreen,"Overlay Descriptor - Green");
		fullNameByTag.put(TagFromName.OverlayDescriptorBlue,"Overlay Descriptor - Blue");
		fullNameByTag.put(TagFromName.OverlayGray,"Overlays - Gray");
		fullNameByTag.put(TagFromName.OverlayRed,"Overlays - Red");
		fullNameByTag.put(TagFromName.OverlayGreen,"Overlays - Green");
		fullNameByTag.put(TagFromName.OverlayBlue,"Overlays - Blue");
		fullNameByTag.put(TagFromName.ROIArea,"ROI Area");
		fullNameByTag.put(TagFromName.ROIMean,"ROI Mean");
		fullNameByTag.put(TagFromName.ROIStandardDeviation,"ROI Standard Deviation");
		fullNameByTag.put(TagFromName.OverlayLabel,"Overlay Label");
		fullNameByTag.put(TagFromName.OverlayData,"Overlay Data");
		fullNameByTag.put(TagFromName.OverlayComments,"Overlay Comments");
		fullNameByTag.put(TagFromName.FloatPixelData,"Float Pixel Data");
		fullNameByTag.put(TagFromName.DoubleFloatPixelData,"Double Float Pixel Data");
		fullNameByTag.put(TagFromName.PixelData,"Pixel Data");
		fullNameByTag.put(TagFromName.CoefficientsSDVN,"Coefficients SDVN");
		fullNameByTag.put(TagFromName.CoefficientsSDHN,"Coefficients SDHN");
		fullNameByTag.put(TagFromName.CoefficientsSDDN,"Coefficients SDDN");
		fullNameByTag.put(TagFromName.VariablePixelData,"Variable Pixel Data");
		fullNameByTag.put(TagFromName.VariableNextDataGroup,"Variable Next Data Group");
		fullNameByTag.put(TagFromName.VariableCoefficientsSDVN,"Variable Coefficients SDVN");
		fullNameByTag.put(TagFromName.VariableCoefficientsSDHN,"Variable Coefficients SDHN");
		fullNameByTag.put(TagFromName.VariableCoefficientsSDDN,"Variable Coefficients SDDN");
		fullNameByTag.put(TagFromName.DigitalSignaturesSequence,"Digital Signatures Sequence");
		fullNameByTag.put(TagFromName.DataSetTrailingPadding,"Data Set Trailing Padding");
	}
}
